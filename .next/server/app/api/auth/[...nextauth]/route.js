/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/auth/[...nextauth]/route";
exports.ids = ["app/api/auth/[...nextauth]/route"];
exports.modules = {

/***/ "next/dist/compiled/@edge-runtime/cookies":
/*!***********************************************************!*\
  !*** external "next/dist/compiled/@edge-runtime/cookies" ***!
  \***********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/@edge-runtime/cookies");

/***/ }),

/***/ "next/dist/compiled/@opentelemetry/api":
/*!********************************************************!*\
  !*** external "next/dist/compiled/@opentelemetry/api" ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/@opentelemetry/api");

/***/ }),

/***/ "next/dist/compiled/chalk":
/*!*******************************************!*\
  !*** external "next/dist/compiled/chalk" ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/chalk");

/***/ }),

/***/ "next/dist/compiled/cookie":
/*!********************************************!*\
  !*** external "next/dist/compiled/cookie" ***!
  \********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/cookie");

/***/ }),

/***/ "react/jsx-runtime":
/*!*******************************************************!*\
  !*** external "next/dist/compiled/react/jsx-runtime" ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/react/jsx-runtime");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("process");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.tsx&appDir=%2FUsers%2Fleeseungjin%2FDesktop%2FDev_Projects%2Fpost_pulse%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fleeseungjin%2FDesktop%2FDev_Projects%2Fpost_pulse&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.tsx&appDir=%2FUsers%2Fleeseungjin%2FDesktop%2FDev_Projects%2Fpost_pulse%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fleeseungjin%2FDesktop%2FDev_Projects%2Fpost_pulse&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/node-polyfill-headers */ \"(sc_server)/./node_modules/next/dist/server/node-polyfill-headers.js\");\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/module.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Users_leeseungjin_Desktop_Dev_Projects_post_pulse_src_app_api_auth_nextauth_route_tsx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/app/api/auth/[...nextauth]/route.tsx */ \"(sc_server)/./src/app/api/auth/[...nextauth]/route.tsx\");\n\n    \n\n    \n\n    \n\n    const options = {\"definition\":{\"kind\":\"APP_ROUTE\",\"page\":\"/api/auth/[...nextauth]/route\",\"pathname\":\"/api/auth/[...nextauth]\",\"filename\":\"route\",\"bundlePath\":\"app/api/auth/[...nextauth]/route\"},\"resolvedPagePath\":\"/Users/leeseungjin/Desktop/Dev_Projects/post_pulse/src/app/api/auth/[...nextauth]/route.tsx\",\"nextConfigOutput\":\"\"}\n    const routeModule = new (next_dist_server_future_route_modules_app_route_module__WEBPACK_IMPORTED_MODULE_1___default())({\n      ...options,\n      userland: _Users_leeseungjin_Desktop_Dev_Projects_post_pulse_src_app_api_auth_nextauth_route_tsx__WEBPACK_IMPORTED_MODULE_2__,\n    })\n\n    // Pull out the exports that we need to expose from the module. This should\n    // be eliminated when we've moved the other routes to the new format. These\n    // are used to hook into the route.\n    const {\n      requestAsyncStorage,\n      staticGenerationAsyncStorage,\n      serverHooks,\n      headerHooks,\n      staticGenerationBailout\n    } = routeModule\n\n    const originalPathname = \"/api/auth/[...nextauth]/route\"\n\n    //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhdXRoJTJGJTVCLi4ubmV4dGF1dGglNUQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmF1dGglMkYlNUIuLi5uZXh0YXV0aCU1RCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmF1dGglMkYlNUIuLi5uZXh0YXV0aCU1RCUyRnJvdXRlLnRzeCZhcHBEaXI9JTJGVXNlcnMlMkZsZWVzZXVuZ2ppbiUyRkRlc2t0b3AlMkZEZXZfUHJvamVjdHMlMkZwb3N0X3B1bHNlJTJGc3JjJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmxlZXNldW5namluJTJGRGVza3RvcCUyRkRldl9Qcm9qZWN0cyUyRnBvc3RfcHVsc2UmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxJQUFtRDs7QUFFbkQsSUFBb0Y7O0FBRXBGLElBQTJIOztBQUUzSCxxQkFBcUIsY0FBYyxrS0FBa0s7QUFDck0sNEJBQTRCLCtGQUFXO0FBQ3ZDO0FBQ0EsY0FBYztBQUNkLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTs7QUFFTjs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvP2E1NjYiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgaW1wb3J0ICduZXh0L2Rpc3Qvc2VydmVyL25vZGUtcG9seWZpbGwtaGVhZGVycydcblxuICAgIGltcG9ydCBSb3V0ZU1vZHVsZSBmcm9tICduZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUnXG5cbiAgICBpbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL2xlZXNldW5namluL0Rlc2t0b3AvRGV2X1Byb2plY3RzL3Bvc3RfcHVsc2Uvc3JjL2FwcC9hcGkvYXV0aC9bLi4ubmV4dGF1dGhdL3JvdXRlLnRzeFwiXG5cbiAgICBjb25zdCBvcHRpb25zID0ge1wiZGVmaW5pdGlvblwiOntcImtpbmRcIjpcIkFQUF9ST1VURVwiLFwicGFnZVwiOlwiL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0vcm91dGVcIixcInBhdGhuYW1lXCI6XCIvYXBpL2F1dGgvWy4uLm5leHRhdXRoXVwiLFwiZmlsZW5hbWVcIjpcInJvdXRlXCIsXCJidW5kbGVQYXRoXCI6XCJhcHAvYXBpL2F1dGgvWy4uLm5leHRhdXRoXS9yb3V0ZVwifSxcInJlc29sdmVkUGFnZVBhdGhcIjpcIi9Vc2Vycy9sZWVzZXVuZ2ppbi9EZXNrdG9wL0Rldl9Qcm9qZWN0cy9wb3N0X3B1bHNlL3NyYy9hcHAvYXBpL2F1dGgvWy4uLm5leHRhdXRoXS9yb3V0ZS50c3hcIixcIm5leHRDb25maWdPdXRwdXRcIjpcIlwifVxuICAgIGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFJvdXRlTW9kdWxlKHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICB1c2VybGFuZCxcbiAgICB9KVxuXG4gICAgLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4gICAgLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4gICAgLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbiAgICBjb25zdCB7XG4gICAgICByZXF1ZXN0QXN5bmNTdG9yYWdlLFxuICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSxcbiAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgaGVhZGVySG9va3MsXG4gICAgICBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dFxuICAgIH0gPSByb3V0ZU1vZHVsZVxuXG4gICAgY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0vcm91dGVcIlxuXG4gICAgZXhwb3J0IHtcbiAgICAgIHJvdXRlTW9kdWxlLFxuICAgICAgcmVxdWVzdEFzeW5jU3RvcmFnZSxcbiAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsXG4gICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgIGhlYWRlckhvb2tzLFxuICAgICAgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsXG4gICAgICBvcmlnaW5hbFBhdGhuYW1lXG4gICAgfSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.tsx&appDir=%2FUsers%2Fleeseungjin%2FDesktop%2FDev_Projects%2Fpost_pulse%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fleeseungjin%2FDesktop%2FDev_Projects%2Fpost_pulse&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@panva/hkdf/dist/node/cjs/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = exports.hkdf = void 0;\nconst hkdf_js_1 = __webpack_require__(/*! ./runtime/hkdf.js */ \"(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/runtime/hkdf.js\");\nfunction normalizeDigest(digest) {\n    switch(digest){\n        case \"sha256\":\n        case \"sha384\":\n        case \"sha512\":\n        case \"sha1\":\n            return digest;\n        default:\n            throw new TypeError('unsupported \"digest\" value');\n    }\n}\nfunction normalizeUint8Array(input, label) {\n    if (typeof input === \"string\") return new TextEncoder().encode(input);\n    if (!(input instanceof Uint8Array)) throw new TypeError(`\"${label}\"\" must be an instance of Uint8Array or a string`);\n    return input;\n}\nfunction normalizeIkm(input) {\n    const ikm = normalizeUint8Array(input, \"ikm\");\n    if (!ikm.byteLength) throw new TypeError(`\"ikm\" must be at least one byte in length`);\n    return ikm;\n}\nfunction normalizeInfo(input) {\n    const info = normalizeUint8Array(input, \"info\");\n    if (info.byteLength > 1024) {\n        throw TypeError('\"info\" must not contain more than 1024 bytes');\n    }\n    return info;\n}\nfunction normalizeKeylen(input, digest) {\n    if (typeof input !== \"number\" || !Number.isInteger(input) || input < 1) {\n        throw new TypeError('\"keylen\" must be a positive integer');\n    }\n    const hashlen = parseInt(digest.substr(3), 10) >> 3 || 20;\n    if (input > 255 * hashlen) {\n        throw new TypeError('\"keylen\" too large');\n    }\n    return input;\n}\nasync function hkdf(digest, ikm, salt, info, keylen) {\n    return (0, hkdf_js_1.default)(normalizeDigest(digest), normalizeIkm(ikm), normalizeUint8Array(salt, \"salt\"), normalizeInfo(info), normalizeKeylen(keylen, digest));\n}\nexports.hkdf = hkdf;\nexports[\"default\"] = hkdf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQHBhbnZhL2hrZGYvZGlzdC9ub2RlL2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWVFLEdBQUdGLFlBQVlHLEdBQUcsS0FBSztBQUN0QyxNQUFNQyxZQUFZQyxtQkFBT0EsQ0FBQywrRkFBbUI7QUFDN0MsU0FBU0MsZ0JBQWdCQyxNQUFNO0lBQzNCLE9BQVFBO1FBQ0osS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU9BO1FBQ1g7WUFDSSxNQUFNLElBQUlDLFVBQVU7SUFDNUI7QUFDSjtBQUNBLFNBQVNDLG9CQUFvQkMsS0FBSyxFQUFFQyxLQUFLO0lBQ3JDLElBQUksT0FBT0QsVUFBVSxVQUNqQixPQUFPLElBQUlFLGNBQWNDLE9BQU9IO0lBQ3BDLElBQUksQ0FBRUEsQ0FBQUEsaUJBQWlCSSxVQUFTLEdBQzVCLE1BQU0sSUFBSU4sVUFBVSxDQUFDLENBQUMsRUFBRUcsTUFBTSxnREFBZ0QsQ0FBQztJQUNuRixPQUFPRDtBQUNYO0FBQ0EsU0FBU0ssYUFBYUwsS0FBSztJQUN2QixNQUFNTSxNQUFNUCxvQkFBb0JDLE9BQU87SUFDdkMsSUFBSSxDQUFDTSxJQUFJQyxZQUNMLE1BQU0sSUFBSVQsVUFBVSxDQUFDLHlDQUF5QyxDQUFDO0lBQ25FLE9BQU9RO0FBQ1g7QUFDQSxTQUFTRSxjQUFjUixLQUFLO0lBQ3hCLE1BQU1TLE9BQU9WLG9CQUFvQkMsT0FBTztJQUN4QyxJQUFJUyxLQUFLRixhQUFhLE1BQU07UUFDeEIsTUFBTVQsVUFBVTtJQUNwQjtJQUNBLE9BQU9XO0FBQ1g7QUFDQSxTQUFTQyxnQkFBZ0JWLEtBQUssRUFBRUgsTUFBTTtJQUNsQyxJQUFJLE9BQU9HLFVBQVUsWUFBWSxDQUFDVyxPQUFPQyxVQUFVWixVQUFVQSxRQUFRLEdBQUc7UUFDcEUsTUFBTSxJQUFJRixVQUFVO0lBQ3hCO0lBQ0EsTUFBTWUsVUFBVUMsU0FBU2pCLE9BQU9rQixPQUFPLElBQUksT0FBTyxLQUFLO0lBQ3ZELElBQUlmLFFBQVEsTUFBTWEsU0FBUztRQUN2QixNQUFNLElBQUlmLFVBQVU7SUFDeEI7SUFDQSxPQUFPRTtBQUNYO0FBQ0EsZUFBZVAsS0FBS0ksTUFBTSxFQUFFUyxHQUFHLEVBQUVVLElBQUksRUFBRVAsSUFBSSxFQUFFUSxNQUFNO0lBQy9DLE9BQU8sQ0FBQyxHQUFHdkIsVUFBVUYsT0FBTSxFQUFHSSxnQkFBZ0JDLFNBQVNRLGFBQWFDLE1BQU1QLG9CQUFvQmlCLE1BQU0sU0FBU1IsY0FBY0MsT0FBT0MsZ0JBQWdCTyxRQUFRcEI7QUFDOUo7QUFDQVAsWUFBWUcsR0FBR0E7QUFDZkgsa0JBQWVFLEdBQUdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9AcGFudmEvaGtkZi9kaXN0L25vZGUvY2pzL2luZGV4LmpzPzFlOTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmF1bHQgPSBleHBvcnRzLmhrZGYgPSB2b2lkIDA7XG5jb25zdCBoa2RmX2pzXzEgPSByZXF1aXJlKFwiLi9ydW50aW1lL2hrZGYuanNcIik7XG5mdW5jdGlvbiBub3JtYWxpemVEaWdlc3QoZGlnZXN0KSB7XG4gICAgc3dpdGNoIChkaWdlc3QpIHtcbiAgICAgICAgY2FzZSAnc2hhMjU2JzpcbiAgICAgICAgY2FzZSAnc2hhMzg0JzpcbiAgICAgICAgY2FzZSAnc2hhNTEyJzpcbiAgICAgICAgY2FzZSAnc2hhMSc6XG4gICAgICAgICAgICByZXR1cm4gZGlnZXN0O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigndW5zdXBwb3J0ZWQgXCJkaWdlc3RcIiB2YWx1ZScpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZVVpbnQ4QXJyYXkoaW5wdXQsIGxhYmVsKSB7XG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycpXG4gICAgICAgIHJldHVybiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoaW5wdXQpO1xuICAgIGlmICghKGlucHV0IGluc3RhbmNlb2YgVWludDhBcnJheSkpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFwiJHtsYWJlbH1cIlwiIG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgVWludDhBcnJheSBvciBhIHN0cmluZ2ApO1xuICAgIHJldHVybiBpbnB1dDtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZUlrbShpbnB1dCkge1xuICAgIGNvbnN0IGlrbSA9IG5vcm1hbGl6ZVVpbnQ4QXJyYXkoaW5wdXQsICdpa20nKTtcbiAgICBpZiAoIWlrbS5ieXRlTGVuZ3RoKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBcImlrbVwiIG11c3QgYmUgYXQgbGVhc3Qgb25lIGJ5dGUgaW4gbGVuZ3RoYCk7XG4gICAgcmV0dXJuIGlrbTtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZUluZm8oaW5wdXQpIHtcbiAgICBjb25zdCBpbmZvID0gbm9ybWFsaXplVWludDhBcnJheShpbnB1dCwgJ2luZm8nKTtcbiAgICBpZiAoaW5mby5ieXRlTGVuZ3RoID4gMTAyNCkge1xuICAgICAgICB0aHJvdyBUeXBlRXJyb3IoJ1wiaW5mb1wiIG11c3Qgbm90IGNvbnRhaW4gbW9yZSB0aGFuIDEwMjQgYnl0ZXMnKTtcbiAgICB9XG4gICAgcmV0dXJuIGluZm87XG59XG5mdW5jdGlvbiBub3JtYWxpemVLZXlsZW4oaW5wdXQsIGRpZ2VzdCkge1xuICAgIGlmICh0eXBlb2YgaW5wdXQgIT09ICdudW1iZXInIHx8ICFOdW1iZXIuaXNJbnRlZ2VyKGlucHV0KSB8fCBpbnB1dCA8IDEpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJrZXlsZW5cIiBtdXN0IGJlIGEgcG9zaXRpdmUgaW50ZWdlcicpO1xuICAgIH1cbiAgICBjb25zdCBoYXNobGVuID0gcGFyc2VJbnQoZGlnZXN0LnN1YnN0cigzKSwgMTApID4+IDMgfHwgMjA7XG4gICAgaWYgKGlucHV0ID4gMjU1ICogaGFzaGxlbikge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcImtleWxlblwiIHRvbyBsYXJnZScpO1xuICAgIH1cbiAgICByZXR1cm4gaW5wdXQ7XG59XG5hc3luYyBmdW5jdGlvbiBoa2RmKGRpZ2VzdCwgaWttLCBzYWx0LCBpbmZvLCBrZXlsZW4pIHtcbiAgICByZXR1cm4gKDAsIGhrZGZfanNfMS5kZWZhdWx0KShub3JtYWxpemVEaWdlc3QoZGlnZXN0KSwgbm9ybWFsaXplSWttKGlrbSksIG5vcm1hbGl6ZVVpbnQ4QXJyYXkoc2FsdCwgJ3NhbHQnKSwgbm9ybWFsaXplSW5mbyhpbmZvKSwgbm9ybWFsaXplS2V5bGVuKGtleWxlbiwgZGlnZXN0KSk7XG59XG5leHBvcnRzLmhrZGYgPSBoa2RmO1xuZXhwb3J0cy5kZWZhdWx0ID0gaGtkZjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJoa2RmIiwiaGtkZl9qc18xIiwicmVxdWlyZSIsIm5vcm1hbGl6ZURpZ2VzdCIsImRpZ2VzdCIsIlR5cGVFcnJvciIsIm5vcm1hbGl6ZVVpbnQ4QXJyYXkiLCJpbnB1dCIsImxhYmVsIiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiLCJVaW50OEFycmF5Iiwibm9ybWFsaXplSWttIiwiaWttIiwiYnl0ZUxlbmd0aCIsIm5vcm1hbGl6ZUluZm8iLCJpbmZvIiwibm9ybWFsaXplS2V5bGVuIiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwiaGFzaGxlbiIsInBhcnNlSW50Iiwic3Vic3RyIiwic2FsdCIsImtleWxlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/runtime/fallback.js":
/*!********************************************************************!*\
  !*** ./node_modules/@panva/hkdf/dist/node/cjs/runtime/fallback.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nexports[\"default\"] = (digest, ikm, salt, info, keylen)=>{\n    const hashlen = parseInt(digest.substr(3), 10) >> 3 || 20;\n    const prk = (0, crypto_1.createHmac)(digest, salt.byteLength ? salt : new Uint8Array(hashlen)).update(ikm).digest();\n    const N = Math.ceil(keylen / hashlen);\n    const T = new Uint8Array(hashlen * N + info.byteLength + 1);\n    let prev = 0;\n    let start = 0;\n    for(let c = 1; c <= N; c++){\n        T.set(info, start);\n        T[start + info.byteLength] = c;\n        T.set((0, crypto_1.createHmac)(digest, prk).update(T.subarray(prev, start + info.byteLength + 1)).digest(), start);\n        prev = start;\n        start += hashlen;\n    }\n    return T.slice(0, keylen);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQHBhbnZhL2hrZGYvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2ZhbGxiYWNrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFdBQVdDLG1CQUFPQSxDQUFDLHNCQUFRO0FBQ2pDSCxrQkFBZUksR0FBRyxDQUFDQyxRQUFRQyxLQUFLQyxNQUFNQyxNQUFNQztJQUN4QyxNQUFNQyxVQUFVQyxTQUFTTixPQUFPTyxPQUFPLElBQUksT0FBTyxLQUFLO0lBQ3ZELE1BQU1DLE1BQU0sQ0FBQyxHQUFHWCxTQUFTWSxVQUFTLEVBQUdULFFBQVFFLEtBQUtRLGFBQWFSLE9BQU8sSUFBSVMsV0FBV04sVUFDaEZPLE9BQU9YLEtBQ1BEO0lBQ0wsTUFBTWEsSUFBSUMsS0FBS0MsS0FBS1gsU0FBU0M7SUFDN0IsTUFBTVcsSUFBSSxJQUFJTCxXQUFXTixVQUFVUSxJQUFJVixLQUFLTyxhQUFhO0lBQ3pELElBQUlPLE9BQU87SUFDWCxJQUFJQyxRQUFRO0lBQ1osSUFBSyxJQUFJQyxJQUFJLEdBQUdBLEtBQUtOLEdBQUdNLElBQUs7UUFDekJILEVBQUVJLElBQUlqQixNQUFNZTtRQUNaRixDQUFDLENBQUNFLFFBQVFmLEtBQUtPLFdBQVcsR0FBR1M7UUFDN0JILEVBQUVJLElBQUksQ0FBQyxHQUFHdkIsU0FBU1ksVUFBUyxFQUFHVCxRQUFRUSxLQUNsQ0ksT0FBT0ksRUFBRUssU0FBU0osTUFBTUMsUUFBUWYsS0FBS08sYUFBYSxJQUNsRFYsVUFBVWtCO1FBQ2ZELE9BQU9DO1FBQ1BBLFNBQVNiO0lBQ2I7SUFDQSxPQUFPVyxFQUFFTSxNQUFNLEdBQUdsQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQHBhbnZhL2hrZGYvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2ZhbGxiYWNrLmpzPzA3YTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5leHBvcnRzLmRlZmF1bHQgPSAoZGlnZXN0LCBpa20sIHNhbHQsIGluZm8sIGtleWxlbikgPT4ge1xuICAgIGNvbnN0IGhhc2hsZW4gPSBwYXJzZUludChkaWdlc3Quc3Vic3RyKDMpLCAxMCkgPj4gMyB8fCAyMDtcbiAgICBjb25zdCBwcmsgPSAoMCwgY3J5cHRvXzEuY3JlYXRlSG1hYykoZGlnZXN0LCBzYWx0LmJ5dGVMZW5ndGggPyBzYWx0IDogbmV3IFVpbnQ4QXJyYXkoaGFzaGxlbikpXG4gICAgICAgIC51cGRhdGUoaWttKVxuICAgICAgICAuZGlnZXN0KCk7XG4gICAgY29uc3QgTiA9IE1hdGguY2VpbChrZXlsZW4gLyBoYXNobGVuKTtcbiAgICBjb25zdCBUID0gbmV3IFVpbnQ4QXJyYXkoaGFzaGxlbiAqIE4gKyBpbmZvLmJ5dGVMZW5ndGggKyAxKTtcbiAgICBsZXQgcHJldiA9IDA7XG4gICAgbGV0IHN0YXJ0ID0gMDtcbiAgICBmb3IgKGxldCBjID0gMTsgYyA8PSBOOyBjKyspIHtcbiAgICAgICAgVC5zZXQoaW5mbywgc3RhcnQpO1xuICAgICAgICBUW3N0YXJ0ICsgaW5mby5ieXRlTGVuZ3RoXSA9IGM7XG4gICAgICAgIFQuc2V0KCgwLCBjcnlwdG9fMS5jcmVhdGVIbWFjKShkaWdlc3QsIHByaylcbiAgICAgICAgICAgIC51cGRhdGUoVC5zdWJhcnJheShwcmV2LCBzdGFydCArIGluZm8uYnl0ZUxlbmd0aCArIDEpKVxuICAgICAgICAgICAgLmRpZ2VzdCgpLCBzdGFydCk7XG4gICAgICAgIHByZXYgPSBzdGFydDtcbiAgICAgICAgc3RhcnQgKz0gaGFzaGxlbjtcbiAgICB9XG4gICAgcmV0dXJuIFQuc2xpY2UoMCwga2V5bGVuKTtcbn07XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjcnlwdG9fMSIsInJlcXVpcmUiLCJkZWZhdWx0IiwiZGlnZXN0IiwiaWttIiwic2FsdCIsImluZm8iLCJrZXlsZW4iLCJoYXNobGVuIiwicGFyc2VJbnQiLCJzdWJzdHIiLCJwcmsiLCJjcmVhdGVIbWFjIiwiYnl0ZUxlbmd0aCIsIlVpbnQ4QXJyYXkiLCJ1cGRhdGUiLCJOIiwiTWF0aCIsImNlaWwiLCJUIiwicHJldiIsInN0YXJ0IiwiYyIsInNldCIsInN1YmFycmF5Iiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/runtime/fallback.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/runtime/hkdf.js":
/*!****************************************************************!*\
  !*** ./node_modules/@panva/hkdf/dist/node/cjs/runtime/hkdf.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst fallback_js_1 = __webpack_require__(/*! ./fallback.js */ \"(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/runtime/fallback.js\");\nlet hkdf;\nif (typeof crypto.hkdf === \"function\" && !process.versions.electron) {\n    hkdf = async (...args)=>new Promise((resolve, reject)=>{\n            crypto.hkdf(...args, (err, arrayBuffer)=>{\n                if (err) reject(err);\n                else resolve(new Uint8Array(arrayBuffer));\n            });\n        });\n}\nexports[\"default\"] = async (digest, ikm, salt, info, keylen)=>(hkdf || fallback_js_1.default)(digest, ikm, salt, info, keylen);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQHBhbnZhL2hrZGYvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2hrZGYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsU0FBU0MsbUJBQU9BLENBQUMsc0JBQVE7QUFDL0IsTUFBTUMsZ0JBQWdCRCxtQkFBT0EsQ0FBQywrRkFBZTtBQUM3QyxJQUFJRTtBQUNKLElBQUksT0FBT0gsT0FBT0csU0FBUyxjQUFjLENBQUNDLFFBQVFDLFNBQVNDLFVBQVU7SUFDakVILE9BQU8sT0FBTyxHQUFHSSxPQUFTLElBQUlDLFFBQVEsQ0FBQ0MsU0FBU0M7WUFDNUNWLE9BQU9HLFFBQVFJLE1BQU0sQ0FBQ0ksS0FBS0M7Z0JBQ3ZCLElBQUlELEtBQ0FELE9BQU9DO3FCQUVQRixRQUFRLElBQUlJLFdBQVdEO1lBQy9CO1FBQ0o7QUFDSjtBQUNBZCxrQkFBZWdCLEdBQUcsT0FBT0MsUUFBUUMsS0FBS0MsTUFBTUMsTUFBTUMsU0FBVyxDQUFDaEIsUUFBUUQsY0FBY1ksT0FBTSxFQUFHQyxRQUFRQyxLQUFLQyxNQUFNQyxNQUFNQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQHBhbnZhL2hrZGYvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2hrZGYuanM/OWU4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCBmYWxsYmFja19qc18xID0gcmVxdWlyZShcIi4vZmFsbGJhY2suanNcIik7XG5sZXQgaGtkZjtcbmlmICh0eXBlb2YgY3J5cHRvLmhrZGYgPT09ICdmdW5jdGlvbicgJiYgIXByb2Nlc3MudmVyc2lvbnMuZWxlY3Ryb24pIHtcbiAgICBoa2RmID0gYXN5bmMgKC4uLmFyZ3MpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgY3J5cHRvLmhrZGYoLi4uYXJncywgKGVyciwgYXJyYXlCdWZmZXIpID0+IHtcbiAgICAgICAgICAgIGlmIChlcnIpXG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShuZXcgVWludDhBcnJheShhcnJheUJ1ZmZlcikpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGFzeW5jIChkaWdlc3QsIGlrbSwgc2FsdCwgaW5mbywga2V5bGVuKSA9PiAoaGtkZiB8fCBmYWxsYmFja19qc18xLmRlZmF1bHQpKGRpZ2VzdCwgaWttLCBzYWx0LCBpbmZvLCBrZXlsZW4pO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvIiwicmVxdWlyZSIsImZhbGxiYWNrX2pzXzEiLCJoa2RmIiwicHJvY2VzcyIsInZlcnNpb25zIiwiZWxlY3Ryb24iLCJhcmdzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJlcnIiLCJhcnJheUJ1ZmZlciIsIlVpbnQ4QXJyYXkiLCJkZWZhdWx0IiwiZGlnZXN0IiwiaWttIiwic2FsdCIsImluZm8iLCJrZXlsZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/runtime/hkdf.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/cookie/index.js":
/*!**************************************!*\
  !*** ./node_modules/cookie/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */ \n/**\n * Module exports.\n * @public\n */ exports.parse = parse;\nexports.serialize = serialize;\n/**\n * Module variables.\n * @private\n */ var __toString = Object.prototype.toString;\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */ var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */ function parse(str, options) {\n    if (typeof str !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n    }\n    var obj = {};\n    var opt = options || {};\n    var dec = opt.decode || decode;\n    var index = 0;\n    while(index < str.length){\n        var eqIdx = str.indexOf(\"=\", index);\n        // no more cookie pairs\n        if (eqIdx === -1) {\n            break;\n        }\n        var endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n            endIdx = str.length;\n        } else if (endIdx < eqIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        var key = str.slice(index, eqIdx).trim();\n        // only assign once\n        if (undefined === obj[key]) {\n            var val = str.slice(eqIdx + 1, endIdx).trim();\n            // quoted values\n            if (val.charCodeAt(0) === 0x22) {\n                val = val.slice(1, -1);\n            }\n            obj[key] = tryDecode(val, dec);\n        }\n        index = endIdx + 1;\n    }\n    return obj;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */ function serialize(name, val, options) {\n    var opt = options || {};\n    var enc = opt.encode || encode;\n    if (typeof enc !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError(\"argument name is invalid\");\n    }\n    var value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError(\"argument val is invalid\");\n    }\n    var str = name + \"=\" + value;\n    if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError(\"option domain is invalid\");\n        }\n        str += \"; Domain=\" + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError(\"option path is invalid\");\n        }\n        str += \"; Path=\" + opt.path;\n    }\n    if (opt.expires) {\n        var expires = opt.expires;\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\n            throw new TypeError(\"option expires is invalid\");\n        }\n        str += \"; Expires=\" + expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (opt.secure) {\n        str += \"; Secure\";\n    }\n    if (opt.priority) {\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n        switch(priority){\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(\"option priority is invalid\");\n        }\n    }\n    if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch(sameSite){\n            case true:\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(\"option sameSite is invalid\");\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */ function decode(str) {\n    return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n}\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */ function encode(val) {\n    return encodeURIComponent(val);\n}\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */ function isDate(val) {\n    return __toString.call(val) === \"[object Date]\" || val instanceof Date;\n}\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */ function tryDecode(str, decode) {\n    try {\n        return decode(str);\n    } catch (e) {\n        return str;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/cookie/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/index.js":
/*!**************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.base64url = exports.generateSecret = exports.generateKeyPair = exports.errors = exports.decodeJwt = exports.decodeProtectedHeader = exports.importJWK = exports.importX509 = exports.importPKCS8 = exports.importSPKI = exports.exportJWK = exports.exportSPKI = exports.exportPKCS8 = exports.UnsecuredJWT = exports.createRemoteJWKSet = exports.createLocalJWKSet = exports.EmbeddedJWK = exports.calculateJwkThumbprintUri = exports.calculateJwkThumbprint = exports.EncryptJWT = exports.SignJWT = exports.GeneralSign = exports.FlattenedSign = exports.CompactSign = exports.FlattenedEncrypt = exports.CompactEncrypt = exports.jwtDecrypt = exports.jwtVerify = exports.generalVerify = exports.flattenedVerify = exports.compactVerify = exports.GeneralEncrypt = exports.generalDecrypt = exports.flattenedDecrypt = exports.compactDecrypt = void 0;\nvar decrypt_js_1 = __webpack_require__(/*! ./jwe/compact/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js\");\nObject.defineProperty(exports, \"compactDecrypt\", ({\n    enumerable: true,\n    get: function() {\n        return decrypt_js_1.compactDecrypt;\n    }\n}));\nvar decrypt_js_2 = __webpack_require__(/*! ./jwe/flattened/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js\");\nObject.defineProperty(exports, \"flattenedDecrypt\", ({\n    enumerable: true,\n    get: function() {\n        return decrypt_js_2.flattenedDecrypt;\n    }\n}));\nvar decrypt_js_3 = __webpack_require__(/*! ./jwe/general/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/general/decrypt.js\");\nObject.defineProperty(exports, \"generalDecrypt\", ({\n    enumerable: true,\n    get: function() {\n        return decrypt_js_3.generalDecrypt;\n    }\n}));\nvar encrypt_js_1 = __webpack_require__(/*! ./jwe/general/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/general/encrypt.js\");\nObject.defineProperty(exports, \"GeneralEncrypt\", ({\n    enumerable: true,\n    get: function() {\n        return encrypt_js_1.GeneralEncrypt;\n    }\n}));\nvar verify_js_1 = __webpack_require__(/*! ./jws/compact/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/verify.js\");\nObject.defineProperty(exports, \"compactVerify\", ({\n    enumerable: true,\n    get: function() {\n        return verify_js_1.compactVerify;\n    }\n}));\nvar verify_js_2 = __webpack_require__(/*! ./jws/flattened/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/verify.js\");\nObject.defineProperty(exports, \"flattenedVerify\", ({\n    enumerable: true,\n    get: function() {\n        return verify_js_2.flattenedVerify;\n    }\n}));\nvar verify_js_3 = __webpack_require__(/*! ./jws/general/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/general/verify.js\");\nObject.defineProperty(exports, \"generalVerify\", ({\n    enumerable: true,\n    get: function() {\n        return verify_js_3.generalVerify;\n    }\n}));\nvar verify_js_4 = __webpack_require__(/*! ./jwt/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/verify.js\");\nObject.defineProperty(exports, \"jwtVerify\", ({\n    enumerable: true,\n    get: function() {\n        return verify_js_4.jwtVerify;\n    }\n}));\nvar decrypt_js_4 = __webpack_require__(/*! ./jwt/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/decrypt.js\");\nObject.defineProperty(exports, \"jwtDecrypt\", ({\n    enumerable: true,\n    get: function() {\n        return decrypt_js_4.jwtDecrypt;\n    }\n}));\nvar encrypt_js_2 = __webpack_require__(/*! ./jwe/compact/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js\");\nObject.defineProperty(exports, \"CompactEncrypt\", ({\n    enumerable: true,\n    get: function() {\n        return encrypt_js_2.CompactEncrypt;\n    }\n}));\nvar encrypt_js_3 = __webpack_require__(/*! ./jwe/flattened/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js\");\nObject.defineProperty(exports, \"FlattenedEncrypt\", ({\n    enumerable: true,\n    get: function() {\n        return encrypt_js_3.FlattenedEncrypt;\n    }\n}));\nvar sign_js_1 = __webpack_require__(/*! ./jws/compact/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/sign.js\");\nObject.defineProperty(exports, \"CompactSign\", ({\n    enumerable: true,\n    get: function() {\n        return sign_js_1.CompactSign;\n    }\n}));\nvar sign_js_2 = __webpack_require__(/*! ./jws/flattened/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/sign.js\");\nObject.defineProperty(exports, \"FlattenedSign\", ({\n    enumerable: true,\n    get: function() {\n        return sign_js_2.FlattenedSign;\n    }\n}));\nvar sign_js_3 = __webpack_require__(/*! ./jws/general/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/general/sign.js\");\nObject.defineProperty(exports, \"GeneralSign\", ({\n    enumerable: true,\n    get: function() {\n        return sign_js_3.GeneralSign;\n    }\n}));\nvar sign_js_4 = __webpack_require__(/*! ./jwt/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/sign.js\");\nObject.defineProperty(exports, \"SignJWT\", ({\n    enumerable: true,\n    get: function() {\n        return sign_js_4.SignJWT;\n    }\n}));\nvar encrypt_js_4 = __webpack_require__(/*! ./jwt/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/encrypt.js\");\nObject.defineProperty(exports, \"EncryptJWT\", ({\n    enumerable: true,\n    get: function() {\n        return encrypt_js_4.EncryptJWT;\n    }\n}));\nvar thumbprint_js_1 = __webpack_require__(/*! ./jwk/thumbprint.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwk/thumbprint.js\");\nObject.defineProperty(exports, \"calculateJwkThumbprint\", ({\n    enumerable: true,\n    get: function() {\n        return thumbprint_js_1.calculateJwkThumbprint;\n    }\n}));\nObject.defineProperty(exports, \"calculateJwkThumbprintUri\", ({\n    enumerable: true,\n    get: function() {\n        return thumbprint_js_1.calculateJwkThumbprintUri;\n    }\n}));\nvar embedded_js_1 = __webpack_require__(/*! ./jwk/embedded.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwk/embedded.js\");\nObject.defineProperty(exports, \"EmbeddedJWK\", ({\n    enumerable: true,\n    get: function() {\n        return embedded_js_1.EmbeddedJWK;\n    }\n}));\nvar local_js_1 = __webpack_require__(/*! ./jwks/local.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwks/local.js\");\nObject.defineProperty(exports, \"createLocalJWKSet\", ({\n    enumerable: true,\n    get: function() {\n        return local_js_1.createLocalJWKSet;\n    }\n}));\nvar remote_js_1 = __webpack_require__(/*! ./jwks/remote.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwks/remote.js\");\nObject.defineProperty(exports, \"createRemoteJWKSet\", ({\n    enumerable: true,\n    get: function() {\n        return remote_js_1.createRemoteJWKSet;\n    }\n}));\nvar unsecured_js_1 = __webpack_require__(/*! ./jwt/unsecured.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/unsecured.js\");\nObject.defineProperty(exports, \"UnsecuredJWT\", ({\n    enumerable: true,\n    get: function() {\n        return unsecured_js_1.UnsecuredJWT;\n    }\n}));\nvar export_js_1 = __webpack_require__(/*! ./key/export.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/export.js\");\nObject.defineProperty(exports, \"exportPKCS8\", ({\n    enumerable: true,\n    get: function() {\n        return export_js_1.exportPKCS8;\n    }\n}));\nObject.defineProperty(exports, \"exportSPKI\", ({\n    enumerable: true,\n    get: function() {\n        return export_js_1.exportSPKI;\n    }\n}));\nObject.defineProperty(exports, \"exportJWK\", ({\n    enumerable: true,\n    get: function() {\n        return export_js_1.exportJWK;\n    }\n}));\nvar import_js_1 = __webpack_require__(/*! ./key/import.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/import.js\");\nObject.defineProperty(exports, \"importSPKI\", ({\n    enumerable: true,\n    get: function() {\n        return import_js_1.importSPKI;\n    }\n}));\nObject.defineProperty(exports, \"importPKCS8\", ({\n    enumerable: true,\n    get: function() {\n        return import_js_1.importPKCS8;\n    }\n}));\nObject.defineProperty(exports, \"importX509\", ({\n    enumerable: true,\n    get: function() {\n        return import_js_1.importX509;\n    }\n}));\nObject.defineProperty(exports, \"importJWK\", ({\n    enumerable: true,\n    get: function() {\n        return import_js_1.importJWK;\n    }\n}));\nvar decode_protected_header_js_1 = __webpack_require__(/*! ./util/decode_protected_header.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/decode_protected_header.js\");\nObject.defineProperty(exports, \"decodeProtectedHeader\", ({\n    enumerable: true,\n    get: function() {\n        return decode_protected_header_js_1.decodeProtectedHeader;\n    }\n}));\nvar decode_jwt_js_1 = __webpack_require__(/*! ./util/decode_jwt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/decode_jwt.js\");\nObject.defineProperty(exports, \"decodeJwt\", ({\n    enumerable: true,\n    get: function() {\n        return decode_jwt_js_1.decodeJwt;\n    }\n}));\nexports.errors = __webpack_require__(/*! ./util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nvar generate_key_pair_js_1 = __webpack_require__(/*! ./key/generate_key_pair.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/generate_key_pair.js\");\nObject.defineProperty(exports, \"generateKeyPair\", ({\n    enumerable: true,\n    get: function() {\n        return generate_key_pair_js_1.generateKeyPair;\n    }\n}));\nvar generate_secret_js_1 = __webpack_require__(/*! ./key/generate_secret.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/generate_secret.js\");\nObject.defineProperty(exports, \"generateSecret\", ({\n    enumerable: true,\n    get: function() {\n        return generate_secret_js_1.generateSecret;\n    }\n}));\nexports.base64url = __webpack_require__(/*! ./util/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/base64url.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.compactDecrypt = void 0;\nconst decrypt_js_1 = __webpack_require__(/*! ../flattened/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nasync function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = buffer_utils_js_1.decoder.decode(jwe);\n    }\n    if (typeof jwe !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"Compact JWE must be a string or Uint8Array\");\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length } = jwe.split(\".\");\n    if (length !== 5) {\n        throw new errors_js_1.JWEInvalid(\"Invalid Compact JWE\");\n    }\n    const decrypted = await (0, decrypt_js_1.flattenedDecrypt)({\n        ciphertext,\n        iv: iv || undefined,\n        protected: protectedHeader || undefined,\n        tag: tag || undefined,\n        encrypted_key: encryptedKey || undefined\n    }, key, options);\n    const result = {\n        plaintext: decrypted.plaintext,\n        protectedHeader: decrypted.protectedHeader\n    };\n    if (typeof key === \"function\") {\n        return {\n            ...result,\n            key: decrypted.key\n        };\n    }\n    return result;\n}\nexports.compactDecrypt = compactDecrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ZS9jb21wYWN0L2RlY3J5cHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQkUsR0FBRyxLQUFLO0FBQzlCLE1BQU1DLGVBQWVDLG1CQUFPQSxDQUFDLHVHQUF5QjtBQUN0RCxNQUFNQyxjQUFjRCxtQkFBT0EsQ0FBQywwRkFBc0I7QUFDbEQsTUFBTUUsb0JBQW9CRixtQkFBT0EsQ0FBQyxvR0FBMkI7QUFDN0QsZUFBZUYsZUFBZUssR0FBRyxFQUFFQyxHQUFHLEVBQUVDLE9BQU87SUFDM0MsSUFBSUYsZUFBZUcsWUFBWTtRQUMzQkgsTUFBTUQsa0JBQWtCSyxRQUFRQyxPQUFPTDtJQUMzQztJQUNBLElBQUksT0FBT0EsUUFBUSxVQUFVO1FBQ3pCLE1BQU0sSUFBSUYsWUFBWVEsV0FBVztJQUNyQztJQUNBLE1BQU0sRUFBRSxHQUFHQyxlQUFlLEVBQUUsR0FBR0MsWUFBWSxFQUFFLEdBQUdDLEVBQUUsRUFBRSxHQUFHQyxVQUFVLEVBQUUsR0FBR0MsR0FBRyxFQUFFQyxNQUFNLEVBQUcsR0FBR1osSUFBSWEsTUFBTTtJQUNqRyxJQUFJRCxXQUFXLEdBQUc7UUFDZCxNQUFNLElBQUlkLFlBQVlRLFdBQVc7SUFDckM7SUFDQSxNQUFNUSxZQUFZLE1BQU0sQ0FBQyxHQUFHbEIsYUFBYW1CLGdCQUFlLEVBQUc7UUFDdkRMO1FBQ0FELElBQUtBLE1BQU1PO1FBQ1hDLFdBQVdWLG1CQUFtQlM7UUFDOUJMLEtBQU1BLE9BQU9LO1FBQ2JFLGVBQWVWLGdCQUFnQlE7SUFDbkMsR0FBR2YsS0FBS0M7SUFDUixNQUFNaUIsU0FBUztRQUFFQyxXQUFXTixVQUFVTTtRQUFXYixpQkFBaUJPLFVBQVVQO0lBQWdCO0lBQzVGLElBQUksT0FBT04sUUFBUSxZQUFZO1FBQzNCLE9BQU87WUFBRSxHQUFHa0IsTUFBTTtZQUFFbEIsS0FBS2EsVUFBVWI7UUFBSTtJQUMzQztJQUNBLE9BQU9rQjtBQUNYO0FBQ0ExQixzQkFBc0JFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandlL2NvbXBhY3QvZGVjcnlwdC5qcz8zOTNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jb21wYWN0RGVjcnlwdCA9IHZvaWQgMDtcbmNvbnN0IGRlY3J5cHRfanNfMSA9IHJlcXVpcmUoXCIuLi9mbGF0dGVuZWQvZGVjcnlwdC5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uLy4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgYnVmZmVyX3V0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vbGliL2J1ZmZlcl91dGlscy5qc1wiKTtcbmFzeW5jIGZ1bmN0aW9uIGNvbXBhY3REZWNyeXB0KGp3ZSwga2V5LCBvcHRpb25zKSB7XG4gICAgaWYgKGp3ZSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgandlID0gYnVmZmVyX3V0aWxzX2pzXzEuZGVjb2Rlci5kZWNvZGUoandlKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBqd2UgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VJbnZhbGlkKCdDb21wYWN0IEpXRSBtdXN0IGJlIGEgc3RyaW5nIG9yIFVpbnQ4QXJyYXknKTtcbiAgICB9XG4gICAgY29uc3QgeyAwOiBwcm90ZWN0ZWRIZWFkZXIsIDE6IGVuY3J5cHRlZEtleSwgMjogaXYsIDM6IGNpcGhlcnRleHQsIDQ6IHRhZywgbGVuZ3RoLCB9ID0gandlLnNwbGl0KCcuJyk7XG4gICAgaWYgKGxlbmd0aCAhPT0gNSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZCgnSW52YWxpZCBDb21wYWN0IEpXRScpO1xuICAgIH1cbiAgICBjb25zdCBkZWNyeXB0ZWQgPSBhd2FpdCAoMCwgZGVjcnlwdF9qc18xLmZsYXR0ZW5lZERlY3J5cHQpKHtcbiAgICAgICAgY2lwaGVydGV4dCxcbiAgICAgICAgaXY6IChpdiB8fCB1bmRlZmluZWQpLFxuICAgICAgICBwcm90ZWN0ZWQ6IHByb3RlY3RlZEhlYWRlciB8fCB1bmRlZmluZWQsXG4gICAgICAgIHRhZzogKHRhZyB8fCB1bmRlZmluZWQpLFxuICAgICAgICBlbmNyeXB0ZWRfa2V5OiBlbmNyeXB0ZWRLZXkgfHwgdW5kZWZpbmVkLFxuICAgIH0sIGtleSwgb3B0aW9ucyk7XG4gICAgY29uc3QgcmVzdWx0ID0geyBwbGFpbnRleHQ6IGRlY3J5cHRlZC5wbGFpbnRleHQsIHByb3RlY3RlZEhlYWRlcjogZGVjcnlwdGVkLnByb3RlY3RlZEhlYWRlciB9O1xuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiB7IC4uLnJlc3VsdCwga2V5OiBkZWNyeXB0ZWQua2V5IH07XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLmNvbXBhY3REZWNyeXB0ID0gY29tcGFjdERlY3J5cHQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjb21wYWN0RGVjcnlwdCIsImRlY3J5cHRfanNfMSIsInJlcXVpcmUiLCJlcnJvcnNfanNfMSIsImJ1ZmZlcl91dGlsc19qc18xIiwiandlIiwia2V5Iiwib3B0aW9ucyIsIlVpbnQ4QXJyYXkiLCJkZWNvZGVyIiwiZGVjb2RlIiwiSldFSW52YWxpZCIsInByb3RlY3RlZEhlYWRlciIsImVuY3J5cHRlZEtleSIsIml2IiwiY2lwaGVydGV4dCIsInRhZyIsImxlbmd0aCIsInNwbGl0IiwiZGVjcnlwdGVkIiwiZmxhdHRlbmVkRGVjcnlwdCIsInVuZGVmaW5lZCIsInByb3RlY3RlZCIsImVuY3J5cHRlZF9rZXkiLCJyZXN1bHQiLCJwbGFpbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CompactEncrypt = void 0;\nconst encrypt_js_1 = __webpack_require__(/*! ../flattened/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js\");\nclass CompactEncrypt {\n    constructor(plaintext){\n        this._flattened = new encrypt_js_1.FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [\n            jwe.protected,\n            jwe.encrypted_key,\n            jwe.iv,\n            jwe.ciphertext,\n            jwe.tag\n        ].join(\".\");\n    }\n}\nexports.CompactEncrypt = CompactEncrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ZS9jb21wYWN0L2VuY3J5cHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQkUsR0FBRyxLQUFLO0FBQzlCLE1BQU1DLGVBQWVDLG1CQUFPQSxDQUFDLHVHQUF5QjtBQUN0RCxNQUFNRjtJQUNGRyxZQUFZQyxTQUFTLENBQUU7UUFDbkIsSUFBSSxDQUFDQyxhQUFhLElBQUlKLGFBQWFLLGlCQUFpQkY7SUFDeEQ7SUFDQUcsd0JBQXdCQyxHQUFHLEVBQUU7UUFDekIsSUFBSSxDQUFDSCxXQUFXRSx3QkFBd0JDO1FBQ3hDLE9BQU8sSUFBSTtJQUNmO0lBQ0FDLHdCQUF3QkMsRUFBRSxFQUFFO1FBQ3hCLElBQUksQ0FBQ0wsV0FBV0ksd0JBQXdCQztRQUN4QyxPQUFPLElBQUk7SUFDZjtJQUNBQyxtQkFBbUJDLGVBQWUsRUFBRTtRQUNoQyxJQUFJLENBQUNQLFdBQVdNLG1CQUFtQkM7UUFDbkMsT0FBTyxJQUFJO0lBQ2Y7SUFDQUMsMkJBQTJCQyxVQUFVLEVBQUU7UUFDbkMsSUFBSSxDQUFDVCxXQUFXUSwyQkFBMkJDO1FBQzNDLE9BQU8sSUFBSTtJQUNmO0lBQ0EsTUFBTUMsUUFBUUMsR0FBRyxFQUFFQyxPQUFPLEVBQUU7UUFDeEIsTUFBTUMsTUFBTSxNQUFNLElBQUksQ0FBQ2IsV0FBV1UsUUFBUUMsS0FBS0M7UUFDL0MsT0FBTztZQUFDQyxJQUFJQztZQUFXRCxJQUFJRTtZQUFlRixJQUFJUjtZQUFJUSxJQUFJRztZQUFZSCxJQUFJSTtTQUFJLENBQUNDLEtBQUs7SUFDcEY7QUFDSjtBQUNBekIsc0JBQXNCRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ZS9jb21wYWN0L2VuY3J5cHQuanM/ZTVhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQ29tcGFjdEVuY3J5cHQgPSB2b2lkIDA7XG5jb25zdCBlbmNyeXB0X2pzXzEgPSByZXF1aXJlKFwiLi4vZmxhdHRlbmVkL2VuY3J5cHQuanNcIik7XG5jbGFzcyBDb21wYWN0RW5jcnlwdCB7XG4gICAgY29uc3RydWN0b3IocGxhaW50ZXh0KSB7XG4gICAgICAgIHRoaXMuX2ZsYXR0ZW5lZCA9IG5ldyBlbmNyeXB0X2pzXzEuRmxhdHRlbmVkRW5jcnlwdChwbGFpbnRleHQpO1xuICAgIH1cbiAgICBzZXRDb250ZW50RW5jcnlwdGlvbktleShjZWspIHtcbiAgICAgICAgdGhpcy5fZmxhdHRlbmVkLnNldENvbnRlbnRFbmNyeXB0aW9uS2V5KGNlayk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzZXRJbml0aWFsaXphdGlvblZlY3Rvcihpdikge1xuICAgICAgICB0aGlzLl9mbGF0dGVuZWQuc2V0SW5pdGlhbGl6YXRpb25WZWN0b3IoaXYpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0UHJvdGVjdGVkSGVhZGVyKHByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICB0aGlzLl9mbGF0dGVuZWQuc2V0UHJvdGVjdGVkSGVhZGVyKHByb3RlY3RlZEhlYWRlcik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzZXRLZXlNYW5hZ2VtZW50UGFyYW1ldGVycyhwYXJhbWV0ZXJzKSB7XG4gICAgICAgIHRoaXMuX2ZsYXR0ZW5lZC5zZXRLZXlNYW5hZ2VtZW50UGFyYW1ldGVycyhwYXJhbWV0ZXJzKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGFzeW5jIGVuY3J5cHQoa2V5LCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IGp3ZSA9IGF3YWl0IHRoaXMuX2ZsYXR0ZW5lZC5lbmNyeXB0KGtleSwgb3B0aW9ucyk7XG4gICAgICAgIHJldHVybiBbandlLnByb3RlY3RlZCwgandlLmVuY3J5cHRlZF9rZXksIGp3ZS5pdiwgandlLmNpcGhlcnRleHQsIGp3ZS50YWddLmpvaW4oJy4nKTtcbiAgICB9XG59XG5leHBvcnRzLkNvbXBhY3RFbmNyeXB0ID0gQ29tcGFjdEVuY3J5cHQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJDb21wYWN0RW5jcnlwdCIsImVuY3J5cHRfanNfMSIsInJlcXVpcmUiLCJjb25zdHJ1Y3RvciIsInBsYWludGV4dCIsIl9mbGF0dGVuZWQiLCJGbGF0dGVuZWRFbmNyeXB0Iiwic2V0Q29udGVudEVuY3J5cHRpb25LZXkiLCJjZWsiLCJzZXRJbml0aWFsaXphdGlvblZlY3RvciIsIml2Iiwic2V0UHJvdGVjdGVkSGVhZGVyIiwicHJvdGVjdGVkSGVhZGVyIiwic2V0S2V5TWFuYWdlbWVudFBhcmFtZXRlcnMiLCJwYXJhbWV0ZXJzIiwiZW5jcnlwdCIsImtleSIsIm9wdGlvbnMiLCJqd2UiLCJwcm90ZWN0ZWQiLCJlbmNyeXB0ZWRfa2V5IiwiY2lwaGVydGV4dCIsInRhZyIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js":
/*!******************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.flattenedDecrypt = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst decrypt_js_1 = __webpack_require__(/*! ../../runtime/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/decrypt.js\");\nconst zlib_js_1 = __webpack_require__(/*! ../../runtime/zlib.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/zlib.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst decrypt_key_management_js_1 = __webpack_require__(/*! ../../lib/decrypt_key_management.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst cek_js_1 = __webpack_require__(/*! ../../lib/cek.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/cek.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nconst validate_algorithms_js_1 = __webpack_require__(/*! ../../lib/validate_algorithms.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_algorithms.js\");\nasync function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!(0, is_object_js_1.default)(jwe)) {\n        throw new errors_js_1.JWEInvalid(\"Flattened JWE must be an object\");\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new errors_js_1.JWEInvalid(\"JOSE Header missing\");\n    }\n    if (typeof jwe.iv !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"JWE Initialization Vector missing or incorrect type\");\n    }\n    if (typeof jwe.ciphertext !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"JWE Ciphertext missing or incorrect type\");\n    }\n    if (typeof jwe.tag !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"JWE Authentication Tag missing or incorrect type\");\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"JWE Protected Header incorrect type\");\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"JWE Encrypted Key incorrect type\");\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== \"string\") {\n        throw new errors_js_1.JWEInvalid(\"JWE AAD incorrect type\");\n    }\n    if (jwe.header !== undefined && !(0, is_object_js_1.default)(jwe.header)) {\n        throw new errors_js_1.JWEInvalid(\"JWE Shared Unprotected Header incorrect type\");\n    }\n    if (jwe.unprotected !== undefined && !(0, is_object_js_1.default)(jwe.unprotected)) {\n        throw new errors_js_1.JWEInvalid(\"JWE Per-Recipient Unprotected Header incorrect type\");\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = (0, base64url_js_1.decode)(jwe.protected);\n            parsedProt = JSON.parse(buffer_utils_js_1.decoder.decode(protectedHeader));\n        } catch  {\n            throw new errors_js_1.JWEInvalid(\"JWE Protected Header is invalid\");\n        }\n    }\n    if (!(0, is_disjoint_js_1.default)(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new errors_js_1.JWEInvalid(\"JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint\");\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected\n    };\n    (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== \"DEF\") {\n            throw new errors_js_1.JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== \"string\" || !alg) {\n        throw new errors_js_1.JWEInvalid(\"missing JWE Algorithm (alg) in JWE Header\");\n    }\n    if (typeof enc !== \"string\" || !enc) {\n        throw new errors_js_1.JWEInvalid(\"missing JWE Encryption Algorithm (enc) in JWE Header\");\n    }\n    const keyManagementAlgorithms = options && (0, validate_algorithms_js_1.default)(\"keyManagementAlgorithms\", options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options && (0, validate_algorithms_js_1.default)(\"contentEncryptionAlgorithms\", options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new errors_js_1.JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new errors_js_1.JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        encryptedKey = (0, base64url_js_1.decode)(jwe.encrypted_key);\n    }\n    let resolvedKey = false;\n    if (typeof key === \"function\") {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await (0, decrypt_key_management_js_1.default)(alg, key, encryptedKey, joseHeader, options);\n    } catch (err) {\n        if (err instanceof TypeError || err instanceof errors_js_1.JWEInvalid || err instanceof errors_js_1.JOSENotSupported) {\n            throw err;\n        }\n        cek = (0, cek_js_1.default)(enc);\n    }\n    const iv = (0, base64url_js_1.decode)(jwe.iv);\n    const tag = (0, base64url_js_1.decode)(jwe.tag);\n    const protectedHeader = buffer_utils_js_1.encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : \"\");\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode(\".\"), buffer_utils_js_1.encoder.encode(jwe.aad));\n    } else {\n        additionalData = protectedHeader;\n    }\n    let plaintext = await (0, decrypt_js_1.default)(enc, cek, (0, base64url_js_1.decode)(jwe.ciphertext), iv, tag, additionalData);\n    if (joseHeader.zip === \"DEF\") {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || zlib_js_1.inflate)(plaintext);\n    }\n    const result = {\n        plaintext\n    };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        result.additionalAuthenticatedData = (0, base64url_js_1.decode)(jwe.aad);\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return {\n            ...result,\n            key\n        };\n    }\n    return result;\n}\nexports.flattenedDecrypt = flattenedDecrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js":
/*!******************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.FlattenedEncrypt = exports.unprotected = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst encrypt_js_1 = __webpack_require__(/*! ../../runtime/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/encrypt.js\");\nconst zlib_js_1 = __webpack_require__(/*! ../../runtime/zlib.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/zlib.js\");\nconst iv_js_1 = __webpack_require__(/*! ../../lib/iv.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/iv.js\");\nconst encrypt_key_management_js_1 = __webpack_require__(/*! ../../lib/encrypt_key_management.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nexports.unprotected = Symbol();\nclass FlattenedEncrypt {\n    constructor(plaintext){\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError(\"plaintext must be an instance of Uint8Array\");\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError(\"setKeyManagementParameters can only be called once\");\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError(\"setSharedUnprotectedHeader can only be called once\");\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError(\"setUnprotectedHeader can only be called once\");\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError(\"setContentEncryptionKey can only be called once\");\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError(\"setInitializationVector can only be called once\");\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new errors_js_1.JWEInvalid(\"either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()\");\n        }\n        if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new errors_js_1.JWEInvalid(\"JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint\");\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader\n        };\n        (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== \"DEF\") {\n                throw new errors_js_1.JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== \"string\" || !alg) {\n            throw new errors_js_1.JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== \"string\" || !enc) {\n            throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === \"dir\") {\n            if (this._cek) {\n                throw new TypeError(\"setContentEncryptionKey cannot be called when using Direct Encryption\");\n            }\n        } else if (alg === \"ECDH-ES\") {\n            if (this._cek) {\n                throw new TypeError(\"setContentEncryptionKey cannot be called when using Direct Key Agreement\");\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await (0, encrypt_key_management_js_1.default)(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && exports.unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    } else {\n                        this._unprotectedHeader = {\n                            ...this._unprotectedHeader,\n                            ...parameters\n                        };\n                    }\n                } else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    } else {\n                        this._protectedHeader = {\n                            ...this._protectedHeader,\n                            ...parameters\n                        };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = (0, iv_js_1.default)(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(JSON.stringify(this._protectedHeader)));\n        } else {\n            protectedHeader = buffer_utils_js_1.encoder.encode(\"\");\n        }\n        if (this._aad) {\n            aadMember = (0, base64url_js_1.encode)(this._aad);\n            additionalData = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode(\".\"), buffer_utils_js_1.encoder.encode(aadMember));\n        } else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === \"DEF\") {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || zlib_js_1.deflate)(this._plaintext);\n            ({ ciphertext, tag } = await (0, encrypt_js_1.default)(enc, deflated, cek, this._iv, additionalData));\n        } else {\n            ;\n            ({ ciphertext, tag } = await (0, encrypt_js_1.default)(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: (0, base64url_js_1.encode)(ciphertext),\n            iv: (0, base64url_js_1.encode)(this._iv),\n            tag: (0, base64url_js_1.encode)(tag)\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = (0, base64url_js_1.encode)(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = buffer_utils_js_1.decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\nexports.FlattenedEncrypt = FlattenedEncrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwe/general/decrypt.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwe/general/decrypt.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generalDecrypt = void 0;\nconst decrypt_js_1 = __webpack_require__(/*! ../flattened/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/decrypt.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nasync function generalDecrypt(jwe, key, options) {\n    if (!(0, is_object_js_1.default)(jwe)) {\n        throw new errors_js_1.JWEInvalid(\"General JWE must be an object\");\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(is_object_js_1.default)) {\n        throw new errors_js_1.JWEInvalid(\"JWE Recipients missing or incorrect type\");\n    }\n    if (!jwe.recipients.length) {\n        throw new errors_js_1.JWEInvalid(\"JWE Recipients has no members\");\n    }\n    for (const recipient of jwe.recipients){\n        try {\n            return await (0, decrypt_js_1.flattenedDecrypt)({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected\n            }, key, options);\n        } catch  {}\n    }\n    throw new errors_js_1.JWEDecryptionFailed();\n}\nexports.generalDecrypt = generalDecrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ZS9nZW5lcmFsL2RlY3J5cHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQkUsR0FBRyxLQUFLO0FBQzlCLE1BQU1DLGVBQWVDLG1CQUFPQSxDQUFDLHVHQUF5QjtBQUN0RCxNQUFNQyxjQUFjRCxtQkFBT0EsQ0FBQywwRkFBc0I7QUFDbEQsTUFBTUUsaUJBQWlCRixtQkFBT0EsQ0FBQyw4RkFBd0I7QUFDdkQsZUFBZUYsZUFBZUssR0FBRyxFQUFFQyxHQUFHLEVBQUVDLE9BQU87SUFDM0MsSUFBSSxDQUFDLENBQUMsR0FBR0gsZUFBZUksT0FBTSxFQUFHSCxNQUFNO1FBQ25DLE1BQU0sSUFBSUYsWUFBWU0sV0FBVztJQUNyQztJQUNBLElBQUksQ0FBQ0MsTUFBTUMsUUFBUU4sSUFBSU8sZUFBZSxDQUFDUCxJQUFJTyxXQUFXQyxNQUFNVCxlQUFlSSxVQUFVO1FBQ2pGLE1BQU0sSUFBSUwsWUFBWU0sV0FBVztJQUNyQztJQUNBLElBQUksQ0FBQ0osSUFBSU8sV0FBV0UsUUFBUTtRQUN4QixNQUFNLElBQUlYLFlBQVlNLFdBQVc7SUFDckM7SUFDQSxLQUFLLE1BQU1NLGFBQWFWLElBQUlPLFdBQVk7UUFDcEMsSUFBSTtZQUNBLE9BQU8sTUFBTSxDQUFDLEdBQUdYLGFBQWFlLGdCQUFlLEVBQUc7Z0JBQzVDQyxLQUFLWixJQUFJWTtnQkFDVEMsWUFBWWIsSUFBSWE7Z0JBQ2hCQyxlQUFlSixVQUFVSTtnQkFDekJDLFFBQVFMLFVBQVVLO2dCQUNsQkMsSUFBSWhCLElBQUlnQjtnQkFDUkMsV0FBV2pCLElBQUlpQjtnQkFDZkMsS0FBS2xCLElBQUlrQjtnQkFDVEMsYUFBYW5CLElBQUltQjtZQUNyQixHQUFHbEIsS0FBS0M7UUFDWixFQUNBLE9BQU0sQ0FDTjtJQUNKO0lBQ0EsTUFBTSxJQUFJSixZQUFZc0I7QUFDMUI7QUFDQTNCLHNCQUFzQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd2UvZ2VuZXJhbC9kZWNyeXB0LmpzPzc0ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdlbmVyYWxEZWNyeXB0ID0gdm9pZCAwO1xuY29uc3QgZGVjcnlwdF9qc18xID0gcmVxdWlyZShcIi4uL2ZsYXR0ZW5lZC9kZWNyeXB0LmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBpc19vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWIvaXNfb2JqZWN0LmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhbERlY3J5cHQoandlLCBrZXksIG9wdGlvbnMpIHtcbiAgICBpZiAoISgwLCBpc19vYmplY3RfanNfMS5kZWZhdWx0KShqd2UpKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VJbnZhbGlkKCdHZW5lcmFsIEpXRSBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICAgIH1cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoandlLnJlY2lwaWVudHMpIHx8ICFqd2UucmVjaXBpZW50cy5ldmVyeShpc19vYmplY3RfanNfMS5kZWZhdWx0KSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZCgnSldFIFJlY2lwaWVudHMgbWlzc2luZyBvciBpbmNvcnJlY3QgdHlwZScpO1xuICAgIH1cbiAgICBpZiAoIWp3ZS5yZWNpcGllbnRzLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZCgnSldFIFJlY2lwaWVudHMgaGFzIG5vIG1lbWJlcnMnKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCByZWNpcGllbnQgb2YgandlLnJlY2lwaWVudHMpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCAoMCwgZGVjcnlwdF9qc18xLmZsYXR0ZW5lZERlY3J5cHQpKHtcbiAgICAgICAgICAgICAgICBhYWQ6IGp3ZS5hYWQsXG4gICAgICAgICAgICAgICAgY2lwaGVydGV4dDogandlLmNpcGhlcnRleHQsXG4gICAgICAgICAgICAgICAgZW5jcnlwdGVkX2tleTogcmVjaXBpZW50LmVuY3J5cHRlZF9rZXksXG4gICAgICAgICAgICAgICAgaGVhZGVyOiByZWNpcGllbnQuaGVhZGVyLFxuICAgICAgICAgICAgICAgIGl2OiBqd2UuaXYsXG4gICAgICAgICAgICAgICAgcHJvdGVjdGVkOiBqd2UucHJvdGVjdGVkLFxuICAgICAgICAgICAgICAgIHRhZzogandlLnRhZyxcbiAgICAgICAgICAgICAgICB1bnByb3RlY3RlZDogandlLnVucHJvdGVjdGVkLFxuICAgICAgICAgICAgfSwga2V5LCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXRURlY3J5cHRpb25GYWlsZWQoKTtcbn1cbmV4cG9ydHMuZ2VuZXJhbERlY3J5cHQgPSBnZW5lcmFsRGVjcnlwdDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdlbmVyYWxEZWNyeXB0IiwiZGVjcnlwdF9qc18xIiwicmVxdWlyZSIsImVycm9yc19qc18xIiwiaXNfb2JqZWN0X2pzXzEiLCJqd2UiLCJrZXkiLCJvcHRpb25zIiwiZGVmYXVsdCIsIkpXRUludmFsaWQiLCJBcnJheSIsImlzQXJyYXkiLCJyZWNpcGllbnRzIiwiZXZlcnkiLCJsZW5ndGgiLCJyZWNpcGllbnQiLCJmbGF0dGVuZWREZWNyeXB0IiwiYWFkIiwiY2lwaGVydGV4dCIsImVuY3J5cHRlZF9rZXkiLCJoZWFkZXIiLCJpdiIsInByb3RlY3RlZCIsInRhZyIsInVucHJvdGVjdGVkIiwiSldFRGVjcnlwdGlvbkZhaWxlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwe/general/decrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwe/general/encrypt.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwe/general/encrypt.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GeneralEncrypt = void 0;\nconst encrypt_js_1 = __webpack_require__(/*! ../flattened/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/flattened/encrypt.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst cek_js_1 = __webpack_require__(/*! ../../lib/cek.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/cek.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst encrypt_key_management_js_1 = __webpack_require__(/*! ../../lib/encrypt_key_management.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nclass IndividualRecipient {\n    constructor(enc, key, options){\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError(\"setUnprotectedHeader can only be called once\");\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nclass GeneralEncrypt {\n    constructor(plaintext){\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, {\n            crit: options === null || options === void 0 ? void 0 : options.crit\n        });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError(\"setSharedUnprotectedHeader can only be called once\");\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt(options) {\n        var _a, _b, _c;\n        if (!this._recipients.length) {\n            throw new errors_js_1.JWEInvalid(\"at least one recipient must be added\");\n        }\n        options = {\n            deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw\n        };\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new encrypt_js_1.FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).encrypt(recipient.key, {\n                ...recipient.options,\n                ...options\n            });\n            let jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [\n                    {}\n                ],\n                tag: flattened.tag\n            };\n            if (flattened.aad) jwe.aad = flattened.aad;\n            if (flattened.protected) jwe.protected = flattened.protected;\n            if (flattened.unprotected) jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key) jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header) jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for(let i = 0; i < this._recipients.length; i++){\n            const recipient = this._recipients[i];\n            if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new errors_js_1.JWEInvalid(\"JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint\");\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== \"string\" || !alg) {\n                throw new errors_js_1.JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === \"dir\" || alg === \"ECDH-ES\") {\n                throw new errors_js_1.JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== \"string\" || !joseHeader.enc) {\n                throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            } else if (enc !== joseHeader.enc) {\n                throw new errors_js_1.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            (0, validate_crit_js_1.default)(errors_js_1.JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                if (!this._protectedHeader || !this._protectedHeader.zip) {\n                    throw new errors_js_1.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n                }\n            }\n        }\n        const cek = (0, cek_js_1.default)(enc);\n        let jwe = {\n            ciphertext: \"\",\n            iv: \"\",\n            recipients: [],\n            tag: \"\"\n        };\n        for(let i = 0; i < this._recipients.length; i++){\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader\n            };\n            const p2c = joseHeader.alg.startsWith(\"PBES2\") ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new encrypt_js_1.FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setContentEncryptionKey(cek).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).setKeyManagementParameters({\n                    p2c\n                }).encrypt(recipient.key, {\n                    ...recipient.options,\n                    ...options,\n                    [encrypt_js_1.unprotected]: true\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad) jwe.aad = flattened.aad;\n                if (flattened.protected) jwe.protected = flattened.protected;\n                if (flattened.unprotected) jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header) target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await (0, encrypt_key_management_js_1.default)(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) || ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) || ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, {\n                p2c\n            });\n            target.encrypted_key = (0, base64url_js_1.encode)(encryptedKey);\n            if (recipient.unprotectedHeader || parameters) target.header = {\n                ...recipient.unprotectedHeader,\n                ...parameters\n            };\n        }\n        return jwe;\n    }\n}\nexports.GeneralEncrypt = GeneralEncrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ZS9nZW5lcmFsL2VuY3J5cHQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQkUsR0FBRyxLQUFLO0FBQzlCLE1BQU1DLGVBQWVDLG1CQUFPQSxDQUFDLHVHQUF5QjtBQUN0RCxNQUFNQyxjQUFjRCxtQkFBT0EsQ0FBQywwRkFBc0I7QUFDbEQsTUFBTUUsV0FBV0YsbUJBQU9BLENBQUMsa0ZBQWtCO0FBQzNDLE1BQU1HLG1CQUFtQkgsbUJBQU9BLENBQUMsa0dBQTBCO0FBQzNELE1BQU1JLDhCQUE4QkosbUJBQU9BLENBQUMsd0hBQXFDO0FBQ2pGLE1BQU1LLGlCQUFpQkwsbUJBQU9BLENBQUMsc0dBQTRCO0FBQzNELE1BQU1NLHFCQUFxQk4sbUJBQU9BLENBQUMsc0dBQTRCO0FBQy9ELE1BQU1PO0lBQ0ZDLFlBQVlDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPLENBQUU7UUFDM0IsSUFBSSxDQUFDQyxTQUFTSDtRQUNkLElBQUksQ0FBQ0MsTUFBTUE7UUFDWCxJQUFJLENBQUNDLFVBQVVBO0lBQ25CO0lBQ0FFLHFCQUFxQkMsaUJBQWlCLEVBQUU7UUFDcEMsSUFBSSxJQUFJLENBQUNBLG1CQUFtQjtZQUN4QixNQUFNLElBQUlDLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNELG9CQUFvQkE7UUFDekIsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsYUFBYSxHQUFHQyxJQUFJLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNMLE9BQU9JLGdCQUFnQkM7SUFDdkM7SUFDQUMsUUFBUSxHQUFHRCxJQUFJLEVBQUU7UUFDYixPQUFPLElBQUksQ0FBQ0wsT0FBT00sV0FBV0Q7SUFDbEM7SUFDQUUsT0FBTztRQUNILE9BQU8sSUFBSSxDQUFDUDtJQUNoQjtBQUNKO0FBQ0EsTUFBTWQ7SUFDRlUsWUFBWVksU0FBUyxDQUFFO1FBQ25CLElBQUksQ0FBQ0MsY0FBYyxFQUFFO1FBQ3JCLElBQUksQ0FBQ0MsYUFBYUY7SUFDdEI7SUFDQUosYUFBYU4sR0FBRyxFQUFFQyxPQUFPLEVBQUU7UUFDdkIsTUFBTVksWUFBWSxJQUFJaEIsb0JBQW9CLElBQUksRUFBRUcsS0FBSztZQUFFYyxNQUFNYixZQUFZLFFBQVFBLFlBQVksS0FBSyxJQUFJLEtBQUssSUFBSUEsUUFBUWE7UUFBSztRQUM1SCxJQUFJLENBQUNILFlBQVlJLEtBQUtGO1FBQ3RCLE9BQU9BO0lBQ1g7SUFDQUcsbUJBQW1CQyxlQUFlLEVBQUU7UUFDaEMsSUFBSSxJQUFJLENBQUNDLGtCQUFrQjtZQUN2QixNQUFNLElBQUliLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNhLG1CQUFtQkQ7UUFDeEIsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsMkJBQTJCQyx1QkFBdUIsRUFBRTtRQUNoRCxJQUFJLElBQUksQ0FBQ0Msb0JBQW9CO1lBQ3pCLE1BQU0sSUFBSWhCLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNnQixxQkFBcUJEO1FBQzFCLE9BQU8sSUFBSTtJQUNmO0lBQ0FFLCtCQUErQkMsR0FBRyxFQUFFO1FBQ2hDLElBQUksQ0FBQ0MsT0FBT0Q7UUFDWixPQUFPLElBQUk7SUFDZjtJQUNBLE1BQU1mLFFBQVFQLE9BQU8sRUFBRTtRQUNuQixJQUFJd0IsSUFBSUMsSUFBSUM7UUFDWixJQUFJLENBQUMsSUFBSSxDQUFDaEIsWUFBWWlCLFFBQVE7WUFDMUIsTUFBTSxJQUFJckMsWUFBWXNDLFdBQVc7UUFDckM7UUFDQTVCLFVBQVU7WUFBRTZCLFlBQVk3QixZQUFZLFFBQVFBLFlBQVksS0FBSyxJQUFJLEtBQUssSUFBSUEsUUFBUTZCO1FBQVc7UUFDN0YsSUFBSSxJQUFJLENBQUNuQixZQUFZaUIsV0FBVyxHQUFHO1lBQy9CLE1BQU0sQ0FBQ2YsVUFBVSxHQUFHLElBQUksQ0FBQ0Y7WUFDekIsTUFBTW9CLFlBQVksTUFBTSxJQUFJMUMsYUFBYTJDLGlCQUFpQixJQUFJLENBQUNwQixZQUMxRFUsK0JBQStCLElBQUksQ0FBQ0UsTUFDcENSLG1CQUFtQixJQUFJLENBQUNFLGtCQUN4QkMsMkJBQTJCLElBQUksQ0FBQ0Usb0JBQ2hDbEIscUJBQXFCVSxVQUFVVCxtQkFDL0JJLFFBQVFLLFVBQVViLEtBQUs7Z0JBQUUsR0FBR2EsVUFBVVosT0FBTztnQkFBRSxHQUFHQSxPQUFPO1lBQUM7WUFDL0QsSUFBSWdDLE1BQU07Z0JBQ05DLFlBQVlILFVBQVVHO2dCQUN0QkMsSUFBSUosVUFBVUk7Z0JBQ2RDLFlBQVk7b0JBQUMsQ0FBQztpQkFBRTtnQkFDaEJDLEtBQUtOLFVBQVVNO1lBQ25CO1lBQ0EsSUFBSU4sVUFBVVIsS0FDVlUsSUFBSVYsTUFBTVEsVUFBVVI7WUFDeEIsSUFBSVEsVUFBVU8sV0FDVkwsSUFBSUssWUFBWVAsVUFBVU87WUFDOUIsSUFBSVAsVUFBVVEsYUFDVk4sSUFBSU0sY0FBY1IsVUFBVVE7WUFDaEMsSUFBSVIsVUFBVVMsZUFDVlAsSUFBSUcsVUFBVSxDQUFDLEVBQUUsQ0FBQ0ksZ0JBQWdCVCxVQUFVUztZQUNoRCxJQUFJVCxVQUFVVSxRQUNWUixJQUFJRyxVQUFVLENBQUMsRUFBRSxDQUFDSyxTQUFTVixVQUFVVTtZQUN6QyxPQUFPUjtRQUNYO1FBQ0EsSUFBSWxDO1FBQ0osSUFBSyxJQUFJMkMsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQy9CLFlBQVlpQixRQUFRYyxJQUFLO1lBQzlDLE1BQU03QixZQUFZLElBQUksQ0FBQ0YsV0FBVyxDQUFDK0IsRUFBRTtZQUNyQyxJQUFJLENBQUMsQ0FBQyxHQUFHakQsaUJBQWlCa0QsT0FBTSxFQUFHLElBQUksQ0FBQ3pCLGtCQUFrQixJQUFJLENBQUNHLG9CQUFvQlIsVUFBVVQsb0JBQW9CO2dCQUM3RyxNQUFNLElBQUliLFlBQVlzQyxXQUFXO1lBQ3JDO1lBQ0EsTUFBTWUsYUFBYTtnQkFDZixHQUFHLElBQUksQ0FBQzFCLGdCQUFnQjtnQkFDeEIsR0FBRyxJQUFJLENBQUNHLGtCQUFrQjtnQkFDMUIsR0FBR1IsVUFBVVQsaUJBQWlCO1lBQ2xDO1lBQ0EsTUFBTSxFQUFFeUMsR0FBRyxFQUFFLEdBQUdEO1lBQ2hCLElBQUksT0FBT0MsUUFBUSxZQUFZLENBQUNBLEtBQUs7Z0JBQ2pDLE1BQU0sSUFBSXRELFlBQVlzQyxXQUFXO1lBQ3JDO1lBQ0EsSUFBSWdCLFFBQVEsU0FBU0EsUUFBUSxXQUFXO2dCQUNwQyxNQUFNLElBQUl0RCxZQUFZc0MsV0FBVztZQUNyQztZQUNBLElBQUksT0FBT2UsV0FBVzdDLFFBQVEsWUFBWSxDQUFDNkMsV0FBVzdDLEtBQUs7Z0JBQ3ZELE1BQU0sSUFBSVIsWUFBWXNDLFdBQVc7WUFDckM7WUFDQSxJQUFJLENBQUM5QixLQUFLO2dCQUNOQSxNQUFNNkMsV0FBVzdDO1lBQ3JCLE9BQ0ssSUFBSUEsUUFBUTZDLFdBQVc3QyxLQUFLO2dCQUM3QixNQUFNLElBQUlSLFlBQVlzQyxXQUFXO1lBQ3JDO1lBQ0MsSUFBR2pDLG1CQUFtQitDLE9BQU0sRUFBR3BELFlBQVlzQyxZQUFZLElBQUlpQixPQUFPakMsVUFBVVosUUFBUWEsTUFBTSxJQUFJLENBQUNJLGtCQUFrQjBCO1lBQ2xILElBQUlBLFdBQVdHLFFBQVFDLFdBQVc7Z0JBQzlCLElBQUksQ0FBQyxJQUFJLENBQUM5QixvQkFBb0IsQ0FBQyxJQUFJLENBQUNBLGlCQUFpQjZCLEtBQUs7b0JBQ3RELE1BQU0sSUFBSXhELFlBQVlzQyxXQUFXO2dCQUNyQztZQUNKO1FBQ0o7UUFDQSxNQUFNb0IsTUFBTSxDQUFDLEdBQUd6RCxTQUFTbUQsT0FBTSxFQUFHNUM7UUFDbEMsSUFBSWtDLE1BQU07WUFDTkMsWUFBWTtZQUNaQyxJQUFJO1lBQ0pDLFlBQVksRUFBRTtZQUNkQyxLQUFLO1FBQ1Q7UUFDQSxJQUFLLElBQUlLLElBQUksR0FBR0EsSUFBSSxJQUFJLENBQUMvQixZQUFZaUIsUUFBUWMsSUFBSztZQUM5QyxNQUFNN0IsWUFBWSxJQUFJLENBQUNGLFdBQVcsQ0FBQytCLEVBQUU7WUFDckMsTUFBTVEsU0FBUyxDQUFDO1lBQ2hCakIsSUFBSUcsV0FBV3JCLEtBQUttQztZQUNwQixNQUFNTixhQUFhO2dCQUNmLEdBQUcsSUFBSSxDQUFDMUIsZ0JBQWdCO2dCQUN4QixHQUFHLElBQUksQ0FBQ0csa0JBQWtCO2dCQUMxQixHQUFHUixVQUFVVCxpQkFBaUI7WUFDbEM7WUFDQSxNQUFNK0MsTUFBTVAsV0FBV0MsSUFBSU8sV0FBVyxXQUFXLE9BQU9WLElBQUlNO1lBQzVELElBQUlOLE1BQU0sR0FBRztnQkFDVCxNQUFNWCxZQUFZLE1BQU0sSUFBSTFDLGFBQWEyQyxpQkFBaUIsSUFBSSxDQUFDcEIsWUFDMURVLCtCQUErQixJQUFJLENBQUNFLE1BQ3BDNkIsd0JBQXdCSixLQUN4QmpDLG1CQUFtQixJQUFJLENBQUNFLGtCQUN4QkMsMkJBQTJCLElBQUksQ0FBQ0Usb0JBQ2hDbEIscUJBQXFCVSxVQUFVVCxtQkFDL0JrRCwyQkFBMkI7b0JBQUVIO2dCQUFJLEdBQ2pDM0MsUUFBUUssVUFBVWIsS0FBSztvQkFDeEIsR0FBR2EsVUFBVVosT0FBTztvQkFDcEIsR0FBR0EsT0FBTztvQkFDVixDQUFDWixhQUFha0QsWUFBWSxFQUFFO2dCQUNoQztnQkFDQU4sSUFBSUMsYUFBYUgsVUFBVUc7Z0JBQzNCRCxJQUFJRSxLQUFLSixVQUFVSTtnQkFDbkJGLElBQUlJLE1BQU1OLFVBQVVNO2dCQUNwQixJQUFJTixVQUFVUixLQUNWVSxJQUFJVixNQUFNUSxVQUFVUjtnQkFDeEIsSUFBSVEsVUFBVU8sV0FDVkwsSUFBSUssWUFBWVAsVUFBVU87Z0JBQzlCLElBQUlQLFVBQVVRLGFBQ1ZOLElBQUlNLGNBQWNSLFVBQVVRO2dCQUNoQ1csT0FBT1YsZ0JBQWdCVCxVQUFVUztnQkFDakMsSUFBSVQsVUFBVVUsUUFDVlMsT0FBT1QsU0FBU1YsVUFBVVU7Z0JBQzlCO1lBQ0o7WUFDQSxNQUFNLEVBQUVjLFlBQVksRUFBRUMsVUFBVSxFQUFFLEdBQUcsTUFBTSxDQUFDLEdBQUc5RCw0QkFBNEJpRCxPQUFNLEVBQUcsQ0FBQyxDQUFDbEIsS0FBS1osVUFBVVQsaUJBQWdCLE1BQU8sUUFBUXFCLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR29CLEdBQUUsS0FDN0osRUFBQ25CLEtBQUssSUFBSSxDQUFDUixnQkFBZSxNQUFPLFFBQVFRLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR21CLEdBQUUsS0FDdkUsRUFBQ2xCLEtBQUssSUFBSSxDQUFDTixrQkFBaUIsTUFBTyxRQUFRTSxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdrQixHQUFFLEdBQUk5QyxLQUFLYyxVQUFVYixLQUFLaUQsS0FBSztnQkFBRUU7WUFBSTtZQUNqSEQsT0FBT1YsZ0JBQWdCLENBQUMsR0FBRzdDLGVBQWU4RCxNQUFLLEVBQUdGO1lBQ2xELElBQUkxQyxVQUFVVCxxQkFBcUJvRCxZQUMvQk4sT0FBT1QsU0FBUztnQkFBRSxHQUFHNUIsVUFBVVQsaUJBQWlCO2dCQUFFLEdBQUdvRCxVQUFVO1lBQUM7UUFDeEU7UUFDQSxPQUFPdkI7SUFDWDtBQUNKO0FBQ0EvQyxzQkFBc0JFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandlL2dlbmVyYWwvZW5jcnlwdC5qcz9iMDgwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HZW5lcmFsRW5jcnlwdCA9IHZvaWQgMDtcbmNvbnN0IGVuY3J5cHRfanNfMSA9IHJlcXVpcmUoXCIuLi9mbGF0dGVuZWQvZW5jcnlwdC5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uLy4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgY2VrX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vbGliL2Nlay5qc1wiKTtcbmNvbnN0IGlzX2Rpc2pvaW50X2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vbGliL2lzX2Rpc2pvaW50LmpzXCIpO1xuY29uc3QgZW5jcnlwdF9rZXlfbWFuYWdlbWVudF9qc18xID0gcmVxdWlyZShcIi4uLy4uL2xpYi9lbmNyeXB0X2tleV9tYW5hZ2VtZW50LmpzXCIpO1xuY29uc3QgYmFzZTY0dXJsX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vcnVudGltZS9iYXNlNjR1cmwuanNcIik7XG5jb25zdCB2YWxpZGF0ZV9jcml0X2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vbGliL3ZhbGlkYXRlX2NyaXQuanNcIik7XG5jbGFzcyBJbmRpdmlkdWFsUmVjaXBpZW50IHtcbiAgICBjb25zdHJ1Y3RvcihlbmMsIGtleSwgb3B0aW9ucykge1xuICAgICAgICB0aGlzLnBhcmVudCA9IGVuYztcbiAgICAgICAgdGhpcy5rZXkgPSBrZXk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgfVxuICAgIHNldFVucHJvdGVjdGVkSGVhZGVyKHVucHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgIGlmICh0aGlzLnVucHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdzZXRVbnByb3RlY3RlZEhlYWRlciBjYW4gb25seSBiZSBjYWxsZWQgb25jZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudW5wcm90ZWN0ZWRIZWFkZXIgPSB1bnByb3RlY3RlZEhlYWRlcjtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGFkZFJlY2lwaWVudCguLi5hcmdzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBhcmVudC5hZGRSZWNpcGllbnQoLi4uYXJncyk7XG4gICAgfVxuICAgIGVuY3J5cHQoLi4uYXJncykge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJlbnQuZW5jcnlwdCguLi5hcmdzKTtcbiAgICB9XG4gICAgZG9uZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyZW50O1xuICAgIH1cbn1cbmNsYXNzIEdlbmVyYWxFbmNyeXB0IHtcbiAgICBjb25zdHJ1Y3RvcihwbGFpbnRleHQpIHtcbiAgICAgICAgdGhpcy5fcmVjaXBpZW50cyA9IFtdO1xuICAgICAgICB0aGlzLl9wbGFpbnRleHQgPSBwbGFpbnRleHQ7XG4gICAgfVxuICAgIGFkZFJlY2lwaWVudChrZXksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgcmVjaXBpZW50ID0gbmV3IEluZGl2aWR1YWxSZWNpcGllbnQodGhpcywga2V5LCB7IGNyaXQ6IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5jcml0IH0pO1xuICAgICAgICB0aGlzLl9yZWNpcGllbnRzLnB1c2gocmVjaXBpZW50KTtcbiAgICAgICAgcmV0dXJuIHJlY2lwaWVudDtcbiAgICB9XG4gICAgc2V0UHJvdGVjdGVkSGVhZGVyKHByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICBpZiAodGhpcy5fcHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdzZXRQcm90ZWN0ZWRIZWFkZXIgY2FuIG9ubHkgYmUgY2FsbGVkIG9uY2UnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9wcm90ZWN0ZWRIZWFkZXIgPSBwcm90ZWN0ZWRIZWFkZXI7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzZXRTaGFyZWRVbnByb3RlY3RlZEhlYWRlcihzaGFyZWRVbnByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICBpZiAodGhpcy5fdW5wcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3NldFNoYXJlZFVucHJvdGVjdGVkSGVhZGVyIGNhbiBvbmx5IGJlIGNhbGxlZCBvbmNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fdW5wcm90ZWN0ZWRIZWFkZXIgPSBzaGFyZWRVbnByb3RlY3RlZEhlYWRlcjtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEFkZGl0aW9uYWxBdXRoZW50aWNhdGVkRGF0YShhYWQpIHtcbiAgICAgICAgdGhpcy5fYWFkID0gYWFkO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgYXN5bmMgZW5jcnlwdChvcHRpb25zKSB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jO1xuICAgICAgICBpZiAoIXRoaXMuX3JlY2lwaWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZCgnYXQgbGVhc3Qgb25lIHJlY2lwaWVudCBtdXN0IGJlIGFkZGVkJyk7XG4gICAgICAgIH1cbiAgICAgICAgb3B0aW9ucyA9IHsgZGVmbGF0ZVJhdzogb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmRlZmxhdGVSYXcgfTtcbiAgICAgICAgaWYgKHRoaXMuX3JlY2lwaWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICBjb25zdCBbcmVjaXBpZW50XSA9IHRoaXMuX3JlY2lwaWVudHM7XG4gICAgICAgICAgICBjb25zdCBmbGF0dGVuZWQgPSBhd2FpdCBuZXcgZW5jcnlwdF9qc18xLkZsYXR0ZW5lZEVuY3J5cHQodGhpcy5fcGxhaW50ZXh0KVxuICAgICAgICAgICAgICAgIC5zZXRBZGRpdGlvbmFsQXV0aGVudGljYXRlZERhdGEodGhpcy5fYWFkKVxuICAgICAgICAgICAgICAgIC5zZXRQcm90ZWN0ZWRIZWFkZXIodGhpcy5fcHJvdGVjdGVkSGVhZGVyKVxuICAgICAgICAgICAgICAgIC5zZXRTaGFyZWRVbnByb3RlY3RlZEhlYWRlcih0aGlzLl91bnByb3RlY3RlZEhlYWRlcilcbiAgICAgICAgICAgICAgICAuc2V0VW5wcm90ZWN0ZWRIZWFkZXIocmVjaXBpZW50LnVucHJvdGVjdGVkSGVhZGVyKVxuICAgICAgICAgICAgICAgIC5lbmNyeXB0KHJlY2lwaWVudC5rZXksIHsgLi4ucmVjaXBpZW50Lm9wdGlvbnMsIC4uLm9wdGlvbnMgfSk7XG4gICAgICAgICAgICBsZXQgandlID0ge1xuICAgICAgICAgICAgICAgIGNpcGhlcnRleHQ6IGZsYXR0ZW5lZC5jaXBoZXJ0ZXh0LFxuICAgICAgICAgICAgICAgIGl2OiBmbGF0dGVuZWQuaXYsXG4gICAgICAgICAgICAgICAgcmVjaXBpZW50czogW3t9XSxcbiAgICAgICAgICAgICAgICB0YWc6IGZsYXR0ZW5lZC50YWcsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKGZsYXR0ZW5lZC5hYWQpXG4gICAgICAgICAgICAgICAgandlLmFhZCA9IGZsYXR0ZW5lZC5hYWQ7XG4gICAgICAgICAgICBpZiAoZmxhdHRlbmVkLnByb3RlY3RlZClcbiAgICAgICAgICAgICAgICBqd2UucHJvdGVjdGVkID0gZmxhdHRlbmVkLnByb3RlY3RlZDtcbiAgICAgICAgICAgIGlmIChmbGF0dGVuZWQudW5wcm90ZWN0ZWQpXG4gICAgICAgICAgICAgICAgandlLnVucHJvdGVjdGVkID0gZmxhdHRlbmVkLnVucHJvdGVjdGVkO1xuICAgICAgICAgICAgaWYgKGZsYXR0ZW5lZC5lbmNyeXB0ZWRfa2V5KVxuICAgICAgICAgICAgICAgIGp3ZS5yZWNpcGllbnRzWzBdLmVuY3J5cHRlZF9rZXkgPSBmbGF0dGVuZWQuZW5jcnlwdGVkX2tleTtcbiAgICAgICAgICAgIGlmIChmbGF0dGVuZWQuaGVhZGVyKVxuICAgICAgICAgICAgICAgIGp3ZS5yZWNpcGllbnRzWzBdLmhlYWRlciA9IGZsYXR0ZW5lZC5oZWFkZXI7XG4gICAgICAgICAgICByZXR1cm4gandlO1xuICAgICAgICB9XG4gICAgICAgIGxldCBlbmM7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fcmVjaXBpZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgcmVjaXBpZW50ID0gdGhpcy5fcmVjaXBpZW50c1tpXTtcbiAgICAgICAgICAgIGlmICghKDAsIGlzX2Rpc2pvaW50X2pzXzEuZGVmYXVsdCkodGhpcy5fcHJvdGVjdGVkSGVhZGVyLCB0aGlzLl91bnByb3RlY3RlZEhlYWRlciwgcmVjaXBpZW50LnVucHJvdGVjdGVkSGVhZGVyKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VJbnZhbGlkKCdKV0UgUHJvdGVjdGVkLCBKV0UgU2hhcmVkIFVucHJvdGVjdGVkIGFuZCBKV0UgUGVyLVJlY2lwaWVudCBIZWFkZXIgUGFyYW1ldGVyIG5hbWVzIG11c3QgYmUgZGlzam9pbnQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGpvc2VIZWFkZXIgPSB7XG4gICAgICAgICAgICAgICAgLi4udGhpcy5fcHJvdGVjdGVkSGVhZGVyLFxuICAgICAgICAgICAgICAgIC4uLnRoaXMuX3VucHJvdGVjdGVkSGVhZGVyLFxuICAgICAgICAgICAgICAgIC4uLnJlY2lwaWVudC51bnByb3RlY3RlZEhlYWRlcixcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCB7IGFsZyB9ID0gam9zZUhlYWRlcjtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgYWxnICE9PSAnc3RyaW5nJyB8fCAhYWxnKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXRUludmFsaWQoJ0pXRSBcImFsZ1wiIChBbGdvcml0aG0pIEhlYWRlciBQYXJhbWV0ZXIgbWlzc2luZyBvciBpbnZhbGlkJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYWxnID09PSAnZGlyJyB8fCBhbGcgPT09ICdFQ0RILUVTJykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VJbnZhbGlkKCdcImRpclwiIGFuZCBcIkVDREgtRVNcIiBhbGcgbWF5IG9ubHkgYmUgdXNlZCB3aXRoIGEgc2luZ2xlIHJlY2lwaWVudCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiBqb3NlSGVhZGVyLmVuYyAhPT0gJ3N0cmluZycgfHwgIWpvc2VIZWFkZXIuZW5jKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXRUludmFsaWQoJ0pXRSBcImVuY1wiIChFbmNyeXB0aW9uIEFsZ29yaXRobSkgSGVhZGVyIFBhcmFtZXRlciBtaXNzaW5nIG9yIGludmFsaWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICghZW5jKSB7XG4gICAgICAgICAgICAgICAgZW5jID0gam9zZUhlYWRlci5lbmM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChlbmMgIT09IGpvc2VIZWFkZXIuZW5jKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXRUludmFsaWQoJ0pXRSBcImVuY1wiIChFbmNyeXB0aW9uIEFsZ29yaXRobSkgSGVhZGVyIFBhcmFtZXRlciBtdXN0IGJlIHRoZSBzYW1lIGZvciBhbGwgcmVjaXBpZW50cycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgKDAsIHZhbGlkYXRlX2NyaXRfanNfMS5kZWZhdWx0KShlcnJvcnNfanNfMS5KV0VJbnZhbGlkLCBuZXcgTWFwKCksIHJlY2lwaWVudC5vcHRpb25zLmNyaXQsIHRoaXMuX3Byb3RlY3RlZEhlYWRlciwgam9zZUhlYWRlcik7XG4gICAgICAgICAgICBpZiAoam9zZUhlYWRlci56aXAgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5fcHJvdGVjdGVkSGVhZGVyIHx8ICF0aGlzLl9wcm90ZWN0ZWRIZWFkZXIuemlwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VJbnZhbGlkKCdKV0UgXCJ6aXBcIiAoQ29tcHJlc3Npb24gQWxnb3JpdGhtKSBIZWFkZXIgTVVTVCBiZSBpbnRlZ3JpdHkgcHJvdGVjdGVkJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNlayA9ICgwLCBjZWtfanNfMS5kZWZhdWx0KShlbmMpO1xuICAgICAgICBsZXQgandlID0ge1xuICAgICAgICAgICAgY2lwaGVydGV4dDogJycsXG4gICAgICAgICAgICBpdjogJycsXG4gICAgICAgICAgICByZWNpcGllbnRzOiBbXSxcbiAgICAgICAgICAgIHRhZzogJycsXG4gICAgICAgIH07XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fcmVjaXBpZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgcmVjaXBpZW50ID0gdGhpcy5fcmVjaXBpZW50c1tpXTtcbiAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IHt9O1xuICAgICAgICAgICAgandlLnJlY2lwaWVudHMucHVzaCh0YXJnZXQpO1xuICAgICAgICAgICAgY29uc3Qgam9zZUhlYWRlciA9IHtcbiAgICAgICAgICAgICAgICAuLi50aGlzLl9wcm90ZWN0ZWRIZWFkZXIsXG4gICAgICAgICAgICAgICAgLi4udGhpcy5fdW5wcm90ZWN0ZWRIZWFkZXIsXG4gICAgICAgICAgICAgICAgLi4ucmVjaXBpZW50LnVucHJvdGVjdGVkSGVhZGVyLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IHAyYyA9IGpvc2VIZWFkZXIuYWxnLnN0YXJ0c1dpdGgoJ1BCRVMyJykgPyAyMDQ4ICsgaSA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIGlmIChpID09PSAwKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmxhdHRlbmVkID0gYXdhaXQgbmV3IGVuY3J5cHRfanNfMS5GbGF0dGVuZWRFbmNyeXB0KHRoaXMuX3BsYWludGV4dClcbiAgICAgICAgICAgICAgICAgICAgLnNldEFkZGl0aW9uYWxBdXRoZW50aWNhdGVkRGF0YSh0aGlzLl9hYWQpXG4gICAgICAgICAgICAgICAgICAgIC5zZXRDb250ZW50RW5jcnlwdGlvbktleShjZWspXG4gICAgICAgICAgICAgICAgICAgIC5zZXRQcm90ZWN0ZWRIZWFkZXIodGhpcy5fcHJvdGVjdGVkSGVhZGVyKVxuICAgICAgICAgICAgICAgICAgICAuc2V0U2hhcmVkVW5wcm90ZWN0ZWRIZWFkZXIodGhpcy5fdW5wcm90ZWN0ZWRIZWFkZXIpXG4gICAgICAgICAgICAgICAgICAgIC5zZXRVbnByb3RlY3RlZEhlYWRlcihyZWNpcGllbnQudW5wcm90ZWN0ZWRIZWFkZXIpXG4gICAgICAgICAgICAgICAgICAgIC5zZXRLZXlNYW5hZ2VtZW50UGFyYW1ldGVycyh7IHAyYyB9KVxuICAgICAgICAgICAgICAgICAgICAuZW5jcnlwdChyZWNpcGllbnQua2V5LCB7XG4gICAgICAgICAgICAgICAgICAgIC4uLnJlY2lwaWVudC5vcHRpb25zLFxuICAgICAgICAgICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgICAgICAgICAgICBbZW5jcnlwdF9qc18xLnVucHJvdGVjdGVkXTogdHJ1ZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBqd2UuY2lwaGVydGV4dCA9IGZsYXR0ZW5lZC5jaXBoZXJ0ZXh0O1xuICAgICAgICAgICAgICAgIGp3ZS5pdiA9IGZsYXR0ZW5lZC5pdjtcbiAgICAgICAgICAgICAgICBqd2UudGFnID0gZmxhdHRlbmVkLnRhZztcbiAgICAgICAgICAgICAgICBpZiAoZmxhdHRlbmVkLmFhZClcbiAgICAgICAgICAgICAgICAgICAgandlLmFhZCA9IGZsYXR0ZW5lZC5hYWQ7XG4gICAgICAgICAgICAgICAgaWYgKGZsYXR0ZW5lZC5wcm90ZWN0ZWQpXG4gICAgICAgICAgICAgICAgICAgIGp3ZS5wcm90ZWN0ZWQgPSBmbGF0dGVuZWQucHJvdGVjdGVkO1xuICAgICAgICAgICAgICAgIGlmIChmbGF0dGVuZWQudW5wcm90ZWN0ZWQpXG4gICAgICAgICAgICAgICAgICAgIGp3ZS51bnByb3RlY3RlZCA9IGZsYXR0ZW5lZC51bnByb3RlY3RlZDtcbiAgICAgICAgICAgICAgICB0YXJnZXQuZW5jcnlwdGVkX2tleSA9IGZsYXR0ZW5lZC5lbmNyeXB0ZWRfa2V5O1xuICAgICAgICAgICAgICAgIGlmIChmbGF0dGVuZWQuaGVhZGVyKVxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQuaGVhZGVyID0gZmxhdHRlbmVkLmhlYWRlcjtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHsgZW5jcnlwdGVkS2V5LCBwYXJhbWV0ZXJzIH0gPSBhd2FpdCAoMCwgZW5jcnlwdF9rZXlfbWFuYWdlbWVudF9qc18xLmRlZmF1bHQpKCgoX2EgPSByZWNpcGllbnQudW5wcm90ZWN0ZWRIZWFkZXIpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5hbGcpIHx8XG4gICAgICAgICAgICAgICAgKChfYiA9IHRoaXMuX3Byb3RlY3RlZEhlYWRlcikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmFsZykgfHxcbiAgICAgICAgICAgICAgICAoKF9jID0gdGhpcy5fdW5wcm90ZWN0ZWRIZWFkZXIpID09PSBudWxsIHx8IF9jID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYy5hbGcpLCBlbmMsIHJlY2lwaWVudC5rZXksIGNlaywgeyBwMmMgfSk7XG4gICAgICAgICAgICB0YXJnZXQuZW5jcnlwdGVkX2tleSA9ICgwLCBiYXNlNjR1cmxfanNfMS5lbmNvZGUpKGVuY3J5cHRlZEtleSk7XG4gICAgICAgICAgICBpZiAocmVjaXBpZW50LnVucHJvdGVjdGVkSGVhZGVyIHx8IHBhcmFtZXRlcnMpXG4gICAgICAgICAgICAgICAgdGFyZ2V0LmhlYWRlciA9IHsgLi4ucmVjaXBpZW50LnVucHJvdGVjdGVkSGVhZGVyLCAuLi5wYXJhbWV0ZXJzIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGp3ZTtcbiAgICB9XG59XG5leHBvcnRzLkdlbmVyYWxFbmNyeXB0ID0gR2VuZXJhbEVuY3J5cHQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJHZW5lcmFsRW5jcnlwdCIsImVuY3J5cHRfanNfMSIsInJlcXVpcmUiLCJlcnJvcnNfanNfMSIsImNla19qc18xIiwiaXNfZGlzam9pbnRfanNfMSIsImVuY3J5cHRfa2V5X21hbmFnZW1lbnRfanNfMSIsImJhc2U2NHVybF9qc18xIiwidmFsaWRhdGVfY3JpdF9qc18xIiwiSW5kaXZpZHVhbFJlY2lwaWVudCIsImNvbnN0cnVjdG9yIiwiZW5jIiwia2V5Iiwib3B0aW9ucyIsInBhcmVudCIsInNldFVucHJvdGVjdGVkSGVhZGVyIiwidW5wcm90ZWN0ZWRIZWFkZXIiLCJUeXBlRXJyb3IiLCJhZGRSZWNpcGllbnQiLCJhcmdzIiwiZW5jcnlwdCIsImRvbmUiLCJwbGFpbnRleHQiLCJfcmVjaXBpZW50cyIsIl9wbGFpbnRleHQiLCJyZWNpcGllbnQiLCJjcml0IiwicHVzaCIsInNldFByb3RlY3RlZEhlYWRlciIsInByb3RlY3RlZEhlYWRlciIsIl9wcm90ZWN0ZWRIZWFkZXIiLCJzZXRTaGFyZWRVbnByb3RlY3RlZEhlYWRlciIsInNoYXJlZFVucHJvdGVjdGVkSGVhZGVyIiwiX3VucHJvdGVjdGVkSGVhZGVyIiwic2V0QWRkaXRpb25hbEF1dGhlbnRpY2F0ZWREYXRhIiwiYWFkIiwiX2FhZCIsIl9hIiwiX2IiLCJfYyIsImxlbmd0aCIsIkpXRUludmFsaWQiLCJkZWZsYXRlUmF3IiwiZmxhdHRlbmVkIiwiRmxhdHRlbmVkRW5jcnlwdCIsImp3ZSIsImNpcGhlcnRleHQiLCJpdiIsInJlY2lwaWVudHMiLCJ0YWciLCJwcm90ZWN0ZWQiLCJ1bnByb3RlY3RlZCIsImVuY3J5cHRlZF9rZXkiLCJoZWFkZXIiLCJpIiwiZGVmYXVsdCIsImpvc2VIZWFkZXIiLCJhbGciLCJNYXAiLCJ6aXAiLCJ1bmRlZmluZWQiLCJjZWsiLCJ0YXJnZXQiLCJwMmMiLCJzdGFydHNXaXRoIiwic2V0Q29udGVudEVuY3J5cHRpb25LZXkiLCJzZXRLZXlNYW5hZ2VtZW50UGFyYW1ldGVycyIsImVuY3J5cHRlZEtleSIsInBhcmFtZXRlcnMiLCJlbmNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwe/general/encrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwk/embedded.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwk/embedded.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.EmbeddedJWK = void 0;\nconst import_js_1 = __webpack_require__(/*! ../key/import.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/import.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nasync function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token === null || token === void 0 ? void 0 : token.header\n    };\n    if (!(0, is_object_js_1.default)(joseHeader.jwk)) {\n        throw new errors_js_1.JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await (0, import_js_1.importJWK)({\n        ...joseHeader.jwk,\n        ext: true\n    }, joseHeader.alg, true);\n    if (key instanceof Uint8Array || key.type !== \"public\") {\n        throw new errors_js_1.JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\nexports.EmbeddedJWK = EmbeddedJWK;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ay9lbWJlZGRlZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsbUJBQW1CRSxHQUFHLEtBQUs7QUFDM0IsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMscUZBQWtCO0FBQzlDLE1BQU1DLGlCQUFpQkQsbUJBQU9BLENBQUMsMkZBQXFCO0FBQ3BELE1BQU1FLGNBQWNGLG1CQUFPQSxDQUFDLHVGQUFtQjtBQUMvQyxlQUFlRixZQUFZSyxlQUFlLEVBQUVDLEtBQUs7SUFDN0MsTUFBTUMsYUFBYTtRQUNmLEdBQUdGLGVBQWU7UUFDbEIsR0FBR0MsVUFBVSxRQUFRQSxVQUFVLEtBQUssSUFBSSxLQUFLLElBQUlBLE1BQU1FLE1BQU07SUFDakU7SUFDQSxJQUFJLENBQUMsQ0FBQyxHQUFHTCxlQUFlTSxPQUFNLEVBQUdGLFdBQVdHLE1BQU07UUFDOUMsTUFBTSxJQUFJTixZQUFZTyxXQUFXO0lBQ3JDO0lBQ0EsTUFBTUMsTUFBTSxNQUFNLENBQUMsR0FBR1gsWUFBWVksU0FBUSxFQUFHO1FBQUUsR0FBR04sV0FBV0csR0FBRztRQUFFSSxLQUFLO0lBQUssR0FBR1AsV0FBV1EsS0FBSztJQUMvRixJQUFJSCxlQUFlSSxjQUFjSixJQUFJSyxTQUFTLFVBQVU7UUFDcEQsTUFBTSxJQUFJYixZQUFZTyxXQUFXO0lBQ3JDO0lBQ0EsT0FBT0M7QUFDWDtBQUNBZCxtQkFBbUJFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandrL2VtYmVkZGVkLmpzPzA2YTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkVtYmVkZGVkSldLID0gdm9pZCAwO1xuY29uc3QgaW1wb3J0X2pzXzEgPSByZXF1aXJlKFwiLi4va2V5L2ltcG9ydC5qc1wiKTtcbmNvbnN0IGlzX29iamVjdF9qc18xID0gcmVxdWlyZShcIi4uL2xpYi9pc19vYmplY3QuanNcIik7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmFzeW5jIGZ1bmN0aW9uIEVtYmVkZGVkSldLKHByb3RlY3RlZEhlYWRlciwgdG9rZW4pIHtcbiAgICBjb25zdCBqb3NlSGVhZGVyID0ge1xuICAgICAgICAuLi5wcm90ZWN0ZWRIZWFkZXIsXG4gICAgICAgIC4uLnRva2VuID09PSBudWxsIHx8IHRva2VuID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0b2tlbi5oZWFkZXIsXG4gICAgfTtcbiAgICBpZiAoISgwLCBpc19vYmplY3RfanNfMS5kZWZhdWx0KShqb3NlSGVhZGVyLmp3aykpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXU0ludmFsaWQoJ1wiandrXCIgKEpTT04gV2ViIEtleSkgSGVhZGVyIFBhcmFtZXRlciBtdXN0IGJlIGEgSlNPTiBvYmplY3QnKTtcbiAgICB9XG4gICAgY29uc3Qga2V5ID0gYXdhaXQgKDAsIGltcG9ydF9qc18xLmltcG9ydEpXSykoeyAuLi5qb3NlSGVhZGVyLmp3aywgZXh0OiB0cnVlIH0sIGpvc2VIZWFkZXIuYWxnLCB0cnVlKTtcbiAgICBpZiAoa2V5IGluc3RhbmNlb2YgVWludDhBcnJheSB8fCBrZXkudHlwZSAhPT0gJ3B1YmxpYycpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXU0ludmFsaWQoJ1wiandrXCIgKEpTT04gV2ViIEtleSkgSGVhZGVyIFBhcmFtZXRlciBtdXN0IGJlIGEgcHVibGljIGtleScpO1xuICAgIH1cbiAgICByZXR1cm4ga2V5O1xufVxuZXhwb3J0cy5FbWJlZGRlZEpXSyA9IEVtYmVkZGVkSldLO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiRW1iZWRkZWRKV0siLCJpbXBvcnRfanNfMSIsInJlcXVpcmUiLCJpc19vYmplY3RfanNfMSIsImVycm9yc19qc18xIiwicHJvdGVjdGVkSGVhZGVyIiwidG9rZW4iLCJqb3NlSGVhZGVyIiwiaGVhZGVyIiwiZGVmYXVsdCIsImp3ayIsIkpXU0ludmFsaWQiLCJrZXkiLCJpbXBvcnRKV0siLCJleHQiLCJhbGciLCJVaW50OEFycmF5IiwidHlwZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwk/embedded.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwk/thumbprint.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwk/thumbprint.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.calculateJwkThumbprintUri = exports.calculateJwkThumbprint = void 0;\nconst digest_js_1 = __webpack_require__(/*! ../runtime/digest.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/digest.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst check = (value, description)=>{\n    if (typeof value !== \"string\" || !value) {\n        throw new errors_js_1.JWKInvalid(`${description} missing or invalid`);\n    }\n};\nasync function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!(0, is_object_js_1.default)(jwk)) {\n        throw new TypeError(\"JWK must be an object\");\n    }\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = \"sha256\";\n    if (digestAlgorithm !== \"sha256\" && digestAlgorithm !== \"sha384\" && digestAlgorithm !== \"sha512\") {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch(jwk.kty){\n        case \"EC\":\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = {\n                crv: jwk.crv,\n                kty: jwk.kty,\n                x: jwk.x,\n                y: jwk.y\n            };\n            break;\n        case \"OKP\":\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = {\n                crv: jwk.crv,\n                kty: jwk.kty,\n                x: jwk.x\n            };\n            break;\n        case \"RSA\":\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = {\n                e: jwk.e,\n                kty: jwk.kty,\n                n: jwk.n\n            };\n            break;\n        case \"oct\":\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = {\n                k: jwk.k,\n                kty: jwk.kty\n            };\n            break;\n        default:\n            throw new errors_js_1.JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = buffer_utils_js_1.encoder.encode(JSON.stringify(components));\n    return (0, base64url_js_1.encode)(await (0, digest_js_1.default)(digestAlgorithm, data));\n}\nexports.calculateJwkThumbprint = calculateJwkThumbprint;\nasync function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = \"sha256\";\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\nexports.calculateJwkThumbprintUri = calculateJwkThumbprintUri;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3ay90aHVtYnByaW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxpQ0FBaUNFLEdBQUdGLDhCQUE4QkcsR0FBRyxLQUFLO0FBQzFFLE1BQU1DLGNBQWNDLG1CQUFPQSxDQUFDLDZGQUFzQjtBQUNsRCxNQUFNQyxpQkFBaUJELG1CQUFPQSxDQUFDLG1HQUF5QjtBQUN4RCxNQUFNRSxjQUFjRixtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsTUFBTUcsb0JBQW9CSCxtQkFBT0EsQ0FBQyxpR0FBd0I7QUFDMUQsTUFBTUksaUJBQWlCSixtQkFBT0EsQ0FBQywyRkFBcUI7QUFDcEQsTUFBTUssUUFBUSxDQUFDVCxPQUFPVTtJQUNsQixJQUFJLE9BQU9WLFVBQVUsWUFBWSxDQUFDQSxPQUFPO1FBQ3JDLE1BQU0sSUFBSU0sWUFBWUssV0FBVyxDQUFDLEVBQUVELFlBQVksbUJBQW1CLENBQUM7SUFDeEU7QUFDSjtBQUNBLGVBQWVSLHVCQUF1QlUsR0FBRyxFQUFFQyxlQUFlO0lBQ3RELElBQUksQ0FBQyxDQUFDLEdBQUdMLGVBQWVNLE9BQU0sRUFBR0YsTUFBTTtRQUNuQyxNQUFNLElBQUlHLFVBQVU7SUFDeEI7SUFDQUYsb0JBQW9CLFFBQVFBLG9CQUFvQixLQUFLLElBQUlBLGtCQUFtQkEsa0JBQWtCO0lBQzlGLElBQUlBLG9CQUFvQixZQUNwQkEsb0JBQW9CLFlBQ3BCQSxvQkFBb0IsVUFBVTtRQUM5QixNQUFNLElBQUlFLFVBQVU7SUFDeEI7SUFDQSxJQUFJQztJQUNKLE9BQVFKLElBQUlLO1FBQ1IsS0FBSztZQUNEUixNQUFNRyxJQUFJTSxLQUFLO1lBQ2ZULE1BQU1HLElBQUlPLEdBQUc7WUFDYlYsTUFBTUcsSUFBSVEsR0FBRztZQUNiSixhQUFhO2dCQUFFRSxLQUFLTixJQUFJTTtnQkFBS0QsS0FBS0wsSUFBSUs7Z0JBQUtFLEdBQUdQLElBQUlPO2dCQUFHQyxHQUFHUixJQUFJUTtZQUFFO1lBQzlEO1FBQ0osS0FBSztZQUNEWCxNQUFNRyxJQUFJTSxLQUFLO1lBQ2ZULE1BQU1HLElBQUlPLEdBQUc7WUFDYkgsYUFBYTtnQkFBRUUsS0FBS04sSUFBSU07Z0JBQUtELEtBQUtMLElBQUlLO2dCQUFLRSxHQUFHUCxJQUFJTztZQUFFO1lBQ3BEO1FBQ0osS0FBSztZQUNEVixNQUFNRyxJQUFJUyxHQUFHO1lBQ2JaLE1BQU1HLElBQUlVLEdBQUc7WUFDYk4sYUFBYTtnQkFBRUssR0FBR1QsSUFBSVM7Z0JBQUdKLEtBQUtMLElBQUlLO2dCQUFLSyxHQUFHVixJQUFJVTtZQUFFO1lBQ2hEO1FBQ0osS0FBSztZQUNEYixNQUFNRyxJQUFJVyxHQUFHO1lBQ2JQLGFBQWE7Z0JBQUVPLEdBQUdYLElBQUlXO2dCQUFHTixLQUFLTCxJQUFJSztZQUFJO1lBQ3RDO1FBQ0o7WUFDSSxNQUFNLElBQUlYLFlBQVlrQixpQkFBaUI7SUFDL0M7SUFDQSxNQUFNQyxPQUFPbEIsa0JBQWtCbUIsUUFBUUMsT0FBT0MsS0FBS0MsVUFBVWI7SUFDN0QsT0FBTyxDQUFDLEdBQUdYLGVBQWVzQixNQUFLLEVBQUcsTUFBTSxDQUFDLEdBQUd4QixZQUFZVyxPQUFNLEVBQUdELGlCQUFpQlk7QUFDdEY7QUFDQTFCLDhCQUE4QkcsR0FBR0E7QUFDakMsZUFBZUQsMEJBQTBCVyxHQUFHLEVBQUVDLGVBQWU7SUFDekRBLG9CQUFvQixRQUFRQSxvQkFBb0IsS0FBSyxJQUFJQSxrQkFBbUJBLGtCQUFrQjtJQUM5RixNQUFNaUIsYUFBYSxNQUFNNUIsdUJBQXVCVSxLQUFLQztJQUNyRCxPQUFPLENBQUMseUNBQXlDLEVBQUVBLGdCQUFnQmtCLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRUQsV0FBVyxDQUFDO0FBQ2hHO0FBQ0EvQixpQ0FBaUNFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandrL3RodW1icHJpbnQuanM/ZTQ0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY2FsY3VsYXRlSndrVGh1bWJwcmludFVyaSA9IGV4cG9ydHMuY2FsY3VsYXRlSndrVGh1bWJwcmludCA9IHZvaWQgMDtcbmNvbnN0IGRpZ2VzdF9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvZGlnZXN0LmpzXCIpO1xuY29uc3QgYmFzZTY0dXJsX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9iYXNlNjR1cmwuanNcIik7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmNvbnN0IGJ1ZmZlcl91dGlsc19qc18xID0gcmVxdWlyZShcIi4uL2xpYi9idWZmZXJfdXRpbHMuanNcIik7XG5jb25zdCBpc19vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaXNfb2JqZWN0LmpzXCIpO1xuY29uc3QgY2hlY2sgPSAodmFsdWUsIGRlc2NyaXB0aW9uKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycgfHwgIXZhbHVlKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0tJbnZhbGlkKGAke2Rlc2NyaXB0aW9ufSBtaXNzaW5nIG9yIGludmFsaWRgKTtcbiAgICB9XG59O1xuYXN5bmMgZnVuY3Rpb24gY2FsY3VsYXRlSndrVGh1bWJwcmludChqd2ssIGRpZ2VzdEFsZ29yaXRobSkge1xuICAgIGlmICghKDAsIGlzX29iamVjdF9qc18xLmRlZmF1bHQpKGp3aykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSldLIG11c3QgYmUgYW4gb2JqZWN0Jyk7XG4gICAgfVxuICAgIGRpZ2VzdEFsZ29yaXRobSAhPT0gbnVsbCAmJiBkaWdlc3RBbGdvcml0aG0gIT09IHZvaWQgMCA/IGRpZ2VzdEFsZ29yaXRobSA6IChkaWdlc3RBbGdvcml0aG0gPSAnc2hhMjU2Jyk7XG4gICAgaWYgKGRpZ2VzdEFsZ29yaXRobSAhPT0gJ3NoYTI1NicgJiZcbiAgICAgICAgZGlnZXN0QWxnb3JpdGhtICE9PSAnc2hhMzg0JyAmJlxuICAgICAgICBkaWdlc3RBbGdvcml0aG0gIT09ICdzaGE1MTInKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2RpZ2VzdEFsZ29yaXRobSBtdXN0IG9uZSBvZiBcInNoYTI1NlwiLCBcInNoYTM4NFwiLCBvciBcInNoYTUxMlwiJyk7XG4gICAgfVxuICAgIGxldCBjb21wb25lbnRzO1xuICAgIHN3aXRjaCAoandrLmt0eSkge1xuICAgICAgICBjYXNlICdFQyc6XG4gICAgICAgICAgICBjaGVjayhqd2suY3J2LCAnXCJjcnZcIiAoQ3VydmUpIFBhcmFtZXRlcicpO1xuICAgICAgICAgICAgY2hlY2soandrLngsICdcInhcIiAoWCBDb29yZGluYXRlKSBQYXJhbWV0ZXInKTtcbiAgICAgICAgICAgIGNoZWNrKGp3ay55LCAnXCJ5XCIgKFkgQ29vcmRpbmF0ZSkgUGFyYW1ldGVyJyk7XG4gICAgICAgICAgICBjb21wb25lbnRzID0geyBjcnY6IGp3ay5jcnYsIGt0eTogandrLmt0eSwgeDogandrLngsIHk6IGp3ay55IH07XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnT0tQJzpcbiAgICAgICAgICAgIGNoZWNrKGp3ay5jcnYsICdcImNydlwiIChTdWJ0eXBlIG9mIEtleSBQYWlyKSBQYXJhbWV0ZXInKTtcbiAgICAgICAgICAgIGNoZWNrKGp3ay54LCAnXCJ4XCIgKFB1YmxpYyBLZXkpIFBhcmFtZXRlcicpO1xuICAgICAgICAgICAgY29tcG9uZW50cyA9IHsgY3J2OiBqd2suY3J2LCBrdHk6IGp3ay5rdHksIHg6IGp3ay54IH07XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnUlNBJzpcbiAgICAgICAgICAgIGNoZWNrKGp3ay5lLCAnXCJlXCIgKEV4cG9uZW50KSBQYXJhbWV0ZXInKTtcbiAgICAgICAgICAgIGNoZWNrKGp3ay5uLCAnXCJuXCIgKE1vZHVsdXMpIFBhcmFtZXRlcicpO1xuICAgICAgICAgICAgY29tcG9uZW50cyA9IHsgZTogandrLmUsIGt0eTogandrLmt0eSwgbjogandrLm4gfTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdvY3QnOlxuICAgICAgICAgICAgY2hlY2soandrLmssICdcImtcIiAoS2V5IFZhbHVlKSBQYXJhbWV0ZXInKTtcbiAgICAgICAgICAgIGNvbXBvbmVudHMgPSB7IGs6IGp3ay5rLCBrdHk6IGp3ay5rdHkgfTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VOb3RTdXBwb3J0ZWQoJ1wia3R5XCIgKEtleSBUeXBlKSBQYXJhbWV0ZXIgbWlzc2luZyBvciB1bnN1cHBvcnRlZCcpO1xuICAgIH1cbiAgICBjb25zdCBkYXRhID0gYnVmZmVyX3V0aWxzX2pzXzEuZW5jb2Rlci5lbmNvZGUoSlNPTi5zdHJpbmdpZnkoY29tcG9uZW50cykpO1xuICAgIHJldHVybiAoMCwgYmFzZTY0dXJsX2pzXzEuZW5jb2RlKShhd2FpdCAoMCwgZGlnZXN0X2pzXzEuZGVmYXVsdCkoZGlnZXN0QWxnb3JpdGhtLCBkYXRhKSk7XG59XG5leHBvcnRzLmNhbGN1bGF0ZUp3a1RodW1icHJpbnQgPSBjYWxjdWxhdGVKd2tUaHVtYnByaW50O1xuYXN5bmMgZnVuY3Rpb24gY2FsY3VsYXRlSndrVGh1bWJwcmludFVyaShqd2ssIGRpZ2VzdEFsZ29yaXRobSkge1xuICAgIGRpZ2VzdEFsZ29yaXRobSAhPT0gbnVsbCAmJiBkaWdlc3RBbGdvcml0aG0gIT09IHZvaWQgMCA/IGRpZ2VzdEFsZ29yaXRobSA6IChkaWdlc3RBbGdvcml0aG0gPSAnc2hhMjU2Jyk7XG4gICAgY29uc3QgdGh1bWJwcmludCA9IGF3YWl0IGNhbGN1bGF0ZUp3a1RodW1icHJpbnQoandrLCBkaWdlc3RBbGdvcml0aG0pO1xuICAgIHJldHVybiBgdXJuOmlldGY6cGFyYW1zOm9hdXRoOmp3ay10aHVtYnByaW50OnNoYS0ke2RpZ2VzdEFsZ29yaXRobS5zbGljZSgtMyl9OiR7dGh1bWJwcmludH1gO1xufVxuZXhwb3J0cy5jYWxjdWxhdGVKd2tUaHVtYnByaW50VXJpID0gY2FsY3VsYXRlSndrVGh1bWJwcmludFVyaTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNhbGN1bGF0ZUp3a1RodW1icHJpbnRVcmkiLCJjYWxjdWxhdGVKd2tUaHVtYnByaW50IiwiZGlnZXN0X2pzXzEiLCJyZXF1aXJlIiwiYmFzZTY0dXJsX2pzXzEiLCJlcnJvcnNfanNfMSIsImJ1ZmZlcl91dGlsc19qc18xIiwiaXNfb2JqZWN0X2pzXzEiLCJjaGVjayIsImRlc2NyaXB0aW9uIiwiSldLSW52YWxpZCIsImp3ayIsImRpZ2VzdEFsZ29yaXRobSIsImRlZmF1bHQiLCJUeXBlRXJyb3IiLCJjb21wb25lbnRzIiwia3R5IiwiY3J2IiwieCIsInkiLCJlIiwibiIsImsiLCJKT1NFTm90U3VwcG9ydGVkIiwiZGF0YSIsImVuY29kZXIiLCJlbmNvZGUiLCJKU09OIiwic3RyaW5naWZ5IiwidGh1bWJwcmludCIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwk/thumbprint.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwks/local.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwks/local.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createLocalJWKSet = exports.LocalJWKSet = exports.isJWKSLike = void 0;\nconst import_js_1 = __webpack_require__(/*! ../key/import.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/import.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nfunction getKtyFromAlg(alg) {\n    switch(typeof alg === \"string\" && alg.slice(0, 2)){\n        case \"RS\":\n        case \"PS\":\n            return \"RSA\";\n        case \"ES\":\n            return \"EC\";\n        case \"Ed\":\n            return \"OKP\";\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nfunction isJWKSLike(jwks) {\n    return jwks && typeof jwks === \"object\" && Array.isArray(jwks.keys) && jwks.keys.every(isJWKLike);\n}\nexports.isJWKSLike = isJWKSLike;\nfunction isJWKLike(key) {\n    return (0, is_object_js_1.default)(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === \"function\") {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nclass LocalJWKSet {\n    constructor(jwks){\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new errors_js_1.JWKSInvalid(\"JSON Web Key Set malformed\");\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = {\n            ...protectedHeader,\n            ...token === null || token === void 0 ? void 0 : token.header\n        };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk)=>{\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === \"string\") {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === \"string\") {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === \"string\") {\n                candidate = jwk.use === \"sig\";\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes(\"verify\");\n            }\n            if (candidate && alg === \"EdDSA\") {\n                candidate = jwk.crv === \"Ed25519\" || jwk.crv === \"Ed448\";\n            }\n            if (candidate) {\n                switch(alg){\n                    case \"ES256\":\n                        candidate = jwk.crv === \"P-256\";\n                        break;\n                    case \"ES256K\":\n                        candidate = jwk.crv === \"secp256k1\";\n                        break;\n                    case \"ES384\":\n                        candidate = jwk.crv === \"P-384\";\n                        break;\n                    case \"ES512\":\n                        candidate = jwk.crv === \"P-521\";\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new errors_js_1.JWKSNoMatchingKey();\n        } else if (length !== 1) {\n            const error = new errors_js_1.JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function*() {\n                for (const jwk of candidates){\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    } catch  {\n                        continue;\n                    }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nexports.LocalJWKSet = LocalJWKSet;\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await (0, import_js_1.importJWK)({\n            ...jwk,\n            ext: true\n        }, alg);\n        if (key instanceof Uint8Array || key.type !== \"public\") {\n            throw new errors_js_1.JWKSInvalid(\"JSON Web Key Set members must be public keys\");\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nfunction createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    return async function(protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\nexports.createLocalJWKSet = createLocalJWKSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwks/local.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwks/remote.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwks/remote.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createRemoteJWKSet = void 0;\nconst fetch_jwks_js_1 = __webpack_require__(/*! ../runtime/fetch_jwks.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst local_js_1 = __webpack_require__(/*! ./local.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwks/local.js\");\nfunction isCloudflareWorkers() {\n    return typeof WebSocketPair !== \"undefined\" || typeof navigator !== \"undefined\" && navigator.userAgent === \"Cloudflare-Workers\" || typeof EdgeRuntime !== \"undefined\" && EdgeRuntime === \"vercel\";\n}\nclass RemoteJWKSet extends local_js_1.LocalJWKSet {\n    constructor(url, options){\n        super({\n            keys: []\n        });\n        this._jwks = undefined;\n        if (!(url instanceof URL)) {\n            throw new TypeError(\"url must be an instance of URL\");\n        }\n        this._url = new URL(url.href);\n        this._options = {\n            agent: options === null || options === void 0 ? void 0 : options.agent,\n            headers: options === null || options === void 0 ? void 0 : options.headers\n        };\n        this._timeoutDuration = typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === \"number\" ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration = typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === \"number\" ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === \"number\" ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 600000;\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === \"number\" ? Date.now() < this._jwksTimestamp + this._cooldownDuration : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === \"number\" ? Date.now() < this._jwksTimestamp + this._cacheMaxAge : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._jwks || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await super.getKey(protectedHeader, token);\n        } catch (err) {\n            if (err instanceof errors_js_1.JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return super.getKey(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        this._pendingFetch || (this._pendingFetch = (0, fetch_jwks_js_1.default)(this._url, this._timeoutDuration, this._options).then((json)=>{\n            if (!(0, local_js_1.isJWKSLike)(json)) {\n                throw new errors_js_1.JWKSInvalid(\"JSON Web Key Set malformed\");\n            }\n            this._jwks = {\n                keys: json.keys\n            };\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        }).catch((err)=>{\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nfunction createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    return async function(protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\nexports.createRemoteJWKSet = createRemoteJWKSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwks/remote.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/sign.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jws/compact/sign.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.CompactSign = void 0;\nconst sign_js_1 = __webpack_require__(/*! ../flattened/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/sign.js\");\nclass CompactSign {\n    constructor(payload){\n        this._flattened = new sign_js_1.FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError(\"use the flattened module for creating JWS with b64: false\");\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\nexports.CompactSign = CompactSign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3cy9jb21wYWN0L3NpZ24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQkUsR0FBRyxLQUFLO0FBQzNCLE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLGlHQUFzQjtBQUNoRCxNQUFNRjtJQUNGRyxZQUFZQyxPQUFPLENBQUU7UUFDakIsSUFBSSxDQUFDQyxhQUFhLElBQUlKLFVBQVVLLGNBQWNGO0lBQ2xEO0lBQ0FHLG1CQUFtQkMsZUFBZSxFQUFFO1FBQ2hDLElBQUksQ0FBQ0gsV0FBV0UsbUJBQW1CQztRQUNuQyxPQUFPLElBQUk7SUFDZjtJQUNBLE1BQU1DLEtBQUtDLEdBQUcsRUFBRUMsT0FBTyxFQUFFO1FBQ3JCLE1BQU1DLE1BQU0sTUFBTSxJQUFJLENBQUNQLFdBQVdJLEtBQUtDLEtBQUtDO1FBQzVDLElBQUlDLElBQUlSLFlBQVlTLFdBQVc7WUFDM0IsTUFBTSxJQUFJQyxVQUFVO1FBQ3hCO1FBQ0EsT0FBTyxDQUFDLEVBQUVGLElBQUlHLFVBQVUsQ0FBQyxFQUFFSCxJQUFJUixRQUFRLENBQUMsRUFBRVEsSUFBSUksVUFBVSxDQUFDO0lBQzdEO0FBQ0o7QUFDQWxCLG1CQUFtQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd3MvY29tcGFjdC9zaWduLmpzP2FlNTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkNvbXBhY3RTaWduID0gdm9pZCAwO1xuY29uc3Qgc2lnbl9qc18xID0gcmVxdWlyZShcIi4uL2ZsYXR0ZW5lZC9zaWduLmpzXCIpO1xuY2xhc3MgQ29tcGFjdFNpZ24ge1xuICAgIGNvbnN0cnVjdG9yKHBheWxvYWQpIHtcbiAgICAgICAgdGhpcy5fZmxhdHRlbmVkID0gbmV3IHNpZ25fanNfMS5GbGF0dGVuZWRTaWduKHBheWxvYWQpO1xuICAgIH1cbiAgICBzZXRQcm90ZWN0ZWRIZWFkZXIocHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgIHRoaXMuX2ZsYXR0ZW5lZC5zZXRQcm90ZWN0ZWRIZWFkZXIocHJvdGVjdGVkSGVhZGVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGFzeW5jIHNpZ24oa2V5LCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IGp3cyA9IGF3YWl0IHRoaXMuX2ZsYXR0ZW5lZC5zaWduKGtleSwgb3B0aW9ucyk7XG4gICAgICAgIGlmIChqd3MucGF5bG9hZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCd1c2UgdGhlIGZsYXR0ZW5lZCBtb2R1bGUgZm9yIGNyZWF0aW5nIEpXUyB3aXRoIGI2NDogZmFsc2UnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYCR7andzLnByb3RlY3RlZH0uJHtqd3MucGF5bG9hZH0uJHtqd3Muc2lnbmF0dXJlfWA7XG4gICAgfVxufVxuZXhwb3J0cy5Db21wYWN0U2lnbiA9IENvbXBhY3RTaWduO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQ29tcGFjdFNpZ24iLCJzaWduX2pzXzEiLCJyZXF1aXJlIiwiY29uc3RydWN0b3IiLCJwYXlsb2FkIiwiX2ZsYXR0ZW5lZCIsIkZsYXR0ZW5lZFNpZ24iLCJzZXRQcm90ZWN0ZWRIZWFkZXIiLCJwcm90ZWN0ZWRIZWFkZXIiLCJzaWduIiwia2V5Iiwib3B0aW9ucyIsImp3cyIsInVuZGVmaW5lZCIsIlR5cGVFcnJvciIsInByb3RlY3RlZCIsInNpZ25hdHVyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/sign.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/verify.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jws/compact/verify.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.compactVerify = void 0;\nconst verify_js_1 = __webpack_require__(/*! ../flattened/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/verify.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nasync function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = buffer_utils_js_1.decoder.decode(jws);\n    }\n    if (typeof jws !== \"string\") {\n        throw new errors_js_1.JWSInvalid(\"Compact JWS must be a string or Uint8Array\");\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split(\".\");\n    if (length !== 3) {\n        throw new errors_js_1.JWSInvalid(\"Invalid Compact JWS\");\n    }\n    const verified = await (0, verify_js_1.flattenedVerify)({\n        payload,\n        protected: protectedHeader,\n        signature\n    }, key, options);\n    const result = {\n        payload: verified.payload,\n        protectedHeader: verified.protectedHeader\n    };\n    if (typeof key === \"function\") {\n        return {\n            ...result,\n            key: verified.key\n        };\n    }\n    return result;\n}\nexports.compactVerify = compactVerify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3cy9jb21wYWN0L3ZlcmlmeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCRSxHQUFHLEtBQUs7QUFDN0IsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMscUdBQXdCO0FBQ3BELE1BQU1DLGNBQWNELG1CQUFPQSxDQUFDLDBGQUFzQjtBQUNsRCxNQUFNRSxvQkFBb0JGLG1CQUFPQSxDQUFDLG9HQUEyQjtBQUM3RCxlQUFlRixjQUFjSyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsT0FBTztJQUMxQyxJQUFJRixlQUFlRyxZQUFZO1FBQzNCSCxNQUFNRCxrQkFBa0JLLFFBQVFDLE9BQU9MO0lBQzNDO0lBQ0EsSUFBSSxPQUFPQSxRQUFRLFVBQVU7UUFDekIsTUFBTSxJQUFJRixZQUFZUSxXQUFXO0lBQ3JDO0lBQ0EsTUFBTSxFQUFFLEdBQUdDLGVBQWUsRUFBRSxHQUFHQyxPQUFPLEVBQUUsR0FBR0MsU0FBUyxFQUFFQyxNQUFNLEVBQUUsR0FBR1YsSUFBSVcsTUFBTTtJQUMzRSxJQUFJRCxXQUFXLEdBQUc7UUFDZCxNQUFNLElBQUlaLFlBQVlRLFdBQVc7SUFDckM7SUFDQSxNQUFNTSxXQUFXLE1BQU0sQ0FBQyxHQUFHaEIsWUFBWWlCLGVBQWMsRUFBRztRQUFFTDtRQUFTTSxXQUFXUDtRQUFpQkU7SUFBVSxHQUFHUixLQUFLQztJQUNqSCxNQUFNYSxTQUFTO1FBQUVQLFNBQVNJLFNBQVNKO1FBQVNELGlCQUFpQkssU0FBU0w7SUFBZ0I7SUFDdEYsSUFBSSxPQUFPTixRQUFRLFlBQVk7UUFDM0IsT0FBTztZQUFFLEdBQUdjLE1BQU07WUFBRWQsS0FBS1csU0FBU1g7UUFBSTtJQUMxQztJQUNBLE9BQU9jO0FBQ1g7QUFDQXRCLHFCQUFxQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd3MvY29tcGFjdC92ZXJpZnkuanM/NmQ5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29tcGFjdFZlcmlmeSA9IHZvaWQgMDtcbmNvbnN0IHZlcmlmeV9qc18xID0gcmVxdWlyZShcIi4uL2ZsYXR0ZW5lZC92ZXJpZnkuanNcIik7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi91dGlsL2Vycm9ycy5qc1wiKTtcbmNvbnN0IGJ1ZmZlcl91dGlsc19qc18xID0gcmVxdWlyZShcIi4uLy4uL2xpYi9idWZmZXJfdXRpbHMuanNcIik7XG5hc3luYyBmdW5jdGlvbiBjb21wYWN0VmVyaWZ5KGp3cywga2V5LCBvcHRpb25zKSB7XG4gICAgaWYgKGp3cyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgandzID0gYnVmZmVyX3V0aWxzX2pzXzEuZGVjb2Rlci5kZWNvZGUoandzKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBqd3MgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1NJbnZhbGlkKCdDb21wYWN0IEpXUyBtdXN0IGJlIGEgc3RyaW5nIG9yIFVpbnQ4QXJyYXknKTtcbiAgICB9XG4gICAgY29uc3QgeyAwOiBwcm90ZWN0ZWRIZWFkZXIsIDE6IHBheWxvYWQsIDI6IHNpZ25hdHVyZSwgbGVuZ3RoIH0gPSBqd3Muc3BsaXQoJy4nKTtcbiAgICBpZiAobGVuZ3RoICE9PSAzKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1NJbnZhbGlkKCdJbnZhbGlkIENvbXBhY3QgSldTJyk7XG4gICAgfVxuICAgIGNvbnN0IHZlcmlmaWVkID0gYXdhaXQgKDAsIHZlcmlmeV9qc18xLmZsYXR0ZW5lZFZlcmlmeSkoeyBwYXlsb2FkLCBwcm90ZWN0ZWQ6IHByb3RlY3RlZEhlYWRlciwgc2lnbmF0dXJlIH0sIGtleSwgb3B0aW9ucyk7XG4gICAgY29uc3QgcmVzdWx0ID0geyBwYXlsb2FkOiB2ZXJpZmllZC5wYXlsb2FkLCBwcm90ZWN0ZWRIZWFkZXI6IHZlcmlmaWVkLnByb3RlY3RlZEhlYWRlciB9O1xuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiB7IC4uLnJlc3VsdCwga2V5OiB2ZXJpZmllZC5rZXkgfTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMuY29tcGFjdFZlcmlmeSA9IGNvbXBhY3RWZXJpZnk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjb21wYWN0VmVyaWZ5IiwidmVyaWZ5X2pzXzEiLCJyZXF1aXJlIiwiZXJyb3JzX2pzXzEiLCJidWZmZXJfdXRpbHNfanNfMSIsImp3cyIsImtleSIsIm9wdGlvbnMiLCJVaW50OEFycmF5IiwiZGVjb2RlciIsImRlY29kZSIsIkpXU0ludmFsaWQiLCJwcm90ZWN0ZWRIZWFkZXIiLCJwYXlsb2FkIiwic2lnbmF0dXJlIiwibGVuZ3RoIiwic3BsaXQiLCJ2ZXJpZmllZCIsImZsYXR0ZW5lZFZlcmlmeSIsInByb3RlY3RlZCIsInJlc3VsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/verify.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/sign.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jws/flattened/sign.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.FlattenedSign = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst sign_js_1 = __webpack_require__(/*! ../../runtime/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/sign.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst check_key_type_js_1 = __webpack_require__(/*! ../../lib/check_key_type.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_key_type.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nclass FlattenedSign {\n    constructor(payload){\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError(\"payload must be an instance of Uint8Array\");\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError(\"setUnprotectedHeader can only be called once\");\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new errors_js_1.JWSInvalid(\"either setProtectedHeader or setUnprotectedHeader must be called before #sign()\");\n        }\n        if (!(0, is_disjoint_js_1.default)(this._protectedHeader, this._unprotectedHeader)) {\n            throw new errors_js_1.JWSInvalid(\"JWS Protected and JWS Unprotected Header Parameter names must be disjoint\");\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader\n        };\n        const extensions = (0, validate_crit_js_1.default)(errors_js_1.JWSInvalid, new Map([\n            [\n                \"b64\",\n                true\n            ]\n        ]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has(\"b64\")) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== \"boolean\") {\n                throw new errors_js_1.JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== \"string\" || !alg) {\n            throw new errors_js_1.JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        (0, check_key_type_js_1.default)(alg, key, \"sign\");\n        let payload = this._payload;\n        if (b64) {\n            payload = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = buffer_utils_js_1.encoder.encode((0, base64url_js_1.encode)(JSON.stringify(this._protectedHeader)));\n        } else {\n            protectedHeader = buffer_utils_js_1.encoder.encode(\"\");\n        }\n        const data = (0, buffer_utils_js_1.concat)(protectedHeader, buffer_utils_js_1.encoder.encode(\".\"), payload);\n        const signature = await (0, sign_js_1.default)(alg, key, data);\n        const jws = {\n            signature: (0, base64url_js_1.encode)(signature),\n            payload: \"\"\n        };\n        if (b64) {\n            jws.payload = buffer_utils_js_1.decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = buffer_utils_js_1.decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\nexports.FlattenedSign = FlattenedSign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/sign.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/verify.js":
/*!*****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jws/flattened/verify.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.flattenedVerify = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst verify_js_1 = __webpack_require__(/*! ../../runtime/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/verify.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst is_disjoint_js_1 = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst check_key_type_js_1 = __webpack_require__(/*! ../../lib/check_key_type.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_key_type.js\");\nconst validate_crit_js_1 = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js\");\nconst validate_algorithms_js_1 = __webpack_require__(/*! ../../lib/validate_algorithms.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_algorithms.js\");\nasync function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!(0, is_object_js_1.default)(jws)) {\n        throw new errors_js_1.JWSInvalid(\"Flattened JWS must be an object\");\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new errors_js_1.JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== \"string\") {\n        throw new errors_js_1.JWSInvalid(\"JWS Protected Header incorrect type\");\n    }\n    if (jws.payload === undefined) {\n        throw new errors_js_1.JWSInvalid(\"JWS Payload missing\");\n    }\n    if (typeof jws.signature !== \"string\") {\n        throw new errors_js_1.JWSInvalid(\"JWS Signature missing or incorrect type\");\n    }\n    if (jws.header !== undefined && !(0, is_object_js_1.default)(jws.header)) {\n        throw new errors_js_1.JWSInvalid(\"JWS Unprotected Header incorrect type\");\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = (0, base64url_js_1.decode)(jws.protected);\n            parsedProt = JSON.parse(buffer_utils_js_1.decoder.decode(protectedHeader));\n        } catch  {\n            throw new errors_js_1.JWSInvalid(\"JWS Protected Header is invalid\");\n        }\n    }\n    if (!(0, is_disjoint_js_1.default)(parsedProt, jws.header)) {\n        throw new errors_js_1.JWSInvalid(\"JWS Protected and JWS Unprotected Header Parameter names must be disjoint\");\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header\n    };\n    const extensions = (0, validate_crit_js_1.default)(errors_js_1.JWSInvalid, new Map([\n        [\n            \"b64\",\n            true\n        ]\n    ]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has(\"b64\")) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== \"boolean\") {\n            throw new errors_js_1.JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== \"string\" || !alg) {\n        throw new errors_js_1.JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && (0, validate_algorithms_js_1.default)(\"algorithms\", options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new errors_js_1.JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== \"string\") {\n            throw new errors_js_1.JWSInvalid(\"JWS Payload must be a string\");\n        }\n    } else if (typeof jws.payload !== \"string\" && !(jws.payload instanceof Uint8Array)) {\n        throw new errors_js_1.JWSInvalid(\"JWS Payload must be a string or an Uint8Array instance\");\n    }\n    let resolvedKey = false;\n    if (typeof key === \"function\") {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    (0, check_key_type_js_1.default)(alg, key, \"verify\");\n    const data = (0, buffer_utils_js_1.concat)(buffer_utils_js_1.encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : \"\"), buffer_utils_js_1.encoder.encode(\".\"), typeof jws.payload === \"string\" ? buffer_utils_js_1.encoder.encode(jws.payload) : jws.payload);\n    const signature = (0, base64url_js_1.decode)(jws.signature);\n    const verified = await (0, verify_js_1.default)(alg, key, signature, data);\n    if (!verified) {\n        throw new errors_js_1.JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        payload = (0, base64url_js_1.decode)(jws.payload);\n    } else if (typeof jws.payload === \"string\") {\n        payload = buffer_utils_js_1.encoder.encode(jws.payload);\n    } else {\n        payload = jws.payload;\n    }\n    const result = {\n        payload\n    };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return {\n            ...result,\n            key\n        };\n    }\n    return result;\n}\nexports.flattenedVerify = flattenedVerify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/verify.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jws/general/sign.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jws/general/sign.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.GeneralSign = void 0;\nconst sign_js_1 = __webpack_require__(/*! ../flattened/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/sign.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nclass IndividualSignature {\n    constructor(sig, key, options){\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError(\"setUnprotectedHeader can only be called once\");\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nclass GeneralSign {\n    constructor(payload){\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new errors_js_1.JWSInvalid(\"at least one signature must be added\");\n        }\n        const jws = {\n            signatures: [],\n            payload: \"\"\n        };\n        for(let i = 0; i < this._signatures.length; i++){\n            const signature = this._signatures[i];\n            const flattened = new sign_js_1.FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            } else if (jws.payload !== payload) {\n                throw new errors_js_1.JWSInvalid(\"inconsistent use of JWS Unencoded Payload (RFC7797)\");\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\nexports.GeneralSign = GeneralSign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3cy9nZW5lcmFsL3NpZ24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG1CQUFtQkUsR0FBRyxLQUFLO0FBQzNCLE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLGlHQUFzQjtBQUNoRCxNQUFNQyxjQUFjRCxtQkFBT0EsQ0FBQywwRkFBc0I7QUFDbEQsTUFBTUU7SUFDRkMsWUFBWUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLE9BQU8sQ0FBRTtRQUMzQixJQUFJLENBQUNDLFNBQVNIO1FBQ2QsSUFBSSxDQUFDQyxNQUFNQTtRQUNYLElBQUksQ0FBQ0MsVUFBVUE7SUFDbkI7SUFDQUUsbUJBQW1CQyxlQUFlLEVBQUU7UUFDaEMsSUFBSSxJQUFJLENBQUNBLGlCQUFpQjtZQUN0QixNQUFNLElBQUlDLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNELGtCQUFrQkE7UUFDdkIsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUscUJBQXFCQyxpQkFBaUIsRUFBRTtRQUNwQyxJQUFJLElBQUksQ0FBQ0EsbUJBQW1CO1lBQ3hCLE1BQU0sSUFBSUYsVUFBVTtRQUN4QjtRQUNBLElBQUksQ0FBQ0Usb0JBQW9CQTtRQUN6QixPQUFPLElBQUk7SUFDZjtJQUNBQyxhQUFhLEdBQUdDLElBQUksRUFBRTtRQUNsQixPQUFPLElBQUksQ0FBQ1AsT0FBT00sZ0JBQWdCQztJQUN2QztJQUNBQyxLQUFLLEdBQUdELElBQUksRUFBRTtRQUNWLE9BQU8sSUFBSSxDQUFDUCxPQUFPUSxRQUFRRDtJQUMvQjtJQUNBRSxPQUFPO1FBQ0gsT0FBTyxJQUFJLENBQUNUO0lBQ2hCO0FBQ0o7QUFDQSxNQUFNVDtJQUNGSyxZQUFZYyxPQUFPLENBQUU7UUFDakIsSUFBSSxDQUFDQyxjQUFjLEVBQUU7UUFDckIsSUFBSSxDQUFDQyxXQUFXRjtJQUNwQjtJQUNBSixhQUFhUixHQUFHLEVBQUVDLE9BQU8sRUFBRTtRQUN2QixNQUFNYyxZQUFZLElBQUlsQixvQkFBb0IsSUFBSSxFQUFFRyxLQUFLQztRQUNyRCxJQUFJLENBQUNZLFlBQVlHLEtBQUtEO1FBQ3RCLE9BQU9BO0lBQ1g7SUFDQSxNQUFNTCxPQUFPO1FBQ1QsSUFBSSxDQUFDLElBQUksQ0FBQ0csWUFBWUksUUFBUTtZQUMxQixNQUFNLElBQUlyQixZQUFZc0IsV0FBVztRQUNyQztRQUNBLE1BQU1DLE1BQU07WUFDUkMsWUFBWSxFQUFFO1lBQ2RSLFNBQVM7UUFDYjtRQUNBLElBQUssSUFBSVMsSUFBSSxHQUFHQSxJQUFJLElBQUksQ0FBQ1IsWUFBWUksUUFBUUksSUFBSztZQUM5QyxNQUFNTixZQUFZLElBQUksQ0FBQ0YsV0FBVyxDQUFDUSxFQUFFO1lBQ3JDLE1BQU1DLFlBQVksSUFBSTVCLFVBQVU2QixjQUFjLElBQUksQ0FBQ1Q7WUFDbkRRLFVBQVVuQixtQkFBbUJZLFVBQVVYO1lBQ3ZDa0IsVUFBVWhCLHFCQUFxQlMsVUFBVVI7WUFDekMsTUFBTSxFQUFFSyxPQUFPLEVBQUUsR0FBR1ksTUFBTSxHQUFHLE1BQU1GLFVBQVVaLEtBQUtLLFVBQVVmLEtBQUtlLFVBQVVkO1lBQzNFLElBQUlvQixNQUFNLEdBQUc7Z0JBQ1RGLElBQUlQLFVBQVVBO1lBQ2xCLE9BQ0ssSUFBSU8sSUFBSVAsWUFBWUEsU0FBUztnQkFDOUIsTUFBTSxJQUFJaEIsWUFBWXNCLFdBQVc7WUFDckM7WUFDQUMsSUFBSUMsV0FBV0osS0FBS1E7UUFDeEI7UUFDQSxPQUFPTDtJQUNYO0FBQ0o7QUFDQTVCLG1CQUFtQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd3MvZ2VuZXJhbC9zaWduLmpzPzlkZDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkdlbmVyYWxTaWduID0gdm9pZCAwO1xuY29uc3Qgc2lnbl9qc18xID0gcmVxdWlyZShcIi4uL2ZsYXR0ZW5lZC9zaWduLmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jbGFzcyBJbmRpdmlkdWFsU2lnbmF0dXJlIHtcbiAgICBjb25zdHJ1Y3RvcihzaWcsIGtleSwgb3B0aW9ucykge1xuICAgICAgICB0aGlzLnBhcmVudCA9IHNpZztcbiAgICAgICAgdGhpcy5rZXkgPSBrZXk7XG4gICAgICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgfVxuICAgIHNldFByb3RlY3RlZEhlYWRlcihwcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgaWYgKHRoaXMucHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdzZXRQcm90ZWN0ZWRIZWFkZXIgY2FuIG9ubHkgYmUgY2FsbGVkIG9uY2UnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnByb3RlY3RlZEhlYWRlciA9IHByb3RlY3RlZEhlYWRlcjtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldFVucHJvdGVjdGVkSGVhZGVyKHVucHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgIGlmICh0aGlzLnVucHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdzZXRVbnByb3RlY3RlZEhlYWRlciBjYW4gb25seSBiZSBjYWxsZWQgb25jZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudW5wcm90ZWN0ZWRIZWFkZXIgPSB1bnByb3RlY3RlZEhlYWRlcjtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGFkZFNpZ25hdHVyZSguLi5hcmdzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBhcmVudC5hZGRTaWduYXR1cmUoLi4uYXJncyk7XG4gICAgfVxuICAgIHNpZ24oLi4uYXJncykge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJlbnQuc2lnbiguLi5hcmdzKTtcbiAgICB9XG4gICAgZG9uZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyZW50O1xuICAgIH1cbn1cbmNsYXNzIEdlbmVyYWxTaWduIHtcbiAgICBjb25zdHJ1Y3RvcihwYXlsb2FkKSB7XG4gICAgICAgIHRoaXMuX3NpZ25hdHVyZXMgPSBbXTtcbiAgICAgICAgdGhpcy5fcGF5bG9hZCA9IHBheWxvYWQ7XG4gICAgfVxuICAgIGFkZFNpZ25hdHVyZShrZXksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gbmV3IEluZGl2aWR1YWxTaWduYXR1cmUodGhpcywga2V5LCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5fc2lnbmF0dXJlcy5wdXNoKHNpZ25hdHVyZSk7XG4gICAgICAgIHJldHVybiBzaWduYXR1cmU7XG4gICAgfVxuICAgIGFzeW5jIHNpZ24oKSB7XG4gICAgICAgIGlmICghdGhpcy5fc2lnbmF0dXJlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1NJbnZhbGlkKCdhdCBsZWFzdCBvbmUgc2lnbmF0dXJlIG11c3QgYmUgYWRkZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBqd3MgPSB7XG4gICAgICAgICAgICBzaWduYXR1cmVzOiBbXSxcbiAgICAgICAgICAgIHBheWxvYWQ6ICcnLFxuICAgICAgICB9O1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX3NpZ25hdHVyZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IHRoaXMuX3NpZ25hdHVyZXNbaV07XG4gICAgICAgICAgICBjb25zdCBmbGF0dGVuZWQgPSBuZXcgc2lnbl9qc18xLkZsYXR0ZW5lZFNpZ24odGhpcy5fcGF5bG9hZCk7XG4gICAgICAgICAgICBmbGF0dGVuZWQuc2V0UHJvdGVjdGVkSGVhZGVyKHNpZ25hdHVyZS5wcm90ZWN0ZWRIZWFkZXIpO1xuICAgICAgICAgICAgZmxhdHRlbmVkLnNldFVucHJvdGVjdGVkSGVhZGVyKHNpZ25hdHVyZS51bnByb3RlY3RlZEhlYWRlcik7XG4gICAgICAgICAgICBjb25zdCB7IHBheWxvYWQsIC4uLnJlc3QgfSA9IGF3YWl0IGZsYXR0ZW5lZC5zaWduKHNpZ25hdHVyZS5rZXksIHNpZ25hdHVyZS5vcHRpb25zKTtcbiAgICAgICAgICAgIGlmIChpID09PSAwKSB7XG4gICAgICAgICAgICAgICAgandzLnBheWxvYWQgPSBwYXlsb2FkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoandzLnBheWxvYWQgIT09IHBheWxvYWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldTSW52YWxpZCgnaW5jb25zaXN0ZW50IHVzZSBvZiBKV1MgVW5lbmNvZGVkIFBheWxvYWQgKFJGQzc3OTcpJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBqd3Muc2lnbmF0dXJlcy5wdXNoKHJlc3QpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBqd3M7XG4gICAgfVxufVxuZXhwb3J0cy5HZW5lcmFsU2lnbiA9IEdlbmVyYWxTaWduO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiR2VuZXJhbFNpZ24iLCJzaWduX2pzXzEiLCJyZXF1aXJlIiwiZXJyb3JzX2pzXzEiLCJJbmRpdmlkdWFsU2lnbmF0dXJlIiwiY29uc3RydWN0b3IiLCJzaWciLCJrZXkiLCJvcHRpb25zIiwicGFyZW50Iiwic2V0UHJvdGVjdGVkSGVhZGVyIiwicHJvdGVjdGVkSGVhZGVyIiwiVHlwZUVycm9yIiwic2V0VW5wcm90ZWN0ZWRIZWFkZXIiLCJ1bnByb3RlY3RlZEhlYWRlciIsImFkZFNpZ25hdHVyZSIsImFyZ3MiLCJzaWduIiwiZG9uZSIsInBheWxvYWQiLCJfc2lnbmF0dXJlcyIsIl9wYXlsb2FkIiwic2lnbmF0dXJlIiwicHVzaCIsImxlbmd0aCIsIkpXU0ludmFsaWQiLCJqd3MiLCJzaWduYXR1cmVzIiwiaSIsImZsYXR0ZW5lZCIsIkZsYXR0ZW5lZFNpZ24iLCJyZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jws/general/sign.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jws/general/verify.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jws/general/verify.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generalVerify = void 0;\nconst verify_js_1 = __webpack_require__(/*! ../flattened/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/flattened/verify.js\");\nconst errors_js_1 = __webpack_require__(/*! ../../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nasync function generalVerify(jws, key, options) {\n    if (!(0, is_object_js_1.default)(jws)) {\n        throw new errors_js_1.JWSInvalid(\"General JWS must be an object\");\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(is_object_js_1.default)) {\n        throw new errors_js_1.JWSInvalid(\"JWS Signatures missing or incorrect type\");\n    }\n    for (const signature of jws.signatures){\n        try {\n            return await (0, verify_js_1.flattenedVerify)({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature\n            }, key, options);\n        } catch  {}\n    }\n    throw new errors_js_1.JWSSignatureVerificationFailed();\n}\nexports.generalVerify = generalVerify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3cy9nZW5lcmFsL3ZlcmlmeS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCRSxHQUFHLEtBQUs7QUFDN0IsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMscUdBQXdCO0FBQ3BELE1BQU1DLGNBQWNELG1CQUFPQSxDQUFDLDBGQUFzQjtBQUNsRCxNQUFNRSxpQkFBaUJGLG1CQUFPQSxDQUFDLDhGQUF3QjtBQUN2RCxlQUFlRixjQUFjSyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsT0FBTztJQUMxQyxJQUFJLENBQUMsQ0FBQyxHQUFHSCxlQUFlSSxPQUFNLEVBQUdILE1BQU07UUFDbkMsTUFBTSxJQUFJRixZQUFZTSxXQUFXO0lBQ3JDO0lBQ0EsSUFBSSxDQUFDQyxNQUFNQyxRQUFRTixJQUFJTyxlQUFlLENBQUNQLElBQUlPLFdBQVdDLE1BQU1ULGVBQWVJLFVBQVU7UUFDakYsTUFBTSxJQUFJTCxZQUFZTSxXQUFXO0lBQ3JDO0lBQ0EsS0FBSyxNQUFNSyxhQUFhVCxJQUFJTyxXQUFZO1FBQ3BDLElBQUk7WUFDQSxPQUFPLE1BQU0sQ0FBQyxHQUFHWCxZQUFZYyxlQUFjLEVBQUc7Z0JBQzFDQyxRQUFRRixVQUFVRTtnQkFDbEJDLFNBQVNaLElBQUlZO2dCQUNiQyxXQUFXSixVQUFVSTtnQkFDckJKLFdBQVdBLFVBQVVBO1lBQ3pCLEdBQUdSLEtBQUtDO1FBQ1osRUFDQSxPQUFNLENBQ047SUFDSjtJQUNBLE1BQU0sSUFBSUosWUFBWWdCO0FBQzFCO0FBQ0FyQixxQkFBcUJFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvandzL2dlbmVyYWwvdmVyaWZ5LmpzP2MyYmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdlbmVyYWxWZXJpZnkgPSB2b2lkIDA7XG5jb25zdCB2ZXJpZnlfanNfMSA9IHJlcXVpcmUoXCIuLi9mbGF0dGVuZWQvdmVyaWZ5LmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBpc19vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuLi8uLi9saWIvaXNfb2JqZWN0LmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhbFZlcmlmeShqd3MsIGtleSwgb3B0aW9ucykge1xuICAgIGlmICghKDAsIGlzX29iamVjdF9qc18xLmRlZmF1bHQpKGp3cykpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXU0ludmFsaWQoJ0dlbmVyYWwgSldTIG11c3QgYmUgYW4gb2JqZWN0Jyk7XG4gICAgfVxuICAgIGlmICghQXJyYXkuaXNBcnJheShqd3Muc2lnbmF0dXJlcykgfHwgIWp3cy5zaWduYXR1cmVzLmV2ZXJ5KGlzX29iamVjdF9qc18xLmRlZmF1bHQpKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1NJbnZhbGlkKCdKV1MgU2lnbmF0dXJlcyBtaXNzaW5nIG9yIGluY29ycmVjdCB0eXBlJyk7XG4gICAgfVxuICAgIGZvciAoY29uc3Qgc2lnbmF0dXJlIG9mIGp3cy5zaWduYXR1cmVzKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgKDAsIHZlcmlmeV9qc18xLmZsYXR0ZW5lZFZlcmlmeSkoe1xuICAgICAgICAgICAgICAgIGhlYWRlcjogc2lnbmF0dXJlLmhlYWRlcixcbiAgICAgICAgICAgICAgICBwYXlsb2FkOiBqd3MucGF5bG9hZCxcbiAgICAgICAgICAgICAgICBwcm90ZWN0ZWQ6IHNpZ25hdHVyZS5wcm90ZWN0ZWQsXG4gICAgICAgICAgICAgICAgc2lnbmF0dXJlOiBzaWduYXR1cmUuc2lnbmF0dXJlLFxuICAgICAgICAgICAgfSwga2V5LCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXU1NpZ25hdHVyZVZlcmlmaWNhdGlvbkZhaWxlZCgpO1xufVxuZXhwb3J0cy5nZW5lcmFsVmVyaWZ5ID0gZ2VuZXJhbFZlcmlmeTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdlbmVyYWxWZXJpZnkiLCJ2ZXJpZnlfanNfMSIsInJlcXVpcmUiLCJlcnJvcnNfanNfMSIsImlzX29iamVjdF9qc18xIiwiandzIiwia2V5Iiwib3B0aW9ucyIsImRlZmF1bHQiLCJKV1NJbnZhbGlkIiwiQXJyYXkiLCJpc0FycmF5Iiwic2lnbmF0dXJlcyIsImV2ZXJ5Iiwic2lnbmF0dXJlIiwiZmxhdHRlbmVkVmVyaWZ5IiwiaGVhZGVyIiwicGF5bG9hZCIsInByb3RlY3RlZCIsIkpXU1NpZ25hdHVyZVZlcmlmaWNhdGlvbkZhaWxlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jws/general/verify.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwt/decrypt.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwt/decrypt.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.jwtDecrypt = void 0;\nconst decrypt_js_1 = __webpack_require__(/*! ../jwe/compact/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/decrypt.js\");\nconst jwt_claims_set_js_1 = __webpack_require__(/*! ../lib/jwt_claims_set.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nasync function jwtDecrypt(jwt, key, options) {\n    const decrypted = await (0, decrypt_js_1.compactDecrypt)(jwt, key, options);\n    const payload = (0, jwt_claims_set_js_1.default)(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new errors_js_1.JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', \"iss\", \"mismatch\");\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new errors_js_1.JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', \"sub\", \"mismatch\");\n    }\n    if (protectedHeader.aud !== undefined && JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new errors_js_1.JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', \"aud\", \"mismatch\");\n    }\n    const result = {\n        payload,\n        protectedHeader\n    };\n    if (typeof key === \"function\") {\n        return {\n            ...result,\n            key: decrypted.key\n        };\n    }\n    return result;\n}\nexports.jwtDecrypt = jwtDecrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC9kZWNyeXB0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBa0JFLEdBQUcsS0FBSztBQUMxQixNQUFNQyxlQUFlQyxtQkFBT0EsQ0FBQyx1R0FBMkI7QUFDeEQsTUFBTUMsc0JBQXNCRCxtQkFBT0EsQ0FBQyxxR0FBMEI7QUFDOUQsTUFBTUUsY0FBY0YsbUJBQU9BLENBQUMsdUZBQW1CO0FBQy9DLGVBQWVGLFdBQVdLLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPO0lBQ3ZDLE1BQU1DLFlBQVksTUFBTSxDQUFDLEdBQUdQLGFBQWFRLGNBQWEsRUFBR0osS0FBS0MsS0FBS0M7SUFDbkUsTUFBTUcsVUFBVSxDQUFDLEdBQUdQLG9CQUFvQlEsT0FBTSxFQUFHSCxVQUFVSSxpQkFBaUJKLFVBQVVLLFdBQVdOO0lBQ2pHLE1BQU0sRUFBRUssZUFBZSxFQUFFLEdBQUdKO0lBQzVCLElBQUlJLGdCQUFnQkUsUUFBUUMsYUFBYUgsZ0JBQWdCRSxRQUFRSixRQUFRSSxLQUFLO1FBQzFFLE1BQU0sSUFBSVYsWUFBWVkseUJBQXlCLG9EQUFvRCxPQUFPO0lBQzlHO0lBQ0EsSUFBSUosZ0JBQWdCSyxRQUFRRixhQUFhSCxnQkFBZ0JLLFFBQVFQLFFBQVFPLEtBQUs7UUFDMUUsTUFBTSxJQUFJYixZQUFZWSx5QkFBeUIsb0RBQW9ELE9BQU87SUFDOUc7SUFDQSxJQUFJSixnQkFBZ0JNLFFBQVFILGFBQ3hCSSxLQUFLQyxVQUFVUixnQkFBZ0JNLFNBQVNDLEtBQUtDLFVBQVVWLFFBQVFRLE1BQU07UUFDckUsTUFBTSxJQUFJZCxZQUFZWSx5QkFBeUIsb0RBQW9ELE9BQU87SUFDOUc7SUFDQSxNQUFNSyxTQUFTO1FBQUVYO1FBQVNFO0lBQWdCO0lBQzFDLElBQUksT0FBT04sUUFBUSxZQUFZO1FBQzNCLE9BQU87WUFBRSxHQUFHZSxNQUFNO1lBQUVmLEtBQUtFLFVBQVVGO1FBQUk7SUFDM0M7SUFDQSxPQUFPZTtBQUNYO0FBQ0F2QixrQkFBa0JFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvand0L2RlY3J5cHQuanM/YjQ2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuand0RGVjcnlwdCA9IHZvaWQgMDtcbmNvbnN0IGRlY3J5cHRfanNfMSA9IHJlcXVpcmUoXCIuLi9qd2UvY29tcGFjdC9kZWNyeXB0LmpzXCIpO1xuY29uc3Qgand0X2NsYWltc19zZXRfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvand0X2NsYWltc19zZXQuanNcIik7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmFzeW5jIGZ1bmN0aW9uIGp3dERlY3J5cHQoand0LCBrZXksIG9wdGlvbnMpIHtcbiAgICBjb25zdCBkZWNyeXB0ZWQgPSBhd2FpdCAoMCwgZGVjcnlwdF9qc18xLmNvbXBhY3REZWNyeXB0KShqd3QsIGtleSwgb3B0aW9ucyk7XG4gICAgY29uc3QgcGF5bG9hZCA9ICgwLCBqd3RfY2xhaW1zX3NldF9qc18xLmRlZmF1bHQpKGRlY3J5cHRlZC5wcm90ZWN0ZWRIZWFkZXIsIGRlY3J5cHRlZC5wbGFpbnRleHQsIG9wdGlvbnMpO1xuICAgIGNvbnN0IHsgcHJvdGVjdGVkSGVhZGVyIH0gPSBkZWNyeXB0ZWQ7XG4gICAgaWYgKHByb3RlY3RlZEhlYWRlci5pc3MgIT09IHVuZGVmaW5lZCAmJiBwcm90ZWN0ZWRIZWFkZXIuaXNzICE9PSBwYXlsb2FkLmlzcykge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUQ2xhaW1WYWxpZGF0aW9uRmFpbGVkKCdyZXBsaWNhdGVkIFwiaXNzXCIgY2xhaW0gaGVhZGVyIHBhcmFtZXRlciBtaXNtYXRjaCcsICdpc3MnLCAnbWlzbWF0Y2gnKTtcbiAgICB9XG4gICAgaWYgKHByb3RlY3RlZEhlYWRlci5zdWIgIT09IHVuZGVmaW5lZCAmJiBwcm90ZWN0ZWRIZWFkZXIuc3ViICE9PSBwYXlsb2FkLnN1Yikge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUQ2xhaW1WYWxpZGF0aW9uRmFpbGVkKCdyZXBsaWNhdGVkIFwic3ViXCIgY2xhaW0gaGVhZGVyIHBhcmFtZXRlciBtaXNtYXRjaCcsICdzdWInLCAnbWlzbWF0Y2gnKTtcbiAgICB9XG4gICAgaWYgKHByb3RlY3RlZEhlYWRlci5hdWQgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICBKU09OLnN0cmluZ2lmeShwcm90ZWN0ZWRIZWFkZXIuYXVkKSAhPT0gSlNPTi5zdHJpbmdpZnkocGF5bG9hZC5hdWQpKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1RDbGFpbVZhbGlkYXRpb25GYWlsZWQoJ3JlcGxpY2F0ZWQgXCJhdWRcIiBjbGFpbSBoZWFkZXIgcGFyYW1ldGVyIG1pc21hdGNoJywgJ2F1ZCcsICdtaXNtYXRjaCcpO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSB7IHBheWxvYWQsIHByb3RlY3RlZEhlYWRlciB9O1xuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiB7IC4uLnJlc3VsdCwga2V5OiBkZWNyeXB0ZWQua2V5IH07XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnRzLmp3dERlY3J5cHQgPSBqd3REZWNyeXB0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiand0RGVjcnlwdCIsImRlY3J5cHRfanNfMSIsInJlcXVpcmUiLCJqd3RfY2xhaW1zX3NldF9qc18xIiwiZXJyb3JzX2pzXzEiLCJqd3QiLCJrZXkiLCJvcHRpb25zIiwiZGVjcnlwdGVkIiwiY29tcGFjdERlY3J5cHQiLCJwYXlsb2FkIiwiZGVmYXVsdCIsInByb3RlY3RlZEhlYWRlciIsInBsYWludGV4dCIsImlzcyIsInVuZGVmaW5lZCIsIkpXVENsYWltVmFsaWRhdGlvbkZhaWxlZCIsInN1YiIsImF1ZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXN1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwt/decrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwt/encrypt.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwt/encrypt.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.EncryptJWT = void 0;\nconst encrypt_js_1 = __webpack_require__(/*! ../jwe/compact/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwe/compact/encrypt.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst produce_js_1 = __webpack_require__(/*! ./produce.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/produce.js\");\nclass EncryptJWT extends produce_js_1.ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError(\"setKeyManagementParameters can only be called once\");\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError(\"setContentEncryptionKey can only be called once\");\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError(\"setInitializationVector can only be called once\");\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new encrypt_js_1.CompactEncrypt(buffer_utils_js_1.encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = {\n                ...this._protectedHeader,\n                iss: this._payload.iss\n            };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = {\n                ...this._protectedHeader,\n                sub: this._payload.sub\n            };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = {\n                ...this._protectedHeader,\n                aud: this._payload.aud\n            };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\nexports.EncryptJWT = EncryptJWT;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC9lbmNyeXB0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBa0JFLEdBQUcsS0FBSztBQUMxQixNQUFNQyxlQUFlQyxtQkFBT0EsQ0FBQyx1R0FBMkI7QUFDeEQsTUFBTUMsb0JBQW9CRCxtQkFBT0EsQ0FBQyxpR0FBd0I7QUFDMUQsTUFBTUUsZUFBZUYsbUJBQU9BLENBQUMsa0ZBQWM7QUFDM0MsTUFBTUYsbUJBQW1CSSxhQUFhQztJQUNsQ0MsbUJBQW1CQyxlQUFlLEVBQUU7UUFDaEMsSUFBSSxJQUFJLENBQUNDLGtCQUFrQjtZQUN2QixNQUFNLElBQUlDLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNELG1CQUFtQkQ7UUFDeEIsT0FBTyxJQUFJO0lBQ2Y7SUFDQUcsMkJBQTJCQyxVQUFVLEVBQUU7UUFDbkMsSUFBSSxJQUFJLENBQUNDLDBCQUEwQjtZQUMvQixNQUFNLElBQUlILFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNHLDJCQUEyQkQ7UUFDaEMsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsd0JBQXdCQyxHQUFHLEVBQUU7UUFDekIsSUFBSSxJQUFJLENBQUNDLE1BQU07WUFDWCxNQUFNLElBQUlOLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNNLE9BQU9EO1FBQ1osT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsd0JBQXdCQyxFQUFFLEVBQUU7UUFDeEIsSUFBSSxJQUFJLENBQUNDLEtBQUs7WUFDVixNQUFNLElBQUlULFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNTLE1BQU1EO1FBQ1gsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsMEJBQTBCO1FBQ3RCLElBQUksQ0FBQ0MsMkJBQTJCO1FBQ2hDLE9BQU8sSUFBSTtJQUNmO0lBQ0FDLDJCQUEyQjtRQUN2QixJQUFJLENBQUNDLDRCQUE0QjtRQUNqQyxPQUFPLElBQUk7SUFDZjtJQUNBQyw0QkFBNEI7UUFDeEIsSUFBSSxDQUFDQyw2QkFBNkI7UUFDbEMsT0FBTyxJQUFJO0lBQ2Y7SUFDQSxNQUFNQyxRQUFRQyxHQUFHLEVBQUVDLE9BQU8sRUFBRTtRQUN4QixNQUFNQyxNQUFNLElBQUkzQixhQUFhNEIsZUFBZTFCLGtCQUFrQjJCLFFBQVFDLE9BQU9DLEtBQUtDLFVBQVUsSUFBSSxDQUFDQztRQUNqRyxJQUFJLElBQUksQ0FBQ2QsMEJBQTBCO1lBQy9CLElBQUksQ0FBQ1osbUJBQW1CO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxnQkFBZ0I7Z0JBQUUyQixLQUFLLElBQUksQ0FBQ0QsU0FBU0M7WUFBSTtRQUMvRTtRQUNBLElBQUksSUFBSSxDQUFDYiwyQkFBMkI7WUFDaEMsSUFBSSxDQUFDZCxtQkFBbUI7Z0JBQUUsR0FBRyxJQUFJLENBQUNBLGdCQUFnQjtnQkFBRTRCLEtBQUssSUFBSSxDQUFDRixTQUFTRTtZQUFJO1FBQy9FO1FBQ0EsSUFBSSxJQUFJLENBQUNaLDRCQUE0QjtZQUNqQyxJQUFJLENBQUNoQixtQkFBbUI7Z0JBQUUsR0FBRyxJQUFJLENBQUNBLGdCQUFnQjtnQkFBRTZCLEtBQUssSUFBSSxDQUFDSCxTQUFTRztZQUFJO1FBQy9FO1FBQ0FULElBQUl0QixtQkFBbUIsSUFBSSxDQUFDRTtRQUM1QixJQUFJLElBQUksQ0FBQ1UsS0FBSztZQUNWVSxJQUFJWix3QkFBd0IsSUFBSSxDQUFDRTtRQUNyQztRQUNBLElBQUksSUFBSSxDQUFDSCxNQUFNO1lBQ1hhLElBQUlmLHdCQUF3QixJQUFJLENBQUNFO1FBQ3JDO1FBQ0EsSUFBSSxJQUFJLENBQUNILDBCQUEwQjtZQUMvQmdCLElBQUlsQiwyQkFBMkIsSUFBSSxDQUFDRTtRQUN4QztRQUNBLE9BQU9nQixJQUFJSCxRQUFRQyxLQUFLQztJQUM1QjtBQUNKO0FBQ0E3QixrQkFBa0JFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvand0L2VuY3J5cHQuanM/Yzg2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRW5jcnlwdEpXVCA9IHZvaWQgMDtcbmNvbnN0IGVuY3J5cHRfanNfMSA9IHJlcXVpcmUoXCIuLi9qd2UvY29tcGFjdC9lbmNyeXB0LmpzXCIpO1xuY29uc3QgYnVmZmVyX3V0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2J1ZmZlcl91dGlscy5qc1wiKTtcbmNvbnN0IHByb2R1Y2VfanNfMSA9IHJlcXVpcmUoXCIuL3Byb2R1Y2UuanNcIik7XG5jbGFzcyBFbmNyeXB0SldUIGV4dGVuZHMgcHJvZHVjZV9qc18xLlByb2R1Y2VKV1Qge1xuICAgIHNldFByb3RlY3RlZEhlYWRlcihwcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgaWYgKHRoaXMuX3Byb3RlY3RlZEhlYWRlcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignc2V0UHJvdGVjdGVkSGVhZGVyIGNhbiBvbmx5IGJlIGNhbGxlZCBvbmNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fcHJvdGVjdGVkSGVhZGVyID0gcHJvdGVjdGVkSGVhZGVyO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0S2V5TWFuYWdlbWVudFBhcmFtZXRlcnMocGFyYW1ldGVycykge1xuICAgICAgICBpZiAodGhpcy5fa2V5TWFuYWdlbWVudFBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3NldEtleU1hbmFnZW1lbnRQYXJhbWV0ZXJzIGNhbiBvbmx5IGJlIGNhbGxlZCBvbmNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fa2V5TWFuYWdlbWVudFBhcmFtZXRlcnMgPSBwYXJhbWV0ZXJzO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0Q29udGVudEVuY3J5cHRpb25LZXkoY2VrKSB7XG4gICAgICAgIGlmICh0aGlzLl9jZWspIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3NldENvbnRlbnRFbmNyeXB0aW9uS2V5IGNhbiBvbmx5IGJlIGNhbGxlZCBvbmNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fY2VrID0gY2VrO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0SW5pdGlhbGl6YXRpb25WZWN0b3IoaXYpIHtcbiAgICAgICAgaWYgKHRoaXMuX2l2KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdzZXRJbml0aWFsaXphdGlvblZlY3RvciBjYW4gb25seSBiZSBjYWxsZWQgb25jZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2l2ID0gaXY7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICByZXBsaWNhdGVJc3N1ZXJBc0hlYWRlcigpIHtcbiAgICAgICAgdGhpcy5fcmVwbGljYXRlSXNzdWVyQXNIZWFkZXIgPSB0cnVlO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcmVwbGljYXRlU3ViamVjdEFzSGVhZGVyKCkge1xuICAgICAgICB0aGlzLl9yZXBsaWNhdGVTdWJqZWN0QXNIZWFkZXIgPSB0cnVlO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcmVwbGljYXRlQXVkaWVuY2VBc0hlYWRlcigpIHtcbiAgICAgICAgdGhpcy5fcmVwbGljYXRlQXVkaWVuY2VBc0hlYWRlciA9IHRydWU7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBhc3luYyBlbmNyeXB0KGtleSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBlbmMgPSBuZXcgZW5jcnlwdF9qc18xLkNvbXBhY3RFbmNyeXB0KGJ1ZmZlcl91dGlsc19qc18xLmVuY29kZXIuZW5jb2RlKEpTT04uc3RyaW5naWZ5KHRoaXMuX3BheWxvYWQpKSk7XG4gICAgICAgIGlmICh0aGlzLl9yZXBsaWNhdGVJc3N1ZXJBc0hlYWRlcikge1xuICAgICAgICAgICAgdGhpcy5fcHJvdGVjdGVkSGVhZGVyID0geyAuLi50aGlzLl9wcm90ZWN0ZWRIZWFkZXIsIGlzczogdGhpcy5fcGF5bG9hZC5pc3MgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fcmVwbGljYXRlU3ViamVjdEFzSGVhZGVyKSB7XG4gICAgICAgICAgICB0aGlzLl9wcm90ZWN0ZWRIZWFkZXIgPSB7IC4uLnRoaXMuX3Byb3RlY3RlZEhlYWRlciwgc3ViOiB0aGlzLl9wYXlsb2FkLnN1YiB9O1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9yZXBsaWNhdGVBdWRpZW5jZUFzSGVhZGVyKSB7XG4gICAgICAgICAgICB0aGlzLl9wcm90ZWN0ZWRIZWFkZXIgPSB7IC4uLnRoaXMuX3Byb3RlY3RlZEhlYWRlciwgYXVkOiB0aGlzLl9wYXlsb2FkLmF1ZCB9O1xuICAgICAgICB9XG4gICAgICAgIGVuYy5zZXRQcm90ZWN0ZWRIZWFkZXIodGhpcy5fcHJvdGVjdGVkSGVhZGVyKTtcbiAgICAgICAgaWYgKHRoaXMuX2l2KSB7XG4gICAgICAgICAgICBlbmMuc2V0SW5pdGlhbGl6YXRpb25WZWN0b3IodGhpcy5faXYpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9jZWspIHtcbiAgICAgICAgICAgIGVuYy5zZXRDb250ZW50RW5jcnlwdGlvbktleSh0aGlzLl9jZWspO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9rZXlNYW5hZ2VtZW50UGFyYW1ldGVycykge1xuICAgICAgICAgICAgZW5jLnNldEtleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKHRoaXMuX2tleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZW5jLmVuY3J5cHQoa2V5LCBvcHRpb25zKTtcbiAgICB9XG59XG5leHBvcnRzLkVuY3J5cHRKV1QgPSBFbmNyeXB0SldUO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiRW5jcnlwdEpXVCIsImVuY3J5cHRfanNfMSIsInJlcXVpcmUiLCJidWZmZXJfdXRpbHNfanNfMSIsInByb2R1Y2VfanNfMSIsIlByb2R1Y2VKV1QiLCJzZXRQcm90ZWN0ZWRIZWFkZXIiLCJwcm90ZWN0ZWRIZWFkZXIiLCJfcHJvdGVjdGVkSGVhZGVyIiwiVHlwZUVycm9yIiwic2V0S2V5TWFuYWdlbWVudFBhcmFtZXRlcnMiLCJwYXJhbWV0ZXJzIiwiX2tleU1hbmFnZW1lbnRQYXJhbWV0ZXJzIiwic2V0Q29udGVudEVuY3J5cHRpb25LZXkiLCJjZWsiLCJfY2VrIiwic2V0SW5pdGlhbGl6YXRpb25WZWN0b3IiLCJpdiIsIl9pdiIsInJlcGxpY2F0ZUlzc3VlckFzSGVhZGVyIiwiX3JlcGxpY2F0ZUlzc3VlckFzSGVhZGVyIiwicmVwbGljYXRlU3ViamVjdEFzSGVhZGVyIiwiX3JlcGxpY2F0ZVN1YmplY3RBc0hlYWRlciIsInJlcGxpY2F0ZUF1ZGllbmNlQXNIZWFkZXIiLCJfcmVwbGljYXRlQXVkaWVuY2VBc0hlYWRlciIsImVuY3J5cHQiLCJrZXkiLCJvcHRpb25zIiwiZW5jIiwiQ29tcGFjdEVuY3J5cHQiLCJlbmNvZGVyIiwiZW5jb2RlIiwiSlNPTiIsInN0cmluZ2lmeSIsIl9wYXlsb2FkIiwiaXNzIiwic3ViIiwiYXVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwt/encrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwt/produce.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwt/produce.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ProduceJWT = void 0;\nconst epoch_js_1 = __webpack_require__(/*! ../lib/epoch.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/epoch.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst secs_js_1 = __webpack_require__(/*! ../lib/secs.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/secs.js\");\nclass ProduceJWT {\n    constructor(payload){\n        if (!(0, is_object_js_1.default)(payload)) {\n            throw new TypeError(\"JWT Claims Set MUST be an object\");\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = {\n            ...this._payload,\n            iss: issuer\n        };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = {\n            ...this._payload,\n            sub: subject\n        };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = {\n            ...this._payload,\n            aud: audience\n        };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = {\n            ...this._payload,\n            jti: jwtId\n        };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === \"number\") {\n            this._payload = {\n                ...this._payload,\n                nbf: input\n            };\n        } else {\n            this._payload = {\n                ...this._payload,\n                nbf: (0, epoch_js_1.default)(new Date()) + (0, secs_js_1.default)(input)\n            };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === \"number\") {\n            this._payload = {\n                ...this._payload,\n                exp: input\n            };\n        } else {\n            this._payload = {\n                ...this._payload,\n                exp: (0, epoch_js_1.default)(new Date()) + (0, secs_js_1.default)(input)\n            };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === \"undefined\") {\n            this._payload = {\n                ...this._payload,\n                iat: (0, epoch_js_1.default)(new Date())\n            };\n        } else {\n            this._payload = {\n                ...this._payload,\n                iat: input\n            };\n        }\n        return this;\n    }\n}\nexports.ProduceJWT = ProduceJWT;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC9wcm9kdWNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBa0JFLEdBQUcsS0FBSztBQUMxQixNQUFNQyxhQUFhQyxtQkFBT0EsQ0FBQyxtRkFBaUI7QUFDNUMsTUFBTUMsaUJBQWlCRCxtQkFBT0EsQ0FBQywyRkFBcUI7QUFDcEQsTUFBTUUsWUFBWUYsbUJBQU9BLENBQUMsaUZBQWdCO0FBQzFDLE1BQU1GO0lBQ0ZLLFlBQVlDLE9BQU8sQ0FBRTtRQUNqQixJQUFJLENBQUMsQ0FBQyxHQUFHSCxlQUFlSSxPQUFNLEVBQUdELFVBQVU7WUFDdkMsTUFBTSxJQUFJRSxVQUFVO1FBQ3hCO1FBQ0EsSUFBSSxDQUFDQyxXQUFXSDtJQUNwQjtJQUNBSSxVQUFVQyxNQUFNLEVBQUU7UUFDZCxJQUFJLENBQUNGLFdBQVc7WUFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtZQUFFRyxLQUFLRDtRQUFPO1FBQ2hELE9BQU8sSUFBSTtJQUNmO0lBQ0FFLFdBQVdDLE9BQU8sRUFBRTtRQUNoQixJQUFJLENBQUNMLFdBQVc7WUFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtZQUFFTSxLQUFLRDtRQUFRO1FBQ2pELE9BQU8sSUFBSTtJQUNmO0lBQ0FFLFlBQVlDLFFBQVEsRUFBRTtRQUNsQixJQUFJLENBQUNSLFdBQVc7WUFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtZQUFFUyxLQUFLRDtRQUFTO1FBQ2xELE9BQU8sSUFBSTtJQUNmO0lBQ0FFLE9BQU9DLEtBQUssRUFBRTtRQUNWLElBQUksQ0FBQ1gsV0FBVztZQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO1lBQUVZLEtBQUtEO1FBQU07UUFDL0MsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsYUFBYUMsS0FBSyxFQUFFO1FBQ2hCLElBQUksT0FBT0EsVUFBVSxVQUFVO1lBQzNCLElBQUksQ0FBQ2QsV0FBVztnQkFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtnQkFBRWUsS0FBS0Q7WUFBTTtRQUNuRCxPQUNLO1lBQ0QsSUFBSSxDQUFDZCxXQUFXO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO2dCQUFFZSxLQUFLLENBQUMsR0FBR3ZCLFdBQVdNLE9BQU0sRUFBRyxJQUFJa0IsVUFBVSxDQUFDLEdBQUdyQixVQUFVRyxPQUFNLEVBQUdnQjtZQUFPO1FBQ2pIO1FBQ0EsT0FBTyxJQUFJO0lBQ2Y7SUFDQUcsa0JBQWtCSCxLQUFLLEVBQUU7UUFDckIsSUFBSSxPQUFPQSxVQUFVLFVBQVU7WUFDM0IsSUFBSSxDQUFDZCxXQUFXO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO2dCQUFFa0IsS0FBS0o7WUFBTTtRQUNuRCxPQUNLO1lBQ0QsSUFBSSxDQUFDZCxXQUFXO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO2dCQUFFa0IsS0FBSyxDQUFDLEdBQUcxQixXQUFXTSxPQUFNLEVBQUcsSUFBSWtCLFVBQVUsQ0FBQyxHQUFHckIsVUFBVUcsT0FBTSxFQUFHZ0I7WUFBTztRQUNqSDtRQUNBLE9BQU8sSUFBSTtJQUNmO0lBQ0FLLFlBQVlMLEtBQUssRUFBRTtRQUNmLElBQUksT0FBT0EsVUFBVSxhQUFhO1lBQzlCLElBQUksQ0FBQ2QsV0FBVztnQkFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtnQkFBRW9CLEtBQUssQ0FBQyxHQUFHNUIsV0FBV00sT0FBTSxFQUFHLElBQUlrQjtZQUFRO1FBQ2pGLE9BQ0s7WUFDRCxJQUFJLENBQUNoQixXQUFXO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO2dCQUFFb0IsS0FBS047WUFBTTtRQUNuRDtRQUNBLE9BQU8sSUFBSTtJQUNmO0FBQ0o7QUFDQXpCLGtCQUFrQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd3QvcHJvZHVjZS5qcz81YTBjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qcm9kdWNlSldUID0gdm9pZCAwO1xuY29uc3QgZXBvY2hfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvZXBvY2guanNcIik7XG5jb25zdCBpc19vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaXNfb2JqZWN0LmpzXCIpO1xuY29uc3Qgc2Vjc19qc18xID0gcmVxdWlyZShcIi4uL2xpYi9zZWNzLmpzXCIpO1xuY2xhc3MgUHJvZHVjZUpXVCB7XG4gICAgY29uc3RydWN0b3IocGF5bG9hZCkge1xuICAgICAgICBpZiAoISgwLCBpc19vYmplY3RfanNfMS5kZWZhdWx0KShwYXlsb2FkKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSldUIENsYWltcyBTZXQgTVVTVCBiZSBhbiBvYmplY3QnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9wYXlsb2FkID0gcGF5bG9hZDtcbiAgICB9XG4gICAgc2V0SXNzdWVyKGlzc3Vlcikge1xuICAgICAgICB0aGlzLl9wYXlsb2FkID0geyAuLi50aGlzLl9wYXlsb2FkLCBpc3M6IGlzc3VlciB9O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0U3ViamVjdChzdWJqZWN0KSB7XG4gICAgICAgIHRoaXMuX3BheWxvYWQgPSB7IC4uLnRoaXMuX3BheWxvYWQsIHN1Yjogc3ViamVjdCB9O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0QXVkaWVuY2UoYXVkaWVuY2UpIHtcbiAgICAgICAgdGhpcy5fcGF5bG9hZCA9IHsgLi4udGhpcy5fcGF5bG9hZCwgYXVkOiBhdWRpZW5jZSB9O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0SnRpKGp3dElkKSB7XG4gICAgICAgIHRoaXMuX3BheWxvYWQgPSB7IC4uLnRoaXMuX3BheWxvYWQsIGp0aTogand0SWQgfTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldE5vdEJlZm9yZShpbnB1dCkge1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgdGhpcy5fcGF5bG9hZCA9IHsgLi4udGhpcy5fcGF5bG9hZCwgbmJmOiBpbnB1dCB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fcGF5bG9hZCA9IHsgLi4udGhpcy5fcGF5bG9hZCwgbmJmOiAoMCwgZXBvY2hfanNfMS5kZWZhdWx0KShuZXcgRGF0ZSgpKSArICgwLCBzZWNzX2pzXzEuZGVmYXVsdCkoaW5wdXQpIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEV4cGlyYXRpb25UaW1lKGlucHV0KSB7XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICB0aGlzLl9wYXlsb2FkID0geyAuLi50aGlzLl9wYXlsb2FkLCBleHA6IGlucHV0IH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9wYXlsb2FkID0geyAuLi50aGlzLl9wYXlsb2FkLCBleHA6ICgwLCBlcG9jaF9qc18xLmRlZmF1bHQpKG5ldyBEYXRlKCkpICsgKDAsIHNlY3NfanNfMS5kZWZhdWx0KShpbnB1dCkgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0SXNzdWVkQXQoaW5wdXQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHRoaXMuX3BheWxvYWQgPSB7IC4uLnRoaXMuX3BheWxvYWQsIGlhdDogKDAsIGVwb2NoX2pzXzEuZGVmYXVsdCkobmV3IERhdGUoKSkgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX3BheWxvYWQgPSB7IC4uLnRoaXMuX3BheWxvYWQsIGlhdDogaW5wdXQgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG5leHBvcnRzLlByb2R1Y2VKV1QgPSBQcm9kdWNlSldUO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiUHJvZHVjZUpXVCIsImVwb2NoX2pzXzEiLCJyZXF1aXJlIiwiaXNfb2JqZWN0X2pzXzEiLCJzZWNzX2pzXzEiLCJjb25zdHJ1Y3RvciIsInBheWxvYWQiLCJkZWZhdWx0IiwiVHlwZUVycm9yIiwiX3BheWxvYWQiLCJzZXRJc3N1ZXIiLCJpc3N1ZXIiLCJpc3MiLCJzZXRTdWJqZWN0Iiwic3ViamVjdCIsInN1YiIsInNldEF1ZGllbmNlIiwiYXVkaWVuY2UiLCJhdWQiLCJzZXRKdGkiLCJqd3RJZCIsImp0aSIsInNldE5vdEJlZm9yZSIsImlucHV0IiwibmJmIiwiRGF0ZSIsInNldEV4cGlyYXRpb25UaW1lIiwiZXhwIiwic2V0SXNzdWVkQXQiLCJpYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwt/produce.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwt/sign.js":
/*!*****************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwt/sign.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SignJWT = void 0;\nconst sign_js_1 = __webpack_require__(/*! ../jws/compact/sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/sign.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst produce_js_1 = __webpack_require__(/*! ./produce.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/produce.js\");\nclass SignJWT extends produce_js_1.ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        var _a;\n        const sig = new sign_js_1.CompactSign(buffer_utils_js_1.encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) && this._protectedHeader.crit.includes(\"b64\") && this._protectedHeader.b64 === false) {\n            throw new errors_js_1.JWTInvalid(\"JWTs MUST NOT use unencoded payload\");\n        }\n        return sig.sign(key, options);\n    }\n}\nexports.SignJWT = SignJWT;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC9zaWduLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxlQUFlRSxHQUFHLEtBQUs7QUFDdkIsTUFBTUMsWUFBWUMsbUJBQU9BLENBQUMsaUdBQXdCO0FBQ2xELE1BQU1DLGNBQWNELG1CQUFPQSxDQUFDLHVGQUFtQjtBQUMvQyxNQUFNRSxvQkFBb0JGLG1CQUFPQSxDQUFDLGlHQUF3QjtBQUMxRCxNQUFNRyxlQUFlSCxtQkFBT0EsQ0FBQyxrRkFBYztBQUMzQyxNQUFNRixnQkFBZ0JLLGFBQWFDO0lBQy9CQyxtQkFBbUJDLGVBQWUsRUFBRTtRQUNoQyxJQUFJLENBQUNDLG1CQUFtQkQ7UUFDeEIsT0FBTyxJQUFJO0lBQ2Y7SUFDQSxNQUFNRSxLQUFLQyxHQUFHLEVBQUVDLE9BQU8sRUFBRTtRQUNyQixJQUFJQztRQUNKLE1BQU1DLE1BQU0sSUFBSWIsVUFBVWMsWUFBWVgsa0JBQWtCWSxRQUFRQyxPQUFPQyxLQUFLQyxVQUFVLElBQUksQ0FBQ0M7UUFDM0ZOLElBQUlQLG1CQUFtQixJQUFJLENBQUNFO1FBQzVCLElBQUlZLE1BQU1DLFFBQVEsQ0FBQ1QsS0FBSyxJQUFJLENBQUNKLGdCQUFlLE1BQU8sUUFBUUksT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHVSxTQUNuRixJQUFJLENBQUNkLGlCQUFpQmMsS0FBS0MsU0FBUyxVQUNwQyxJQUFJLENBQUNmLGlCQUFpQmdCLFFBQVEsT0FBTztZQUNyQyxNQUFNLElBQUl0QixZQUFZdUIsV0FBVztRQUNyQztRQUNBLE9BQU9aLElBQUlKLEtBQUtDLEtBQUtDO0lBQ3pCO0FBQ0o7QUFDQWQsZUFBZUUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9qd3Qvc2lnbi5qcz83Y2JhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TaWduSldUID0gdm9pZCAwO1xuY29uc3Qgc2lnbl9qc18xID0gcmVxdWlyZShcIi4uL2p3cy9jb21wYWN0L3NpZ24uanNcIik7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmNvbnN0IGJ1ZmZlcl91dGlsc19qc18xID0gcmVxdWlyZShcIi4uL2xpYi9idWZmZXJfdXRpbHMuanNcIik7XG5jb25zdCBwcm9kdWNlX2pzXzEgPSByZXF1aXJlKFwiLi9wcm9kdWNlLmpzXCIpO1xuY2xhc3MgU2lnbkpXVCBleHRlbmRzIHByb2R1Y2VfanNfMS5Qcm9kdWNlSldUIHtcbiAgICBzZXRQcm90ZWN0ZWRIZWFkZXIocHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgIHRoaXMuX3Byb3RlY3RlZEhlYWRlciA9IHByb3RlY3RlZEhlYWRlcjtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGFzeW5jIHNpZ24oa2V5LCBvcHRpb25zKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY29uc3Qgc2lnID0gbmV3IHNpZ25fanNfMS5Db21wYWN0U2lnbihidWZmZXJfdXRpbHNfanNfMS5lbmNvZGVyLmVuY29kZShKU09OLnN0cmluZ2lmeSh0aGlzLl9wYXlsb2FkKSkpO1xuICAgICAgICBzaWcuc2V0UHJvdGVjdGVkSGVhZGVyKHRoaXMuX3Byb3RlY3RlZEhlYWRlcik7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KChfYSA9IHRoaXMuX3Byb3RlY3RlZEhlYWRlcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNyaXQpICYmXG4gICAgICAgICAgICB0aGlzLl9wcm90ZWN0ZWRIZWFkZXIuY3JpdC5pbmNsdWRlcygnYjY0JykgJiZcbiAgICAgICAgICAgIHRoaXMuX3Byb3RlY3RlZEhlYWRlci5iNjQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnSldUcyBNVVNUIE5PVCB1c2UgdW5lbmNvZGVkIHBheWxvYWQnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2lnLnNpZ24oa2V5LCBvcHRpb25zKTtcbiAgICB9XG59XG5leHBvcnRzLlNpZ25KV1QgPSBTaWduSldUO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiU2lnbkpXVCIsInNpZ25fanNfMSIsInJlcXVpcmUiLCJlcnJvcnNfanNfMSIsImJ1ZmZlcl91dGlsc19qc18xIiwicHJvZHVjZV9qc18xIiwiUHJvZHVjZUpXVCIsInNldFByb3RlY3RlZEhlYWRlciIsInByb3RlY3RlZEhlYWRlciIsIl9wcm90ZWN0ZWRIZWFkZXIiLCJzaWduIiwia2V5Iiwib3B0aW9ucyIsIl9hIiwic2lnIiwiQ29tcGFjdFNpZ24iLCJlbmNvZGVyIiwiZW5jb2RlIiwiSlNPTiIsInN0cmluZ2lmeSIsIl9wYXlsb2FkIiwiQXJyYXkiLCJpc0FycmF5IiwiY3JpdCIsImluY2x1ZGVzIiwiYjY0IiwiSldUSW52YWxpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwt/sign.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwt/unsecured.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwt/unsecured.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UnsecuredJWT = void 0;\nconst base64url = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst jwt_claims_set_js_1 = __webpack_require__(/*! ../lib/jwt_claims_set.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js\");\nconst produce_js_1 = __webpack_require__(/*! ./produce.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jwt/produce.js\");\nclass UnsecuredJWT extends produce_js_1.ProduceJWT {\n    encode() {\n        const header = base64url.encode(JSON.stringify({\n            alg: \"none\"\n        }));\n        const payload = base64url.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== \"string\") {\n            throw new errors_js_1.JWTInvalid(\"Unsecured JWT must be a string\");\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split(\".\");\n        if (length !== 3 || signature !== \"\") {\n            throw new errors_js_1.JWTInvalid(\"Invalid Unsecured JWT\");\n        }\n        let header;\n        try {\n            header = JSON.parse(buffer_utils_js_1.decoder.decode(base64url.decode(encodedHeader)));\n            if (header.alg !== \"none\") throw new Error();\n        } catch  {\n            throw new errors_js_1.JWTInvalid(\"Invalid Unsecured JWT\");\n        }\n        const payload = (0, jwt_claims_set_js_1.default)(header, base64url.decode(encodedPayload), options);\n        return {\n            payload,\n            header\n        };\n    }\n}\nexports.UnsecuredJWT = UnsecuredJWT;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC91bnNlY3VyZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG9CQUFvQkUsR0FBRyxLQUFLO0FBQzVCLE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLG1HQUF5QjtBQUNuRCxNQUFNQyxvQkFBb0JELG1CQUFPQSxDQUFDLGlHQUF3QjtBQUMxRCxNQUFNRSxjQUFjRixtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsTUFBTUcsc0JBQXNCSCxtQkFBT0EsQ0FBQyxxR0FBMEI7QUFDOUQsTUFBTUksZUFBZUosbUJBQU9BLENBQUMsa0ZBQWM7QUFDM0MsTUFBTUYscUJBQXFCTSxhQUFhQztJQUNwQ0MsU0FBUztRQUNMLE1BQU1DLFNBQVNSLFVBQVVPLE9BQU9FLEtBQUtDLFVBQVU7WUFBRUMsS0FBSztRQUFPO1FBQzdELE1BQU1DLFVBQVVaLFVBQVVPLE9BQU9FLEtBQUtDLFVBQVUsSUFBSSxDQUFDRztRQUNyRCxPQUFPLENBQUMsRUFBRUwsT0FBTyxDQUFDLEVBQUVJLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDO0lBQ0EsT0FBT0UsT0FBT0MsR0FBRyxFQUFFQyxPQUFPLEVBQUU7UUFDeEIsSUFBSSxPQUFPRCxRQUFRLFVBQVU7WUFDekIsTUFBTSxJQUFJWixZQUFZYyxXQUFXO1FBQ3JDO1FBQ0EsTUFBTSxFQUFFLEdBQUdDLGFBQWEsRUFBRSxHQUFHQyxjQUFjLEVBQUUsR0FBR0MsU0FBUyxFQUFFQyxNQUFNLEVBQUUsR0FBR04sSUFBSU8sTUFBTTtRQUNoRixJQUFJRCxXQUFXLEtBQUtELGNBQWMsSUFBSTtZQUNsQyxNQUFNLElBQUlqQixZQUFZYyxXQUFXO1FBQ3JDO1FBQ0EsSUFBSVQ7UUFDSixJQUFJO1lBQ0FBLFNBQVNDLEtBQUtjLE1BQU1yQixrQkFBa0JzQixRQUFRVixPQUFPZCxVQUFVYyxPQUFPSTtZQUN0RSxJQUFJVixPQUFPRyxRQUFRLFFBQ2YsTUFBTSxJQUFJYztRQUNsQixFQUNBLE9BQU07WUFDRixNQUFNLElBQUl0QixZQUFZYyxXQUFXO1FBQ3JDO1FBQ0EsTUFBTUwsVUFBVSxDQUFDLEdBQUdSLG9CQUFvQnNCLE9BQU0sRUFBR2xCLFFBQVFSLFVBQVVjLE9BQU9LLGlCQUFpQkg7UUFDM0YsT0FBTztZQUFFSjtZQUFTSjtRQUFPO0lBQzdCO0FBQ0o7QUFDQVgsb0JBQW9CRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC91bnNlY3VyZWQuanM/MDEwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVW5zZWN1cmVkSldUID0gdm9pZCAwO1xuY29uc3QgYmFzZTY0dXJsID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvYmFzZTY0dXJsLmpzXCIpO1xuY29uc3QgYnVmZmVyX3V0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2J1ZmZlcl91dGlscy5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3Qgand0X2NsYWltc19zZXRfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvand0X2NsYWltc19zZXQuanNcIik7XG5jb25zdCBwcm9kdWNlX2pzXzEgPSByZXF1aXJlKFwiLi9wcm9kdWNlLmpzXCIpO1xuY2xhc3MgVW5zZWN1cmVkSldUIGV4dGVuZHMgcHJvZHVjZV9qc18xLlByb2R1Y2VKV1Qge1xuICAgIGVuY29kZSgpIHtcbiAgICAgICAgY29uc3QgaGVhZGVyID0gYmFzZTY0dXJsLmVuY29kZShKU09OLnN0cmluZ2lmeSh7IGFsZzogJ25vbmUnIH0pKTtcbiAgICAgICAgY29uc3QgcGF5bG9hZCA9IGJhc2U2NHVybC5lbmNvZGUoSlNPTi5zdHJpbmdpZnkodGhpcy5fcGF5bG9hZCkpO1xuICAgICAgICByZXR1cm4gYCR7aGVhZGVyfS4ke3BheWxvYWR9LmA7XG4gICAgfVxuICAgIHN0YXRpYyBkZWNvZGUoand0LCBvcHRpb25zKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygand0ICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ1Vuc2VjdXJlZCBKV1QgbXVzdCBiZSBhIHN0cmluZycpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHsgMDogZW5jb2RlZEhlYWRlciwgMTogZW5jb2RlZFBheWxvYWQsIDI6IHNpZ25hdHVyZSwgbGVuZ3RoIH0gPSBqd3Quc3BsaXQoJy4nKTtcbiAgICAgICAgaWYgKGxlbmd0aCAhPT0gMyB8fCBzaWduYXR1cmUgIT09ICcnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnSW52YWxpZCBVbnNlY3VyZWQgSldUJyk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGhlYWRlcjtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGhlYWRlciA9IEpTT04ucGFyc2UoYnVmZmVyX3V0aWxzX2pzXzEuZGVjb2Rlci5kZWNvZGUoYmFzZTY0dXJsLmRlY29kZShlbmNvZGVkSGVhZGVyKSkpO1xuICAgICAgICAgICAgaWYgKGhlYWRlci5hbGcgIT09ICdub25lJylcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnSW52YWxpZCBVbnNlY3VyZWQgSldUJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGF5bG9hZCA9ICgwLCBqd3RfY2xhaW1zX3NldF9qc18xLmRlZmF1bHQpKGhlYWRlciwgYmFzZTY0dXJsLmRlY29kZShlbmNvZGVkUGF5bG9hZCksIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4geyBwYXlsb2FkLCBoZWFkZXIgfTtcbiAgICB9XG59XG5leHBvcnRzLlVuc2VjdXJlZEpXVCA9IFVuc2VjdXJlZEpXVDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlVuc2VjdXJlZEpXVCIsImJhc2U2NHVybCIsInJlcXVpcmUiLCJidWZmZXJfdXRpbHNfanNfMSIsImVycm9yc19qc18xIiwiand0X2NsYWltc19zZXRfanNfMSIsInByb2R1Y2VfanNfMSIsIlByb2R1Y2VKV1QiLCJlbmNvZGUiLCJoZWFkZXIiLCJKU09OIiwic3RyaW5naWZ5IiwiYWxnIiwicGF5bG9hZCIsIl9wYXlsb2FkIiwiZGVjb2RlIiwiand0Iiwib3B0aW9ucyIsIkpXVEludmFsaWQiLCJlbmNvZGVkSGVhZGVyIiwiZW5jb2RlZFBheWxvYWQiLCJzaWduYXR1cmUiLCJsZW5ndGgiLCJzcGxpdCIsInBhcnNlIiwiZGVjb2RlciIsIkVycm9yIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwt/unsecured.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/jwt/verify.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/jwt/verify.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.jwtVerify = void 0;\nconst verify_js_1 = __webpack_require__(/*! ../jws/compact/verify.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/jws/compact/verify.js\");\nconst jwt_claims_set_js_1 = __webpack_require__(/*! ../lib/jwt_claims_set.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nasync function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await (0, verify_js_1.compactVerify)(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes(\"b64\")) && verified.protectedHeader.b64 === false) {\n        throw new errors_js_1.JWTInvalid(\"JWTs MUST NOT use unencoded payload\");\n    }\n    const payload = (0, jwt_claims_set_js_1.default)(verified.protectedHeader, verified.payload, options);\n    const result = {\n        payload,\n        protectedHeader: verified.protectedHeader\n    };\n    if (typeof key === \"function\") {\n        return {\n            ...result,\n            key: verified.key\n        };\n    }\n    return result;\n}\nexports.jwtVerify = jwtVerify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2p3dC92ZXJpZnkuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQkUsR0FBRyxLQUFLO0FBQ3pCLE1BQU1DLGNBQWNDLG1CQUFPQSxDQUFDLHFHQUEwQjtBQUN0RCxNQUFNQyxzQkFBc0JELG1CQUFPQSxDQUFDLHFHQUEwQjtBQUM5RCxNQUFNRSxjQUFjRixtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsZUFBZUYsVUFBVUssR0FBRyxFQUFFQyxHQUFHLEVBQUVDLE9BQU87SUFDdEMsSUFBSUM7SUFDSixNQUFNQyxXQUFXLE1BQU0sQ0FBQyxHQUFHUixZQUFZUyxhQUFZLEVBQUdMLEtBQUtDLEtBQUtDO0lBQ2hFLElBQUksQ0FBQyxDQUFDQyxLQUFLQyxTQUFTRSxnQkFBZ0JDLElBQUcsTUFBTyxRQUFRSixPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdLLFNBQVMsTUFBSyxLQUFNSixTQUFTRSxnQkFBZ0JHLFFBQVEsT0FBTztRQUMxSSxNQUFNLElBQUlWLFlBQVlXLFdBQVc7SUFDckM7SUFDQSxNQUFNQyxVQUFVLENBQUMsR0FBR2Isb0JBQW9CYyxPQUFNLEVBQUdSLFNBQVNFLGlCQUFpQkYsU0FBU08sU0FBU1Q7SUFDN0YsTUFBTVcsU0FBUztRQUFFRjtRQUFTTCxpQkFBaUJGLFNBQVNFO0lBQWdCO0lBQ3BFLElBQUksT0FBT0wsUUFBUSxZQUFZO1FBQzNCLE9BQU87WUFBRSxHQUFHWSxNQUFNO1lBQUVaLEtBQUtHLFNBQVNIO1FBQUk7SUFDMUM7SUFDQSxPQUFPWTtBQUNYO0FBQ0FwQixpQkFBaUJFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvand0L3ZlcmlmeS5qcz8wOGE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5qd3RWZXJpZnkgPSB2b2lkIDA7XG5jb25zdCB2ZXJpZnlfanNfMSA9IHJlcXVpcmUoXCIuLi9qd3MvY29tcGFjdC92ZXJpZnkuanNcIik7XG5jb25zdCBqd3RfY2xhaW1zX3NldF9qc18xID0gcmVxdWlyZShcIi4uL2xpYi9qd3RfY2xhaW1zX3NldC5qc1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gand0VmVyaWZ5KGp3dCwga2V5LCBvcHRpb25zKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHZlcmlmaWVkID0gYXdhaXQgKDAsIHZlcmlmeV9qc18xLmNvbXBhY3RWZXJpZnkpKGp3dCwga2V5LCBvcHRpb25zKTtcbiAgICBpZiAoKChfYSA9IHZlcmlmaWVkLnByb3RlY3RlZEhlYWRlci5jcml0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuaW5jbHVkZXMoJ2I2NCcpKSAmJiB2ZXJpZmllZC5wcm90ZWN0ZWRIZWFkZXIuYjY0ID09PSBmYWxzZSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnSldUcyBNVVNUIE5PVCB1c2UgdW5lbmNvZGVkIHBheWxvYWQnKTtcbiAgICB9XG4gICAgY29uc3QgcGF5bG9hZCA9ICgwLCBqd3RfY2xhaW1zX3NldF9qc18xLmRlZmF1bHQpKHZlcmlmaWVkLnByb3RlY3RlZEhlYWRlciwgdmVyaWZpZWQucGF5bG9hZCwgb3B0aW9ucyk7XG4gICAgY29uc3QgcmVzdWx0ID0geyBwYXlsb2FkLCBwcm90ZWN0ZWRIZWFkZXI6IHZlcmlmaWVkLnByb3RlY3RlZEhlYWRlciB9O1xuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiB7IC4uLnJlc3VsdCwga2V5OiB2ZXJpZmllZC5rZXkgfTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMuand0VmVyaWZ5ID0gand0VmVyaWZ5O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiand0VmVyaWZ5IiwidmVyaWZ5X2pzXzEiLCJyZXF1aXJlIiwiand0X2NsYWltc19zZXRfanNfMSIsImVycm9yc19qc18xIiwiand0Iiwia2V5Iiwib3B0aW9ucyIsIl9hIiwidmVyaWZpZWQiLCJjb21wYWN0VmVyaWZ5IiwicHJvdGVjdGVkSGVhZGVyIiwiY3JpdCIsImluY2x1ZGVzIiwiYjY0IiwiSldUSW52YWxpZCIsInBheWxvYWQiLCJkZWZhdWx0IiwicmVzdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/jwt/verify.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/key/export.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/key/export.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.exportJWK = exports.exportPKCS8 = exports.exportSPKI = void 0;\nconst asn1_js_1 = __webpack_require__(/*! ../runtime/asn1.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1.js\");\nconst asn1_js_2 = __webpack_require__(/*! ../runtime/asn1.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1.js\");\nconst key_to_jwk_js_1 = __webpack_require__(/*! ../runtime/key_to_jwk.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js\");\nasync function exportSPKI(key) {\n    return (0, asn1_js_1.toSPKI)(key);\n}\nexports.exportSPKI = exportSPKI;\nasync function exportPKCS8(key) {\n    return (0, asn1_js_2.toPKCS8)(key);\n}\nexports.exportPKCS8 = exportPKCS8;\nasync function exportJWK(key) {\n    return (0, key_to_jwk_js_1.default)(key);\n}\nexports.exportJWK = exportJWK;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2tleS9leHBvcnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQkUsR0FBR0YsbUJBQW1CRyxHQUFHSCxrQkFBa0JJLEdBQUcsS0FBSztBQUNwRSxNQUFNQyxZQUFZQyxtQkFBT0EsQ0FBQyx5RkFBb0I7QUFDOUMsTUFBTUMsWUFBWUQsbUJBQU9BLENBQUMseUZBQW9CO0FBQzlDLE1BQU1FLGtCQUFrQkYsbUJBQU9BLENBQUMscUdBQTBCO0FBQzFELGVBQWVGLFdBQVdLLEdBQUc7SUFDekIsT0FBTyxDQUFDLEdBQUdKLFVBQVVLLE1BQUssRUFBR0Q7QUFDakM7QUFDQVQsa0JBQWtCSSxHQUFHQTtBQUNyQixlQUFlRCxZQUFZTSxHQUFHO0lBQzFCLE9BQU8sQ0FBQyxHQUFHRixVQUFVSSxPQUFNLEVBQUdGO0FBQ2xDO0FBQ0FULG1CQUFtQkcsR0FBR0E7QUFDdEIsZUFBZUQsVUFBVU8sR0FBRztJQUN4QixPQUFPLENBQUMsR0FBR0QsZ0JBQWdCSSxPQUFNLEVBQUdIO0FBQ3hDO0FBQ0FULGlCQUFpQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9rZXkvZXhwb3J0LmpzP2MzZDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmV4cG9ydEpXSyA9IGV4cG9ydHMuZXhwb3J0UEtDUzggPSBleHBvcnRzLmV4cG9ydFNQS0kgPSB2b2lkIDA7XG5jb25zdCBhc24xX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9hc24xLmpzXCIpO1xuY29uc3QgYXNuMV9qc18yID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvYXNuMS5qc1wiKTtcbmNvbnN0IGtleV90b19qd2tfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lL2tleV90b19qd2suanNcIik7XG5hc3luYyBmdW5jdGlvbiBleHBvcnRTUEtJKGtleSkge1xuICAgIHJldHVybiAoMCwgYXNuMV9qc18xLnRvU1BLSSkoa2V5KTtcbn1cbmV4cG9ydHMuZXhwb3J0U1BLSSA9IGV4cG9ydFNQS0k7XG5hc3luYyBmdW5jdGlvbiBleHBvcnRQS0NTOChrZXkpIHtcbiAgICByZXR1cm4gKDAsIGFzbjFfanNfMi50b1BLQ1M4KShrZXkpO1xufVxuZXhwb3J0cy5leHBvcnRQS0NTOCA9IGV4cG9ydFBLQ1M4O1xuYXN5bmMgZnVuY3Rpb24gZXhwb3J0SldLKGtleSkge1xuICAgIHJldHVybiAoMCwga2V5X3RvX2p3a19qc18xLmRlZmF1bHQpKGtleSk7XG59XG5leHBvcnRzLmV4cG9ydEpXSyA9IGV4cG9ydEpXSztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImV4cG9ydEpXSyIsImV4cG9ydFBLQ1M4IiwiZXhwb3J0U1BLSSIsImFzbjFfanNfMSIsInJlcXVpcmUiLCJhc24xX2pzXzIiLCJrZXlfdG9fandrX2pzXzEiLCJrZXkiLCJ0b1NQS0kiLCJ0b1BLQ1M4IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/key/export.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/key/generate_key_pair.js":
/*!******************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/key/generate_key_pair.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generateKeyPair = void 0;\nconst generate_js_1 = __webpack_require__(/*! ../runtime/generate.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/generate.js\");\nasync function generateKeyPair(alg, options) {\n    return (0, generate_js_1.generateKeyPair)(alg, options);\n}\nexports.generateKeyPair = generateKeyPair;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2tleS9nZW5lcmF0ZV9rZXlfcGFpci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsdUJBQXVCRSxHQUFHLEtBQUs7QUFDL0IsTUFBTUMsZ0JBQWdCQyxtQkFBT0EsQ0FBQyxpR0FBd0I7QUFDdEQsZUFBZUYsZ0JBQWdCRyxHQUFHLEVBQUVDLE9BQU87SUFDdkMsT0FBTyxDQUFDLEdBQUdILGNBQWNELGVBQWMsRUFBR0csS0FBS0M7QUFDbkQ7QUFDQU4sdUJBQXVCRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2tleS9nZW5lcmF0ZV9rZXlfcGFpci5qcz9jZjQ0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZW5lcmF0ZUtleVBhaXIgPSB2b2lkIDA7XG5jb25zdCBnZW5lcmF0ZV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvZ2VuZXJhdGUuanNcIik7XG5hc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUtleVBhaXIoYWxnLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuICgwLCBnZW5lcmF0ZV9qc18xLmdlbmVyYXRlS2V5UGFpcikoYWxnLCBvcHRpb25zKTtcbn1cbmV4cG9ydHMuZ2VuZXJhdGVLZXlQYWlyID0gZ2VuZXJhdGVLZXlQYWlyO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZ2VuZXJhdGVLZXlQYWlyIiwiZ2VuZXJhdGVfanNfMSIsInJlcXVpcmUiLCJhbGciLCJvcHRpb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/key/generate_key_pair.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/key/generate_secret.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/key/generate_secret.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generateSecret = void 0;\nconst generate_js_1 = __webpack_require__(/*! ../runtime/generate.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/generate.js\");\nasync function generateSecret(alg, options) {\n    return (0, generate_js_1.generateSecret)(alg, options);\n}\nexports.generateSecret = generateSecret;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2tleS9nZW5lcmF0ZV9zZWNyZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQkUsR0FBRyxLQUFLO0FBQzlCLE1BQU1DLGdCQUFnQkMsbUJBQU9BLENBQUMsaUdBQXdCO0FBQ3RELGVBQWVGLGVBQWVHLEdBQUcsRUFBRUMsT0FBTztJQUN0QyxPQUFPLENBQUMsR0FBR0gsY0FBY0QsY0FBYSxFQUFHRyxLQUFLQztBQUNsRDtBQUNBTixzQkFBc0JFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMva2V5L2dlbmVyYXRlX3NlY3JldC5qcz9iNmRmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZW5lcmF0ZVNlY3JldCA9IHZvaWQgMDtcbmNvbnN0IGdlbmVyYXRlX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9nZW5lcmF0ZS5qc1wiKTtcbmFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlU2VjcmV0KGFsZywgb3B0aW9ucykge1xuICAgIHJldHVybiAoMCwgZ2VuZXJhdGVfanNfMS5nZW5lcmF0ZVNlY3JldCkoYWxnLCBvcHRpb25zKTtcbn1cbmV4cG9ydHMuZ2VuZXJhdGVTZWNyZXQgPSBnZW5lcmF0ZVNlY3JldDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdlbmVyYXRlU2VjcmV0IiwiZ2VuZXJhdGVfanNfMSIsInJlcXVpcmUiLCJhbGciLCJvcHRpb25zIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/key/generate_secret.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/key/import.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/key/import.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.importJWK = exports.importPKCS8 = exports.importX509 = exports.importSPKI = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst asn1_js_1 = __webpack_require__(/*! ../runtime/asn1.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1.js\");\nconst jwk_to_key_js_1 = __webpack_require__(/*! ../runtime/jwk_to_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nasync function importSPKI(spki, alg, options) {\n    if (typeof spki !== \"string\" || spki.indexOf(\"-----BEGIN PUBLIC KEY-----\") !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return (0, asn1_js_1.fromSPKI)(spki, alg, options);\n}\nexports.importSPKI = importSPKI;\nasync function importX509(x509, alg, options) {\n    if (typeof x509 !== \"string\" || x509.indexOf(\"-----BEGIN CERTIFICATE-----\") !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return (0, asn1_js_1.fromX509)(x509, alg, options);\n}\nexports.importX509 = importX509;\nasync function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== \"string\" || pkcs8.indexOf(\"-----BEGIN PRIVATE KEY-----\") !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return (0, asn1_js_1.fromPKCS8)(pkcs8, alg, options);\n}\nexports.importPKCS8 = importPKCS8;\nasync function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!(0, is_object_js_1.default)(jwk)) {\n        throw new TypeError(\"JWK must be an object\");\n    }\n    alg || (alg = jwk.alg);\n    switch(jwk.kty){\n        case \"oct\":\n            if (typeof jwk.k !== \"string\" || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : octAsKeyObject = jwk.ext !== true;\n            if (octAsKeyObject) {\n                return (0, jwk_to_key_js_1.default)({\n                    ...jwk,\n                    alg,\n                    ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false\n                });\n            }\n            return (0, base64url_js_1.decode)(jwk.k);\n        case \"RSA\":\n            if (jwk.oth !== undefined) {\n                throw new errors_js_1.JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case \"EC\":\n        case \"OKP\":\n            return (0, jwk_to_key_js_1.default)({\n                ...jwk,\n                alg\n            });\n        default:\n            throw new errors_js_1.JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\nexports.importJWK = importJWK;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2tleS9pbXBvcnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQkUsR0FBR0YsbUJBQW1CRyxHQUFHSCxrQkFBa0JJLEdBQUdKLGtCQUFrQkssR0FBRyxLQUFLO0FBQ3pGLE1BQU1DLGlCQUFpQkMsbUJBQU9BLENBQUMsbUdBQXlCO0FBQ3hELE1BQU1DLFlBQVlELG1CQUFPQSxDQUFDLHlGQUFvQjtBQUM5QyxNQUFNRSxrQkFBa0JGLG1CQUFPQSxDQUFDLHFHQUEwQjtBQUMxRCxNQUFNRyxjQUFjSCxtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsTUFBTUksaUJBQWlCSixtQkFBT0EsQ0FBQywyRkFBcUI7QUFDcEQsZUFBZUYsV0FBV08sSUFBSSxFQUFFQyxHQUFHLEVBQUVDLE9BQU87SUFDeEMsSUFBSSxPQUFPRixTQUFTLFlBQVlBLEtBQUtHLFFBQVEsa0NBQWtDLEdBQUc7UUFDOUUsTUFBTSxJQUFJQyxVQUFVO0lBQ3hCO0lBQ0EsT0FBTyxDQUFDLEdBQUdSLFVBQVVTLFFBQU8sRUFBR0wsTUFBTUMsS0FBS0M7QUFDOUM7QUFDQWQsa0JBQWtCSyxHQUFHQTtBQUNyQixlQUFlRCxXQUFXYyxJQUFJLEVBQUVMLEdBQUcsRUFBRUMsT0FBTztJQUN4QyxJQUFJLE9BQU9JLFNBQVMsWUFBWUEsS0FBS0gsUUFBUSxtQ0FBbUMsR0FBRztRQUMvRSxNQUFNLElBQUlDLFVBQVU7SUFDeEI7SUFDQSxPQUFPLENBQUMsR0FBR1IsVUFBVVcsUUFBTyxFQUFHRCxNQUFNTCxLQUFLQztBQUM5QztBQUNBZCxrQkFBa0JJLEdBQUdBO0FBQ3JCLGVBQWVELFlBQVlpQixLQUFLLEVBQUVQLEdBQUcsRUFBRUMsT0FBTztJQUMxQyxJQUFJLE9BQU9NLFVBQVUsWUFBWUEsTUFBTUwsUUFBUSxtQ0FBbUMsR0FBRztRQUNqRixNQUFNLElBQUlDLFVBQVU7SUFDeEI7SUFDQSxPQUFPLENBQUMsR0FBR1IsVUFBVWEsU0FBUSxFQUFHRCxPQUFPUCxLQUFLQztBQUNoRDtBQUNBZCxtQkFBbUJHLEdBQUdBO0FBQ3RCLGVBQWVELFVBQVVvQixHQUFHLEVBQUVULEdBQUcsRUFBRVUsY0FBYztJQUM3QyxJQUFJQztJQUNKLElBQUksQ0FBQyxDQUFDLEdBQUdiLGVBQWVjLE9BQU0sRUFBR0gsTUFBTTtRQUNuQyxNQUFNLElBQUlOLFVBQVU7SUFDeEI7SUFDQUgsT0FBUUEsQ0FBQUEsTUFBTVMsSUFBSVQsR0FBRTtJQUNwQixPQUFRUyxJQUFJSTtRQUNSLEtBQUs7WUFDRCxJQUFJLE9BQU9KLElBQUlLLE1BQU0sWUFBWSxDQUFDTCxJQUFJSyxHQUFHO2dCQUNyQyxNQUFNLElBQUlYLFVBQVU7WUFDeEI7WUFDQU8sbUJBQW1CLFFBQVFBLG1CQUFtQixLQUFLLElBQUlBLGlCQUFrQkEsaUJBQWlCRCxJQUFJTSxRQUFRO1lBQ3RHLElBQUlMLGdCQUFnQjtnQkFDaEIsT0FBTyxDQUFDLEdBQUdkLGdCQUFnQmdCLE9BQU0sRUFBRztvQkFBRSxHQUFHSCxHQUFHO29CQUFFVDtvQkFBS2UsS0FBSyxDQUFDSixLQUFLRixJQUFJTSxHQUFFLE1BQU8sUUFBUUosT0FBTyxLQUFLLElBQUlBLEtBQUs7Z0JBQU07WUFDbEg7WUFDQSxPQUFPLENBQUMsR0FBR2xCLGVBQWV1QixNQUFLLEVBQUdQLElBQUlLO1FBQzFDLEtBQUs7WUFDRCxJQUFJTCxJQUFJUSxRQUFRQyxXQUFXO2dCQUN2QixNQUFNLElBQUlyQixZQUFZc0IsaUJBQWlCO1lBQzNDO1FBQ0osS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPLENBQUMsR0FBR3ZCLGdCQUFnQmdCLE9BQU0sRUFBRztnQkFBRSxHQUFHSCxHQUFHO2dCQUFFVDtZQUFJO1FBQ3REO1lBQ0ksTUFBTSxJQUFJSCxZQUFZc0IsaUJBQWlCO0lBQy9DO0FBQ0o7QUFDQWhDLGlCQUFpQkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9rZXkvaW1wb3J0LmpzPzNmMjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmltcG9ydEpXSyA9IGV4cG9ydHMuaW1wb3J0UEtDUzggPSBleHBvcnRzLmltcG9ydFg1MDkgPSBleHBvcnRzLmltcG9ydFNQS0kgPSB2b2lkIDA7XG5jb25zdCBiYXNlNjR1cmxfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lL2Jhc2U2NHVybC5qc1wiKTtcbmNvbnN0IGFzbjFfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lL2FzbjEuanNcIik7XG5jb25zdCBqd2tfdG9fa2V5X2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9qd2tfdG9fa2V5LmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBpc19vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaXNfb2JqZWN0LmpzXCIpO1xuYXN5bmMgZnVuY3Rpb24gaW1wb3J0U1BLSShzcGtpLCBhbGcsIG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIHNwa2kgIT09ICdzdHJpbmcnIHx8IHNwa2kuaW5kZXhPZignLS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0nKSAhPT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcInNwa2lcIiBtdXN0IGJlIFNQS0kgZm9ybWF0dGVkIHN0cmluZycpO1xuICAgIH1cbiAgICByZXR1cm4gKDAsIGFzbjFfanNfMS5mcm9tU1BLSSkoc3BraSwgYWxnLCBvcHRpb25zKTtcbn1cbmV4cG9ydHMuaW1wb3J0U1BLSSA9IGltcG9ydFNQS0k7XG5hc3luYyBmdW5jdGlvbiBpbXBvcnRYNTA5KHg1MDksIGFsZywgb3B0aW9ucykge1xuICAgIGlmICh0eXBlb2YgeDUwOSAhPT0gJ3N0cmluZycgfHwgeDUwOS5pbmRleE9mKCctLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0nKSAhPT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcIng1MDlcIiBtdXN0IGJlIFguNTA5IGZvcm1hdHRlZCBzdHJpbmcnKTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBhc24xX2pzXzEuZnJvbVg1MDkpKHg1MDksIGFsZywgb3B0aW9ucyk7XG59XG5leHBvcnRzLmltcG9ydFg1MDkgPSBpbXBvcnRYNTA5O1xuYXN5bmMgZnVuY3Rpb24gaW1wb3J0UEtDUzgocGtjczgsIGFsZywgb3B0aW9ucykge1xuICAgIGlmICh0eXBlb2YgcGtjczggIT09ICdzdHJpbmcnIHx8IHBrY3M4LmluZGV4T2YoJy0tLS0tQkVHSU4gUFJJVkFURSBLRVktLS0tLScpICE9PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1wicGtjczhcIiBtdXN0IGJlIFBLQ1MjOCBmb3JtYXR0ZWQgc3RyaW5nJyk7XG4gICAgfVxuICAgIHJldHVybiAoMCwgYXNuMV9qc18xLmZyb21QS0NTOCkocGtjczgsIGFsZywgb3B0aW9ucyk7XG59XG5leHBvcnRzLmltcG9ydFBLQ1M4ID0gaW1wb3J0UEtDUzg7XG5hc3luYyBmdW5jdGlvbiBpbXBvcnRKV0soandrLCBhbGcsIG9jdEFzS2V5T2JqZWN0KSB7XG4gICAgdmFyIF9hO1xuICAgIGlmICghKDAsIGlzX29iamVjdF9qc18xLmRlZmF1bHQpKGp3aykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSldLIG11c3QgYmUgYW4gb2JqZWN0Jyk7XG4gICAgfVxuICAgIGFsZyB8fCAoYWxnID0gandrLmFsZyk7XG4gICAgc3dpdGNoIChqd2sua3R5KSB7XG4gICAgICAgIGNhc2UgJ29jdCc6XG4gICAgICAgICAgICBpZiAodHlwZW9mIGp3ay5rICE9PSAnc3RyaW5nJyB8fCAhandrLmspIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdtaXNzaW5nIFwia1wiIChLZXkgVmFsdWUpIFBhcmFtZXRlciB2YWx1ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb2N0QXNLZXlPYmplY3QgIT09IG51bGwgJiYgb2N0QXNLZXlPYmplY3QgIT09IHZvaWQgMCA/IG9jdEFzS2V5T2JqZWN0IDogKG9jdEFzS2V5T2JqZWN0ID0gandrLmV4dCAhPT0gdHJ1ZSk7XG4gICAgICAgICAgICBpZiAob2N0QXNLZXlPYmplY3QpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKDAsIGp3a190b19rZXlfanNfMS5kZWZhdWx0KSh7IC4uLmp3aywgYWxnLCBleHQ6IChfYSA9IGp3ay5leHQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGZhbHNlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuICgwLCBiYXNlNjR1cmxfanNfMS5kZWNvZGUpKGp3ay5rKTtcbiAgICAgICAgY2FzZSAnUlNBJzpcbiAgICAgICAgICAgIGlmIChqd2sub3RoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSk9TRU5vdFN1cHBvcnRlZCgnUlNBIEpXSyBcIm90aFwiIChPdGhlciBQcmltZXMgSW5mbykgUGFyYW1ldGVyIHZhbHVlIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgY2FzZSAnRUMnOlxuICAgICAgICBjYXNlICdPS1AnOlxuICAgICAgICAgICAgcmV0dXJuICgwLCBqd2tfdG9fa2V5X2pzXzEuZGVmYXVsdCkoeyAuLi5qd2ssIGFsZyB9KTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KT1NFTm90U3VwcG9ydGVkKCdVbnN1cHBvcnRlZCBcImt0eVwiIChLZXkgVHlwZSkgUGFyYW1ldGVyIHZhbHVlJyk7XG4gICAgfVxufVxuZXhwb3J0cy5pbXBvcnRKV0sgPSBpbXBvcnRKV0s7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpbXBvcnRKV0siLCJpbXBvcnRQS0NTOCIsImltcG9ydFg1MDkiLCJpbXBvcnRTUEtJIiwiYmFzZTY0dXJsX2pzXzEiLCJyZXF1aXJlIiwiYXNuMV9qc18xIiwiandrX3RvX2tleV9qc18xIiwiZXJyb3JzX2pzXzEiLCJpc19vYmplY3RfanNfMSIsInNwa2kiLCJhbGciLCJvcHRpb25zIiwiaW5kZXhPZiIsIlR5cGVFcnJvciIsImZyb21TUEtJIiwieDUwOSIsImZyb21YNTA5IiwicGtjczgiLCJmcm9tUEtDUzgiLCJqd2siLCJvY3RBc0tleU9iamVjdCIsIl9hIiwiZGVmYXVsdCIsImt0eSIsImsiLCJleHQiLCJkZWNvZGUiLCJvdGgiLCJ1bmRlZmluZWQiLCJKT1NFTm90U3VwcG9ydGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/key/import.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/aesgcmkw.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/aesgcmkw.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.unwrap = exports.wrap = void 0;\nconst encrypt_js_1 = __webpack_require__(/*! ../runtime/encrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/encrypt.js\");\nconst decrypt_js_1 = __webpack_require__(/*! ../runtime/decrypt.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/decrypt.js\");\nconst iv_js_1 = __webpack_require__(/*! ./iv.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/iv.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nasync function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    iv || (iv = (0, iv_js_1.default)(jweAlgorithm));\n    const { ciphertext: encryptedKey, tag } = await (0, encrypt_js_1.default)(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return {\n        encryptedKey,\n        iv: (0, base64url_js_1.encode)(iv),\n        tag: (0, base64url_js_1.encode)(tag)\n    };\n}\nexports.wrap = wrap;\nasync function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return (0, decrypt_js_1.default)(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\nexports.unwrap = unwrap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9hZXNnY21rdy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsY0FBY0UsR0FBR0YsWUFBWUcsR0FBRyxLQUFLO0FBQ3JDLE1BQU1DLGVBQWVDLG1CQUFPQSxDQUFDLCtGQUF1QjtBQUNwRCxNQUFNQyxlQUFlRCxtQkFBT0EsQ0FBQywrRkFBdUI7QUFDcEQsTUFBTUUsVUFBVUYsbUJBQU9BLENBQUMsd0VBQVM7QUFDakMsTUFBTUcsaUJBQWlCSCxtQkFBT0EsQ0FBQyxtR0FBeUI7QUFDeEQsZUFBZUYsS0FBS00sR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsRUFBRTtJQUNqQyxNQUFNQyxlQUFlSixJQUFJSyxNQUFNLEdBQUc7SUFDbENGLE1BQU9BLENBQUFBLEtBQUssQ0FBQyxHQUFHTCxRQUFRUSxPQUFNLEVBQUdGLGFBQVk7SUFDN0MsTUFBTSxFQUFFRyxZQUFZQyxZQUFZLEVBQUVDLEdBQUcsRUFBRSxHQUFHLE1BQU0sQ0FBQyxHQUFHZCxhQUFhVyxPQUFNLEVBQUdGLGNBQWNGLEtBQUtELEtBQUtFLElBQUksSUFBSU8sV0FBVztJQUNySCxPQUFPO1FBQUVGO1FBQWNMLElBQUksQ0FBQyxHQUFHSixlQUFlWSxNQUFLLEVBQUdSO1FBQUtNLEtBQUssQ0FBQyxHQUFHVixlQUFlWSxNQUFLLEVBQUdGO0lBQUs7QUFDcEc7QUFDQWxCLFlBQVlHLEdBQUdBO0FBQ2YsZUFBZUQsT0FBT08sR0FBRyxFQUFFQyxHQUFHLEVBQUVPLFlBQVksRUFBRUwsRUFBRSxFQUFFTSxHQUFHO0lBQ2pELE1BQU1MLGVBQWVKLElBQUlLLE1BQU0sR0FBRztJQUNsQyxPQUFPLENBQUMsR0FBR1IsYUFBYVMsT0FBTSxFQUFHRixjQUFjSCxLQUFLTyxjQUFjTCxJQUFJTSxLQUFLLElBQUlDLFdBQVc7QUFDOUY7QUFDQW5CLGNBQWNFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2Flc2djbWt3LmpzP2QwYzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVud3JhcCA9IGV4cG9ydHMud3JhcCA9IHZvaWQgMDtcbmNvbnN0IGVuY3J5cHRfanNfMSA9IHJlcXVpcmUoXCIuLi9ydW50aW1lL2VuY3J5cHQuanNcIik7XG5jb25zdCBkZWNyeXB0X2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9kZWNyeXB0LmpzXCIpO1xuY29uc3QgaXZfanNfMSA9IHJlcXVpcmUoXCIuL2l2LmpzXCIpO1xuY29uc3QgYmFzZTY0dXJsX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9iYXNlNjR1cmwuanNcIik7XG5hc3luYyBmdW5jdGlvbiB3cmFwKGFsZywga2V5LCBjZWssIGl2KSB7XG4gICAgY29uc3QgandlQWxnb3JpdGhtID0gYWxnLnNsaWNlKDAsIDcpO1xuICAgIGl2IHx8IChpdiA9ICgwLCBpdl9qc18xLmRlZmF1bHQpKGp3ZUFsZ29yaXRobSkpO1xuICAgIGNvbnN0IHsgY2lwaGVydGV4dDogZW5jcnlwdGVkS2V5LCB0YWcgfSA9IGF3YWl0ICgwLCBlbmNyeXB0X2pzXzEuZGVmYXVsdCkoandlQWxnb3JpdGhtLCBjZWssIGtleSwgaXYsIG5ldyBVaW50OEFycmF5KDApKTtcbiAgICByZXR1cm4geyBlbmNyeXB0ZWRLZXksIGl2OiAoMCwgYmFzZTY0dXJsX2pzXzEuZW5jb2RlKShpdiksIHRhZzogKDAsIGJhc2U2NHVybF9qc18xLmVuY29kZSkodGFnKSB9O1xufVxuZXhwb3J0cy53cmFwID0gd3JhcDtcbmFzeW5jIGZ1bmN0aW9uIHVud3JhcChhbGcsIGtleSwgZW5jcnlwdGVkS2V5LCBpdiwgdGFnKSB7XG4gICAgY29uc3QgandlQWxnb3JpdGhtID0gYWxnLnNsaWNlKDAsIDcpO1xuICAgIHJldHVybiAoMCwgZGVjcnlwdF9qc18xLmRlZmF1bHQpKGp3ZUFsZ29yaXRobSwga2V5LCBlbmNyeXB0ZWRLZXksIGl2LCB0YWcsIG5ldyBVaW50OEFycmF5KDApKTtcbn1cbmV4cG9ydHMudW53cmFwID0gdW53cmFwO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidW53cmFwIiwid3JhcCIsImVuY3J5cHRfanNfMSIsInJlcXVpcmUiLCJkZWNyeXB0X2pzXzEiLCJpdl9qc18xIiwiYmFzZTY0dXJsX2pzXzEiLCJhbGciLCJrZXkiLCJjZWsiLCJpdiIsImp3ZUFsZ29yaXRobSIsInNsaWNlIiwiZGVmYXVsdCIsImNpcGhlcnRleHQiLCJlbmNyeXB0ZWRLZXkiLCJ0YWciLCJVaW50OEFycmF5IiwiZW5jb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/aesgcmkw.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/buffer_utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.concatKdf = exports.lengthAndInput = exports.uint32be = exports.uint64be = exports.p2s = exports.concat = exports.decoder = exports.encoder = void 0;\nconst digest_js_1 = __webpack_require__(/*! ../runtime/digest.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/digest.js\");\nexports.encoder = new TextEncoder();\nexports.decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nfunction concat(...buffers) {\n    const size = buffers.reduce((acc, { length })=>acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer)=>{\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexports.concat = concat;\nfunction p2s(alg, p2sInput) {\n    return concat(exports.encoder.encode(alg), new Uint8Array([\n        0\n    ]), p2sInput);\n}\nexports.p2s = p2s;\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([\n        value >>> 24,\n        value >>> 16,\n        value >>> 8,\n        value & 0xff\n    ], offset);\n}\nfunction uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexports.uint64be = uint64be;\nfunction uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexports.uint32be = uint32be;\nfunction lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexports.lengthAndInput = lengthAndInput;\nasync function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for(let iter = 0; iter < iterations; iter++){\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await (0, digest_js_1.default)(\"sha256\", buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\nexports.concatKdf = concatKdf;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9idWZmZXJfdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQkUsR0FBR0Ysc0JBQXNCRyxHQUFHSCxnQkFBZ0JJLEdBQUdKLGdCQUFnQkssR0FBR0wsV0FBV00sR0FBR04sY0FBY08sR0FBR1AsZUFBZVEsR0FBR1IsZUFBZVMsR0FBRyxLQUFLO0FBQzNKLE1BQU1DLGNBQWNDLG1CQUFPQSxDQUFDLDZGQUFzQjtBQUNsRFgsZUFBZVMsR0FBRyxJQUFJRztBQUN0QlosZUFBZVEsR0FBRyxJQUFJSztBQUN0QixNQUFNQyxZQUFZLEtBQUs7QUFDdkIsU0FBU1AsT0FBTyxHQUFHUSxPQUFPO0lBQ3RCLE1BQU1DLE9BQU9ELFFBQVFFLE9BQU8sQ0FBQ0MsS0FBSyxFQUFFQyxNQUFNLEVBQUUsR0FBS0QsTUFBTUMsUUFBUTtJQUMvRCxNQUFNQyxNQUFNLElBQUlDLFdBQVdMO0lBQzNCLElBQUlNLElBQUk7SUFDUlAsUUFBUVEsUUFBUSxDQUFDQztRQUNiSixJQUFJSyxJQUFJRCxRQUFRRjtRQUNoQkEsS0FBS0UsT0FBT0w7SUFDaEI7SUFDQSxPQUFPQztBQUNYO0FBQ0FwQixjQUFjTyxHQUFHQTtBQUNqQixTQUFTRCxJQUFJb0IsR0FBRyxFQUFFQyxRQUFRO0lBQ3RCLE9BQU9wQixPQUFPUCxRQUFRUyxRQUFRbUIsT0FBT0YsTUFBTSxJQUFJTCxXQUFXO1FBQUM7S0FBRSxHQUFHTTtBQUNwRTtBQUNBM0IsV0FBV00sR0FBR0E7QUFDZCxTQUFTdUIsY0FBY1QsR0FBRyxFQUFFbkIsS0FBSyxFQUFFNkIsTUFBTTtJQUNyQyxJQUFJN0IsUUFBUSxLQUFLQSxTQUFTYSxXQUFXO1FBQ2pDLE1BQU0sSUFBSWlCLFdBQVcsQ0FBQywwQkFBMEIsRUFBRWpCLFlBQVksRUFBRSxXQUFXLEVBQUViLE1BQU0sQ0FBQztJQUN4RjtJQUNBbUIsSUFBSUssSUFBSTtRQUFDeEIsVUFBVTtRQUFJQSxVQUFVO1FBQUlBLFVBQVU7UUFBR0EsUUFBUTtLQUFLLEVBQUU2QjtBQUNyRTtBQUNBLFNBQVN6QixTQUFTSixLQUFLO0lBQ25CLE1BQU0rQixPQUFPQyxLQUFLQyxNQUFNakMsUUFBUWE7SUFDaEMsTUFBTXFCLE1BQU1sQyxRQUFRYTtJQUNwQixNQUFNTSxNQUFNLElBQUlDLFdBQVc7SUFDM0JRLGNBQWNULEtBQUtZLE1BQU07SUFDekJILGNBQWNULEtBQUtlLEtBQUs7SUFDeEIsT0FBT2Y7QUFDWDtBQUNBcEIsZ0JBQWdCSyxHQUFHQTtBQUNuQixTQUFTRCxTQUFTSCxLQUFLO0lBQ25CLE1BQU1tQixNQUFNLElBQUlDLFdBQVc7SUFDM0JRLGNBQWNULEtBQUtuQjtJQUNuQixPQUFPbUI7QUFDWDtBQUNBcEIsZ0JBQWdCSSxHQUFHQTtBQUNuQixTQUFTRCxlQUFlaUMsS0FBSztJQUN6QixPQUFPN0IsT0FBT0gsU0FBU2dDLE1BQU1qQixTQUFTaUI7QUFDMUM7QUFDQXBDLHNCQUFzQkcsR0FBR0E7QUFDekIsZUFBZUQsVUFBVW1DLE1BQU0sRUFBRUMsSUFBSSxFQUFFckMsS0FBSztJQUN4QyxNQUFNc0MsYUFBYU4sS0FBS08sS0FBSyxDQUFDRixRQUFRLEtBQUs7SUFDM0MsTUFBTUcsTUFBTSxJQUFJcEIsV0FBV2tCLGFBQWE7SUFDeEMsSUFBSyxJQUFJRyxPQUFPLEdBQUdBLE9BQU9ILFlBQVlHLE9BQVE7UUFDMUMsTUFBTXRCLE1BQU0sSUFBSUMsV0FBVyxJQUFJZ0IsT0FBT2xCLFNBQVNsQixNQUFNa0I7UUFDckRDLElBQUlLLElBQUlyQixTQUFTc0MsT0FBTztRQUN4QnRCLElBQUlLLElBQUlZLFFBQVE7UUFDaEJqQixJQUFJSyxJQUFJeEIsT0FBTyxJQUFJb0MsT0FBT2xCO1FBQzFCc0IsSUFBSWhCLElBQUksTUFBTSxDQUFDLEdBQUdmLFlBQVlpQyxPQUFNLEVBQUcsVUFBVXZCLE1BQU1zQixPQUFPO0lBQ2xFO0lBQ0EsT0FBT0QsSUFBSUcsTUFBTSxHQUFHTixRQUFRO0FBQ2hDO0FBQ0F0QyxpQkFBaUJFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2J1ZmZlcl91dGlscy5qcz82NGQwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jb25jYXRLZGYgPSBleHBvcnRzLmxlbmd0aEFuZElucHV0ID0gZXhwb3J0cy51aW50MzJiZSA9IGV4cG9ydHMudWludDY0YmUgPSBleHBvcnRzLnAycyA9IGV4cG9ydHMuY29uY2F0ID0gZXhwb3J0cy5kZWNvZGVyID0gZXhwb3J0cy5lbmNvZGVyID0gdm9pZCAwO1xuY29uc3QgZGlnZXN0X2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9kaWdlc3QuanNcIik7XG5leHBvcnRzLmVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbmV4cG9ydHMuZGVjb2RlciA9IG5ldyBUZXh0RGVjb2RlcigpO1xuY29uc3QgTUFYX0lOVDMyID0gMiAqKiAzMjtcbmZ1bmN0aW9uIGNvbmNhdCguLi5idWZmZXJzKSB7XG4gICAgY29uc3Qgc2l6ZSA9IGJ1ZmZlcnMucmVkdWNlKChhY2MsIHsgbGVuZ3RoIH0pID0+IGFjYyArIGxlbmd0aCwgMCk7XG4gICAgY29uc3QgYnVmID0gbmV3IFVpbnQ4QXJyYXkoc2l6ZSk7XG4gICAgbGV0IGkgPSAwO1xuICAgIGJ1ZmZlcnMuZm9yRWFjaCgoYnVmZmVyKSA9PiB7XG4gICAgICAgIGJ1Zi5zZXQoYnVmZmVyLCBpKTtcbiAgICAgICAgaSArPSBidWZmZXIubGVuZ3RoO1xuICAgIH0pO1xuICAgIHJldHVybiBidWY7XG59XG5leHBvcnRzLmNvbmNhdCA9IGNvbmNhdDtcbmZ1bmN0aW9uIHAycyhhbGcsIHAyc0lucHV0KSB7XG4gICAgcmV0dXJuIGNvbmNhdChleHBvcnRzLmVuY29kZXIuZW5jb2RlKGFsZyksIG5ldyBVaW50OEFycmF5KFswXSksIHAyc0lucHV0KTtcbn1cbmV4cG9ydHMucDJzID0gcDJzO1xuZnVuY3Rpb24gd3JpdGVVSW50MzJCRShidWYsIHZhbHVlLCBvZmZzZXQpIHtcbiAgICBpZiAodmFsdWUgPCAwIHx8IHZhbHVlID49IE1BWF9JTlQzMikge1xuICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihgdmFsdWUgbXVzdCBiZSA+PSAwIGFuZCA8PSAke01BWF9JTlQzMiAtIDF9LiBSZWNlaXZlZCAke3ZhbHVlfWApO1xuICAgIH1cbiAgICBidWYuc2V0KFt2YWx1ZSA+Pj4gMjQsIHZhbHVlID4+PiAxNiwgdmFsdWUgPj4+IDgsIHZhbHVlICYgMHhmZl0sIG9mZnNldCk7XG59XG5mdW5jdGlvbiB1aW50NjRiZSh2YWx1ZSkge1xuICAgIGNvbnN0IGhpZ2ggPSBNYXRoLmZsb29yKHZhbHVlIC8gTUFYX0lOVDMyKTtcbiAgICBjb25zdCBsb3cgPSB2YWx1ZSAlIE1BWF9JTlQzMjtcbiAgICBjb25zdCBidWYgPSBuZXcgVWludDhBcnJheSg4KTtcbiAgICB3cml0ZVVJbnQzMkJFKGJ1ZiwgaGlnaCwgMCk7XG4gICAgd3JpdGVVSW50MzJCRShidWYsIGxvdywgNCk7XG4gICAgcmV0dXJuIGJ1Zjtcbn1cbmV4cG9ydHMudWludDY0YmUgPSB1aW50NjRiZTtcbmZ1bmN0aW9uIHVpbnQzMmJlKHZhbHVlKSB7XG4gICAgY29uc3QgYnVmID0gbmV3IFVpbnQ4QXJyYXkoNCk7XG4gICAgd3JpdGVVSW50MzJCRShidWYsIHZhbHVlKTtcbiAgICByZXR1cm4gYnVmO1xufVxuZXhwb3J0cy51aW50MzJiZSA9IHVpbnQzMmJlO1xuZnVuY3Rpb24gbGVuZ3RoQW5kSW5wdXQoaW5wdXQpIHtcbiAgICByZXR1cm4gY29uY2F0KHVpbnQzMmJlKGlucHV0Lmxlbmd0aCksIGlucHV0KTtcbn1cbmV4cG9ydHMubGVuZ3RoQW5kSW5wdXQgPSBsZW5ndGhBbmRJbnB1dDtcbmFzeW5jIGZ1bmN0aW9uIGNvbmNhdEtkZihzZWNyZXQsIGJpdHMsIHZhbHVlKSB7XG4gICAgY29uc3QgaXRlcmF0aW9ucyA9IE1hdGguY2VpbCgoYml0cyA+PiAzKSAvIDMyKTtcbiAgICBjb25zdCByZXMgPSBuZXcgVWludDhBcnJheShpdGVyYXRpb25zICogMzIpO1xuICAgIGZvciAobGV0IGl0ZXIgPSAwOyBpdGVyIDwgaXRlcmF0aW9uczsgaXRlcisrKSB7XG4gICAgICAgIGNvbnN0IGJ1ZiA9IG5ldyBVaW50OEFycmF5KDQgKyBzZWNyZXQubGVuZ3RoICsgdmFsdWUubGVuZ3RoKTtcbiAgICAgICAgYnVmLnNldCh1aW50MzJiZShpdGVyICsgMSkpO1xuICAgICAgICBidWYuc2V0KHNlY3JldCwgNCk7XG4gICAgICAgIGJ1Zi5zZXQodmFsdWUsIDQgKyBzZWNyZXQubGVuZ3RoKTtcbiAgICAgICAgcmVzLnNldChhd2FpdCAoMCwgZGlnZXN0X2pzXzEuZGVmYXVsdCkoJ3NoYTI1NicsIGJ1ZiksIGl0ZXIgKiAzMik7XG4gICAgfVxuICAgIHJldHVybiByZXMuc2xpY2UoMCwgYml0cyA+PiAzKTtcbn1cbmV4cG9ydHMuY29uY2F0S2RmID0gY29uY2F0S2RmO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY29uY2F0S2RmIiwibGVuZ3RoQW5kSW5wdXQiLCJ1aW50MzJiZSIsInVpbnQ2NGJlIiwicDJzIiwiY29uY2F0IiwiZGVjb2RlciIsImVuY29kZXIiLCJkaWdlc3RfanNfMSIsInJlcXVpcmUiLCJUZXh0RW5jb2RlciIsIlRleHREZWNvZGVyIiwiTUFYX0lOVDMyIiwiYnVmZmVycyIsInNpemUiLCJyZWR1Y2UiLCJhY2MiLCJsZW5ndGgiLCJidWYiLCJVaW50OEFycmF5IiwiaSIsImZvckVhY2giLCJidWZmZXIiLCJzZXQiLCJhbGciLCJwMnNJbnB1dCIsImVuY29kZSIsIndyaXRlVUludDMyQkUiLCJvZmZzZXQiLCJSYW5nZUVycm9yIiwiaGlnaCIsIk1hdGgiLCJmbG9vciIsImxvdyIsImlucHV0Iiwic2VjcmV0IiwiYml0cyIsIml0ZXJhdGlvbnMiLCJjZWlsIiwicmVzIiwiaXRlciIsImRlZmF1bHQiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/cek.js":
/*!****************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/cek.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.bitLength = void 0;\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst random_js_1 = __webpack_require__(/*! ../runtime/random.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/random.js\");\nfunction bitLength(alg) {\n    switch(alg){\n        case \"A128GCM\":\n            return 128;\n        case \"A192GCM\":\n            return 192;\n        case \"A256GCM\":\n        case \"A128CBC-HS256\":\n            return 256;\n        case \"A192CBC-HS384\":\n            return 384;\n        case \"A256CBC-HS512\":\n            return 512;\n        default:\n            throw new errors_js_1.JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexports.bitLength = bitLength;\nexports[\"default\"] = (alg)=>(0, random_js_1.default)(new Uint8Array(bitLength(alg) >> 3));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9jZWsuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQkUsR0FBRyxLQUFLO0FBQ3pCLE1BQU1DLGNBQWNDLG1CQUFPQSxDQUFDLHVGQUFtQjtBQUMvQyxNQUFNQyxjQUFjRCxtQkFBT0EsQ0FBQyw2RkFBc0I7QUFDbEQsU0FBU0YsVUFBVUksR0FBRztJQUNsQixPQUFRQTtRQUNKLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1g7WUFDSSxNQUFNLElBQUlILFlBQVlJLGlCQUFpQixDQUFDLDJCQUEyQixFQUFFRCxJQUFJLENBQUM7SUFDbEY7QUFDSjtBQUNBTixpQkFBaUJFLEdBQUdBO0FBQ3BCRixrQkFBZVEsR0FBRyxDQUFDRixNQUFRLENBQUMsR0FBR0QsWUFBWUcsT0FBTSxFQUFHLElBQUlDLFdBQVdQLFVBQVVJLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvY2VrLmpzPzJjMzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJpdExlbmd0aCA9IHZvaWQgMDtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgcmFuZG9tX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9yYW5kb20uanNcIik7XG5mdW5jdGlvbiBiaXRMZW5ndGgoYWxnKSB7XG4gICAgc3dpdGNoIChhbGcpIHtcbiAgICAgICAgY2FzZSAnQTEyOEdDTSc6XG4gICAgICAgICAgICByZXR1cm4gMTI4O1xuICAgICAgICBjYXNlICdBMTkyR0NNJzpcbiAgICAgICAgICAgIHJldHVybiAxOTI7XG4gICAgICAgIGNhc2UgJ0EyNTZHQ00nOlxuICAgICAgICBjYXNlICdBMTI4Q0JDLUhTMjU2JzpcbiAgICAgICAgICAgIHJldHVybiAyNTY7XG4gICAgICAgIGNhc2UgJ0ExOTJDQkMtSFMzODQnOlxuICAgICAgICAgICAgcmV0dXJuIDM4NDtcbiAgICAgICAgY2FzZSAnQTI1NkNCQy1IUzUxMic6XG4gICAgICAgICAgICByZXR1cm4gNTEyO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VOb3RTdXBwb3J0ZWQoYFVuc3VwcG9ydGVkIEpXRSBBbGdvcml0aG06ICR7YWxnfWApO1xuICAgIH1cbn1cbmV4cG9ydHMuYml0TGVuZ3RoID0gYml0TGVuZ3RoO1xuZXhwb3J0cy5kZWZhdWx0ID0gKGFsZykgPT4gKDAsIHJhbmRvbV9qc18xLmRlZmF1bHQpKG5ldyBVaW50OEFycmF5KGJpdExlbmd0aChhbGcpID4+IDMpKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImJpdExlbmd0aCIsImVycm9yc19qc18xIiwicmVxdWlyZSIsInJhbmRvbV9qc18xIiwiYWxnIiwiSk9TRU5vdFN1cHBvcnRlZCIsImRlZmF1bHQiLCJVaW50OEFycmF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/cek.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_iv_length.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/check_iv_length.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst iv_js_1 = __webpack_require__(/*! ./iv.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/iv.js\");\nconst checkIvLength = (enc, iv)=>{\n    if (iv.length << 3 !== (0, iv_js_1.bitLength)(enc)) {\n        throw new errors_js_1.JWEInvalid(\"Invalid Initialization Vector length\");\n    }\n};\nexports[\"default\"] = checkIvLength;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9jaGVja19pdl9sZW5ndGguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMsdUZBQW1CO0FBQy9DLE1BQU1DLFVBQVVELG1CQUFPQSxDQUFDLHdFQUFTO0FBQ2pDLE1BQU1FLGdCQUFnQixDQUFDQyxLQUFLQztJQUN4QixJQUFJQSxHQUFHQyxVQUFVLE1BQU0sQ0FBQyxHQUFHSixRQUFRSyxTQUFRLEVBQUdILE1BQU07UUFDaEQsTUFBTSxJQUFJSixZQUFZUSxXQUFXO0lBQ3JDO0FBQ0o7QUFDQVYsa0JBQWVXLEdBQUdOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2NoZWNrX2l2X2xlbmd0aC5qcz82ZDYyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBpdl9qc18xID0gcmVxdWlyZShcIi4vaXYuanNcIik7XG5jb25zdCBjaGVja0l2TGVuZ3RoID0gKGVuYywgaXYpID0+IHtcbiAgICBpZiAoaXYubGVuZ3RoIDw8IDMgIT09ICgwLCBpdl9qc18xLmJpdExlbmd0aCkoZW5jKSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZCgnSW52YWxpZCBJbml0aWFsaXphdGlvbiBWZWN0b3IgbGVuZ3RoJyk7XG4gICAgfVxufTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNoZWNrSXZMZW5ndGg7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlcnJvcnNfanNfMSIsInJlcXVpcmUiLCJpdl9qc18xIiwiY2hlY2tJdkxlbmd0aCIsImVuYyIsIml2IiwibGVuZ3RoIiwiYml0TGVuZ3RoIiwiSldFSW52YWxpZCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_iv_length.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_key_type.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/check_key_type.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst invalid_key_input_js_1 = __webpack_require__(/*! ./invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ../runtime/is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst symmetricTypeCheck = (alg, key)=>{\n    if (key instanceof Uint8Array) return;\n    if (!(0, is_key_like_js_1.default)(key)) {\n        throw new TypeError((0, invalid_key_input_js_1.withAlg)(alg, key, ...is_key_like_js_1.types, \"Uint8Array\"));\n    }\n    if (key.type !== \"secret\") {\n        throw new TypeError(`${is_key_like_js_1.types.join(\" or \")} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage)=>{\n    if (!(0, is_key_like_js_1.default)(key)) {\n        throw new TypeError((0, invalid_key_input_js_1.withAlg)(alg, key, ...is_key_like_js_1.types));\n    }\n    if (key.type === \"secret\") {\n        throw new TypeError(`${is_key_like_js_1.types.join(\" or \")} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === \"sign\" && key.type === \"public\") {\n        throw new TypeError(`${is_key_like_js_1.types.join(\" or \")} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === \"decrypt\" && key.type === \"public\") {\n        throw new TypeError(`${is_key_like_js_1.types.join(\" or \")} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === \"verify\" && key.type === \"private\") {\n        throw new TypeError(`${is_key_like_js_1.types.join(\" or \")} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === \"encrypt\" && key.type === \"private\") {\n        throw new TypeError(`${is_key_like_js_1.types.join(\" or \")} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage)=>{\n    const symmetric = alg.startsWith(\"HS\") || alg === \"dir\" || alg.startsWith(\"PBES2\") || /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    } else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\nexports[\"default\"] = checkKeyType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9jaGVja19rZXlfdHlwZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyx5QkFBeUJDLG1CQUFPQSxDQUFDLHNHQUF3QjtBQUMvRCxNQUFNQyxtQkFBbUJELG1CQUFPQSxDQUFDLHVHQUEyQjtBQUM1RCxNQUFNRSxxQkFBcUIsQ0FBQ0MsS0FBS0M7SUFDN0IsSUFBSUEsZUFBZUMsWUFDZjtJQUNKLElBQUksQ0FBQyxDQUFDLEdBQUdKLGlCQUFpQkssT0FBTSxFQUFHRixNQUFNO1FBQ3JDLE1BQU0sSUFBSUcsVUFBVSxDQUFDLEdBQUdSLHVCQUF1QlMsT0FBTSxFQUFHTCxLQUFLQyxRQUFRSCxpQkFBaUJRLE9BQU87SUFDakc7SUFDQSxJQUFJTCxJQUFJTSxTQUFTLFVBQVU7UUFDdkIsTUFBTSxJQUFJSCxVQUFVLENBQUMsRUFBRU4saUJBQWlCUSxNQUFNRSxLQUFLLFFBQVEsNERBQTRELENBQUM7SUFDNUg7QUFDSjtBQUNBLE1BQU1DLHNCQUFzQixDQUFDVCxLQUFLQyxLQUFLUztJQUNuQyxJQUFJLENBQUMsQ0FBQyxHQUFHWixpQkFBaUJLLE9BQU0sRUFBR0YsTUFBTTtRQUNyQyxNQUFNLElBQUlHLFVBQVUsQ0FBQyxHQUFHUix1QkFBdUJTLE9BQU0sRUFBR0wsS0FBS0MsUUFBUUgsaUJBQWlCUTtJQUMxRjtJQUNBLElBQUlMLElBQUlNLFNBQVMsVUFBVTtRQUN2QixNQUFNLElBQUlILFVBQVUsQ0FBQyxFQUFFTixpQkFBaUJRLE1BQU1FLEtBQUssUUFBUSxpRUFBaUUsQ0FBQztJQUNqSTtJQUNBLElBQUlFLFVBQVUsVUFBVVQsSUFBSU0sU0FBUyxVQUFVO1FBQzNDLE1BQU0sSUFBSUgsVUFBVSxDQUFDLEVBQUVOLGlCQUFpQlEsTUFBTUUsS0FBSyxRQUFRLHFFQUFxRSxDQUFDO0lBQ3JJO0lBQ0EsSUFBSUUsVUFBVSxhQUFhVCxJQUFJTSxTQUFTLFVBQVU7UUFDOUMsTUFBTSxJQUFJSCxVQUFVLENBQUMsRUFBRU4saUJBQWlCUSxNQUFNRSxLQUFLLFFBQVEsd0VBQXdFLENBQUM7SUFDeEk7SUFDQSxJQUFJUCxJQUFJVSxhQUFhRCxVQUFVLFlBQVlULElBQUlNLFNBQVMsV0FBVztRQUMvRCxNQUFNLElBQUlILFVBQVUsQ0FBQyxFQUFFTixpQkFBaUJRLE1BQU1FLEtBQUssUUFBUSxzRUFBc0UsQ0FBQztJQUN0STtJQUNBLElBQUlQLElBQUlVLGFBQWFELFVBQVUsYUFBYVQsSUFBSU0sU0FBUyxXQUFXO1FBQ2hFLE1BQU0sSUFBSUgsVUFBVSxDQUFDLEVBQUVOLGlCQUFpQlEsTUFBTUUsS0FBSyxRQUFRLHVFQUF1RSxDQUFDO0lBQ3ZJO0FBQ0o7QUFDQSxNQUFNSSxlQUFlLENBQUNaLEtBQUtDLEtBQUtTO0lBQzVCLE1BQU1HLFlBQVliLElBQUljLFdBQVcsU0FDN0JkLFFBQVEsU0FDUkEsSUFBSWMsV0FBVyxZQUNmLHFCQUFxQkMsS0FBS2Y7SUFDOUIsSUFBSWEsV0FBVztRQUNYZCxtQkFBbUJDLEtBQUtDO0lBQzVCLE9BQ0s7UUFDRFEsb0JBQW9CVCxLQUFLQyxLQUFLUztJQUNsQztBQUNKO0FBQ0FoQixrQkFBZVMsR0FBR1MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvY2hlY2tfa2V5X3R5cGUuanM/ZWZlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGludmFsaWRfa2V5X2lucHV0X2pzXzEgPSByZXF1aXJlKFwiLi9pbnZhbGlkX2tleV9pbnB1dC5qc1wiKTtcbmNvbnN0IGlzX2tleV9saWtlX2pzXzEgPSByZXF1aXJlKFwiLi4vcnVudGltZS9pc19rZXlfbGlrZS5qc1wiKTtcbmNvbnN0IHN5bW1ldHJpY1R5cGVDaGVjayA9IChhbGcsIGtleSkgPT4ge1xuICAgIGlmIChrZXkgaW5zdGFuY2VvZiBVaW50OEFycmF5KVxuICAgICAgICByZXR1cm47XG4gICAgaWYgKCEoMCwgaXNfa2V5X2xpa2VfanNfMS5kZWZhdWx0KShrZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKDAsIGludmFsaWRfa2V5X2lucHV0X2pzXzEud2l0aEFsZykoYWxnLCBrZXksIC4uLmlzX2tleV9saWtlX2pzXzEudHlwZXMsICdVaW50OEFycmF5JykpO1xuICAgIH1cbiAgICBpZiAoa2V5LnR5cGUgIT09ICdzZWNyZXQnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7aXNfa2V5X2xpa2VfanNfMS50eXBlcy5qb2luKCcgb3IgJyl9IGluc3RhbmNlcyBmb3Igc3ltbWV0cmljIGFsZ29yaXRobXMgbXVzdCBiZSBvZiB0eXBlIFwic2VjcmV0XCJgKTtcbiAgICB9XG59O1xuY29uc3QgYXN5bW1ldHJpY1R5cGVDaGVjayA9IChhbGcsIGtleSwgdXNhZ2UpID0+IHtcbiAgICBpZiAoISgwLCBpc19rZXlfbGlrZV9qc18xLmRlZmF1bHQpKGtleSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigoMCwgaW52YWxpZF9rZXlfaW5wdXRfanNfMS53aXRoQWxnKShhbGcsIGtleSwgLi4uaXNfa2V5X2xpa2VfanNfMS50eXBlcykpO1xuICAgIH1cbiAgICBpZiAoa2V5LnR5cGUgPT09ICdzZWNyZXQnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7aXNfa2V5X2xpa2VfanNfMS50eXBlcy5qb2luKCcgb3IgJyl9IGluc3RhbmNlcyBmb3IgYXN5bW1ldHJpYyBhbGdvcml0aG1zIG11c3Qgbm90IGJlIG9mIHR5cGUgXCJzZWNyZXRcImApO1xuICAgIH1cbiAgICBpZiAodXNhZ2UgPT09ICdzaWduJyAmJiBrZXkudHlwZSA9PT0gJ3B1YmxpYycpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgJHtpc19rZXlfbGlrZV9qc18xLnR5cGVzLmpvaW4oJyBvciAnKX0gaW5zdGFuY2VzIGZvciBhc3ltbWV0cmljIGFsZ29yaXRobSBzaWduaW5nIG11c3QgYmUgb2YgdHlwZSBcInByaXZhdGVcImApO1xuICAgIH1cbiAgICBpZiAodXNhZ2UgPT09ICdkZWNyeXB0JyAmJiBrZXkudHlwZSA9PT0gJ3B1YmxpYycpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgJHtpc19rZXlfbGlrZV9qc18xLnR5cGVzLmpvaW4oJyBvciAnKX0gaW5zdGFuY2VzIGZvciBhc3ltbWV0cmljIGFsZ29yaXRobSBkZWNyeXB0aW9uIG11c3QgYmUgb2YgdHlwZSBcInByaXZhdGVcImApO1xuICAgIH1cbiAgICBpZiAoa2V5LmFsZ29yaXRobSAmJiB1c2FnZSA9PT0gJ3ZlcmlmeScgJiYga2V5LnR5cGUgPT09ICdwcml2YXRlJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGAke2lzX2tleV9saWtlX2pzXzEudHlwZXMuam9pbignIG9yICcpfSBpbnN0YW5jZXMgZm9yIGFzeW1tZXRyaWMgYWxnb3JpdGhtIHZlcmlmeWluZyBtdXN0IGJlIG9mIHR5cGUgXCJwdWJsaWNcImApO1xuICAgIH1cbiAgICBpZiAoa2V5LmFsZ29yaXRobSAmJiB1c2FnZSA9PT0gJ2VuY3J5cHQnICYmIGtleS50eXBlID09PSAncHJpdmF0ZScpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgJHtpc19rZXlfbGlrZV9qc18xLnR5cGVzLmpvaW4oJyBvciAnKX0gaW5zdGFuY2VzIGZvciBhc3ltbWV0cmljIGFsZ29yaXRobSBlbmNyeXB0aW9uIG11c3QgYmUgb2YgdHlwZSBcInB1YmxpY1wiYCk7XG4gICAgfVxufTtcbmNvbnN0IGNoZWNrS2V5VHlwZSA9IChhbGcsIGtleSwgdXNhZ2UpID0+IHtcbiAgICBjb25zdCBzeW1tZXRyaWMgPSBhbGcuc3RhcnRzV2l0aCgnSFMnKSB8fFxuICAgICAgICBhbGcgPT09ICdkaXInIHx8XG4gICAgICAgIGFsZy5zdGFydHNXaXRoKCdQQkVTMicpIHx8XG4gICAgICAgIC9eQVxcZHszfSg/OkdDTSk/S1ckLy50ZXN0KGFsZyk7XG4gICAgaWYgKHN5bW1ldHJpYykge1xuICAgICAgICBzeW1tZXRyaWNUeXBlQ2hlY2soYWxnLCBrZXkpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgYXN5bW1ldHJpY1R5cGVDaGVjayhhbGcsIGtleSwgdXNhZ2UpO1xuICAgIH1cbn07XG5leHBvcnRzLmRlZmF1bHQgPSBjaGVja0tleVR5cGU7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpbnZhbGlkX2tleV9pbnB1dF9qc18xIiwicmVxdWlyZSIsImlzX2tleV9saWtlX2pzXzEiLCJzeW1tZXRyaWNUeXBlQ2hlY2siLCJhbGciLCJrZXkiLCJVaW50OEFycmF5IiwiZGVmYXVsdCIsIlR5cGVFcnJvciIsIndpdGhBbGciLCJ0eXBlcyIsInR5cGUiLCJqb2luIiwiYXN5bW1ldHJpY1R5cGVDaGVjayIsInVzYWdlIiwiYWxnb3JpdGhtIiwiY2hlY2tLZXlUeXBlIiwic3ltbWV0cmljIiwic3RhcnRzV2l0aCIsInRlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_key_type.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_p2s.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/check_p2s.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new errors_js_1.JWEInvalid(\"PBES2 Salt Input must be 8 or more octets\");\n    }\n}\nexports[\"default\"] = checkP2s;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9jaGVja19wMnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMsdUZBQW1CO0FBQy9DLFNBQVNDLFNBQVNDLEdBQUc7SUFDakIsSUFBSSxDQUFFQSxDQUFBQSxlQUFlQyxVQUFTLEtBQU1ELElBQUlFLFNBQVMsR0FBRztRQUNoRCxNQUFNLElBQUlMLFlBQVlNLFdBQVc7SUFDckM7QUFDSjtBQUNBUixrQkFBZVMsR0FBR0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvY2hlY2tfcDJzLmpzP2FjZTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmZ1bmN0aW9uIGNoZWNrUDJzKHAycykge1xuICAgIGlmICghKHAycyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHx8IHAycy5sZW5ndGggPCA4KSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV0VJbnZhbGlkKCdQQkVTMiBTYWx0IElucHV0IG11c3QgYmUgOCBvciBtb3JlIG9jdGV0cycpO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGNoZWNrUDJzO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZXJyb3JzX2pzXzEiLCJyZXF1aXJlIiwiY2hlY2tQMnMiLCJwMnMiLCJVaW50OEFycmF5IiwibGVuZ3RoIiwiSldFSW52YWxpZCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_p2s.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/crypto_key.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.checkEncCryptoKey = exports.checkSigCryptoKey = void 0;\nfunction unusable(name, prop = \"algorithm.name\") {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch(alg){\n        case \"ES256\":\n            return \"P-256\";\n        case \"ES384\":\n            return \"P-384\";\n        case \"ES512\":\n            return \"P-521\";\n        default:\n            throw new Error(\"unreachable\");\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected)=>key.usages.includes(expected))) {\n        let msg = \"CryptoKey does not support this operation, its usages must include \";\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(\", \")}, or ${last}.`;\n        } else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        } else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nfunction checkSigCryptoKey(key, alg, ...usages) {\n    switch(alg){\n        case \"HS256\":\n        case \"HS384\":\n        case \"HS512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"HMAC\")) throw unusable(\"HMAC\");\n                const expected = parseInt(alg.slice(2), 10);\n                const actual = getHashLength(key.algorithm.hash);\n                if (actual !== expected) throw unusable(`SHA-${expected}`, \"algorithm.hash\");\n                break;\n            }\n        case \"RS256\":\n        case \"RS384\":\n        case \"RS512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"RSASSA-PKCS1-v1_5\")) throw unusable(\"RSASSA-PKCS1-v1_5\");\n                const expected = parseInt(alg.slice(2), 10);\n                const actual = getHashLength(key.algorithm.hash);\n                if (actual !== expected) throw unusable(`SHA-${expected}`, \"algorithm.hash\");\n                break;\n            }\n        case \"PS256\":\n        case \"PS384\":\n        case \"PS512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"RSA-PSS\")) throw unusable(\"RSA-PSS\");\n                const expected = parseInt(alg.slice(2), 10);\n                const actual = getHashLength(key.algorithm.hash);\n                if (actual !== expected) throw unusable(`SHA-${expected}`, \"algorithm.hash\");\n                break;\n            }\n        case \"EdDSA\":\n            {\n                if (key.algorithm.name !== \"Ed25519\" && key.algorithm.name !== \"Ed448\") {\n                    throw unusable(\"Ed25519 or Ed448\");\n                }\n                break;\n            }\n        case \"ES256\":\n        case \"ES384\":\n        case \"ES512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"ECDSA\")) throw unusable(\"ECDSA\");\n                const expected = getNamedCurve(alg);\n                const actual = key.algorithm.namedCurve;\n                if (actual !== expected) throw unusable(expected, \"algorithm.namedCurve\");\n                break;\n            }\n        default:\n            throw new TypeError(\"CryptoKey does not support this operation\");\n    }\n    checkUsage(key, usages);\n}\nexports.checkSigCryptoKey = checkSigCryptoKey;\nfunction checkEncCryptoKey(key, alg, ...usages) {\n    switch(alg){\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            {\n                if (!isAlgorithm(key.algorithm, \"AES-GCM\")) throw unusable(\"AES-GCM\");\n                const expected = parseInt(alg.slice(1, 4), 10);\n                const actual = key.algorithm.length;\n                if (actual !== expected) throw unusable(expected, \"algorithm.length\");\n                break;\n            }\n        case \"A128KW\":\n        case \"A192KW\":\n        case \"A256KW\":\n            {\n                if (!isAlgorithm(key.algorithm, \"AES-KW\")) throw unusable(\"AES-KW\");\n                const expected = parseInt(alg.slice(1, 4), 10);\n                const actual = key.algorithm.length;\n                if (actual !== expected) throw unusable(expected, \"algorithm.length\");\n                break;\n            }\n        case \"ECDH\":\n            {\n                switch(key.algorithm.name){\n                    case \"ECDH\":\n                    case \"X25519\":\n                    case \"X448\":\n                        break;\n                    default:\n                        throw unusable(\"ECDH, X25519, or X448\");\n                }\n                break;\n            }\n        case \"PBES2-HS256+A128KW\":\n        case \"PBES2-HS384+A192KW\":\n        case \"PBES2-HS512+A256KW\":\n            if (!isAlgorithm(key.algorithm, \"PBKDF2\")) throw unusable(\"PBKDF2\");\n            break;\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"RSA-OAEP\")) throw unusable(\"RSA-OAEP\");\n                const expected = parseInt(alg.slice(9), 10) || 1;\n                const actual = getHashLength(key.algorithm.hash);\n                if (actual !== expected) throw unusable(`SHA-${expected}`, \"algorithm.hash\");\n                break;\n            }\n        default:\n            throw new TypeError(\"CryptoKey does not support this operation\");\n    }\n    checkUsage(key, usages);\n}\nexports.checkEncCryptoKey = checkEncCryptoKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9jcnlwdG9fa2V5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCx5QkFBeUJFLEdBQUdGLHlCQUF5QkcsR0FBRyxLQUFLO0FBQzdELFNBQVNDLFNBQVNDLElBQUksRUFBRUMsT0FBTyxnQkFBZ0I7SUFDM0MsT0FBTyxJQUFJQyxVQUFVLENBQUMsK0NBQStDLEVBQUVELEtBQUssU0FBUyxFQUFFRCxLQUFLLENBQUM7QUFDakc7QUFDQSxTQUFTRyxZQUFZQyxTQUFTLEVBQUVKLElBQUk7SUFDaEMsT0FBT0ksVUFBVUosU0FBU0E7QUFDOUI7QUFDQSxTQUFTSyxjQUFjQyxJQUFJO0lBQ3ZCLE9BQU9DLFNBQVNELEtBQUtOLEtBQUtRLE1BQU0sSUFBSTtBQUN4QztBQUNBLFNBQVNDLGNBQWNDLEdBQUc7SUFDdEIsT0FBUUE7UUFDSixLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWDtZQUNJLE1BQU0sSUFBSUMsTUFBTTtJQUN4QjtBQUNKO0FBQ0EsU0FBU0MsV0FBV0MsR0FBRyxFQUFFQyxNQUFNO0lBQzNCLElBQUlBLE9BQU9DLFVBQVUsQ0FBQ0QsT0FBT0UsS0FBSyxDQUFDQyxXQUFhSixJQUFJQyxPQUFPSSxTQUFTRCxZQUFZO1FBQzVFLElBQUlFLE1BQU07UUFDVixJQUFJTCxPQUFPQyxTQUFTLEdBQUc7WUFDbkIsTUFBTUssT0FBT04sT0FBT087WUFDcEJGLE9BQU8sQ0FBQyxPQUFPLEVBQUVMLE9BQU9RLEtBQUssTUFBTSxLQUFLLEVBQUVGLEtBQUssQ0FBQyxDQUFDO1FBQ3JELE9BQ0ssSUFBSU4sT0FBT0MsV0FBVyxHQUFHO1lBQzFCSSxPQUFPLENBQUMsT0FBTyxFQUFFTCxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRUEsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDakQsT0FDSztZQUNESyxPQUFPLENBQUMsRUFBRUwsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDMUI7UUFDQSxNQUFNLElBQUlaLFVBQVVpQjtJQUN4QjtBQUNKO0FBQ0EsU0FBU3JCLGtCQUFrQmUsR0FBRyxFQUFFSCxHQUFHLEVBQUUsR0FBR0ksTUFBTTtJQUMxQyxPQUFRSjtRQUNKLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUFTO2dCQUNWLElBQUksQ0FBQ1AsWUFBWVUsSUFBSVQsV0FBVyxTQUM1QixNQUFNTCxTQUFTO2dCQUNuQixNQUFNa0IsV0FBV1YsU0FBU0csSUFBSUYsTUFBTSxJQUFJO2dCQUN4QyxNQUFNZSxTQUFTbEIsY0FBY1EsSUFBSVQsVUFBVUU7Z0JBQzNDLElBQUlpQixXQUFXTixVQUNYLE1BQU1sQixTQUFTLENBQUMsSUFBSSxFQUFFa0IsU0FBUyxDQUFDLEVBQUU7Z0JBQ3RDO1lBQ0o7UUFDQSxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFBUztnQkFDVixJQUFJLENBQUNkLFlBQVlVLElBQUlULFdBQVcsc0JBQzVCLE1BQU1MLFNBQVM7Z0JBQ25CLE1BQU1rQixXQUFXVixTQUFTRyxJQUFJRixNQUFNLElBQUk7Z0JBQ3hDLE1BQU1lLFNBQVNsQixjQUFjUSxJQUFJVCxVQUFVRTtnQkFDM0MsSUFBSWlCLFdBQVdOLFVBQ1gsTUFBTWxCLFNBQVMsQ0FBQyxJQUFJLEVBQUVrQixTQUFTLENBQUMsRUFBRTtnQkFDdEM7WUFDSjtRQUNBLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUFTO2dCQUNWLElBQUksQ0FBQ2QsWUFBWVUsSUFBSVQsV0FBVyxZQUM1QixNQUFNTCxTQUFTO2dCQUNuQixNQUFNa0IsV0FBV1YsU0FBU0csSUFBSUYsTUFBTSxJQUFJO2dCQUN4QyxNQUFNZSxTQUFTbEIsY0FBY1EsSUFBSVQsVUFBVUU7Z0JBQzNDLElBQUlpQixXQUFXTixVQUNYLE1BQU1sQixTQUFTLENBQUMsSUFBSSxFQUFFa0IsU0FBUyxDQUFDLEVBQUU7Z0JBQ3RDO1lBQ0o7UUFDQSxLQUFLO1lBQVM7Z0JBQ1YsSUFBSUosSUFBSVQsVUFBVUosU0FBUyxhQUFhYSxJQUFJVCxVQUFVSixTQUFTLFNBQVM7b0JBQ3BFLE1BQU1ELFNBQVM7Z0JBQ25CO2dCQUNBO1lBQ0o7UUFDQSxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFBUztnQkFDVixJQUFJLENBQUNJLFlBQVlVLElBQUlULFdBQVcsVUFDNUIsTUFBTUwsU0FBUztnQkFDbkIsTUFBTWtCLFdBQVdSLGNBQWNDO2dCQUMvQixNQUFNYSxTQUFTVixJQUFJVCxVQUFVb0I7Z0JBQzdCLElBQUlELFdBQVdOLFVBQ1gsTUFBTWxCLFNBQVNrQixVQUFVO2dCQUM3QjtZQUNKO1FBQ0E7WUFDSSxNQUFNLElBQUlmLFVBQVU7SUFDNUI7SUFDQVUsV0FBV0MsS0FBS0M7QUFDcEI7QUFDQW5CLHlCQUF5QkcsR0FBR0E7QUFDNUIsU0FBU0Qsa0JBQWtCZ0IsR0FBRyxFQUFFSCxHQUFHLEVBQUUsR0FBR0ksTUFBTTtJQUMxQyxPQUFRSjtRQUNKLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUFXO2dCQUNaLElBQUksQ0FBQ1AsWUFBWVUsSUFBSVQsV0FBVyxZQUM1QixNQUFNTCxTQUFTO2dCQUNuQixNQUFNa0IsV0FBV1YsU0FBU0csSUFBSUYsTUFBTSxHQUFHLElBQUk7Z0JBQzNDLE1BQU1lLFNBQVNWLElBQUlULFVBQVVXO2dCQUM3QixJQUFJUSxXQUFXTixVQUNYLE1BQU1sQixTQUFTa0IsVUFBVTtnQkFDN0I7WUFDSjtRQUNBLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUFVO2dCQUNYLElBQUksQ0FBQ2QsWUFBWVUsSUFBSVQsV0FBVyxXQUM1QixNQUFNTCxTQUFTO2dCQUNuQixNQUFNa0IsV0FBV1YsU0FBU0csSUFBSUYsTUFBTSxHQUFHLElBQUk7Z0JBQzNDLE1BQU1lLFNBQVNWLElBQUlULFVBQVVXO2dCQUM3QixJQUFJUSxXQUFXTixVQUNYLE1BQU1sQixTQUFTa0IsVUFBVTtnQkFDN0I7WUFDSjtRQUNBLEtBQUs7WUFBUTtnQkFDVCxPQUFRSixJQUFJVCxVQUFVSjtvQkFDbEIsS0FBSztvQkFDTCxLQUFLO29CQUNMLEtBQUs7d0JBQ0Q7b0JBQ0o7d0JBQ0ksTUFBTUQsU0FBUztnQkFDdkI7Z0JBQ0E7WUFDSjtRQUNBLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELElBQUksQ0FBQ0ksWUFBWVUsSUFBSVQsV0FBVyxXQUM1QixNQUFNTCxTQUFTO1lBQ25CO1FBQ0osS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUFnQjtnQkFDakIsSUFBSSxDQUFDSSxZQUFZVSxJQUFJVCxXQUFXLGFBQzVCLE1BQU1MLFNBQVM7Z0JBQ25CLE1BQU1rQixXQUFXVixTQUFTRyxJQUFJRixNQUFNLElBQUksT0FBTztnQkFDL0MsTUFBTWUsU0FBU2xCLGNBQWNRLElBQUlULFVBQVVFO2dCQUMzQyxJQUFJaUIsV0FBV04sVUFDWCxNQUFNbEIsU0FBUyxDQUFDLElBQUksRUFBRWtCLFNBQVMsQ0FBQyxFQUFFO2dCQUN0QztZQUNKO1FBQ0E7WUFDSSxNQUFNLElBQUlmLFVBQVU7SUFDNUI7SUFDQVUsV0FBV0MsS0FBS0M7QUFDcEI7QUFDQW5CLHlCQUF5QkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvY3J5cHRvX2tleS5qcz9hOWYyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jaGVja0VuY0NyeXB0b0tleSA9IGV4cG9ydHMuY2hlY2tTaWdDcnlwdG9LZXkgPSB2b2lkIDA7XG5mdW5jdGlvbiB1bnVzYWJsZShuYW1lLCBwcm9wID0gJ2FsZ29yaXRobS5uYW1lJykge1xuICAgIHJldHVybiBuZXcgVHlwZUVycm9yKGBDcnlwdG9LZXkgZG9lcyBub3Qgc3VwcG9ydCB0aGlzIG9wZXJhdGlvbiwgaXRzICR7cHJvcH0gbXVzdCBiZSAke25hbWV9YCk7XG59XG5mdW5jdGlvbiBpc0FsZ29yaXRobShhbGdvcml0aG0sIG5hbWUpIHtcbiAgICByZXR1cm4gYWxnb3JpdGhtLm5hbWUgPT09IG5hbWU7XG59XG5mdW5jdGlvbiBnZXRIYXNoTGVuZ3RoKGhhc2gpIHtcbiAgICByZXR1cm4gcGFyc2VJbnQoaGFzaC5uYW1lLnNsaWNlKDQpLCAxMCk7XG59XG5mdW5jdGlvbiBnZXROYW1lZEN1cnZlKGFsZykge1xuICAgIHN3aXRjaCAoYWxnKSB7XG4gICAgICAgIGNhc2UgJ0VTMjU2JzpcbiAgICAgICAgICAgIHJldHVybiAnUC0yNTYnO1xuICAgICAgICBjYXNlICdFUzM4NCc6XG4gICAgICAgICAgICByZXR1cm4gJ1AtMzg0JztcbiAgICAgICAgY2FzZSAnRVM1MTInOlxuICAgICAgICAgICAgcmV0dXJuICdQLTUyMSc7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3VucmVhY2hhYmxlJyk7XG4gICAgfVxufVxuZnVuY3Rpb24gY2hlY2tVc2FnZShrZXksIHVzYWdlcykge1xuICAgIGlmICh1c2FnZXMubGVuZ3RoICYmICF1c2FnZXMuc29tZSgoZXhwZWN0ZWQpID0+IGtleS51c2FnZXMuaW5jbHVkZXMoZXhwZWN0ZWQpKSkge1xuICAgICAgICBsZXQgbXNnID0gJ0NyeXB0b0tleSBkb2VzIG5vdCBzdXBwb3J0IHRoaXMgb3BlcmF0aW9uLCBpdHMgdXNhZ2VzIG11c3QgaW5jbHVkZSAnO1xuICAgICAgICBpZiAodXNhZ2VzLmxlbmd0aCA+IDIpIHtcbiAgICAgICAgICAgIGNvbnN0IGxhc3QgPSB1c2FnZXMucG9wKCk7XG4gICAgICAgICAgICBtc2cgKz0gYG9uZSBvZiAke3VzYWdlcy5qb2luKCcsICcpfSwgb3IgJHtsYXN0fS5gO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHVzYWdlcy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgICAgIG1zZyArPSBgb25lIG9mICR7dXNhZ2VzWzBdfSBvciAke3VzYWdlc1sxXX0uYDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG1zZyArPSBgJHt1c2FnZXNbMF19LmA7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihtc2cpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGNoZWNrU2lnQ3J5cHRvS2V5KGtleSwgYWxnLCAuLi51c2FnZXMpIHtcbiAgICBzd2l0Y2ggKGFsZykge1xuICAgICAgICBjYXNlICdIUzI1Nic6XG4gICAgICAgIGNhc2UgJ0hTMzg0JzpcbiAgICAgICAgY2FzZSAnSFM1MTInOiB7XG4gICAgICAgICAgICBpZiAoIWlzQWxnb3JpdGhtKGtleS5hbGdvcml0aG0sICdITUFDJykpXG4gICAgICAgICAgICAgICAgdGhyb3cgdW51c2FibGUoJ0hNQUMnKTtcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkID0gcGFyc2VJbnQoYWxnLnNsaWNlKDIpLCAxMCk7XG4gICAgICAgICAgICBjb25zdCBhY3R1YWwgPSBnZXRIYXNoTGVuZ3RoKGtleS5hbGdvcml0aG0uaGFzaCk7XG4gICAgICAgICAgICBpZiAoYWN0dWFsICE9PSBleHBlY3RlZClcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZShgU0hBLSR7ZXhwZWN0ZWR9YCwgJ2FsZ29yaXRobS5oYXNoJyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlICdSUzI1Nic6XG4gICAgICAgIGNhc2UgJ1JTMzg0JzpcbiAgICAgICAgY2FzZSAnUlM1MTInOiB7XG4gICAgICAgICAgICBpZiAoIWlzQWxnb3JpdGhtKGtleS5hbGdvcml0aG0sICdSU0FTU0EtUEtDUzEtdjFfNScpKVxuICAgICAgICAgICAgICAgIHRocm93IHVudXNhYmxlKCdSU0FTU0EtUEtDUzEtdjFfNScpO1xuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWQgPSBwYXJzZUludChhbGcuc2xpY2UoMiksIDEwKTtcbiAgICAgICAgICAgIGNvbnN0IGFjdHVhbCA9IGdldEhhc2hMZW5ndGgoa2V5LmFsZ29yaXRobS5oYXNoKTtcbiAgICAgICAgICAgIGlmIChhY3R1YWwgIT09IGV4cGVjdGVkKVxuICAgICAgICAgICAgICAgIHRocm93IHVudXNhYmxlKGBTSEEtJHtleHBlY3RlZH1gLCAnYWxnb3JpdGhtLmhhc2gnKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ1BTMjU2JzpcbiAgICAgICAgY2FzZSAnUFMzODQnOlxuICAgICAgICBjYXNlICdQUzUxMic6IHtcbiAgICAgICAgICAgIGlmICghaXNBbGdvcml0aG0oa2V5LmFsZ29yaXRobSwgJ1JTQS1QU1MnKSlcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZSgnUlNBLVBTUycpO1xuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWQgPSBwYXJzZUludChhbGcuc2xpY2UoMiksIDEwKTtcbiAgICAgICAgICAgIGNvbnN0IGFjdHVhbCA9IGdldEhhc2hMZW5ndGgoa2V5LmFsZ29yaXRobS5oYXNoKTtcbiAgICAgICAgICAgIGlmIChhY3R1YWwgIT09IGV4cGVjdGVkKVxuICAgICAgICAgICAgICAgIHRocm93IHVudXNhYmxlKGBTSEEtJHtleHBlY3RlZH1gLCAnYWxnb3JpdGhtLmhhc2gnKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ0VkRFNBJzoge1xuICAgICAgICAgICAgaWYgKGtleS5hbGdvcml0aG0ubmFtZSAhPT0gJ0VkMjU1MTknICYmIGtleS5hbGdvcml0aG0ubmFtZSAhPT0gJ0VkNDQ4Jykge1xuICAgICAgICAgICAgICAgIHRocm93IHVudXNhYmxlKCdFZDI1NTE5IG9yIEVkNDQ4Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjYXNlICdFUzI1Nic6XG4gICAgICAgIGNhc2UgJ0VTMzg0JzpcbiAgICAgICAgY2FzZSAnRVM1MTInOiB7XG4gICAgICAgICAgICBpZiAoIWlzQWxnb3JpdGhtKGtleS5hbGdvcml0aG0sICdFQ0RTQScpKVxuICAgICAgICAgICAgICAgIHRocm93IHVudXNhYmxlKCdFQ0RTQScpO1xuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWQgPSBnZXROYW1lZEN1cnZlKGFsZyk7XG4gICAgICAgICAgICBjb25zdCBhY3R1YWwgPSBrZXkuYWxnb3JpdGhtLm5hbWVkQ3VydmU7XG4gICAgICAgICAgICBpZiAoYWN0dWFsICE9PSBleHBlY3RlZClcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZShleHBlY3RlZCwgJ2FsZ29yaXRobS5uYW1lZEN1cnZlJyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQ3J5cHRvS2V5IGRvZXMgbm90IHN1cHBvcnQgdGhpcyBvcGVyYXRpb24nKTtcbiAgICB9XG4gICAgY2hlY2tVc2FnZShrZXksIHVzYWdlcyk7XG59XG5leHBvcnRzLmNoZWNrU2lnQ3J5cHRvS2V5ID0gY2hlY2tTaWdDcnlwdG9LZXk7XG5mdW5jdGlvbiBjaGVja0VuY0NyeXB0b0tleShrZXksIGFsZywgLi4udXNhZ2VzKSB7XG4gICAgc3dpdGNoIChhbGcpIHtcbiAgICAgICAgY2FzZSAnQTEyOEdDTSc6XG4gICAgICAgIGNhc2UgJ0ExOTJHQ00nOlxuICAgICAgICBjYXNlICdBMjU2R0NNJzoge1xuICAgICAgICAgICAgaWYgKCFpc0FsZ29yaXRobShrZXkuYWxnb3JpdGhtLCAnQUVTLUdDTScpKVxuICAgICAgICAgICAgICAgIHRocm93IHVudXNhYmxlKCdBRVMtR0NNJyk7XG4gICAgICAgICAgICBjb25zdCBleHBlY3RlZCA9IHBhcnNlSW50KGFsZy5zbGljZSgxLCA0KSwgMTApO1xuICAgICAgICAgICAgY29uc3QgYWN0dWFsID0ga2V5LmFsZ29yaXRobS5sZW5ndGg7XG4gICAgICAgICAgICBpZiAoYWN0dWFsICE9PSBleHBlY3RlZClcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZShleHBlY3RlZCwgJ2FsZ29yaXRobS5sZW5ndGgnKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgJ0ExMjhLVyc6XG4gICAgICAgIGNhc2UgJ0ExOTJLVyc6XG4gICAgICAgIGNhc2UgJ0EyNTZLVyc6IHtcbiAgICAgICAgICAgIGlmICghaXNBbGdvcml0aG0oa2V5LmFsZ29yaXRobSwgJ0FFUy1LVycpKVxuICAgICAgICAgICAgICAgIHRocm93IHVudXNhYmxlKCdBRVMtS1cnKTtcbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkID0gcGFyc2VJbnQoYWxnLnNsaWNlKDEsIDQpLCAxMCk7XG4gICAgICAgICAgICBjb25zdCBhY3R1YWwgPSBrZXkuYWxnb3JpdGhtLmxlbmd0aDtcbiAgICAgICAgICAgIGlmIChhY3R1YWwgIT09IGV4cGVjdGVkKVxuICAgICAgICAgICAgICAgIHRocm93IHVudXNhYmxlKGV4cGVjdGVkLCAnYWxnb3JpdGhtLmxlbmd0aCcpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnRUNESCc6IHtcbiAgICAgICAgICAgIHN3aXRjaCAoa2V5LmFsZ29yaXRobS5uYW1lKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAnRUNESCc6XG4gICAgICAgICAgICAgICAgY2FzZSAnWDI1NTE5JzpcbiAgICAgICAgICAgICAgICBjYXNlICdYNDQ4JzpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgdW51c2FibGUoJ0VDREgsIFgyNTUxOSwgb3IgWDQ0OCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSAnUEJFUzItSFMyNTYrQTEyOEtXJzpcbiAgICAgICAgY2FzZSAnUEJFUzItSFMzODQrQTE5MktXJzpcbiAgICAgICAgY2FzZSAnUEJFUzItSFM1MTIrQTI1NktXJzpcbiAgICAgICAgICAgIGlmICghaXNBbGdvcml0aG0oa2V5LmFsZ29yaXRobSwgJ1BCS0RGMicpKVxuICAgICAgICAgICAgICAgIHRocm93IHVudXNhYmxlKCdQQktERjInKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdSU0EtT0FFUCc6XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTI1Nic6XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTM4NCc6XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQLTUxMic6IHtcbiAgICAgICAgICAgIGlmICghaXNBbGdvcml0aG0oa2V5LmFsZ29yaXRobSwgJ1JTQS1PQUVQJykpXG4gICAgICAgICAgICAgICAgdGhyb3cgdW51c2FibGUoJ1JTQS1PQUVQJyk7XG4gICAgICAgICAgICBjb25zdCBleHBlY3RlZCA9IHBhcnNlSW50KGFsZy5zbGljZSg5KSwgMTApIHx8IDE7XG4gICAgICAgICAgICBjb25zdCBhY3R1YWwgPSBnZXRIYXNoTGVuZ3RoKGtleS5hbGdvcml0aG0uaGFzaCk7XG4gICAgICAgICAgICBpZiAoYWN0dWFsICE9PSBleHBlY3RlZClcbiAgICAgICAgICAgICAgICB0aHJvdyB1bnVzYWJsZShgU0hBLSR7ZXhwZWN0ZWR9YCwgJ2FsZ29yaXRobS5oYXNoJyk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQ3J5cHRvS2V5IGRvZXMgbm90IHN1cHBvcnQgdGhpcyBvcGVyYXRpb24nKTtcbiAgICB9XG4gICAgY2hlY2tVc2FnZShrZXksIHVzYWdlcyk7XG59XG5leHBvcnRzLmNoZWNrRW5jQ3J5cHRvS2V5ID0gY2hlY2tFbmNDcnlwdG9LZXk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjaGVja0VuY0NyeXB0b0tleSIsImNoZWNrU2lnQ3J5cHRvS2V5IiwidW51c2FibGUiLCJuYW1lIiwicHJvcCIsIlR5cGVFcnJvciIsImlzQWxnb3JpdGhtIiwiYWxnb3JpdGhtIiwiZ2V0SGFzaExlbmd0aCIsImhhc2giLCJwYXJzZUludCIsInNsaWNlIiwiZ2V0TmFtZWRDdXJ2ZSIsImFsZyIsIkVycm9yIiwiY2hlY2tVc2FnZSIsImtleSIsInVzYWdlcyIsImxlbmd0aCIsInNvbWUiLCJleHBlY3RlZCIsImluY2x1ZGVzIiwibXNnIiwibGFzdCIsInBvcCIsImpvaW4iLCJhY3R1YWwiLCJuYW1lZEN1cnZlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js":
/*!***********************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst aeskw_js_1 = __webpack_require__(/*! ../runtime/aeskw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/aeskw.js\");\nconst ECDH = __webpack_require__(/*! ../runtime/ecdhes.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ecdhes.js\");\nconst pbes2kw_js_1 = __webpack_require__(/*! ../runtime/pbes2kw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/pbes2kw.js\");\nconst rsaes_js_1 = __webpack_require__(/*! ../runtime/rsaes.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/rsaes.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst cek_js_1 = __webpack_require__(/*! ../lib/cek.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/cek.js\");\nconst import_js_1 = __webpack_require__(/*! ../key/import.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/import.js\");\nconst check_key_type_js_1 = __webpack_require__(/*! ./check_key_type.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_key_type.js\");\nconst is_object_js_1 = __webpack_require__(/*! ./is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst aesgcmkw_js_1 = __webpack_require__(/*! ./aesgcmkw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/aesgcmkw.js\");\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    (0, check_key_type_js_1.default)(alg, key, \"decrypt\");\n    switch(alg){\n        case \"dir\":\n            {\n                if (encryptedKey !== undefined) throw new errors_js_1.JWEInvalid(\"Encountered unexpected JWE Encrypted Key\");\n                return key;\n            }\n        case \"ECDH-ES\":\n            if (encryptedKey !== undefined) throw new errors_js_1.JWEInvalid(\"Encountered unexpected JWE Encrypted Key\");\n        case \"ECDH-ES+A128KW\":\n        case \"ECDH-ES+A192KW\":\n        case \"ECDH-ES+A256KW\":\n            {\n                if (!(0, is_object_js_1.default)(joseHeader.epk)) throw new errors_js_1.JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n                if (!ECDH.ecdhAllowed(key)) throw new errors_js_1.JOSENotSupported(\"ECDH with the provided key is not allowed or not supported by your javascript runtime\");\n                const epk = await (0, import_js_1.importJWK)(joseHeader.epk, alg);\n                let partyUInfo;\n                let partyVInfo;\n                if (joseHeader.apu !== undefined) {\n                    if (typeof joseHeader.apu !== \"string\") throw new errors_js_1.JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                    partyUInfo = (0, base64url_js_1.decode)(joseHeader.apu);\n                }\n                if (joseHeader.apv !== undefined) {\n                    if (typeof joseHeader.apv !== \"string\") throw new errors_js_1.JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                    partyVInfo = (0, base64url_js_1.decode)(joseHeader.apv);\n                }\n                const sharedSecret = await ECDH.deriveKey(epk, key, alg === \"ECDH-ES\" ? joseHeader.enc : alg, alg === \"ECDH-ES\" ? (0, cek_js_1.bitLength)(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n                if (alg === \"ECDH-ES\") return sharedSecret;\n                if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid(\"JWE Encrypted Key missing\");\n                return (0, aeskw_js_1.unwrap)(alg.slice(-6), sharedSecret, encryptedKey);\n            }\n        case \"RSA1_5\":\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            {\n                if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid(\"JWE Encrypted Key missing\");\n                return (0, rsaes_js_1.decrypt)(alg, key, encryptedKey);\n            }\n        case \"PBES2-HS256+A128KW\":\n        case \"PBES2-HS384+A192KW\":\n        case \"PBES2-HS512+A256KW\":\n            {\n                if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid(\"JWE Encrypted Key missing\");\n                if (typeof joseHeader.p2c !== \"number\") throw new errors_js_1.JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n                const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n                if (joseHeader.p2c > p2cLimit) throw new errors_js_1.JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n                if (typeof joseHeader.p2s !== \"string\") throw new errors_js_1.JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n                return (0, pbes2kw_js_1.decrypt)(alg, key, encryptedKey, joseHeader.p2c, (0, base64url_js_1.decode)(joseHeader.p2s));\n            }\n        case \"A128KW\":\n        case \"A192KW\":\n        case \"A256KW\":\n            {\n                if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid(\"JWE Encrypted Key missing\");\n                return (0, aeskw_js_1.unwrap)(alg, key, encryptedKey);\n            }\n        case \"A128GCMKW\":\n        case \"A192GCMKW\":\n        case \"A256GCMKW\":\n            {\n                if (encryptedKey === undefined) throw new errors_js_1.JWEInvalid(\"JWE Encrypted Key missing\");\n                if (typeof joseHeader.iv !== \"string\") throw new errors_js_1.JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n                if (typeof joseHeader.tag !== \"string\") throw new errors_js_1.JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n                const iv = (0, base64url_js_1.decode)(joseHeader.iv);\n                const tag = (0, base64url_js_1.decode)(joseHeader.tag);\n                return (0, aesgcmkw_js_1.unwrap)(alg, key, encryptedKey, iv, tag);\n            }\n        default:\n            {\n                throw new errors_js_1.JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n            }\n    }\n}\nexports[\"default\"] = decryptKeyManagement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/decrypt_key_management.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js":
/*!***********************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst aeskw_js_1 = __webpack_require__(/*! ../runtime/aeskw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/aeskw.js\");\nconst ECDH = __webpack_require__(/*! ../runtime/ecdhes.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ecdhes.js\");\nconst pbes2kw_js_1 = __webpack_require__(/*! ../runtime/pbes2kw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/pbes2kw.js\");\nconst rsaes_js_1 = __webpack_require__(/*! ../runtime/rsaes.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/rsaes.js\");\nconst base64url_js_1 = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst cek_js_1 = __webpack_require__(/*! ../lib/cek.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/cek.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst export_js_1 = __webpack_require__(/*! ../key/export.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/key/export.js\");\nconst check_key_type_js_1 = __webpack_require__(/*! ./check_key_type.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_key_type.js\");\nconst aesgcmkw_js_1 = __webpack_require__(/*! ./aesgcmkw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/aesgcmkw.js\");\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    (0, check_key_type_js_1.default)(alg, key, \"encrypt\");\n    switch(alg){\n        case \"dir\":\n            {\n                cek = key;\n                break;\n            }\n        case \"ECDH-ES\":\n        case \"ECDH-ES+A128KW\":\n        case \"ECDH-ES+A192KW\":\n        case \"ECDH-ES+A256KW\":\n            {\n                if (!ECDH.ecdhAllowed(key)) {\n                    throw new errors_js_1.JOSENotSupported(\"ECDH with the provided key is not allowed or not supported by your javascript runtime\");\n                }\n                const { apu, apv } = providedParameters;\n                let { epk: ephemeralKey } = providedParameters;\n                ephemeralKey || (ephemeralKey = (await ECDH.generateEpk(key)).privateKey);\n                const { x, y, crv, kty } = await (0, export_js_1.exportJWK)(ephemeralKey);\n                const sharedSecret = await ECDH.deriveKey(key, ephemeralKey, alg === \"ECDH-ES\" ? enc : alg, alg === \"ECDH-ES\" ? (0, cek_js_1.bitLength)(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n                parameters = {\n                    epk: {\n                        x,\n                        crv,\n                        kty\n                    }\n                };\n                if (kty === \"EC\") parameters.epk.y = y;\n                if (apu) parameters.apu = (0, base64url_js_1.encode)(apu);\n                if (apv) parameters.apv = (0, base64url_js_1.encode)(apv);\n                if (alg === \"ECDH-ES\") {\n                    cek = sharedSecret;\n                    break;\n                }\n                cek = providedCek || (0, cek_js_1.default)(enc);\n                const kwAlg = alg.slice(-6);\n                encryptedKey = await (0, aeskw_js_1.wrap)(kwAlg, sharedSecret, cek);\n                break;\n            }\n        case \"RSA1_5\":\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            {\n                cek = providedCek || (0, cek_js_1.default)(enc);\n                encryptedKey = await (0, rsaes_js_1.encrypt)(alg, key, cek);\n                break;\n            }\n        case \"PBES2-HS256+A128KW\":\n        case \"PBES2-HS384+A192KW\":\n        case \"PBES2-HS512+A256KW\":\n            {\n                cek = providedCek || (0, cek_js_1.default)(enc);\n                const { p2c, p2s } = providedParameters;\n                ({ encryptedKey, ...parameters } = await (0, pbes2kw_js_1.encrypt)(alg, key, cek, p2c, p2s));\n                break;\n            }\n        case \"A128KW\":\n        case \"A192KW\":\n        case \"A256KW\":\n            {\n                cek = providedCek || (0, cek_js_1.default)(enc);\n                encryptedKey = await (0, aeskw_js_1.wrap)(alg, key, cek);\n                break;\n            }\n        case \"A128GCMKW\":\n        case \"A192GCMKW\":\n        case \"A256GCMKW\":\n            {\n                cek = providedCek || (0, cek_js_1.default)(enc);\n                const { iv } = providedParameters;\n                ({ encryptedKey, ...parameters } = await (0, aesgcmkw_js_1.wrap)(alg, key, cek, iv));\n                break;\n            }\n        default:\n            {\n                throw new errors_js_1.JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n            }\n    }\n    return {\n        cek,\n        encryptedKey,\n        parameters\n    };\n}\nexports[\"default\"] = encryptKeyManagement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/encrypt_key_management.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/epoch.js":
/*!******************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/epoch.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = (date)=>Math.floor(date.getTime() / 1000);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9lcG9jaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWVFLEdBQUcsQ0FBQ0MsT0FBU0MsS0FBS0MsTUFBTUYsS0FBS0csWUFBWSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9lcG9jaC5qcz83NDI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gKGRhdGUpID0+IE1hdGguZmxvb3IoZGF0ZS5nZXRUaW1lKCkgLyAxMDAwKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJkYXRlIiwiTWF0aCIsImZsb29yIiwiZ2V0VGltZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/epoch.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js":
/*!******************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.withAlg = void 0;\nfunction message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(\", \")}, or ${last}.`;\n    } else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    } else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    } else if (typeof actual === \"function\" && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    } else if (typeof actual === \"object\" && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexports[\"default\"] = (actual, ...types)=>{\n    return message(\"Key must be \", actual, ...types);\n};\nfunction withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\nexports.withAlg = withAlg;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9pbnZhbGlkX2tleV9pbnB1dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZUUsR0FBRyxLQUFLO0FBQ3ZCLFNBQVNDLFFBQVFDLEdBQUcsRUFBRUMsTUFBTSxFQUFFLEdBQUdDLEtBQUs7SUFDbEMsSUFBSUEsTUFBTUMsU0FBUyxHQUFHO1FBQ2xCLE1BQU1DLE9BQU9GLE1BQU1HO1FBQ25CTCxPQUFPLENBQUMsWUFBWSxFQUFFRSxNQUFNSSxLQUFLLE1BQU0sS0FBSyxFQUFFRixLQUFLLENBQUMsQ0FBQztJQUN6RCxPQUNLLElBQUlGLE1BQU1DLFdBQVcsR0FBRztRQUN6QkgsT0FBTyxDQUFDLFlBQVksRUFBRUUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUVBLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ3BELE9BQ0s7UUFDREYsT0FBTyxDQUFDLFFBQVEsRUFBRUUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDakM7SUFDQSxJQUFJRCxVQUFVLE1BQU07UUFDaEJELE9BQU8sQ0FBQyxVQUFVLEVBQUVDLE9BQU8sQ0FBQztJQUNoQyxPQUNLLElBQUksT0FBT0EsV0FBVyxjQUFjQSxPQUFPTSxNQUFNO1FBQ2xEUCxPQUFPLENBQUMsbUJBQW1CLEVBQUVDLE9BQU9NLEtBQUssQ0FBQztJQUM5QyxPQUNLLElBQUksT0FBT04sV0FBVyxZQUFZQSxVQUFVLE1BQU07UUFDbkQsSUFBSUEsT0FBT08sZUFBZVAsT0FBT08sWUFBWUQsTUFBTTtZQUMvQ1AsT0FBTyxDQUFDLHlCQUF5QixFQUFFQyxPQUFPTyxZQUFZRCxLQUFLLENBQUM7UUFDaEU7SUFDSjtJQUNBLE9BQU9QO0FBQ1g7QUFDQUosa0JBQWVhLEdBQUcsQ0FBQ1IsUUFBUSxHQUFHQztJQUMxQixPQUFPSCxRQUFRLGdCQUFnQkUsV0FBV0M7QUFDOUM7QUFDQSxTQUFTSixRQUFRWSxHQUFHLEVBQUVULE1BQU0sRUFBRSxHQUFHQyxLQUFLO0lBQ2xDLE9BQU9ILFFBQVEsQ0FBQyxZQUFZLEVBQUVXLElBQUksbUJBQW1CLENBQUMsRUFBRVQsV0FBV0M7QUFDdkU7QUFDQU4sZUFBZUUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvaW52YWxpZF9rZXlfaW5wdXQuanM/YjE5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMud2l0aEFsZyA9IHZvaWQgMDtcbmZ1bmN0aW9uIG1lc3NhZ2UobXNnLCBhY3R1YWwsIC4uLnR5cGVzKSB7XG4gICAgaWYgKHR5cGVzLmxlbmd0aCA+IDIpIHtcbiAgICAgICAgY29uc3QgbGFzdCA9IHR5cGVzLnBvcCgpO1xuICAgICAgICBtc2cgKz0gYG9uZSBvZiB0eXBlICR7dHlwZXMuam9pbignLCAnKX0sIG9yICR7bGFzdH0uYDtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZXMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgIG1zZyArPSBgb25lIG9mIHR5cGUgJHt0eXBlc1swXX0gb3IgJHt0eXBlc1sxXX0uYDtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG1zZyArPSBgb2YgdHlwZSAke3R5cGVzWzBdfS5gO1xuICAgIH1cbiAgICBpZiAoYWN0dWFsID09IG51bGwpIHtcbiAgICAgICAgbXNnICs9IGAgUmVjZWl2ZWQgJHthY3R1YWx9YDtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGFjdHVhbCA9PT0gJ2Z1bmN0aW9uJyAmJiBhY3R1YWwubmFtZSkge1xuICAgICAgICBtc2cgKz0gYCBSZWNlaXZlZCBmdW5jdGlvbiAke2FjdHVhbC5uYW1lfWA7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBhY3R1YWwgPT09ICdvYmplY3QnICYmIGFjdHVhbCAhPSBudWxsKSB7XG4gICAgICAgIGlmIChhY3R1YWwuY29uc3RydWN0b3IgJiYgYWN0dWFsLmNvbnN0cnVjdG9yLm5hbWUpIHtcbiAgICAgICAgICAgIG1zZyArPSBgIFJlY2VpdmVkIGFuIGluc3RhbmNlIG9mICR7YWN0dWFsLmNvbnN0cnVjdG9yLm5hbWV9YDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbXNnO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gKGFjdHVhbCwgLi4udHlwZXMpID0+IHtcbiAgICByZXR1cm4gbWVzc2FnZSgnS2V5IG11c3QgYmUgJywgYWN0dWFsLCAuLi50eXBlcyk7XG59O1xuZnVuY3Rpb24gd2l0aEFsZyhhbGcsIGFjdHVhbCwgLi4udHlwZXMpIHtcbiAgICByZXR1cm4gbWVzc2FnZShgS2V5IGZvciB0aGUgJHthbGd9IGFsZ29yaXRobSBtdXN0IGJlIGAsIGFjdHVhbCwgLi4udHlwZXMpO1xufVxuZXhwb3J0cy53aXRoQWxnID0gd2l0aEFsZztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIndpdGhBbGciLCJtZXNzYWdlIiwibXNnIiwiYWN0dWFsIiwidHlwZXMiLCJsZW5ndGgiLCJsYXN0IiwicG9wIiwiam9pbiIsIm5hbWUiLCJjb25zdHJ1Y3RvciIsImRlZmF1bHQiLCJhbGciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/is_disjoint.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst isDisjoint = (...headers)=>{\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources){\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters){\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexports[\"default\"] = isDisjoint;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9pc19kaXNqb2ludC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxhQUFhLENBQUMsR0FBR0M7SUFDbkIsTUFBTUMsVUFBVUQsUUFBUUUsT0FBT0M7SUFDL0IsSUFBSUYsUUFBUUcsV0FBVyxLQUFLSCxRQUFRRyxXQUFXLEdBQUc7UUFDOUMsT0FBTztJQUNYO0lBQ0EsSUFBSUM7SUFDSixLQUFLLE1BQU1DLFVBQVVMLFFBQVM7UUFDMUIsTUFBTU0sYUFBYVosT0FBT2EsS0FBS0Y7UUFDL0IsSUFBSSxDQUFDRCxPQUFPQSxJQUFJSSxTQUFTLEdBQUc7WUFDeEJKLE1BQU0sSUFBSUssSUFBSUg7WUFDZDtRQUNKO1FBQ0EsS0FBSyxNQUFNSSxhQUFhSixXQUFZO1lBQ2hDLElBQUlGLElBQUlPLElBQUlELFlBQVk7Z0JBQ3BCLE9BQU87WUFDWDtZQUNBTixJQUFJUSxJQUFJRjtRQUNaO0lBQ0o7SUFDQSxPQUFPO0FBQ1g7QUFDQWQsa0JBQWVpQixHQUFHZiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9pc19kaXNqb2ludC5qcz83NTU1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgaXNEaXNqb2ludCA9ICguLi5oZWFkZXJzKSA9PiB7XG4gICAgY29uc3Qgc291cmNlcyA9IGhlYWRlcnMuZmlsdGVyKEJvb2xlYW4pO1xuICAgIGlmIChzb3VyY2VzLmxlbmd0aCA9PT0gMCB8fCBzb3VyY2VzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgbGV0IGFjYztcbiAgICBmb3IgKGNvbnN0IGhlYWRlciBvZiBzb3VyY2VzKSB7XG4gICAgICAgIGNvbnN0IHBhcmFtZXRlcnMgPSBPYmplY3Qua2V5cyhoZWFkZXIpO1xuICAgICAgICBpZiAoIWFjYyB8fCBhY2Muc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgYWNjID0gbmV3IFNldChwYXJhbWV0ZXJzKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgcGFyYW1ldGVyIG9mIHBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgIGlmIChhY2MuaGFzKHBhcmFtZXRlcikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhY2MuYWRkKHBhcmFtZXRlcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNEaXNqb2ludDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImlzRGlzam9pbnQiLCJoZWFkZXJzIiwic291cmNlcyIsImZpbHRlciIsIkJvb2xlYW4iLCJsZW5ndGgiLCJhY2MiLCJoZWFkZXIiLCJwYXJhbWV0ZXJzIiwia2V5cyIsInNpemUiLCJTZXQiLCJwYXJhbWV0ZXIiLCJoYXMiLCJhZGQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_disjoint.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/is_object.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nfunction isObjectLike(value) {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== \"[object Object]\") {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while(Object.getPrototypeOf(proto) !== null){\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\nexports[\"default\"] = isObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9pc19vYmplY3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsU0FBU0MsYUFBYUQsS0FBSztJQUN2QixPQUFPLE9BQU9BLFVBQVUsWUFBWUEsVUFBVTtBQUNsRDtBQUNBLFNBQVNFLFNBQVNDLEtBQUs7SUFDbkIsSUFBSSxDQUFDRixhQUFhRSxVQUFVTixPQUFPTyxVQUFVQyxTQUFTQyxLQUFLSCxXQUFXLG1CQUFtQjtRQUNyRixPQUFPO0lBQ1g7SUFDQSxJQUFJTixPQUFPVSxlQUFlSixXQUFXLE1BQU07UUFDdkMsT0FBTztJQUNYO0lBQ0EsSUFBSUssUUFBUUw7SUFDWixNQUFPTixPQUFPVSxlQUFlQyxXQUFXLEtBQU07UUFDMUNBLFFBQVFYLE9BQU9VLGVBQWVDO0lBQ2xDO0lBQ0EsT0FBT1gsT0FBT1UsZUFBZUosV0FBV0s7QUFDNUM7QUFDQVQsa0JBQWVVLEdBQUdQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvbGliL2lzX29iamVjdC5qcz81MmQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZnVuY3Rpb24gaXNPYmplY3RMaWtlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgIT09IG51bGw7XG59XG5mdW5jdGlvbiBpc09iamVjdChpbnB1dCkge1xuICAgIGlmICghaXNPYmplY3RMaWtlKGlucHV0KSB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaW5wdXQpICE9PSAnW29iamVjdCBPYmplY3RdJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGlmIChPYmplY3QuZ2V0UHJvdG90eXBlT2YoaW5wdXQpID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBsZXQgcHJvdG8gPSBpbnB1dDtcbiAgICB3aGlsZSAoT2JqZWN0LmdldFByb3RvdHlwZU9mKHByb3RvKSAhPT0gbnVsbCkge1xuICAgICAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90byk7XG4gICAgfVxuICAgIHJldHVybiBPYmplY3QuZ2V0UHJvdG90eXBlT2YoaW5wdXQpID09PSBwcm90bztcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGlzT2JqZWN0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaXNPYmplY3RMaWtlIiwiaXNPYmplY3QiLCJpbnB1dCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY2FsbCIsImdldFByb3RvdHlwZU9mIiwicHJvdG8iLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/iv.js":
/*!***************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/iv.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.bitLength = void 0;\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst random_js_1 = __webpack_require__(/*! ../runtime/random.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/random.js\");\nfunction bitLength(alg) {\n    switch(alg){\n        case \"A128GCM\":\n        case \"A128GCMKW\":\n        case \"A192GCM\":\n        case \"A192GCMKW\":\n        case \"A256GCM\":\n        case \"A256GCMKW\":\n            return 96;\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            return 128;\n        default:\n            throw new errors_js_1.JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\nexports.bitLength = bitLength;\nexports[\"default\"] = (alg)=>(0, random_js_1.default)(new Uint8Array(bitLength(alg) >> 3));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9pdi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCRSxHQUFHLEtBQUs7QUFDekIsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMsdUZBQW1CO0FBQy9DLE1BQU1DLGNBQWNELG1CQUFPQSxDQUFDLDZGQUFzQjtBQUNsRCxTQUFTRixVQUFVSSxHQUFHO0lBQ2xCLE9BQVFBO1FBQ0osS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU87UUFDWDtZQUNJLE1BQU0sSUFBSUgsWUFBWUksaUJBQWlCLENBQUMsMkJBQTJCLEVBQUVELElBQUksQ0FBQztJQUNsRjtBQUNKO0FBQ0FOLGlCQUFpQkUsR0FBR0E7QUFDcEJGLGtCQUFlUSxHQUFHLENBQUNGLE1BQVEsQ0FBQyxHQUFHRCxZQUFZRyxPQUFNLEVBQUcsSUFBSUMsV0FBV1AsVUFBVUksUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9pdi5qcz9hOTEwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5iaXRMZW5ndGggPSB2b2lkIDA7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmNvbnN0IHJhbmRvbV9qc18xID0gcmVxdWlyZShcIi4uL3J1bnRpbWUvcmFuZG9tLmpzXCIpO1xuZnVuY3Rpb24gYml0TGVuZ3RoKGFsZykge1xuICAgIHN3aXRjaCAoYWxnKSB7XG4gICAgICAgIGNhc2UgJ0ExMjhHQ00nOlxuICAgICAgICBjYXNlICdBMTI4R0NNS1cnOlxuICAgICAgICBjYXNlICdBMTkyR0NNJzpcbiAgICAgICAgY2FzZSAnQTE5MkdDTUtXJzpcbiAgICAgICAgY2FzZSAnQTI1NkdDTSc6XG4gICAgICAgIGNhc2UgJ0EyNTZHQ01LVyc6XG4gICAgICAgICAgICByZXR1cm4gOTY7XG4gICAgICAgIGNhc2UgJ0ExMjhDQkMtSFMyNTYnOlxuICAgICAgICBjYXNlICdBMTkyQ0JDLUhTMzg0JzpcbiAgICAgICAgY2FzZSAnQTI1NkNCQy1IUzUxMic6XG4gICAgICAgICAgICByZXR1cm4gMTI4O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VOb3RTdXBwb3J0ZWQoYFVuc3VwcG9ydGVkIEpXRSBBbGdvcml0aG06ICR7YWxnfWApO1xuICAgIH1cbn1cbmV4cG9ydHMuYml0TGVuZ3RoID0gYml0TGVuZ3RoO1xuZXhwb3J0cy5kZWZhdWx0ID0gKGFsZykgPT4gKDAsIHJhbmRvbV9qc18xLmRlZmF1bHQpKG5ldyBVaW50OEFycmF5KGJpdExlbmd0aChhbGcpID4+IDMpKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImJpdExlbmd0aCIsImVycm9yc19qc18xIiwicmVxdWlyZSIsInJhbmRvbV9qc18xIiwiYWxnIiwiSk9TRU5vdFN1cHBvcnRlZCIsImRlZmF1bHQiLCJVaW50OEFycmF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/iv.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ./buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst epoch_js_1 = __webpack_require__(/*! ./epoch.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/epoch.js\");\nconst secs_js_1 = __webpack_require__(/*! ./secs.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/secs.js\");\nconst is_object_js_1 = __webpack_require__(/*! ./is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst normalizeTyp = (value)=>value.toLowerCase().replace(/^application\\//, \"\");\nconst checkAudiencePresence = (audPayload, audOption)=>{\n    if (typeof audPayload === \"string\") {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexports[\"default\"] = (protectedHeader, encodedPayload, options = {})=>{\n    const { typ } = options;\n    if (typ && (typeof protectedHeader.typ !== \"string\" || normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"typ\" JWT header value', \"typ\", \"check_failed\");\n    }\n    let payload;\n    try {\n        payload = JSON.parse(buffer_utils_js_1.decoder.decode(encodedPayload));\n    } catch  {}\n    if (!(0, is_object_js_1.default)(payload)) {\n        throw new errors_js_1.JWTInvalid(\"JWT Claims Set must be a top-level JSON object\");\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    if (maxTokenAge !== undefined) requiredClaims.push(\"iat\");\n    if (audience !== undefined) requiredClaims.push(\"aud\");\n    if (subject !== undefined) requiredClaims.push(\"sub\");\n    if (issuer !== undefined) requiredClaims.push(\"iss\");\n    for (const claim of new Set(requiredClaims.reverse())){\n        if (!(claim in payload)) {\n            throw new errors_js_1.JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, \"missing\");\n        }\n    }\n    if (issuer && !(Array.isArray(issuer) ? issuer : [\n        issuer\n    ]).includes(payload.iss)) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"iss\" claim value', \"iss\", \"check_failed\");\n    }\n    if (subject && payload.sub !== subject) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"sub\" claim value', \"sub\", \"check_failed\");\n    }\n    if (audience && !checkAudiencePresence(payload.aud, typeof audience === \"string\" ? [\n        audience\n    ] : audience)) {\n        throw new errors_js_1.JWTClaimValidationFailed('unexpected \"aud\" claim value', \"aud\", \"check_failed\");\n    }\n    let tolerance;\n    switch(typeof options.clockTolerance){\n        case \"string\":\n            tolerance = (0, secs_js_1.default)(options.clockTolerance);\n            break;\n        case \"number\":\n            tolerance = options.clockTolerance;\n            break;\n        case \"undefined\":\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError(\"Invalid clockTolerance option type\");\n    }\n    const { currentDate } = options;\n    const now = (0, epoch_js_1.default)(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== \"number\") {\n        throw new errors_js_1.JWTClaimValidationFailed('\"iat\" claim must be a number', \"iat\", \"invalid\");\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== \"number\") {\n            throw new errors_js_1.JWTClaimValidationFailed('\"nbf\" claim must be a number', \"nbf\", \"invalid\");\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new errors_js_1.JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', \"nbf\", \"check_failed\");\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== \"number\") {\n            throw new errors_js_1.JWTClaimValidationFailed('\"exp\" claim must be a number', \"exp\", \"invalid\");\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new errors_js_1.JWTExpired('\"exp\" claim timestamp check failed', \"exp\", \"check_failed\");\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === \"number\" ? maxTokenAge : (0, secs_js_1.default)(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new errors_js_1.JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', \"iat\", \"check_failed\");\n        }\n        if (age < 0 - tolerance) {\n            throw new errors_js_1.JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', \"iat\", \"check_failed\");\n        }\n    }\n    return payload;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/jwt_claims_set.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/secs.js":
/*!*****************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/secs.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\nexports[\"default\"] = (str)=>{\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError(\"Invalid time period format\");\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch(unit){\n        case \"sec\":\n        case \"secs\":\n        case \"second\":\n        case \"seconds\":\n        case \"s\":\n            return Math.round(value);\n        case \"minute\":\n        case \"minutes\":\n        case \"min\":\n        case \"mins\":\n        case \"m\":\n            return Math.round(value * minute);\n        case \"hour\":\n        case \"hours\":\n        case \"hr\":\n        case \"hrs\":\n        case \"h\":\n            return Math.round(value * hour);\n        case \"day\":\n        case \"days\":\n        case \"d\":\n            return Math.round(value * day);\n        case \"week\":\n        case \"weeks\":\n        case \"w\":\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9zZWNzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFNBQVM7QUFDZixNQUFNQyxPQUFPRCxTQUFTO0FBQ3RCLE1BQU1FLE1BQU1ELE9BQU87QUFDbkIsTUFBTUUsT0FBT0QsTUFBTTtBQUNuQixNQUFNRSxPQUFPRixNQUFNO0FBQ25CLE1BQU1HLFFBQVE7QUFDZFAsa0JBQWVRLEdBQUcsQ0FBQ0M7SUFDZixNQUFNQyxVQUFVSCxNQUFNSSxLQUFLRjtJQUMzQixJQUFJLENBQUNDLFNBQVM7UUFDVixNQUFNLElBQUlFLFVBQVU7SUFDeEI7SUFDQSxNQUFNWCxRQUFRWSxXQUFXSCxPQUFPLENBQUMsRUFBRTtJQUNuQyxNQUFNSSxPQUFPSixPQUFPLENBQUMsRUFBRSxDQUFDSztJQUN4QixPQUFRRDtRQUNKLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBT0UsS0FBS0MsTUFBTWhCO1FBQ3RCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBT2UsS0FBS0MsTUFBTWhCLFFBQVFDO1FBQzlCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBT2MsS0FBS0MsTUFBTWhCLFFBQVFFO1FBQzlCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU9hLEtBQUtDLE1BQU1oQixRQUFRRztRQUM5QixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPWSxLQUFLQyxNQUFNaEIsUUFBUUk7UUFDOUI7WUFDSSxPQUFPVyxLQUFLQyxNQUFNaEIsUUFBUUs7SUFDbEM7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi9zZWNzLmpzP2RhZWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBtaW51dGUgPSA2MDtcbmNvbnN0IGhvdXIgPSBtaW51dGUgKiA2MDtcbmNvbnN0IGRheSA9IGhvdXIgKiAyNDtcbmNvbnN0IHdlZWsgPSBkYXkgKiA3O1xuY29uc3QgeWVhciA9IGRheSAqIDM2NS4yNTtcbmNvbnN0IFJFR0VYID0gL14oXFxkK3xcXGQrXFwuXFxkKykgPyhzZWNvbmRzP3xzZWNzP3xzfG1pbnV0ZXM/fG1pbnM/fG18aG91cnM/fGhycz98aHxkYXlzP3xkfHdlZWtzP3x3fHllYXJzP3x5cnM/fHkpJC9pO1xuZXhwb3J0cy5kZWZhdWx0ID0gKHN0cikgPT4ge1xuICAgIGNvbnN0IG1hdGNoZWQgPSBSRUdFWC5leGVjKHN0cik7XG4gICAgaWYgKCFtYXRjaGVkKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgdGltZSBwZXJpb2QgZm9ybWF0Jyk7XG4gICAgfVxuICAgIGNvbnN0IHZhbHVlID0gcGFyc2VGbG9hdChtYXRjaGVkWzFdKTtcbiAgICBjb25zdCB1bml0ID0gbWF0Y2hlZFsyXS50b0xvd2VyQ2FzZSgpO1xuICAgIHN3aXRjaCAodW5pdCkge1xuICAgICAgICBjYXNlICdzZWMnOlxuICAgICAgICBjYXNlICdzZWNzJzpcbiAgICAgICAgY2FzZSAnc2Vjb25kJzpcbiAgICAgICAgY2FzZSAnc2Vjb25kcyc6XG4gICAgICAgIGNhc2UgJ3MnOlxuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUpO1xuICAgICAgICBjYXNlICdtaW51dGUnOlxuICAgICAgICBjYXNlICdtaW51dGVzJzpcbiAgICAgICAgY2FzZSAnbWluJzpcbiAgICAgICAgY2FzZSAnbWlucyc6XG4gICAgICAgIGNhc2UgJ20nOlxuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUgKiBtaW51dGUpO1xuICAgICAgICBjYXNlICdob3VyJzpcbiAgICAgICAgY2FzZSAnaG91cnMnOlxuICAgICAgICBjYXNlICdocic6XG4gICAgICAgIGNhc2UgJ2hycyc6XG4gICAgICAgIGNhc2UgJ2gnOlxuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUgKiBob3VyKTtcbiAgICAgICAgY2FzZSAnZGF5JzpcbiAgICAgICAgY2FzZSAnZGF5cyc6XG4gICAgICAgIGNhc2UgJ2QnOlxuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUgKiBkYXkpO1xuICAgICAgICBjYXNlICd3ZWVrJzpcbiAgICAgICAgY2FzZSAnd2Vla3MnOlxuICAgICAgICBjYXNlICd3JzpcbiAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlICogd2Vlayk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSAqIHllYXIpO1xuICAgIH1cbn07XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtaW51dGUiLCJob3VyIiwiZGF5Iiwid2VlayIsInllYXIiLCJSRUdFWCIsImRlZmF1bHQiLCJzdHIiLCJtYXRjaGVkIiwiZXhlYyIsIlR5cGVFcnJvciIsInBhcnNlRmxvYXQiLCJ1bml0IiwidG9Mb3dlckNhc2UiLCJNYXRoIiwicm91bmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/secs.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_algorithms.js":
/*!********************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/validate_algorithms.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst validateAlgorithms = (option, algorithms)=>{\n    if (algorithms !== undefined && (!Array.isArray(algorithms) || algorithms.some((s)=>typeof s !== \"string\"))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexports[\"default\"] = validateAlgorithms;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi92YWxpZGF0ZV9hbGdvcml0aG1zLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLHFCQUFxQixDQUFDQyxRQUFRQztJQUNoQyxJQUFJQSxlQUFlQyxhQUNkLEVBQUNDLE1BQU1DLFFBQVFILGVBQWVBLFdBQVdJLEtBQUssQ0FBQ0MsSUFBTSxPQUFPQSxNQUFNLFNBQVEsR0FBSTtRQUMvRSxNQUFNLElBQUlDLFVBQVUsQ0FBQyxDQUFDLEVBQUVQLE9BQU8sb0NBQW9DLENBQUM7SUFDeEU7SUFDQSxJQUFJLENBQUNDLFlBQVk7UUFDYixPQUFPQztJQUNYO0lBQ0EsT0FBTyxJQUFJTSxJQUFJUDtBQUNuQjtBQUNBSixrQkFBZVksR0FBR1YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9saWIvdmFsaWRhdGVfYWxnb3JpdGhtcy5qcz85YjY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdmFsaWRhdGVBbGdvcml0aG1zID0gKG9wdGlvbiwgYWxnb3JpdGhtcykgPT4ge1xuICAgIGlmIChhbGdvcml0aG1zICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgKCFBcnJheS5pc0FycmF5KGFsZ29yaXRobXMpIHx8IGFsZ29yaXRobXMuc29tZSgocykgPT4gdHlwZW9mIHMgIT09ICdzdHJpbmcnKSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgXCIke29wdGlvbn1cIiBvcHRpb24gbXVzdCBiZSBhbiBhcnJheSBvZiBzdHJpbmdzYCk7XG4gICAgfVxuICAgIGlmICghYWxnb3JpdGhtcykge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFNldChhbGdvcml0aG1zKTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSB2YWxpZGF0ZUFsZ29yaXRobXM7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ2YWxpZGF0ZUFsZ29yaXRobXMiLCJvcHRpb24iLCJhbGdvcml0aG1zIiwidW5kZWZpbmVkIiwiQXJyYXkiLCJpc0FycmF5Iiwic29tZSIsInMiLCJUeXBlRXJyb3IiLCJTZXQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_algorithms.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/lib/validate_crit.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) || protectedHeader.crit.length === 0 || protectedHeader.crit.some((input)=>typeof input !== \"string\" || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([\n            ...Object.entries(recognizedOption),\n            ...recognizedDefault.entries()\n        ]);\n    } else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit){\n        if (!recognized.has(parameter)) {\n            throw new errors_js_1.JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        } else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexports[\"default\"] = validateCrit;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi92YWxpZGF0ZV9jcml0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLGNBQWNDLG1CQUFPQSxDQUFDLHVGQUFtQjtBQUMvQyxTQUFTQyxhQUFhQyxHQUFHLEVBQUVDLGlCQUFpQixFQUFFQyxnQkFBZ0IsRUFBRUMsZUFBZSxFQUFFQyxVQUFVO0lBQ3ZGLElBQUlBLFdBQVdDLFNBQVNDLGFBQWFILGdCQUFnQkUsU0FBU0MsV0FBVztRQUNyRSxNQUFNLElBQUlOLElBQUk7SUFDbEI7SUFDQSxJQUFJLENBQUNHLG1CQUFtQkEsZ0JBQWdCRSxTQUFTQyxXQUFXO1FBQ3hELE9BQU8sSUFBSUM7SUFDZjtJQUNBLElBQUksQ0FBQ0MsTUFBTUMsUUFBUU4sZ0JBQWdCRSxTQUMvQkYsZ0JBQWdCRSxLQUFLSyxXQUFXLEtBQ2hDUCxnQkFBZ0JFLEtBQUtNLEtBQUssQ0FBQ0MsUUFBVSxPQUFPQSxVQUFVLFlBQVlBLE1BQU1GLFdBQVcsSUFBSTtRQUN2RixNQUFNLElBQUlWLElBQUk7SUFDbEI7SUFDQSxJQUFJYTtJQUNKLElBQUlYLHFCQUFxQkksV0FBVztRQUNoQ08sYUFBYSxJQUFJQyxJQUFJO2VBQUlyQixPQUFPc0IsUUFBUWI7ZUFBc0JELGtCQUFrQmM7U0FBVTtJQUM5RixPQUNLO1FBQ0RGLGFBQWFaO0lBQ2pCO0lBQ0EsS0FBSyxNQUFNZSxhQUFhYixnQkFBZ0JFLEtBQU07UUFDMUMsSUFBSSxDQUFDUSxXQUFXSSxJQUFJRCxZQUFZO1lBQzVCLE1BQU0sSUFBSW5CLFlBQVlxQixpQkFBaUIsQ0FBQyw0QkFBNEIsRUFBRUYsVUFBVSxtQkFBbUIsQ0FBQztRQUN4RztRQUNBLElBQUlaLFVBQVUsQ0FBQ1ksVUFBVSxLQUFLVixXQUFXO1lBQ3JDLE1BQU0sSUFBSU4sSUFBSSxDQUFDLDRCQUE0QixFQUFFZ0IsVUFBVSxZQUFZLENBQUM7UUFDeEUsT0FDSyxJQUFJSCxXQUFXTSxJQUFJSCxjQUFjYixlQUFlLENBQUNhLFVBQVUsS0FBS1YsV0FBVztZQUM1RSxNQUFNLElBQUlOLElBQUksQ0FBQyw0QkFBNEIsRUFBRWdCLFVBQVUsNkJBQTZCLENBQUM7UUFDekY7SUFDSjtJQUNBLE9BQU8sSUFBSVQsSUFBSUosZ0JBQWdCRTtBQUNuQztBQUNBVixrQkFBZXlCLEdBQUdyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL2xpYi92YWxpZGF0ZV9jcml0LmpzPzhkY2MiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmZ1bmN0aW9uIHZhbGlkYXRlQ3JpdChFcnIsIHJlY29nbml6ZWREZWZhdWx0LCByZWNvZ25pemVkT3B0aW9uLCBwcm90ZWN0ZWRIZWFkZXIsIGpvc2VIZWFkZXIpIHtcbiAgICBpZiAoam9zZUhlYWRlci5jcml0ICE9PSB1bmRlZmluZWQgJiYgcHJvdGVjdGVkSGVhZGVyLmNyaXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyKCdcImNyaXRcIiAoQ3JpdGljYWwpIEhlYWRlciBQYXJhbWV0ZXIgTVVTVCBiZSBpbnRlZ3JpdHkgcHJvdGVjdGVkJyk7XG4gICAgfVxuICAgIGlmICghcHJvdGVjdGVkSGVhZGVyIHx8IHByb3RlY3RlZEhlYWRlci5jcml0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTZXQoKTtcbiAgICB9XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHByb3RlY3RlZEhlYWRlci5jcml0KSB8fFxuICAgICAgICBwcm90ZWN0ZWRIZWFkZXIuY3JpdC5sZW5ndGggPT09IDAgfHxcbiAgICAgICAgcHJvdGVjdGVkSGVhZGVyLmNyaXQuc29tZSgoaW5wdXQpID0+IHR5cGVvZiBpbnB1dCAhPT0gJ3N0cmluZycgfHwgaW5wdXQubGVuZ3RoID09PSAwKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyKCdcImNyaXRcIiAoQ3JpdGljYWwpIEhlYWRlciBQYXJhbWV0ZXIgTVVTVCBiZSBhbiBhcnJheSBvZiBub24tZW1wdHkgc3RyaW5ncyB3aGVuIHByZXNlbnQnKTtcbiAgICB9XG4gICAgbGV0IHJlY29nbml6ZWQ7XG4gICAgaWYgKHJlY29nbml6ZWRPcHRpb24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZWNvZ25pemVkID0gbmV3IE1hcChbLi4uT2JqZWN0LmVudHJpZXMocmVjb2duaXplZE9wdGlvbiksIC4uLnJlY29nbml6ZWREZWZhdWx0LmVudHJpZXMoKV0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmVjb2duaXplZCA9IHJlY29nbml6ZWREZWZhdWx0O1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IHBhcmFtZXRlciBvZiBwcm90ZWN0ZWRIZWFkZXIuY3JpdCkge1xuICAgICAgICBpZiAoIXJlY29nbml6ZWQuaGFzKHBhcmFtZXRlcikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KT1NFTm90U3VwcG9ydGVkKGBFeHRlbnNpb24gSGVhZGVyIFBhcmFtZXRlciBcIiR7cGFyYW1ldGVyfVwiIGlzIG5vdCByZWNvZ25pemVkYCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGpvc2VIZWFkZXJbcGFyYW1ldGVyXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyKGBFeHRlbnNpb24gSGVhZGVyIFBhcmFtZXRlciBcIiR7cGFyYW1ldGVyfVwiIGlzIG1pc3NpbmdgKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChyZWNvZ25pemVkLmdldChwYXJhbWV0ZXIpICYmIHByb3RlY3RlZEhlYWRlcltwYXJhbWV0ZXJdID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnIoYEV4dGVuc2lvbiBIZWFkZXIgUGFyYW1ldGVyIFwiJHtwYXJhbWV0ZXJ9XCIgTVVTVCBiZSBpbnRlZ3JpdHkgcHJvdGVjdGVkYCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ldyBTZXQocHJvdGVjdGVkSGVhZGVyLmNyaXQpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gdmFsaWRhdGVDcml0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZXJyb3JzX2pzXzEiLCJyZXF1aXJlIiwidmFsaWRhdGVDcml0IiwiRXJyIiwicmVjb2duaXplZERlZmF1bHQiLCJyZWNvZ25pemVkT3B0aW9uIiwicHJvdGVjdGVkSGVhZGVyIiwiam9zZUhlYWRlciIsImNyaXQiLCJ1bmRlZmluZWQiLCJTZXQiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJzb21lIiwiaW5wdXQiLCJyZWNvZ25pemVkIiwiTWFwIiwiZW50cmllcyIsInBhcmFtZXRlciIsImhhcyIsIkpPU0VOb3RTdXBwb3J0ZWQiLCJnZXQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/lib/validate_crit.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/aeskw.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/aeskw.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.unwrap = exports.wrap = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst ciphers_js_1 = __webpack_require__(/*! ./ciphers.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ciphers.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nfunction checkKeySize(key, alg) {\n    if (key.symmetricKeySize << 3 !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction ensureKeyObject(key, alg, usage) {\n    if ((0, is_key_object_js_1.default)(key)) {\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return (0, crypto_1.createSecretKey)(key);\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, usage);\n        return crypto_1.KeyObject.from(key);\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, \"Uint8Array\"));\n}\nconst wrap = (alg, key, cek)=>{\n    const size = parseInt(alg.slice(1, 4), 10);\n    const algorithm = `aes${size}-wrap`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n    const keyObject = ensureKeyObject(key, alg, \"wrapKey\");\n    checkKeySize(keyObject, alg);\n    const cipher = (0, crypto_1.createCipheriv)(algorithm, keyObject, buffer_1.Buffer.alloc(8, 0xa6));\n    return (0, buffer_utils_js_1.concat)(cipher.update(cek), cipher.final());\n};\nexports.wrap = wrap;\nconst unwrap = (alg, key, encryptedKey)=>{\n    const size = parseInt(alg.slice(1, 4), 10);\n    const algorithm = `aes${size}-wrap`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n    const keyObject = ensureKeyObject(key, alg, \"unwrapKey\");\n    checkKeySize(keyObject, alg);\n    const cipher = (0, crypto_1.createDecipheriv)(algorithm, keyObject, buffer_1.Buffer.alloc(8, 0xa6));\n    return (0, buffer_utils_js_1.concat)(cipher.update(encryptedKey), cipher.final());\n};\nexports.unwrap = unwrap;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvYWVza3cuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGNBQWNFLEdBQUdGLFlBQVlHLEdBQUcsS0FBSztBQUNyQyxNQUFNQyxXQUFXQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNQyxXQUFXRCxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNRSxjQUFjRixtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsTUFBTUcsb0JBQW9CSCxtQkFBT0EsQ0FBQyxpR0FBd0I7QUFDMUQsTUFBTUksaUJBQWlCSixtQkFBT0EsQ0FBQywwRkFBZ0I7QUFDL0MsTUFBTUssa0JBQWtCTCxtQkFBT0EsQ0FBQyw2RkFBc0I7QUFDdEQsTUFBTU0scUJBQXFCTixtQkFBT0EsQ0FBQyxrR0FBb0I7QUFDdkQsTUFBTU8seUJBQXlCUCxtQkFBT0EsQ0FBQywyR0FBNkI7QUFDcEUsTUFBTVEsZUFBZVIsbUJBQU9BLENBQUMsc0ZBQWM7QUFDM0MsTUFBTVMsbUJBQW1CVCxtQkFBT0EsQ0FBQyw4RkFBa0I7QUFDbkQsU0FBU1UsYUFBYUMsR0FBRyxFQUFFQyxHQUFHO0lBQzFCLElBQUlELElBQUlFLG9CQUFvQixNQUFNQyxTQUFTRixJQUFJRyxNQUFNLEdBQUcsSUFBSSxLQUFLO1FBQzdELE1BQU0sSUFBSUMsVUFBVSxDQUFDLDBCQUEwQixFQUFFSixJQUFJLENBQUM7SUFDMUQ7QUFDSjtBQUNBLFNBQVNLLGdCQUFnQk4sR0FBRyxFQUFFQyxHQUFHLEVBQUVNLEtBQUs7SUFDcEMsSUFBSSxDQUFDLEdBQUdaLG1CQUFtQmEsT0FBTSxFQUFHUixNQUFNO1FBQ3RDLE9BQU9BO0lBQ1g7SUFDQSxJQUFJQSxlQUFlUyxZQUFZO1FBQzNCLE9BQU8sQ0FBQyxHQUFHbkIsU0FBU29CLGVBQWMsRUFBR1Y7SUFDekM7SUFDQSxJQUFJLENBQUMsR0FBR1AsZUFBZWtCLFdBQVUsRUFBR1gsTUFBTTtRQUNyQyxJQUFHTixnQkFBZ0JrQixpQkFBZ0IsRUFBR1osS0FBS0MsS0FBS007UUFDakQsT0FBT2pCLFNBQVN1QixVQUFVQyxLQUFLZDtJQUNuQztJQUNBLE1BQU0sSUFBSUssVUFBVSxDQUFDLEdBQUdULHVCQUF1QlksT0FBTSxFQUFHUixRQUFRRixpQkFBaUJpQixPQUFPO0FBQzVGO0FBQ0EsTUFBTTVCLE9BQU8sQ0FBQ2MsS0FBS0QsS0FBS2dCO0lBQ3BCLE1BQU1DLE9BQU9kLFNBQVNGLElBQUlHLE1BQU0sR0FBRyxJQUFJO0lBQ3ZDLE1BQU1jLFlBQVksQ0FBQyxHQUFHLEVBQUVELEtBQUssS0FBSyxDQUFDO0lBQ25DLElBQUksQ0FBQyxDQUFDLEdBQUdwQixhQUFhVyxPQUFNLEVBQUdVLFlBQVk7UUFDdkMsTUFBTSxJQUFJM0IsWUFBWTRCLGlCQUFpQixDQUFDLElBQUksRUFBRWxCLElBQUksMkRBQTJELENBQUM7SUFDbEg7SUFDQSxNQUFNbUIsWUFBWWQsZ0JBQWdCTixLQUFLQyxLQUFLO0lBQzVDRixhQUFhcUIsV0FBV25CO0lBQ3hCLE1BQU1vQixTQUFTLENBQUMsR0FBRy9CLFNBQVNnQyxjQUFhLEVBQUdKLFdBQVdFLFdBQVdoQyxTQUFTbUMsT0FBT0MsTUFBTSxHQUFHO0lBQzNGLE9BQU8sQ0FBQyxHQUFHaEMsa0JBQWtCaUMsTUFBSyxFQUFHSixPQUFPSyxPQUFPVixNQUFNSyxPQUFPTTtBQUNwRTtBQUNBM0MsWUFBWUcsR0FBR0E7QUFDZixNQUFNRCxTQUFTLENBQUNlLEtBQUtELEtBQUs0QjtJQUN0QixNQUFNWCxPQUFPZCxTQUFTRixJQUFJRyxNQUFNLEdBQUcsSUFBSTtJQUN2QyxNQUFNYyxZQUFZLENBQUMsR0FBRyxFQUFFRCxLQUFLLEtBQUssQ0FBQztJQUNuQyxJQUFJLENBQUMsQ0FBQyxHQUFHcEIsYUFBYVcsT0FBTSxFQUFHVSxZQUFZO1FBQ3ZDLE1BQU0sSUFBSTNCLFlBQVk0QixpQkFBaUIsQ0FBQyxJQUFJLEVBQUVsQixJQUFJLDJEQUEyRCxDQUFDO0lBQ2xIO0lBQ0EsTUFBTW1CLFlBQVlkLGdCQUFnQk4sS0FBS0MsS0FBSztJQUM1Q0YsYUFBYXFCLFdBQVduQjtJQUN4QixNQUFNb0IsU0FBUyxDQUFDLEdBQUcvQixTQUFTdUMsZ0JBQWUsRUFBR1gsV0FBV0UsV0FBV2hDLFNBQVNtQyxPQUFPQyxNQUFNLEdBQUc7SUFDN0YsT0FBTyxDQUFDLEdBQUdoQyxrQkFBa0JpQyxNQUFLLEVBQUdKLE9BQU9LLE9BQU9FLGVBQWVQLE9BQU9NO0FBQzdFO0FBQ0EzQyxjQUFjRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvYWVza3cuanM/YzZjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudW53cmFwID0gZXhwb3J0cy53cmFwID0gdm9pZCAwO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyXCIpO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xuY29uc3Qgd2ViY3J5cHRvX2pzXzEgPSByZXF1aXJlKFwiLi93ZWJjcnlwdG8uanNcIik7XG5jb25zdCBjcnlwdG9fa2V5X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2NyeXB0b19rZXkuanNcIik7XG5jb25zdCBpc19rZXlfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi9pc19rZXlfb2JqZWN0LmpzXCIpO1xuY29uc3QgaW52YWxpZF9rZXlfaW5wdXRfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaW52YWxpZF9rZXlfaW5wdXQuanNcIik7XG5jb25zdCBjaXBoZXJzX2pzXzEgPSByZXF1aXJlKFwiLi9jaXBoZXJzLmpzXCIpO1xuY29uc3QgaXNfa2V5X2xpa2VfanNfMSA9IHJlcXVpcmUoXCIuL2lzX2tleV9saWtlLmpzXCIpO1xuZnVuY3Rpb24gY2hlY2tLZXlTaXplKGtleSwgYWxnKSB7XG4gICAgaWYgKGtleS5zeW1tZXRyaWNLZXlTaXplIDw8IDMgIT09IHBhcnNlSW50KGFsZy5zbGljZSgxLCA0KSwgMTApKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYEludmFsaWQga2V5IHNpemUgZm9yIGFsZzogJHthbGd9YCk7XG4gICAgfVxufVxuZnVuY3Rpb24gZW5zdXJlS2V5T2JqZWN0KGtleSwgYWxnLCB1c2FnZSkge1xuICAgIGlmICgoMCwgaXNfa2V5X29iamVjdF9qc18xLmRlZmF1bHQpKGtleSkpIHtcbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gICAgaWYgKGtleSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgcmV0dXJuICgwLCBjcnlwdG9fMS5jcmVhdGVTZWNyZXRLZXkpKGtleSk7XG4gICAgfVxuICAgIGlmICgoMCwgd2ViY3J5cHRvX2pzXzEuaXNDcnlwdG9LZXkpKGtleSkpIHtcbiAgICAgICAgKDAsIGNyeXB0b19rZXlfanNfMS5jaGVja0VuY0NyeXB0b0tleSkoa2V5LCBhbGcsIHVzYWdlKTtcbiAgICAgICAgcmV0dXJuIGNyeXB0b18xLktleU9iamVjdC5mcm9tKGtleSk7XG4gICAgfVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKDAsIGludmFsaWRfa2V5X2lucHV0X2pzXzEuZGVmYXVsdCkoa2V5LCAuLi5pc19rZXlfbGlrZV9qc18xLnR5cGVzLCAnVWludDhBcnJheScpKTtcbn1cbmNvbnN0IHdyYXAgPSAoYWxnLCBrZXksIGNlaykgPT4ge1xuICAgIGNvbnN0IHNpemUgPSBwYXJzZUludChhbGcuc2xpY2UoMSwgNCksIDEwKTtcbiAgICBjb25zdCBhbGdvcml0aG0gPSBgYWVzJHtzaXplfS13cmFwYDtcbiAgICBpZiAoISgwLCBjaXBoZXJzX2pzXzEuZGVmYXVsdCkoYWxnb3JpdGhtKSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSk9TRU5vdFN1cHBvcnRlZChgYWxnICR7YWxnfSBpcyBub3Qgc3VwcG9ydGVkIGVpdGhlciBieSBKT1NFIG9yIHlvdXIgamF2YXNjcmlwdCBydW50aW1lYCk7XG4gICAgfVxuICAgIGNvbnN0IGtleU9iamVjdCA9IGVuc3VyZUtleU9iamVjdChrZXksIGFsZywgJ3dyYXBLZXknKTtcbiAgICBjaGVja0tleVNpemUoa2V5T2JqZWN0LCBhbGcpO1xuICAgIGNvbnN0IGNpcGhlciA9ICgwLCBjcnlwdG9fMS5jcmVhdGVDaXBoZXJpdikoYWxnb3JpdGhtLCBrZXlPYmplY3QsIGJ1ZmZlcl8xLkJ1ZmZlci5hbGxvYyg4LCAweGE2KSk7XG4gICAgcmV0dXJuICgwLCBidWZmZXJfdXRpbHNfanNfMS5jb25jYXQpKGNpcGhlci51cGRhdGUoY2VrKSwgY2lwaGVyLmZpbmFsKCkpO1xufTtcbmV4cG9ydHMud3JhcCA9IHdyYXA7XG5jb25zdCB1bndyYXAgPSAoYWxnLCBrZXksIGVuY3J5cHRlZEtleSkgPT4ge1xuICAgIGNvbnN0IHNpemUgPSBwYXJzZUludChhbGcuc2xpY2UoMSwgNCksIDEwKTtcbiAgICBjb25zdCBhbGdvcml0aG0gPSBgYWVzJHtzaXplfS13cmFwYDtcbiAgICBpZiAoISgwLCBjaXBoZXJzX2pzXzEuZGVmYXVsdCkoYWxnb3JpdGhtKSkge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSk9TRU5vdFN1cHBvcnRlZChgYWxnICR7YWxnfSBpcyBub3Qgc3VwcG9ydGVkIGVpdGhlciBieSBKT1NFIG9yIHlvdXIgamF2YXNjcmlwdCBydW50aW1lYCk7XG4gICAgfVxuICAgIGNvbnN0IGtleU9iamVjdCA9IGVuc3VyZUtleU9iamVjdChrZXksIGFsZywgJ3Vud3JhcEtleScpO1xuICAgIGNoZWNrS2V5U2l6ZShrZXlPYmplY3QsIGFsZyk7XG4gICAgY29uc3QgY2lwaGVyID0gKDAsIGNyeXB0b18xLmNyZWF0ZURlY2lwaGVyaXYpKGFsZ29yaXRobSwga2V5T2JqZWN0LCBidWZmZXJfMS5CdWZmZXIuYWxsb2MoOCwgMHhhNikpO1xuICAgIHJldHVybiAoMCwgYnVmZmVyX3V0aWxzX2pzXzEuY29uY2F0KShjaXBoZXIudXBkYXRlKGVuY3J5cHRlZEtleSksIGNpcGhlci5maW5hbCgpKTtcbn07XG5leHBvcnRzLnVud3JhcCA9IHVud3JhcDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInVud3JhcCIsIndyYXAiLCJidWZmZXJfMSIsInJlcXVpcmUiLCJjcnlwdG9fMSIsImVycm9yc19qc18xIiwiYnVmZmVyX3V0aWxzX2pzXzEiLCJ3ZWJjcnlwdG9fanNfMSIsImNyeXB0b19rZXlfanNfMSIsImlzX2tleV9vYmplY3RfanNfMSIsImludmFsaWRfa2V5X2lucHV0X2pzXzEiLCJjaXBoZXJzX2pzXzEiLCJpc19rZXlfbGlrZV9qc18xIiwiY2hlY2tLZXlTaXplIiwia2V5IiwiYWxnIiwic3ltbWV0cmljS2V5U2l6ZSIsInBhcnNlSW50Iiwic2xpY2UiLCJUeXBlRXJyb3IiLCJlbnN1cmVLZXlPYmplY3QiLCJ1c2FnZSIsImRlZmF1bHQiLCJVaW50OEFycmF5IiwiY3JlYXRlU2VjcmV0S2V5IiwiaXNDcnlwdG9LZXkiLCJjaGVja0VuY0NyeXB0b0tleSIsIktleU9iamVjdCIsImZyb20iLCJ0eXBlcyIsImNlayIsInNpemUiLCJhbGdvcml0aG0iLCJKT1NFTm90U3VwcG9ydGVkIiwia2V5T2JqZWN0IiwiY2lwaGVyIiwiY3JlYXRlQ2lwaGVyaXYiLCJCdWZmZXIiLCJhbGxvYyIsImNvbmNhdCIsInVwZGF0ZSIsImZpbmFsIiwiZW5jcnlwdGVkS2V5IiwiY3JlYXRlRGVjaXBoZXJpdiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/aeskw.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/asn1.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromX509 = exports.fromSPKI = exports.fromPKCS8 = exports.toPKCS8 = exports.toSPKI = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst genericExport = (keyType, keyFormat, key)=>{\n    let keyObject;\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        if (!key.extractable) {\n            throw new TypeError(\"CryptoKey is not extractable\");\n        }\n        keyObject = crypto_1.KeyObject.from(key);\n    } else if ((0, is_key_object_js_1.default)(key)) {\n        keyObject = key;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n    }\n    if (keyObject.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return keyObject.export({\n        format: \"pem\",\n        type: keyFormat\n    });\n};\nconst toSPKI = (key)=>{\n    return genericExport(\"public\", \"spki\", key);\n};\nexports.toSPKI = toSPKI;\nconst toPKCS8 = (key)=>{\n    return genericExport(\"private\", \"pkcs8\", key);\n};\nexports.toPKCS8 = toPKCS8;\nconst fromPKCS8 = (pem)=>(0, crypto_1.createPrivateKey)({\n        key: buffer_1.Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, \"\"), \"base64\"),\n        type: \"pkcs8\",\n        format: \"der\"\n    });\nexports.fromPKCS8 = fromPKCS8;\nconst fromSPKI = (pem)=>(0, crypto_1.createPublicKey)({\n        key: buffer_1.Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, \"\"), \"base64\"),\n        type: \"spki\",\n        format: \"der\"\n    });\nexports.fromSPKI = fromSPKI;\nconst fromX509 = (pem)=>(0, crypto_1.createPublicKey)({\n        key: pem,\n        type: \"spki\",\n        format: \"pem\"\n    });\nexports.fromX509 = fromX509;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvYXNuMS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZ0JBQWdCRSxHQUFHRixnQkFBZ0JHLEdBQUdILGlCQUFpQkksR0FBR0osZUFBZUssR0FBR0wsY0FBY00sR0FBRyxLQUFLO0FBQ2xHLE1BQU1DLFdBQVdDLG1CQUFPQSxDQUFDLHNCQUFRO0FBQ2pDLE1BQU1DLFdBQVdELG1CQUFPQSxDQUFDLHNCQUFRO0FBQ2pDLE1BQU1FLGlCQUFpQkYsbUJBQU9BLENBQUMsMEZBQWdCO0FBQy9DLE1BQU1HLHFCQUFxQkgsbUJBQU9BLENBQUMsa0dBQW9CO0FBQ3ZELE1BQU1JLHlCQUF5QkosbUJBQU9BLENBQUMsMkdBQTZCO0FBQ3BFLE1BQU1LLG1CQUFtQkwsbUJBQU9BLENBQUMsOEZBQWtCO0FBQ25ELE1BQU1NLGdCQUFnQixDQUFDQyxTQUFTQyxXQUFXQztJQUN2QyxJQUFJQztJQUNKLElBQUksQ0FBQyxHQUFHUixlQUFlUyxXQUFVLEVBQUdGLE1BQU07UUFDdEMsSUFBSSxDQUFDQSxJQUFJRyxhQUFhO1lBQ2xCLE1BQU0sSUFBSUMsVUFBVTtRQUN4QjtRQUNBSCxZQUFZWCxTQUFTZSxVQUFVQyxLQUFLTjtJQUN4QyxPQUNLLElBQUksQ0FBQyxHQUFHTixtQkFBbUJhLE9BQU0sRUFBR1AsTUFBTTtRQUMzQ0MsWUFBWUQ7SUFDaEIsT0FDSztRQUNELE1BQU0sSUFBSUksVUFBVSxDQUFDLEdBQUdULHVCQUF1QlksT0FBTSxFQUFHUCxRQUFRSixpQkFBaUJZO0lBQ3JGO0lBQ0EsSUFBSVAsVUFBVVEsU0FBU1gsU0FBUztRQUM1QixNQUFNLElBQUlNLFVBQVUsQ0FBQyxhQUFhLEVBQUVOLFFBQVEsSUFBSSxDQUFDO0lBQ3JEO0lBQ0EsT0FBT0csVUFBVVMsT0FBTztRQUFFQyxRQUFRO1FBQU9GLE1BQU1WO0lBQVU7QUFDN0Q7QUFDQSxNQUFNVixTQUFTLENBQUNXO0lBQ1osT0FBT0gsY0FBYyxVQUFVLFFBQVFHO0FBQzNDO0FBQ0FqQixjQUFjTSxHQUFHQTtBQUNqQixNQUFNRCxVQUFVLENBQUNZO0lBQ2IsT0FBT0gsY0FBYyxXQUFXLFNBQVNHO0FBQzdDO0FBQ0FqQixlQUFlSyxHQUFHQTtBQUNsQixNQUFNRCxZQUFZLENBQUN5QixNQUFRLENBQUMsR0FBR3RCLFNBQVN1QixnQkFBZSxFQUFHO1FBQ3REYixLQUFLUixTQUFTc0IsT0FBT1IsS0FBS00sSUFBSUcsUUFBUSwrQ0FBK0MsS0FBSztRQUMxRk4sTUFBTTtRQUNORSxRQUFRO0lBQ1o7QUFDQTVCLGlCQUFpQkksR0FBR0E7QUFDcEIsTUFBTUQsV0FBVyxDQUFDMEIsTUFBUSxDQUFDLEdBQUd0QixTQUFTMEIsZUFBYyxFQUFHO1FBQ3BEaEIsS0FBS1IsU0FBU3NCLE9BQU9SLEtBQUtNLElBQUlHLFFBQVEsOENBQThDLEtBQUs7UUFDekZOLE1BQU07UUFDTkUsUUFBUTtJQUNaO0FBQ0E1QixnQkFBZ0JHLEdBQUdBO0FBQ25CLE1BQU1ELFdBQVcsQ0FBQzJCLE1BQVEsQ0FBQyxHQUFHdEIsU0FBUzBCLGVBQWMsRUFBRztRQUNwRGhCLEtBQUtZO1FBQ0xILE1BQU07UUFDTkUsUUFBUTtJQUNaO0FBQ0E1QixnQkFBZ0JFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9hc24xLmpzPzk3N2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZyb21YNTA5ID0gZXhwb3J0cy5mcm9tU1BLSSA9IGV4cG9ydHMuZnJvbVBLQ1M4ID0gZXhwb3J0cy50b1BLQ1M4ID0gZXhwb3J0cy50b1NQS0kgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCBidWZmZXJfMSA9IHJlcXVpcmUoXCJidWZmZXJcIik7XG5jb25zdCB3ZWJjcnlwdG9fanNfMSA9IHJlcXVpcmUoXCIuL3dlYmNyeXB0by5qc1wiKTtcbmNvbnN0IGlzX2tleV9vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuL2lzX2tleV9vYmplY3QuanNcIik7XG5jb25zdCBpbnZhbGlkX2tleV9pbnB1dF9qc18xID0gcmVxdWlyZShcIi4uL2xpYi9pbnZhbGlkX2tleV9pbnB1dC5qc1wiKTtcbmNvbnN0IGlzX2tleV9saWtlX2pzXzEgPSByZXF1aXJlKFwiLi9pc19rZXlfbGlrZS5qc1wiKTtcbmNvbnN0IGdlbmVyaWNFeHBvcnQgPSAoa2V5VHlwZSwga2V5Rm9ybWF0LCBrZXkpID0+IHtcbiAgICBsZXQga2V5T2JqZWN0O1xuICAgIGlmICgoMCwgd2ViY3J5cHRvX2pzXzEuaXNDcnlwdG9LZXkpKGtleSkpIHtcbiAgICAgICAgaWYgKCFrZXkuZXh0cmFjdGFibGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0NyeXB0b0tleSBpcyBub3QgZXh0cmFjdGFibGUnKTtcbiAgICAgICAgfVxuICAgICAgICBrZXlPYmplY3QgPSBjcnlwdG9fMS5LZXlPYmplY3QuZnJvbShrZXkpO1xuICAgIH1cbiAgICBlbHNlIGlmICgoMCwgaXNfa2V5X29iamVjdF9qc18xLmRlZmF1bHQpKGtleSkpIHtcbiAgICAgICAga2V5T2JqZWN0ID0ga2V5O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigoMCwgaW52YWxpZF9rZXlfaW5wdXRfanNfMS5kZWZhdWx0KShrZXksIC4uLmlzX2tleV9saWtlX2pzXzEudHlwZXMpKTtcbiAgICB9XG4gICAgaWYgKGtleU9iamVjdC50eXBlICE9PSBrZXlUeXBlKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYGtleSBpcyBub3QgYSAke2tleVR5cGV9IGtleWApO1xuICAgIH1cbiAgICByZXR1cm4ga2V5T2JqZWN0LmV4cG9ydCh7IGZvcm1hdDogJ3BlbScsIHR5cGU6IGtleUZvcm1hdCB9KTtcbn07XG5jb25zdCB0b1NQS0kgPSAoa2V5KSA9PiB7XG4gICAgcmV0dXJuIGdlbmVyaWNFeHBvcnQoJ3B1YmxpYycsICdzcGtpJywga2V5KTtcbn07XG5leHBvcnRzLnRvU1BLSSA9IHRvU1BLSTtcbmNvbnN0IHRvUEtDUzggPSAoa2V5KSA9PiB7XG4gICAgcmV0dXJuIGdlbmVyaWNFeHBvcnQoJ3ByaXZhdGUnLCAncGtjczgnLCBrZXkpO1xufTtcbmV4cG9ydHMudG9QS0NTOCA9IHRvUEtDUzg7XG5jb25zdCBmcm9tUEtDUzggPSAocGVtKSA9PiAoMCwgY3J5cHRvXzEuY3JlYXRlUHJpdmF0ZUtleSkoe1xuICAgIGtleTogYnVmZmVyXzEuQnVmZmVyLmZyb20ocGVtLnJlcGxhY2UoLyg/Oi0tLS0tKD86QkVHSU58RU5EKSBQUklWQVRFIEtFWS0tLS0tfFxccykvZywgJycpLCAnYmFzZTY0JyksXG4gICAgdHlwZTogJ3BrY3M4JyxcbiAgICBmb3JtYXQ6ICdkZXInLFxufSk7XG5leHBvcnRzLmZyb21QS0NTOCA9IGZyb21QS0NTODtcbmNvbnN0IGZyb21TUEtJID0gKHBlbSkgPT4gKDAsIGNyeXB0b18xLmNyZWF0ZVB1YmxpY0tleSkoe1xuICAgIGtleTogYnVmZmVyXzEuQnVmZmVyLmZyb20ocGVtLnJlcGxhY2UoLyg/Oi0tLS0tKD86QkVHSU58RU5EKSBQVUJMSUMgS0VZLS0tLS18XFxzKS9nLCAnJyksICdiYXNlNjQnKSxcbiAgICB0eXBlOiAnc3BraScsXG4gICAgZm9ybWF0OiAnZGVyJyxcbn0pO1xuZXhwb3J0cy5mcm9tU1BLSSA9IGZyb21TUEtJO1xuY29uc3QgZnJvbVg1MDkgPSAocGVtKSA9PiAoMCwgY3J5cHRvXzEuY3JlYXRlUHVibGljS2V5KSh7XG4gICAga2V5OiBwZW0sXG4gICAgdHlwZTogJ3Nwa2knLFxuICAgIGZvcm1hdDogJ3BlbScsXG59KTtcbmV4cG9ydHMuZnJvbVg1MDkgPSBmcm9tWDUwOTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImZyb21YNTA5IiwiZnJvbVNQS0kiLCJmcm9tUEtDUzgiLCJ0b1BLQ1M4IiwidG9TUEtJIiwiY3J5cHRvXzEiLCJyZXF1aXJlIiwiYnVmZmVyXzEiLCJ3ZWJjcnlwdG9fanNfMSIsImlzX2tleV9vYmplY3RfanNfMSIsImludmFsaWRfa2V5X2lucHV0X2pzXzEiLCJpc19rZXlfbGlrZV9qc18xIiwiZ2VuZXJpY0V4cG9ydCIsImtleVR5cGUiLCJrZXlGb3JtYXQiLCJrZXkiLCJrZXlPYmplY3QiLCJpc0NyeXB0b0tleSIsImV4dHJhY3RhYmxlIiwiVHlwZUVycm9yIiwiS2V5T2JqZWN0IiwiZnJvbSIsImRlZmF1bHQiLCJ0eXBlcyIsInR5cGUiLCJleHBvcnQiLCJmb3JtYXQiLCJwZW0iLCJjcmVhdGVQcml2YXRlS2V5IiwiQnVmZmVyIiwicmVwbGFjZSIsImNyZWF0ZVB1YmxpY0tleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tagInteger = 0x02;\nconst tagSequence = 0x30;\nclass Asn1SequenceDecoder {\n    constructor(buffer){\n        if (buffer[0] !== tagSequence) {\n            throw new TypeError();\n        }\n        this.buffer = buffer;\n        this.offset = 1;\n        const len = this.decodeLength();\n        if (len !== buffer.length - this.offset) {\n            throw new TypeError();\n        }\n    }\n    decodeLength() {\n        let length = this.buffer[this.offset++];\n        if (length & 0x80) {\n            const nBytes = length & ~0x80;\n            length = 0;\n            for(let i = 0; i < nBytes; i++)length = length << 8 | this.buffer[this.offset + i];\n            this.offset += nBytes;\n        }\n        return length;\n    }\n    unsignedInteger() {\n        if (this.buffer[this.offset++] !== tagInteger) {\n            throw new TypeError();\n        }\n        let length = this.decodeLength();\n        if (this.buffer[this.offset] === 0) {\n            this.offset++;\n            length--;\n        }\n        const result = this.buffer.slice(this.offset, this.offset + length);\n        this.offset += length;\n        return result;\n    }\n    end() {\n        if (this.offset !== this.buffer.length) {\n            throw new TypeError();\n        }\n    }\n}\nexports[\"default\"] = Asn1SequenceDecoder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvYXNuMV9zZXF1ZW5jZV9kZWNvZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLGFBQWE7QUFDbkIsTUFBTUMsY0FBYztBQUNwQixNQUFNQztJQUNGQyxZQUFZQyxNQUFNLENBQUU7UUFDaEIsSUFBSUEsTUFBTSxDQUFDLEVBQUUsS0FBS0gsYUFBYTtZQUMzQixNQUFNLElBQUlJO1FBQ2Q7UUFDQSxJQUFJLENBQUNELFNBQVNBO1FBQ2QsSUFBSSxDQUFDRSxTQUFTO1FBQ2QsTUFBTUMsTUFBTSxJQUFJLENBQUNDO1FBQ2pCLElBQUlELFFBQVFILE9BQU9LLFNBQVMsSUFBSSxDQUFDSCxRQUFRO1lBQ3JDLE1BQU0sSUFBSUQ7UUFDZDtJQUNKO0lBQ0FHLGVBQWU7UUFDWCxJQUFJQyxTQUFTLElBQUksQ0FBQ0wsTUFBTSxDQUFDLElBQUksQ0FBQ0UsU0FBUztRQUN2QyxJQUFJRyxTQUFTLE1BQU07WUFDZixNQUFNQyxTQUFTRCxTQUFTLENBQUM7WUFDekJBLFNBQVM7WUFDVCxJQUFLLElBQUlFLElBQUksR0FBR0EsSUFBSUQsUUFBUUMsSUFDeEJGLFNBQVMsVUFBVyxJQUFLLElBQUksQ0FBQ0wsTUFBTSxDQUFDLElBQUksQ0FBQ0UsU0FBU0ssRUFBRTtZQUN6RCxJQUFJLENBQUNMLFVBQVVJO1FBQ25CO1FBQ0EsT0FBT0Q7SUFDWDtJQUNBRyxrQkFBa0I7UUFDZCxJQUFJLElBQUksQ0FBQ1IsTUFBTSxDQUFDLElBQUksQ0FBQ0UsU0FBUyxLQUFLTixZQUFZO1lBQzNDLE1BQU0sSUFBSUs7UUFDZDtRQUNBLElBQUlJLFNBQVMsSUFBSSxDQUFDRDtRQUNsQixJQUFJLElBQUksQ0FBQ0osTUFBTSxDQUFDLElBQUksQ0FBQ0UsT0FBTyxLQUFLLEdBQUc7WUFDaEMsSUFBSSxDQUFDQTtZQUNMRztRQUNKO1FBQ0EsTUFBTUksU0FBUyxJQUFJLENBQUNULE9BQU9VLE1BQU0sSUFBSSxDQUFDUixRQUFRLElBQUksQ0FBQ0EsU0FBU0c7UUFDNUQsSUFBSSxDQUFDSCxVQUFVRztRQUNmLE9BQU9JO0lBQ1g7SUFDQUUsTUFBTTtRQUNGLElBQUksSUFBSSxDQUFDVCxXQUFXLElBQUksQ0FBQ0YsT0FBT0ssUUFBUTtZQUNwQyxNQUFNLElBQUlKO1FBQ2Q7SUFDSjtBQUNKO0FBQ0FQLGtCQUFla0IsR0FBR2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2FzbjFfc2VxdWVuY2VfZGVjb2Rlci5qcz8yYTgyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdGFnSW50ZWdlciA9IDB4MDI7XG5jb25zdCB0YWdTZXF1ZW5jZSA9IDB4MzA7XG5jbGFzcyBBc24xU2VxdWVuY2VEZWNvZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihidWZmZXIpIHtcbiAgICAgICAgaWYgKGJ1ZmZlclswXSAhPT0gdGFnU2VxdWVuY2UpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmJ1ZmZlciA9IGJ1ZmZlcjtcbiAgICAgICAgdGhpcy5vZmZzZXQgPSAxO1xuICAgICAgICBjb25zdCBsZW4gPSB0aGlzLmRlY29kZUxlbmd0aCgpO1xuICAgICAgICBpZiAobGVuICE9PSBidWZmZXIubGVuZ3RoIC0gdGhpcy5vZmZzZXQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkZWNvZGVMZW5ndGgoKSB7XG4gICAgICAgIGxldCBsZW5ndGggPSB0aGlzLmJ1ZmZlclt0aGlzLm9mZnNldCsrXTtcbiAgICAgICAgaWYgKGxlbmd0aCAmIDB4ODApIHtcbiAgICAgICAgICAgIGNvbnN0IG5CeXRlcyA9IGxlbmd0aCAmIH4weDgwO1xuICAgICAgICAgICAgbGVuZ3RoID0gMDtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbkJ5dGVzOyBpKyspXG4gICAgICAgICAgICAgICAgbGVuZ3RoID0gKGxlbmd0aCA8PCA4KSB8IHRoaXMuYnVmZmVyW3RoaXMub2Zmc2V0ICsgaV07XG4gICAgICAgICAgICB0aGlzLm9mZnNldCArPSBuQnl0ZXM7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGxlbmd0aDtcbiAgICB9XG4gICAgdW5zaWduZWRJbnRlZ2VyKCkge1xuICAgICAgICBpZiAodGhpcy5idWZmZXJbdGhpcy5vZmZzZXQrK10gIT09IHRhZ0ludGVnZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgbGVuZ3RoID0gdGhpcy5kZWNvZGVMZW5ndGgoKTtcbiAgICAgICAgaWYgKHRoaXMuYnVmZmVyW3RoaXMub2Zmc2V0XSA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5vZmZzZXQrKztcbiAgICAgICAgICAgIGxlbmd0aC0tO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuYnVmZmVyLnNsaWNlKHRoaXMub2Zmc2V0LCB0aGlzLm9mZnNldCArIGxlbmd0aCk7XG4gICAgICAgIHRoaXMub2Zmc2V0ICs9IGxlbmd0aDtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgZW5kKCkge1xuICAgICAgICBpZiAodGhpcy5vZmZzZXQgIT09IHRoaXMuYnVmZmVyLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gQXNuMVNlcXVlbmNlRGVjb2RlcjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRhZ0ludGVnZXIiLCJ0YWdTZXF1ZW5jZSIsIkFzbjFTZXF1ZW5jZURlY29kZXIiLCJjb25zdHJ1Y3RvciIsImJ1ZmZlciIsIlR5cGVFcnJvciIsIm9mZnNldCIsImxlbiIsImRlY29kZUxlbmd0aCIsImxlbmd0aCIsIm5CeXRlcyIsImkiLCJ1bnNpZ25lZEludGVnZXIiLCJyZXN1bHQiLCJzbGljZSIsImVuZCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js":
/*!**************************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst tagInteger = 0x02;\nconst tagBitStr = 0x03;\nconst tagOctStr = 0x04;\nconst tagSequence = 0x30;\nconst bZero = buffer_1.Buffer.from([\n    0x00\n]);\nconst bTagInteger = buffer_1.Buffer.from([\n    tagInteger\n]);\nconst bTagBitStr = buffer_1.Buffer.from([\n    tagBitStr\n]);\nconst bTagSequence = buffer_1.Buffer.from([\n    tagSequence\n]);\nconst bTagOctStr = buffer_1.Buffer.from([\n    tagOctStr\n]);\nconst encodeLength = (len)=>{\n    if (len < 128) return buffer_1.Buffer.from([\n        len\n    ]);\n    const buffer = buffer_1.Buffer.alloc(5);\n    buffer.writeUInt32BE(len, 1);\n    let offset = 1;\n    while(buffer[offset] === 0)offset++;\n    buffer[offset - 1] = 0x80 | 5 - offset;\n    return buffer.slice(offset - 1);\n};\nconst oids = new Map([\n    [\n        \"P-256\",\n        buffer_1.Buffer.from(\"06 08 2A 86 48 CE 3D 03 01 07\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"secp256k1\",\n        buffer_1.Buffer.from(\"06 05 2B 81 04 00 0A\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"P-384\",\n        buffer_1.Buffer.from(\"06 05 2B 81 04 00 22\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"P-521\",\n        buffer_1.Buffer.from(\"06 05 2B 81 04 00 23\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"ecPublicKey\",\n        buffer_1.Buffer.from(\"06 07 2A 86 48 CE 3D 02 01\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"X25519\",\n        buffer_1.Buffer.from(\"06 03 2B 65 6E\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"X448\",\n        buffer_1.Buffer.from(\"06 03 2B 65 6F\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"Ed25519\",\n        buffer_1.Buffer.from(\"06 03 2B 65 70\".replace(/ /g, \"\"), \"hex\")\n    ],\n    [\n        \"Ed448\",\n        buffer_1.Buffer.from(\"06 03 2B 65 71\".replace(/ /g, \"\"), \"hex\")\n    ]\n]);\nclass DumbAsn1Encoder {\n    constructor(){\n        this.length = 0;\n        this.elements = [];\n    }\n    oidFor(oid) {\n        const bOid = oids.get(oid);\n        if (!bOid) {\n            throw new errors_js_1.JOSENotSupported(\"Invalid or unsupported OID\");\n        }\n        this.elements.push(bOid);\n        this.length += bOid.length;\n    }\n    zero() {\n        this.elements.push(bTagInteger, buffer_1.Buffer.from([\n            0x01\n        ]), bZero);\n        this.length += 3;\n    }\n    one() {\n        this.elements.push(bTagInteger, buffer_1.Buffer.from([\n            0x01\n        ]), buffer_1.Buffer.from([\n            0x01\n        ]));\n        this.length += 3;\n    }\n    unsignedInteger(integer) {\n        if (integer[0] & 0x80) {\n            const len = encodeLength(integer.length + 1);\n            this.elements.push(bTagInteger, len, bZero, integer);\n            this.length += 2 + len.length + integer.length;\n        } else {\n            let i = 0;\n            while(integer[i] === 0 && (integer[i + 1] & 0x80) === 0)i++;\n            const len = encodeLength(integer.length - i);\n            this.elements.push(bTagInteger, encodeLength(integer.length - i), integer.slice(i));\n            this.length += 1 + len.length + integer.length - i;\n        }\n    }\n    octStr(octStr) {\n        const len = encodeLength(octStr.length);\n        this.elements.push(bTagOctStr, encodeLength(octStr.length), octStr);\n        this.length += 1 + len.length + octStr.length;\n    }\n    bitStr(bitS) {\n        const len = encodeLength(bitS.length + 1);\n        this.elements.push(bTagBitStr, encodeLength(bitS.length + 1), bZero, bitS);\n        this.length += 1 + len.length + bitS.length + 1;\n    }\n    add(seq) {\n        this.elements.push(seq);\n        this.length += seq.length;\n    }\n    end(tag = bTagSequence) {\n        const len = encodeLength(this.length);\n        return buffer_1.Buffer.concat([\n            tag,\n            len,\n            ...this.elements\n        ], 1 + len.length + this.length);\n    }\n}\nexports[\"default\"] = DumbAsn1Encoder;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/base64url.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decode = exports.encode = exports.encodeBase64 = exports.decodeBase64 = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nlet encode;\nexports.encode = encode;\nfunction normalize(input) {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = buffer_utils_js_1.decoder.decode(encoded);\n    }\n    return encoded;\n}\nif (buffer_1.Buffer.isEncoding(\"base64url\")) {\n    exports.encode = encode = (input)=>buffer_1.Buffer.from(input).toString(\"base64url\");\n} else {\n    exports.encode = encode = (input)=>buffer_1.Buffer.from(input).toString(\"base64\").replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nconst decodeBase64 = (input)=>buffer_1.Buffer.from(input, \"base64\");\nexports.decodeBase64 = decodeBase64;\nconst encodeBase64 = (input)=>buffer_1.Buffer.from(input).toString(\"base64\");\nexports.encodeBase64 = encodeBase64;\nconst decode = (input)=>buffer_1.Buffer.from(normalize(input), \"base64\");\nexports.decode = decode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvYmFzZTY0dXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxjQUFjRSxHQUFHRixjQUFjRyxHQUFHSCxvQkFBb0JJLEdBQUdKLG9CQUFvQkssR0FBRyxLQUFLO0FBQ3JGLE1BQU1DLFdBQVdDLG1CQUFPQSxDQUFDLHNCQUFRO0FBQ2pDLE1BQU1DLG9CQUFvQkQsbUJBQU9BLENBQUMsaUdBQXdCO0FBQzFELElBQUlKO0FBQ0pILGNBQWNHLEdBQUdBO0FBQ2pCLFNBQVNNLFVBQVVDLEtBQUs7SUFDcEIsSUFBSUMsVUFBVUQ7SUFDZCxJQUFJQyxtQkFBbUJDLFlBQVk7UUFDL0JELFVBQVVILGtCQUFrQkssUUFBUVgsT0FBT1M7SUFDL0M7SUFDQSxPQUFPQTtBQUNYO0FBQ0EsSUFBSUwsU0FBU1EsT0FBT0MsV0FBVyxjQUFjO0lBQ3pDZixjQUFjRyxHQUFHQSxTQUFTLENBQUNPLFFBQVVKLFNBQVNRLE9BQU9FLEtBQUtOLE9BQU9PLFNBQVM7QUFDOUUsT0FDSztJQUNEakIsY0FBY0csR0FBR0EsU0FBUyxDQUFDTyxRQUFVSixTQUFTUSxPQUFPRSxLQUFLTixPQUFPTyxTQUFTLFVBQVVDLFFBQVEsTUFBTSxJQUFJQSxRQUFRLE9BQU8sS0FBS0EsUUFBUSxPQUFPO0FBQzdJO0FBQ0EsTUFBTWIsZUFBZSxDQUFDSyxRQUFVSixTQUFTUSxPQUFPRSxLQUFLTixPQUFPO0FBQzVEVixvQkFBb0JLLEdBQUdBO0FBQ3ZCLE1BQU1ELGVBQWUsQ0FBQ00sUUFBVUosU0FBU1EsT0FBT0UsS0FBS04sT0FBT08sU0FBUztBQUNyRWpCLG9CQUFvQkksR0FBR0E7QUFDdkIsTUFBTUYsU0FBUyxDQUFDUSxRQUFVSixTQUFTUSxPQUFPRSxLQUFLUCxVQUFVQyxRQUFRO0FBQ2pFVixjQUFjRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvYmFzZTY0dXJsLmpzP2MxMzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29kZSA9IGV4cG9ydHMuZW5jb2RlID0gZXhwb3J0cy5lbmNvZGVCYXNlNjQgPSBleHBvcnRzLmRlY29kZUJhc2U2NCA9IHZvaWQgMDtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbmNvbnN0IGJ1ZmZlcl91dGlsc19qc18xID0gcmVxdWlyZShcIi4uL2xpYi9idWZmZXJfdXRpbHMuanNcIik7XG5sZXQgZW5jb2RlO1xuZXhwb3J0cy5lbmNvZGUgPSBlbmNvZGU7XG5mdW5jdGlvbiBub3JtYWxpemUoaW5wdXQpIHtcbiAgICBsZXQgZW5jb2RlZCA9IGlucHV0O1xuICAgIGlmIChlbmNvZGVkIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICBlbmNvZGVkID0gYnVmZmVyX3V0aWxzX2pzXzEuZGVjb2Rlci5kZWNvZGUoZW5jb2RlZCk7XG4gICAgfVxuICAgIHJldHVybiBlbmNvZGVkO1xufVxuaWYgKGJ1ZmZlcl8xLkJ1ZmZlci5pc0VuY29kaW5nKCdiYXNlNjR1cmwnKSkge1xuICAgIGV4cG9ydHMuZW5jb2RlID0gZW5jb2RlID0gKGlucHV0KSA9PiBidWZmZXJfMS5CdWZmZXIuZnJvbShpbnB1dCkudG9TdHJpbmcoJ2Jhc2U2NHVybCcpO1xufVxuZWxzZSB7XG4gICAgZXhwb3J0cy5lbmNvZGUgPSBlbmNvZGUgPSAoaW5wdXQpID0+IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGlucHV0KS50b1N0cmluZygnYmFzZTY0JykucmVwbGFjZSgvPS9nLCAnJykucmVwbGFjZSgvXFwrL2csICctJykucmVwbGFjZSgvXFwvL2csICdfJyk7XG59XG5jb25zdCBkZWNvZGVCYXNlNjQgPSAoaW5wdXQpID0+IGJ1ZmZlcl8xLkJ1ZmZlci5mcm9tKGlucHV0LCAnYmFzZTY0Jyk7XG5leHBvcnRzLmRlY29kZUJhc2U2NCA9IGRlY29kZUJhc2U2NDtcbmNvbnN0IGVuY29kZUJhc2U2NCA9IChpbnB1dCkgPT4gYnVmZmVyXzEuQnVmZmVyLmZyb20oaW5wdXQpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbmV4cG9ydHMuZW5jb2RlQmFzZTY0ID0gZW5jb2RlQmFzZTY0O1xuY29uc3QgZGVjb2RlID0gKGlucHV0KSA9PiBidWZmZXJfMS5CdWZmZXIuZnJvbShub3JtYWxpemUoaW5wdXQpLCAnYmFzZTY0Jyk7XG5leHBvcnRzLmRlY29kZSA9IGRlY29kZTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlY29kZSIsImVuY29kZSIsImVuY29kZUJhc2U2NCIsImRlY29kZUJhc2U2NCIsImJ1ZmZlcl8xIiwicmVxdWlyZSIsImJ1ZmZlcl91dGlsc19qc18xIiwibm9ybWFsaXplIiwiaW5wdXQiLCJlbmNvZGVkIiwiVWludDhBcnJheSIsImRlY29kZXIiLCJCdWZmZXIiLCJpc0VuY29kaW5nIiwiZnJvbSIsInRvU3RyaW5nIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/cbc_tag.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/cbc_tag.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nfunction cbcTag(aad, iv, ciphertext, macSize, macKey, keySize) {\n    const macData = (0, buffer_utils_js_1.concat)(aad, iv, ciphertext, (0, buffer_utils_js_1.uint64be)(aad.length << 3));\n    const hmac = (0, crypto_1.createHmac)(`sha${macSize}`, macKey);\n    hmac.update(macData);\n    return hmac.digest().slice(0, keySize >> 3);\n}\nexports[\"default\"] = cbcTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2JjX3RhZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxXQUFXQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNQyxvQkFBb0JELG1CQUFPQSxDQUFDLGlHQUF3QjtBQUMxRCxTQUFTRSxPQUFPQyxHQUFHLEVBQUVDLEVBQUUsRUFBRUMsVUFBVSxFQUFFQyxPQUFPLEVBQUVDLE1BQU0sRUFBRUMsT0FBTztJQUN6RCxNQUFNQyxVQUFVLENBQUMsR0FBR1Isa0JBQWtCUyxNQUFLLEVBQUdQLEtBQUtDLElBQUlDLFlBQVksQ0FBQyxHQUFHSixrQkFBa0JVLFFBQU8sRUFBR1IsSUFBSVMsVUFBVTtJQUNqSCxNQUFNQyxPQUFPLENBQUMsR0FBR2QsU0FBU2UsVUFBUyxFQUFHLENBQUMsR0FBRyxFQUFFUixRQUFRLENBQUMsRUFBRUM7SUFDdkRNLEtBQUtFLE9BQU9OO0lBQ1osT0FBT0ksS0FBS0csU0FBU0MsTUFBTSxHQUFHVCxXQUFXO0FBQzdDO0FBQ0FYLGtCQUFlcUIsR0FBR2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9jYmNfdGFnLmpzPzRmYzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xuZnVuY3Rpb24gY2JjVGFnKGFhZCwgaXYsIGNpcGhlcnRleHQsIG1hY1NpemUsIG1hY0tleSwga2V5U2l6ZSkge1xuICAgIGNvbnN0IG1hY0RhdGEgPSAoMCwgYnVmZmVyX3V0aWxzX2pzXzEuY29uY2F0KShhYWQsIGl2LCBjaXBoZXJ0ZXh0LCAoMCwgYnVmZmVyX3V0aWxzX2pzXzEudWludDY0YmUpKGFhZC5sZW5ndGggPDwgMykpO1xuICAgIGNvbnN0IGhtYWMgPSAoMCwgY3J5cHRvXzEuY3JlYXRlSG1hYykoYHNoYSR7bWFjU2l6ZX1gLCBtYWNLZXkpO1xuICAgIGhtYWMudXBkYXRlKG1hY0RhdGEpO1xuICAgIHJldHVybiBobWFjLmRpZ2VzdCgpLnNsaWNlKDAsIGtleVNpemUgPj4gMyk7XG59XG5leHBvcnRzLmRlZmF1bHQgPSBjYmNUYWc7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjcnlwdG9fMSIsInJlcXVpcmUiLCJidWZmZXJfdXRpbHNfanNfMSIsImNiY1RhZyIsImFhZCIsIml2IiwiY2lwaGVydGV4dCIsIm1hY1NpemUiLCJtYWNLZXkiLCJrZXlTaXplIiwibWFjRGF0YSIsImNvbmNhdCIsInVpbnQ2NGJlIiwibGVuZ3RoIiwiaG1hYyIsImNyZWF0ZUhtYWMiLCJ1cGRhdGUiLCJkaWdlc3QiLCJzbGljZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/cbc_tag.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_cek_length.js":
/*!*********************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/check_cek_length.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst checkCekLength = (enc, cek)=>{\n    let expected;\n    switch(enc){\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            expected = parseInt(enc.slice(-3), 10);\n            break;\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            expected = parseInt(enc.slice(1, 4), 10);\n            break;\n        default:\n            throw new errors_js_1.JOSENotSupported(`Content Encryption Algorithm ${enc} is not supported either by JOSE or your javascript runtime`);\n    }\n    if (cek instanceof Uint8Array) {\n        const actual = cek.byteLength << 3;\n        if (actual !== expected) {\n            throw new errors_js_1.JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n        }\n        return;\n    }\n    if ((0, is_key_object_js_1.default)(cek) && cek.type === \"secret\") {\n        const actual = cek.symmetricKeySize << 3;\n        if (actual !== expected) {\n            throw new errors_js_1.JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n        }\n        return;\n    }\n    throw new TypeError(\"Invalid Content Encryption Key type\");\n};\nexports[\"default\"] = checkCekLength;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2hlY2tfY2VrX2xlbmd0aC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxjQUFjQyxtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsTUFBTUMscUJBQXFCRCxtQkFBT0EsQ0FBQyxrR0FBb0I7QUFDdkQsTUFBTUUsaUJBQWlCLENBQUNDLEtBQUtDO0lBQ3pCLElBQUlDO0lBQ0osT0FBUUY7UUFDSixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDREUsV0FBV0MsU0FBU0gsSUFBSUksTUFBTSxDQUFDLElBQUk7WUFDbkM7UUFDSixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDREYsV0FBV0MsU0FBU0gsSUFBSUksTUFBTSxHQUFHLElBQUk7WUFDckM7UUFDSjtZQUNJLE1BQU0sSUFBSVIsWUFBWVMsaUJBQWlCLENBQUMsNkJBQTZCLEVBQUVMLElBQUksMkRBQTJELENBQUM7SUFDL0k7SUFDQSxJQUFJQyxlQUFlSyxZQUFZO1FBQzNCLE1BQU1DLFNBQVNOLElBQUlPLGNBQWM7UUFDakMsSUFBSUQsV0FBV0wsVUFBVTtZQUNyQixNQUFNLElBQUlOLFlBQVlhLFdBQVcsQ0FBQyxnREFBZ0QsRUFBRVAsU0FBUyxXQUFXLEVBQUVLLE9BQU8sS0FBSyxDQUFDO1FBQzNIO1FBQ0E7SUFDSjtJQUNBLElBQUksQ0FBQyxHQUFHVCxtQkFBbUJZLE9BQU0sRUFBR1QsUUFBUUEsSUFBSVUsU0FBUyxVQUFVO1FBQy9ELE1BQU1KLFNBQVNOLElBQUlXLG9CQUFvQjtRQUN2QyxJQUFJTCxXQUFXTCxVQUFVO1lBQ3JCLE1BQU0sSUFBSU4sWUFBWWEsV0FBVyxDQUFDLGdEQUFnRCxFQUFFUCxTQUFTLFdBQVcsRUFBRUssT0FBTyxLQUFLLENBQUM7UUFDM0g7UUFDQTtJQUNKO0lBQ0EsTUFBTSxJQUFJTSxVQUFVO0FBQ3hCO0FBQ0FuQixrQkFBZWdCLEdBQUdYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9jaGVja19jZWtfbGVuZ3RoLmpzPzU2Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmNvbnN0IGlzX2tleV9vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuL2lzX2tleV9vYmplY3QuanNcIik7XG5jb25zdCBjaGVja0Nla0xlbmd0aCA9IChlbmMsIGNlaykgPT4ge1xuICAgIGxldCBleHBlY3RlZDtcbiAgICBzd2l0Y2ggKGVuYykge1xuICAgICAgICBjYXNlICdBMTI4Q0JDLUhTMjU2JzpcbiAgICAgICAgY2FzZSAnQTE5MkNCQy1IUzM4NCc6XG4gICAgICAgIGNhc2UgJ0EyNTZDQkMtSFM1MTInOlxuICAgICAgICAgICAgZXhwZWN0ZWQgPSBwYXJzZUludChlbmMuc2xpY2UoLTMpLCAxMCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnQTEyOEdDTSc6XG4gICAgICAgIGNhc2UgJ0ExOTJHQ00nOlxuICAgICAgICBjYXNlICdBMjU2R0NNJzpcbiAgICAgICAgICAgIGV4cGVjdGVkID0gcGFyc2VJbnQoZW5jLnNsaWNlKDEsIDQpLCAxMCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KT1NFTm90U3VwcG9ydGVkKGBDb250ZW50IEVuY3J5cHRpb24gQWxnb3JpdGhtICR7ZW5jfSBpcyBub3Qgc3VwcG9ydGVkIGVpdGhlciBieSBKT1NFIG9yIHlvdXIgamF2YXNjcmlwdCBydW50aW1lYCk7XG4gICAgfVxuICAgIGlmIChjZWsgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIGNvbnN0IGFjdHVhbCA9IGNlay5ieXRlTGVuZ3RoIDw8IDM7XG4gICAgICAgIGlmIChhY3R1YWwgIT09IGV4cGVjdGVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldFSW52YWxpZChgSW52YWxpZCBDb250ZW50IEVuY3J5cHRpb24gS2V5IGxlbmd0aC4gRXhwZWN0ZWQgJHtleHBlY3RlZH0gYml0cywgZ290ICR7YWN0dWFsfSBiaXRzYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoKDAsIGlzX2tleV9vYmplY3RfanNfMS5kZWZhdWx0KShjZWspICYmIGNlay50eXBlID09PSAnc2VjcmV0Jykge1xuICAgICAgICBjb25zdCBhY3R1YWwgPSBjZWsuc3ltbWV0cmljS2V5U2l6ZSA8PCAzO1xuICAgICAgICBpZiAoYWN0dWFsICE9PSBleHBlY3RlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXRUludmFsaWQoYEludmFsaWQgQ29udGVudCBFbmNyeXB0aW9uIEtleSBsZW5ndGguIEV4cGVjdGVkICR7ZXhwZWN0ZWR9IGJpdHMsIGdvdCAke2FjdHVhbH0gYml0c2ApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBDb250ZW50IEVuY3J5cHRpb24gS2V5IHR5cGUnKTtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBjaGVja0Nla0xlbmd0aDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVycm9yc19qc18xIiwicmVxdWlyZSIsImlzX2tleV9vYmplY3RfanNfMSIsImNoZWNrQ2VrTGVuZ3RoIiwiZW5jIiwiY2VrIiwiZXhwZWN0ZWQiLCJwYXJzZUludCIsInNsaWNlIiwiSk9TRU5vdFN1cHBvcnRlZCIsIlVpbnQ4QXJyYXkiLCJhY3R1YWwiLCJieXRlTGVuZ3RoIiwiSldFSW52YWxpZCIsImRlZmF1bHQiLCJ0eXBlIiwic3ltbWV0cmljS2V5U2l6ZSIsIlR5cGVFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_cek_length.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js":
/*!*************************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.setModulusLength = exports.weakMap = void 0;\nexports.weakMap = new WeakMap();\nconst getLength = (buf, index)=>{\n    let len = buf.readUInt8(1);\n    if ((len & 0x80) === 0) {\n        if (index === 0) {\n            return len;\n        }\n        return getLength(buf.subarray(2 + len), index - 1);\n    }\n    const num = len & 0x7f;\n    len = 0;\n    for(let i = 0; i < num; i++){\n        len <<= 8;\n        const j = buf.readUInt8(2 + i);\n        len |= j;\n    }\n    if (index === 0) {\n        return len;\n    }\n    return getLength(buf.subarray(2 + len), index - 1);\n};\nconst getLengthOfSeqIndex = (sequence, index)=>{\n    const len = sequence.readUInt8(1);\n    if ((len & 0x80) === 0) {\n        return getLength(sequence.subarray(2), index);\n    }\n    const num = len & 0x7f;\n    return getLength(sequence.subarray(2 + num), index);\n};\nconst getModulusLength = (key)=>{\n    var _a, _b;\n    if (exports.weakMap.has(key)) {\n        return exports.weakMap.get(key);\n    }\n    const modulusLength = (_b = (_a = key.asymmetricKeyDetails) === null || _a === void 0 ? void 0 : _a.modulusLength) !== null && _b !== void 0 ? _b : getLengthOfSeqIndex(key.export({\n        format: \"der\",\n        type: \"pkcs1\"\n    }), key.type === \"private\" ? 1 : 0) - 1 << 3;\n    exports.weakMap.set(key, modulusLength);\n    return modulusLength;\n};\nconst setModulusLength = (keyObject, modulusLength)=>{\n    exports.weakMap.set(keyObject, modulusLength);\n};\nexports.setModulusLength = setModulusLength;\nexports[\"default\"] = (key, alg)=>{\n    if (getModulusLength(key) < 2048) {\n        throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2hlY2tfbW9kdWx1c19sZW5ndGguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHdCQUF3QkUsR0FBR0YsZUFBZUcsR0FBRyxLQUFLO0FBQ2xESCxlQUFlRyxHQUFHLElBQUlDO0FBQ3RCLE1BQU1DLFlBQVksQ0FBQ0MsS0FBS0M7SUFDcEIsSUFBSUMsTUFBTUYsSUFBSUcsVUFBVTtJQUN4QixJQUFJLENBQUNELE1BQU0sSUFBRyxNQUFPLEdBQUc7UUFDcEIsSUFBSUQsVUFBVSxHQUFHO1lBQ2IsT0FBT0M7UUFDWDtRQUNBLE9BQU9ILFVBQVVDLElBQUlJLFNBQVMsSUFBSUYsTUFBTUQsUUFBUTtJQUNwRDtJQUNBLE1BQU1JLE1BQU1ILE1BQU07SUFDbEJBLE1BQU07SUFDTixJQUFLLElBQUlJLElBQUksR0FBR0EsSUFBSUQsS0FBS0MsSUFBSztRQUMxQkosUUFBUTtRQUNSLE1BQU1LLElBQUlQLElBQUlHLFVBQVUsSUFBSUc7UUFDNUJKLE9BQU9LO0lBQ1g7SUFDQSxJQUFJTixVQUFVLEdBQUc7UUFDYixPQUFPQztJQUNYO0lBQ0EsT0FBT0gsVUFBVUMsSUFBSUksU0FBUyxJQUFJRixNQUFNRCxRQUFRO0FBQ3BEO0FBQ0EsTUFBTU8sc0JBQXNCLENBQUNDLFVBQVVSO0lBQ25DLE1BQU1DLE1BQU1PLFNBQVNOLFVBQVU7SUFDL0IsSUFBSSxDQUFDRCxNQUFNLElBQUcsTUFBTyxHQUFHO1FBQ3BCLE9BQU9ILFVBQVVVLFNBQVNMLFNBQVMsSUFBSUg7SUFDM0M7SUFDQSxNQUFNSSxNQUFNSCxNQUFNO0lBQ2xCLE9BQU9ILFVBQVVVLFNBQVNMLFNBQVMsSUFBSUMsTUFBTUo7QUFDakQ7QUFDQSxNQUFNUyxtQkFBbUIsQ0FBQ0M7SUFDdEIsSUFBSUMsSUFBSUM7SUFDUixJQUFJbkIsUUFBUUcsUUFBUWlCLElBQUlILE1BQU07UUFDMUIsT0FBT2pCLFFBQVFHLFFBQVFrQixJQUFJSjtJQUMvQjtJQUNBLE1BQU1LLGdCQUFnQixDQUFDSCxLQUFLLENBQUNELEtBQUtELElBQUlNLG9CQUFtQixNQUFPLFFBQVFMLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR0ksYUFBWSxNQUFPLFFBQVFILE9BQU8sS0FBSyxJQUFJQSxLQUFLLG9CQUFxQkYsSUFBSU8sT0FBTztRQUFFQyxRQUFRO1FBQU9DLE1BQU07SUFBUSxJQUFJVCxJQUFJUyxTQUFTLFlBQVksSUFBSSxLQUNoUCxLQUNBO0lBQ0oxQixRQUFRRyxRQUFRd0IsSUFBSVYsS0FBS0s7SUFDekIsT0FBT0E7QUFDWDtBQUNBLE1BQU1wQixtQkFBbUIsQ0FBQzBCLFdBQVdOO0lBQ2pDdEIsUUFBUUcsUUFBUXdCLElBQUlDLFdBQVdOO0FBQ25DO0FBQ0F0Qix3QkFBd0JFLEdBQUdBO0FBQzNCRixrQkFBZTZCLEdBQUcsQ0FBQ1osS0FBS2E7SUFDcEIsSUFBSWQsaUJBQWlCQyxPQUFPLE1BQU07UUFDOUIsTUFBTSxJQUFJYyxVQUFVLENBQUMsRUFBRUQsSUFBSSxxREFBcUQsQ0FBQztJQUNyRjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9jaGVja19tb2R1bHVzX2xlbmd0aC5qcz8zNjZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zZXRNb2R1bHVzTGVuZ3RoID0gZXhwb3J0cy53ZWFrTWFwID0gdm9pZCAwO1xuZXhwb3J0cy53ZWFrTWFwID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IGdldExlbmd0aCA9IChidWYsIGluZGV4KSA9PiB7XG4gICAgbGV0IGxlbiA9IGJ1Zi5yZWFkVUludDgoMSk7XG4gICAgaWYgKChsZW4gJiAweDgwKSA9PT0gMCkge1xuICAgICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBsZW47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGdldExlbmd0aChidWYuc3ViYXJyYXkoMiArIGxlbiksIGluZGV4IC0gMSk7XG4gICAgfVxuICAgIGNvbnN0IG51bSA9IGxlbiAmIDB4N2Y7XG4gICAgbGVuID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bTsgaSsrKSB7XG4gICAgICAgIGxlbiA8PD0gODtcbiAgICAgICAgY29uc3QgaiA9IGJ1Zi5yZWFkVUludDgoMiArIGkpO1xuICAgICAgICBsZW4gfD0gajtcbiAgICB9XG4gICAgaWYgKGluZGV4ID09PSAwKSB7XG4gICAgICAgIHJldHVybiBsZW47XG4gICAgfVxuICAgIHJldHVybiBnZXRMZW5ndGgoYnVmLnN1YmFycmF5KDIgKyBsZW4pLCBpbmRleCAtIDEpO1xufTtcbmNvbnN0IGdldExlbmd0aE9mU2VxSW5kZXggPSAoc2VxdWVuY2UsIGluZGV4KSA9PiB7XG4gICAgY29uc3QgbGVuID0gc2VxdWVuY2UucmVhZFVJbnQ4KDEpO1xuICAgIGlmICgobGVuICYgMHg4MCkgPT09IDApIHtcbiAgICAgICAgcmV0dXJuIGdldExlbmd0aChzZXF1ZW5jZS5zdWJhcnJheSgyKSwgaW5kZXgpO1xuICAgIH1cbiAgICBjb25zdCBudW0gPSBsZW4gJiAweDdmO1xuICAgIHJldHVybiBnZXRMZW5ndGgoc2VxdWVuY2Uuc3ViYXJyYXkoMiArIG51bSksIGluZGV4KTtcbn07XG5jb25zdCBnZXRNb2R1bHVzTGVuZ3RoID0gKGtleSkgPT4ge1xuICAgIHZhciBfYSwgX2I7XG4gICAgaWYgKGV4cG9ydHMud2Vha01hcC5oYXMoa2V5KSkge1xuICAgICAgICByZXR1cm4gZXhwb3J0cy53ZWFrTWFwLmdldChrZXkpO1xuICAgIH1cbiAgICBjb25zdCBtb2R1bHVzTGVuZ3RoID0gKF9iID0gKF9hID0ga2V5LmFzeW1tZXRyaWNLZXlEZXRhaWxzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubW9kdWx1c0xlbmd0aCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogKGdldExlbmd0aE9mU2VxSW5kZXgoa2V5LmV4cG9ydCh7IGZvcm1hdDogJ2RlcicsIHR5cGU6ICdwa2NzMScgfSksIGtleS50eXBlID09PSAncHJpdmF0ZScgPyAxIDogMCkgLVxuICAgICAgICAxKSA8PFxuICAgICAgICAzO1xuICAgIGV4cG9ydHMud2Vha01hcC5zZXQoa2V5LCBtb2R1bHVzTGVuZ3RoKTtcbiAgICByZXR1cm4gbW9kdWx1c0xlbmd0aDtcbn07XG5jb25zdCBzZXRNb2R1bHVzTGVuZ3RoID0gKGtleU9iamVjdCwgbW9kdWx1c0xlbmd0aCkgPT4ge1xuICAgIGV4cG9ydHMud2Vha01hcC5zZXQoa2V5T2JqZWN0LCBtb2R1bHVzTGVuZ3RoKTtcbn07XG5leHBvcnRzLnNldE1vZHVsdXNMZW5ndGggPSBzZXRNb2R1bHVzTGVuZ3RoO1xuZXhwb3J0cy5kZWZhdWx0ID0gKGtleSwgYWxnKSA9PiB7XG4gICAgaWYgKGdldE1vZHVsdXNMZW5ndGgoa2V5KSA8IDIwNDgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgJHthbGd9IHJlcXVpcmVzIGtleSBtb2R1bHVzTGVuZ3RoIHRvIGJlIDIwNDggYml0cyBvciBsYXJnZXJgKTtcbiAgICB9XG59O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwic2V0TW9kdWx1c0xlbmd0aCIsIndlYWtNYXAiLCJXZWFrTWFwIiwiZ2V0TGVuZ3RoIiwiYnVmIiwiaW5kZXgiLCJsZW4iLCJyZWFkVUludDgiLCJzdWJhcnJheSIsIm51bSIsImkiLCJqIiwiZ2V0TGVuZ3RoT2ZTZXFJbmRleCIsInNlcXVlbmNlIiwiZ2V0TW9kdWx1c0xlbmd0aCIsImtleSIsIl9hIiwiX2IiLCJoYXMiLCJnZXQiLCJtb2R1bHVzTGVuZ3RoIiwiYXN5bW1ldHJpY0tleURldGFpbHMiLCJleHBvcnQiLCJmb3JtYXQiLCJ0eXBlIiwic2V0Iiwia2V5T2JqZWN0IiwiZGVmYXVsdCIsImFsZyIsIlR5cGVFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ciphers.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/ciphers.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nlet ciphers;\nexports[\"default\"] = (algorithm)=>{\n    ciphers || (ciphers = new Set((0, crypto_1.getCiphers)()));\n    return ciphers.has(algorithm);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvY2lwaGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxXQUFXQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxJQUFJQztBQUNKSixrQkFBZUssR0FBRyxDQUFDQztJQUNmRixXQUFZQSxDQUFBQSxVQUFVLElBQUlHLElBQUksQ0FBQyxHQUFHTCxTQUFTTSxVQUFTLElBQUk7SUFDeEQsT0FBT0osUUFBUUssSUFBSUg7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2NpcGhlcnMuanM/NThhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmxldCBjaXBoZXJzO1xuZXhwb3J0cy5kZWZhdWx0ID0gKGFsZ29yaXRobSkgPT4ge1xuICAgIGNpcGhlcnMgfHwgKGNpcGhlcnMgPSBuZXcgU2V0KCgwLCBjcnlwdG9fMS5nZXRDaXBoZXJzKSgpKSk7XG4gICAgcmV0dXJuIGNpcGhlcnMuaGFzKGFsZ29yaXRobSk7XG59O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvXzEiLCJyZXF1aXJlIiwiY2lwaGVycyIsImRlZmF1bHQiLCJhbGdvcml0aG0iLCJTZXQiLCJnZXRDaXBoZXJzIiwiaGFzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ciphers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/decrypt.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/decrypt.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst check_iv_length_js_1 = __webpack_require__(/*! ../lib/check_iv_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_iv_length.js\");\nconst check_cek_length_js_1 = __webpack_require__(/*! ./check_cek_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_cek_length.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst timing_safe_equal_js_1 = __webpack_require__(/*! ./timing_safe_equal.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js\");\nconst cbc_tag_js_1 = __webpack_require__(/*! ./cbc_tag.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/cbc_tag.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst ciphers_js_1 = __webpack_require__(/*! ./ciphers.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ciphers.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nfunction cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    if ((0, is_key_object_js_1.default)(cek)) {\n        cek = cek.export();\n    }\n    const encKey = cek.subarray(keySize >> 3);\n    const macKey = cek.subarray(0, keySize >> 3);\n    const macSize = parseInt(enc.slice(-3), 10);\n    const algorithm = `aes-${keySize}-cbc`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const expectedTag = (0, cbc_tag_js_1.default)(aad, iv, ciphertext, macSize, macKey, keySize);\n    let macCheckPassed;\n    try {\n        macCheckPassed = (0, timing_safe_equal_js_1.default)(tag, expectedTag);\n    } catch  {}\n    if (!macCheckPassed) {\n        throw new errors_js_1.JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        const decipher = (0, crypto_1.createDecipheriv)(algorithm, encKey, iv);\n        plaintext = (0, buffer_utils_js_1.concat)(decipher.update(ciphertext), decipher.final());\n    } catch  {}\n    if (!plaintext) {\n        throw new errors_js_1.JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nfunction gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const algorithm = `aes-${keySize}-gcm`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    try {\n        const decipher = (0, crypto_1.createDecipheriv)(algorithm, cek, iv, {\n            authTagLength: 16\n        });\n        decipher.setAuthTag(tag);\n        if (aad.byteLength) {\n            decipher.setAAD(aad, {\n                plaintextLength: ciphertext.length\n            });\n        }\n        const plaintext = decipher.update(ciphertext);\n        decipher.final();\n        return plaintext;\n    } catch  {\n        throw new errors_js_1.JWEDecryptionFailed();\n    }\n}\nconst decrypt = (enc, cek, ciphertext, iv, tag, aad)=>{\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(cek)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(cek, enc, \"decrypt\");\n        key = crypto_1.KeyObject.from(cek);\n    } else if (cek instanceof Uint8Array || (0, is_key_object_js_1.default)(cek)) {\n        key = cek;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(cek, ...is_key_like_js_1.types, \"Uint8Array\"));\n    }\n    (0, check_cek_length_js_1.default)(enc, key);\n    (0, check_iv_length_js_1.default)(enc, iv);\n    switch(enc){\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            return cbcDecrypt(enc, key, ciphertext, iv, tag, aad);\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            return gcmDecrypt(enc, key, ciphertext, iv, tag, aad);\n        default:\n            throw new errors_js_1.JOSENotSupported(\"Unsupported JWE Content Encryption Algorithm\");\n    }\n};\nexports[\"default\"] = decrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/decrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/digest.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/digest.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst digest = (algorithm, data)=>(0, crypto_1.createHash)(algorithm).update(data).digest();\nexports[\"default\"] = digest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZGlnZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFdBQVdDLG1CQUFPQSxDQUFDLHNCQUFRO0FBQ2pDLE1BQU1DLFNBQVMsQ0FBQ0MsV0FBV0MsT0FBUyxDQUFDLEdBQUdKLFNBQVNLLFVBQVMsRUFBR0YsV0FBV0csT0FBT0YsTUFBTUY7QUFDckZKLGtCQUFlUyxHQUFHTCIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZGlnZXN0LmpzP2IwNGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCBkaWdlc3QgPSAoYWxnb3JpdGhtLCBkYXRhKSA9PiAoMCwgY3J5cHRvXzEuY3JlYXRlSGFzaCkoYWxnb3JpdGhtKS51cGRhdGUoZGF0YSkuZGlnZXN0KCk7XG5leHBvcnRzLmRlZmF1bHQgPSBkaWdlc3Q7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjcnlwdG9fMSIsInJlcXVpcmUiLCJkaWdlc3QiLCJhbGdvcml0aG0iLCJkYXRhIiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/digest.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/dsa_digest.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/dsa_digest.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction dsaDigest(alg) {\n    switch(alg){\n        case \"PS256\":\n        case \"RS256\":\n        case \"ES256\":\n        case \"ES256K\":\n            return \"sha256\";\n        case \"PS384\":\n        case \"RS384\":\n        case \"ES384\":\n            return \"sha384\";\n        case \"PS512\":\n        case \"RS512\":\n        case \"ES512\":\n            return \"sha512\";\n        case \"EdDSA\":\n            return undefined;\n        default:\n            throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\nexports[\"default\"] = dsaDigest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZHNhX2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxjQUFjQyxtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsU0FBU0MsVUFBVUMsR0FBRztJQUNsQixPQUFRQTtRQUNKLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBT0M7UUFDWDtZQUNJLE1BQU0sSUFBSUosWUFBWUssaUJBQWlCLENBQUMsSUFBSSxFQUFFRixJQUFJLDJEQUEyRCxDQUFDO0lBQ3RIO0FBQ0o7QUFDQUwsa0JBQWVRLEdBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9kc2FfZGlnZXN0LmpzPzhhNGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBlcnJvcnNfanNfMSA9IHJlcXVpcmUoXCIuLi91dGlsL2Vycm9ycy5qc1wiKTtcbmZ1bmN0aW9uIGRzYURpZ2VzdChhbGcpIHtcbiAgICBzd2l0Y2ggKGFsZykge1xuICAgICAgICBjYXNlICdQUzI1Nic6XG4gICAgICAgIGNhc2UgJ1JTMjU2JzpcbiAgICAgICAgY2FzZSAnRVMyNTYnOlxuICAgICAgICBjYXNlICdFUzI1NksnOlxuICAgICAgICAgICAgcmV0dXJuICdzaGEyNTYnO1xuICAgICAgICBjYXNlICdQUzM4NCc6XG4gICAgICAgIGNhc2UgJ1JTMzg0JzpcbiAgICAgICAgY2FzZSAnRVMzODQnOlxuICAgICAgICAgICAgcmV0dXJuICdzaGEzODQnO1xuICAgICAgICBjYXNlICdQUzUxMic6XG4gICAgICAgIGNhc2UgJ1JTNTEyJzpcbiAgICAgICAgY2FzZSAnRVM1MTInOlxuICAgICAgICAgICAgcmV0dXJuICdzaGE1MTInO1xuICAgICAgICBjYXNlICdFZERTQSc6XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VOb3RTdXBwb3J0ZWQoYGFsZyAke2FsZ30gaXMgbm90IHN1cHBvcnRlZCBlaXRoZXIgYnkgSk9TRSBvciB5b3VyIGphdmFzY3JpcHQgcnVudGltZWApO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGRzYURpZ2VzdDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVycm9yc19qc18xIiwicmVxdWlyZSIsImRzYURpZ2VzdCIsImFsZyIsInVuZGVmaW5lZCIsIkpPU0VOb3RTdXBwb3J0ZWQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/dsa_digest.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ecdhes.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/ecdhes.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ecdhAllowed = exports.generateEpk = exports.deriveKey = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst get_named_curve_js_1 = __webpack_require__(/*! ./get_named_curve.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst generateKeyPair = (0, util_1.promisify)(crypto_1.generateKeyPair);\nasync function deriveKey(publicKee, privateKee, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    let publicKey;\n    if ((0, webcrypto_js_1.isCryptoKey)(publicKee)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(publicKee, \"ECDH\");\n        publicKey = crypto_1.KeyObject.from(publicKee);\n    } else if ((0, is_key_object_js_1.default)(publicKee)) {\n        publicKey = publicKee;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(publicKee, ...is_key_like_js_1.types));\n    }\n    let privateKey;\n    if ((0, webcrypto_js_1.isCryptoKey)(privateKee)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(privateKee, \"ECDH\", \"deriveBits\");\n        privateKey = crypto_1.KeyObject.from(privateKee);\n    } else if ((0, is_key_object_js_1.default)(privateKee)) {\n        privateKey = privateKee;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(privateKee, ...is_key_like_js_1.types));\n    }\n    const value = (0, buffer_utils_js_1.concat)((0, buffer_utils_js_1.lengthAndInput)(buffer_utils_js_1.encoder.encode(algorithm)), (0, buffer_utils_js_1.lengthAndInput)(apu), (0, buffer_utils_js_1.lengthAndInput)(apv), (0, buffer_utils_js_1.uint32be)(keyLength));\n    const sharedSecret = (0, crypto_1.diffieHellman)({\n        privateKey,\n        publicKey\n    });\n    return (0, buffer_utils_js_1.concatKdf)(sharedSecret, keyLength, value);\n}\nexports.deriveKey = deriveKey;\nasync function generateEpk(kee) {\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(kee)) {\n        key = crypto_1.KeyObject.from(kee);\n    } else if ((0, is_key_object_js_1.default)(kee)) {\n        key = kee;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(kee, ...is_key_like_js_1.types));\n    }\n    switch(key.asymmetricKeyType){\n        case \"x25519\":\n            return generateKeyPair(\"x25519\");\n        case \"x448\":\n            {\n                return generateKeyPair(\"x448\");\n            }\n        case \"ec\":\n            {\n                const namedCurve = (0, get_named_curve_js_1.default)(key);\n                return generateKeyPair(\"ec\", {\n                    namedCurve\n                });\n            }\n        default:\n            throw new errors_js_1.JOSENotSupported(\"Invalid or unsupported EPK\");\n    }\n}\nexports.generateEpk = generateEpk;\nconst ecdhAllowed = (key)=>[\n        \"P-256\",\n        \"P-384\",\n        \"P-521\",\n        \"X25519\",\n        \"X448\"\n    ].includes((0, get_named_curve_js_1.default)(key));\nexports.ecdhAllowed = ecdhAllowed;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ecdhes.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/encrypt.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/encrypt.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst check_iv_length_js_1 = __webpack_require__(/*! ../lib/check_iv_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_iv_length.js\");\nconst check_cek_length_js_1 = __webpack_require__(/*! ./check_cek_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_cek_length.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst cbc_tag_js_1 = __webpack_require__(/*! ./cbc_tag.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/cbc_tag.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst ciphers_js_1 = __webpack_require__(/*! ./ciphers.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/ciphers.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nfunction cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    if ((0, is_key_object_js_1.default)(cek)) {\n        cek = cek.export();\n    }\n    const encKey = cek.subarray(keySize >> 3);\n    const macKey = cek.subarray(0, keySize >> 3);\n    const algorithm = `aes-${keySize}-cbc`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const cipher = (0, crypto_1.createCipheriv)(algorithm, encKey, iv);\n    const ciphertext = (0, buffer_utils_js_1.concat)(cipher.update(plaintext), cipher.final());\n    const macSize = parseInt(enc.slice(-3), 10);\n    const tag = (0, cbc_tag_js_1.default)(aad, iv, ciphertext, macSize, macKey, keySize);\n    return {\n        ciphertext,\n        tag\n    };\n}\nfunction gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const algorithm = `aes-${keySize}-gcm`;\n    if (!(0, ciphers_js_1.default)(algorithm)) {\n        throw new errors_js_1.JOSENotSupported(`alg ${enc} is not supported by your javascript runtime`);\n    }\n    const cipher = (0, crypto_1.createCipheriv)(algorithm, cek, iv, {\n        authTagLength: 16\n    });\n    if (aad.byteLength) {\n        cipher.setAAD(aad, {\n            plaintextLength: plaintext.length\n        });\n    }\n    const ciphertext = cipher.update(plaintext);\n    cipher.final();\n    const tag = cipher.getAuthTag();\n    return {\n        ciphertext,\n        tag\n    };\n}\nconst encrypt = (enc, plaintext, cek, iv, aad)=>{\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(cek)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(cek, enc, \"encrypt\");\n        key = crypto_1.KeyObject.from(cek);\n    } else if (cek instanceof Uint8Array || (0, is_key_object_js_1.default)(cek)) {\n        key = cek;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(cek, ...is_key_like_js_1.types, \"Uint8Array\"));\n    }\n    (0, check_cek_length_js_1.default)(enc, key);\n    (0, check_iv_length_js_1.default)(enc, iv);\n    switch(enc){\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            return cbcEncrypt(enc, plaintext, key, iv, aad);\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            return gcmEncrypt(enc, plaintext, key, iv, aad);\n        default:\n            throw new errors_js_1.JOSENotSupported(\"Unsupported JWE Content Encryption Algorithm\");\n    }\n};\nexports[\"default\"] = encrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/encrypt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst fetchJwks = async (url, timeout, options)=>{\n    let get;\n    switch(url.protocol){\n        case \"https:\":\n            get = https.get;\n            break;\n        case \"http:\":\n            get = http.get;\n            break;\n        default:\n            throw new TypeError(\"Unsupported URL protocol.\");\n    }\n    const { agent, headers } = options;\n    const req = get(url.href, {\n        agent,\n        timeout,\n        headers\n    });\n    const [response] = await Promise.race([\n        (0, events_1.once)(req, \"response\"),\n        (0, events_1.once)(req, \"timeout\")\n    ]);\n    if (!response) {\n        req.destroy();\n        throw new errors_js_1.JWKSTimeout();\n    }\n    if (response.statusCode !== 200) {\n        throw new errors_js_1.JOSEError(\"Expected 200 OK from the JSON Web Key Set HTTP response\");\n    }\n    const parts = [];\n    for await (const part of response){\n        parts.push(part);\n    }\n    try {\n        return JSON.parse(buffer_utils_js_1.decoder.decode((0, buffer_utils_js_1.concat)(...parts)));\n    } catch  {\n        throw new errors_js_1.JOSEError(\"Failed to parse the JSON Web Key Set HTTP response as JSON\");\n    }\n};\nexports[\"default\"] = fetchJwks;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZmV0Y2hfandrcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxPQUFPQyxtQkFBT0EsQ0FBQyxrQkFBTTtBQUMzQixNQUFNQyxRQUFRRCxtQkFBT0EsQ0FBQyxvQkFBTztBQUM3QixNQUFNRSxXQUFXRixtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNRyxjQUFjSCxtQkFBT0EsQ0FBQyx1RkFBbUI7QUFDL0MsTUFBTUksb0JBQW9CSixtQkFBT0EsQ0FBQyxpR0FBd0I7QUFDMUQsTUFBTUssWUFBWSxPQUFPQyxLQUFLQyxTQUFTQztJQUNuQyxJQUFJQztJQUNKLE9BQVFILElBQUlJO1FBQ1IsS0FBSztZQUNERCxNQUFNUixNQUFNUTtZQUNaO1FBQ0osS0FBSztZQUNEQSxNQUFNVixLQUFLVTtZQUNYO1FBQ0o7WUFDSSxNQUFNLElBQUlFLFVBQVU7SUFDNUI7SUFDQSxNQUFNLEVBQUVDLEtBQUssRUFBRUMsT0FBTyxFQUFFLEdBQUdMO0lBQzNCLE1BQU1NLE1BQU1MLElBQUlILElBQUlTLE1BQU07UUFDdEJIO1FBQ0FMO1FBQ0FNO0lBQ0o7SUFDQSxNQUFNLENBQUNHLFNBQVMsR0FBSSxNQUFNQyxRQUFRQyxLQUFLO1FBQUUsSUFBR2hCLFNBQVNpQixJQUFHLEVBQUdMLEtBQUs7UUFBYyxJQUFHWixTQUFTaUIsSUFBRyxFQUFHTCxLQUFLO0tBQVc7SUFDaEgsSUFBSSxDQUFDRSxVQUFVO1FBQ1hGLElBQUlNO1FBQ0osTUFBTSxJQUFJakIsWUFBWWtCO0lBQzFCO0lBQ0EsSUFBSUwsU0FBU00sZUFBZSxLQUFLO1FBQzdCLE1BQU0sSUFBSW5CLFlBQVlvQixVQUFVO0lBQ3BDO0lBQ0EsTUFBTUMsUUFBUSxFQUFFO0lBQ2hCLFdBQVcsTUFBTUMsUUFBUVQsU0FBVTtRQUMvQlEsTUFBTUUsS0FBS0Q7SUFDZjtJQUNBLElBQUk7UUFDQSxPQUFPRSxLQUFLQyxNQUFNeEIsa0JBQWtCeUIsUUFBUUMsT0FBTyxDQUFDLEdBQUcxQixrQkFBa0IyQixNQUFLLEtBQU1QO0lBQ3hGLEVBQ0EsT0FBTTtRQUNGLE1BQU0sSUFBSXJCLFlBQVlvQixVQUFVO0lBQ3BDO0FBQ0o7QUFDQTFCLGtCQUFlbUMsR0FBRzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9mZXRjaF9qd2tzLmpzPzViZjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBodHRwID0gcmVxdWlyZShcImh0dHBcIik7XG5jb25zdCBodHRwcyA9IHJlcXVpcmUoXCJodHRwc1wiKTtcbmNvbnN0IGV2ZW50c18xID0gcmVxdWlyZShcImV2ZW50c1wiKTtcbmNvbnN0IGVycm9yc19qc18xID0gcmVxdWlyZShcIi4uL3V0aWwvZXJyb3JzLmpzXCIpO1xuY29uc3QgYnVmZmVyX3V0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2J1ZmZlcl91dGlscy5qc1wiKTtcbmNvbnN0IGZldGNoSndrcyA9IGFzeW5jICh1cmwsIHRpbWVvdXQsIG9wdGlvbnMpID0+IHtcbiAgICBsZXQgZ2V0O1xuICAgIHN3aXRjaCAodXJsLnByb3RvY29sKSB7XG4gICAgICAgIGNhc2UgJ2h0dHBzOic6XG4gICAgICAgICAgICBnZXQgPSBodHRwcy5nZXQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnaHR0cDonOlxuICAgICAgICAgICAgZ2V0ID0gaHR0cC5nZXQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1Vuc3VwcG9ydGVkIFVSTCBwcm90b2NvbC4nKTtcbiAgICB9XG4gICAgY29uc3QgeyBhZ2VudCwgaGVhZGVycyB9ID0gb3B0aW9ucztcbiAgICBjb25zdCByZXEgPSBnZXQodXJsLmhyZWYsIHtcbiAgICAgICAgYWdlbnQsXG4gICAgICAgIHRpbWVvdXQsXG4gICAgICAgIGhlYWRlcnMsXG4gICAgfSk7XG4gICAgY29uc3QgW3Jlc3BvbnNlXSA9IChhd2FpdCBQcm9taXNlLnJhY2UoWygwLCBldmVudHNfMS5vbmNlKShyZXEsICdyZXNwb25zZScpLCAoMCwgZXZlbnRzXzEub25jZSkocmVxLCAndGltZW91dCcpXSkpO1xuICAgIGlmICghcmVzcG9uc2UpIHtcbiAgICAgICAgcmVxLmRlc3Ryb3koKTtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXS1NUaW1lb3V0KCk7XG4gICAgfVxuICAgIGlmIChyZXNwb25zZS5zdGF0dXNDb2RlICE9PSAyMDApIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpPU0VFcnJvcignRXhwZWN0ZWQgMjAwIE9LIGZyb20gdGhlIEpTT04gV2ViIEtleSBTZXQgSFRUUCByZXNwb25zZScpO1xuICAgIH1cbiAgICBjb25zdCBwYXJ0cyA9IFtdO1xuICAgIGZvciBhd2FpdCAoY29uc3QgcGFydCBvZiByZXNwb25zZSkge1xuICAgICAgICBwYXJ0cy5wdXNoKHBhcnQpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShidWZmZXJfdXRpbHNfanNfMS5kZWNvZGVyLmRlY29kZSgoMCwgYnVmZmVyX3V0aWxzX2pzXzEuY29uY2F0KSguLi5wYXJ0cykpKTtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSk9TRUVycm9yKCdGYWlsZWQgdG8gcGFyc2UgdGhlIEpTT04gV2ViIEtleSBTZXQgSFRUUCByZXNwb25zZSBhcyBKU09OJyk7XG4gICAgfVxufTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZldGNoSndrcztcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImh0dHAiLCJyZXF1aXJlIiwiaHR0cHMiLCJldmVudHNfMSIsImVycm9yc19qc18xIiwiYnVmZmVyX3V0aWxzX2pzXzEiLCJmZXRjaEp3a3MiLCJ1cmwiLCJ0aW1lb3V0Iiwib3B0aW9ucyIsImdldCIsInByb3RvY29sIiwiVHlwZUVycm9yIiwiYWdlbnQiLCJoZWFkZXJzIiwicmVxIiwiaHJlZiIsInJlc3BvbnNlIiwiUHJvbWlzZSIsInJhY2UiLCJvbmNlIiwiZGVzdHJveSIsIkpXS1NUaW1lb3V0Iiwic3RhdHVzQ29kZSIsIkpPU0VFcnJvciIsInBhcnRzIiwicGFydCIsInB1c2giLCJKU09OIiwicGFyc2UiLCJkZWNvZGVyIiwiZGVjb2RlIiwiY29uY2F0IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/fetch_jwks.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/flags.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/flags.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.jwkImport = exports.jwkExport = exports.rsaPssParams = exports.oneShotCallback = void 0;\nconst [major, minor] = process.versions.node.split(\".\").map((str)=>parseInt(str, 10));\nexports.oneShotCallback = major >= 16 || major === 15 && minor >= 13;\nexports.rsaPssParams = !(\"electron\" in process.versions) && (major >= 17 || major === 16 && minor >= 9);\nexports.jwkExport = major >= 16 || major === 15 && minor >= 9;\nexports.jwkImport = major >= 16 || major === 15 && minor >= 12;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZmxhZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQkUsR0FBR0YsaUJBQWlCRyxHQUFHSCxvQkFBb0JJLEdBQUdKLHVCQUF1QkssR0FBRyxLQUFLO0FBQzlGLE1BQU0sQ0FBQ0MsT0FBT0MsTUFBTSxHQUFHQyxRQUFRQyxTQUFTQyxLQUFLQyxNQUFNLEtBQUtDLElBQUksQ0FBQ0MsTUFBUUMsU0FBU0QsS0FBSztBQUNuRmIsdUJBQXVCSyxHQUFHQyxTQUFTLE1BQU9BLFVBQVUsTUFBTUMsU0FBUztBQUNuRVAsb0JBQW9CSSxHQUFHLENBQUUsZUFBY0ksUUFBUUMsUUFBTyxLQUFPSCxDQUFBQSxTQUFTLE1BQU9BLFVBQVUsTUFBTUMsU0FBUyxDQUFDO0FBQ3ZHUCxpQkFBaUJHLEdBQUdHLFNBQVMsTUFBT0EsVUFBVSxNQUFNQyxTQUFTO0FBQzdEUCxpQkFBaUJFLEdBQUdJLFNBQVMsTUFBT0EsVUFBVSxNQUFNQyxTQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9mbGFncy5qcz81MDdhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5qd2tJbXBvcnQgPSBleHBvcnRzLmp3a0V4cG9ydCA9IGV4cG9ydHMucnNhUHNzUGFyYW1zID0gZXhwb3J0cy5vbmVTaG90Q2FsbGJhY2sgPSB2b2lkIDA7XG5jb25zdCBbbWFqb3IsIG1pbm9yXSA9IHByb2Nlc3MudmVyc2lvbnMubm9kZS5zcGxpdCgnLicpLm1hcCgoc3RyKSA9PiBwYXJzZUludChzdHIsIDEwKSk7XG5leHBvcnRzLm9uZVNob3RDYWxsYmFjayA9IG1ham9yID49IDE2IHx8IChtYWpvciA9PT0gMTUgJiYgbWlub3IgPj0gMTMpO1xuZXhwb3J0cy5yc2FQc3NQYXJhbXMgPSAhKCdlbGVjdHJvbicgaW4gcHJvY2Vzcy52ZXJzaW9ucykgJiYgKG1ham9yID49IDE3IHx8IChtYWpvciA9PT0gMTYgJiYgbWlub3IgPj0gOSkpO1xuZXhwb3J0cy5qd2tFeHBvcnQgPSBtYWpvciA+PSAxNiB8fCAobWFqb3IgPT09IDE1ICYmIG1pbm9yID49IDkpO1xuZXhwb3J0cy5qd2tJbXBvcnQgPSBtYWpvciA+PSAxNiB8fCAobWFqb3IgPT09IDE1ICYmIG1pbm9yID49IDEyKTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImp3a0ltcG9ydCIsImp3a0V4cG9ydCIsInJzYVBzc1BhcmFtcyIsIm9uZVNob3RDYWxsYmFjayIsIm1ham9yIiwibWlub3IiLCJwcm9jZXNzIiwidmVyc2lvbnMiLCJub2RlIiwic3BsaXQiLCJtYXAiLCJzdHIiLCJwYXJzZUludCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/flags.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/generate.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/generate.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generateKeyPair = exports.generateSecret = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst random_js_1 = __webpack_require__(/*! ./random.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/random.js\");\nconst check_modulus_length_js_1 = __webpack_require__(/*! ./check_modulus_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst generate = (0, util_1.promisify)(crypto_1.generateKeyPair);\nasync function generateSecret(alg, options) {\n    let length;\n    switch(alg){\n        case \"HS256\":\n        case \"HS384\":\n        case \"HS512\":\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            length = parseInt(alg.slice(-3), 10);\n            break;\n        case \"A128KW\":\n        case \"A192KW\":\n        case \"A256KW\":\n        case \"A128GCMKW\":\n        case \"A192GCMKW\":\n        case \"A256GCMKW\":\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            length = parseInt(alg.slice(1, 4), 10);\n            break;\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return (0, crypto_1.createSecretKey)((0, random_js_1.default)(new Uint8Array(length >> 3)));\n}\nexports.generateSecret = generateSecret;\nasync function generateKeyPair(alg, options) {\n    var _a, _b;\n    switch(alg){\n        case \"RS256\":\n        case \"RS384\":\n        case \"RS512\":\n        case \"PS256\":\n        case \"PS384\":\n        case \"PS512\":\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n        case \"RSA1_5\":\n            {\n                const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n                if (typeof modulusLength !== \"number\" || modulusLength < 2048) {\n                    throw new errors_js_1.JOSENotSupported(\"Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used\");\n                }\n                const keypair = await generate(\"rsa\", {\n                    modulusLength,\n                    publicExponent: 0x10001\n                });\n                (0, check_modulus_length_js_1.setModulusLength)(keypair.privateKey, modulusLength);\n                (0, check_modulus_length_js_1.setModulusLength)(keypair.publicKey, modulusLength);\n                return keypair;\n            }\n        case \"ES256\":\n            return generate(\"ec\", {\n                namedCurve: \"P-256\"\n            });\n        case \"ES256K\":\n            return generate(\"ec\", {\n                namedCurve: \"secp256k1\"\n            });\n        case \"ES384\":\n            return generate(\"ec\", {\n                namedCurve: \"P-384\"\n            });\n        case \"ES512\":\n            return generate(\"ec\", {\n                namedCurve: \"P-521\"\n            });\n        case \"EdDSA\":\n            {\n                switch(options === null || options === void 0 ? void 0 : options.crv){\n                    case undefined:\n                    case \"Ed25519\":\n                        return generate(\"ed25519\");\n                    case \"Ed448\":\n                        return generate(\"ed448\");\n                    default:\n                        throw new errors_js_1.JOSENotSupported(\"Invalid or unsupported crv option provided, supported values are Ed25519 and Ed448\");\n                }\n            }\n        case \"ECDH-ES\":\n        case \"ECDH-ES+A128KW\":\n        case \"ECDH-ES+A192KW\":\n        case \"ECDH-ES+A256KW\":\n            const crv = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : \"P-256\";\n            switch(crv){\n                case undefined:\n                case \"P-256\":\n                case \"P-384\":\n                case \"P-521\":\n                    return generate(\"ec\", {\n                        namedCurve: crv\n                    });\n                case \"X25519\":\n                    return generate(\"x25519\");\n                case \"X448\":\n                    return generate(\"x448\");\n                default:\n                    throw new errors_js_1.JOSENotSupported(\"Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448\");\n            }\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n}\nexports.generateKeyPair = generateKeyPair;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/generate.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js":
/*!********************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.setCurve = exports.weakMap = void 0;\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst p256 = buffer_1.Buffer.from([\n    42,\n    134,\n    72,\n    206,\n    61,\n    3,\n    1,\n    7\n]);\nconst p384 = buffer_1.Buffer.from([\n    43,\n    129,\n    4,\n    0,\n    34\n]);\nconst p521 = buffer_1.Buffer.from([\n    43,\n    129,\n    4,\n    0,\n    35\n]);\nconst secp256k1 = buffer_1.Buffer.from([\n    43,\n    129,\n    4,\n    0,\n    10\n]);\nexports.weakMap = new WeakMap();\nconst namedCurveToJOSE = (namedCurve)=>{\n    switch(namedCurve){\n        case \"prime256v1\":\n            return \"P-256\";\n        case \"secp384r1\":\n            return \"P-384\";\n        case \"secp521r1\":\n            return \"P-521\";\n        case \"secp256k1\":\n            return \"secp256k1\";\n        default:\n            throw new errors_js_1.JOSENotSupported(\"Unsupported key curve for this operation\");\n    }\n};\nconst getNamedCurve = (kee, raw)=>{\n    var _a;\n    let key;\n    if ((0, webcrypto_js_1.isCryptoKey)(kee)) {\n        key = crypto_1.KeyObject.from(kee);\n    } else if ((0, is_key_object_js_1.default)(kee)) {\n        key = kee;\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(kee, ...is_key_like_js_1.types));\n    }\n    if (key.type === \"secret\") {\n        throw new TypeError('only \"private\" or \"public\" type keys can be used for this operation');\n    }\n    switch(key.asymmetricKeyType){\n        case \"ed25519\":\n        case \"ed448\":\n            return `Ed${key.asymmetricKeyType.slice(2)}`;\n        case \"x25519\":\n        case \"x448\":\n            return `X${key.asymmetricKeyType.slice(1)}`;\n        case \"ec\":\n            {\n                if (exports.weakMap.has(key)) {\n                    return exports.weakMap.get(key);\n                }\n                let namedCurve = (_a = key.asymmetricKeyDetails) === null || _a === void 0 ? void 0 : _a.namedCurve;\n                if (!namedCurve && key.type === \"private\") {\n                    namedCurve = getNamedCurve((0, crypto_1.createPublicKey)(key), true);\n                } else if (!namedCurve) {\n                    const buf = key.export({\n                        format: \"der\",\n                        type: \"spki\"\n                    });\n                    const i = buf[1] < 128 ? 14 : 15;\n                    const len = buf[i];\n                    const curveOid = buf.slice(i + 1, i + 1 + len);\n                    if (curveOid.equals(p256)) {\n                        namedCurve = \"prime256v1\";\n                    } else if (curveOid.equals(p384)) {\n                        namedCurve = \"secp384r1\";\n                    } else if (curveOid.equals(p521)) {\n                        namedCurve = \"secp521r1\";\n                    } else if (curveOid.equals(secp256k1)) {\n                        namedCurve = \"secp256k1\";\n                    } else {\n                        throw new errors_js_1.JOSENotSupported(\"Unsupported key curve for this operation\");\n                    }\n                }\n                if (raw) return namedCurve;\n                const curve = namedCurveToJOSE(namedCurve);\n                exports.weakMap.set(key, curve);\n                return curve;\n            }\n        default:\n            throw new TypeError(\"Invalid asymmetric key type for this operation\");\n    }\n};\nfunction setCurve(keyObject, curve) {\n    exports.weakMap.set(keyObject, curve);\n}\nexports.setCurve = setCurve;\nexports[\"default\"] = getNamedCurve;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js":
/*!************************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nfunction getSignVerifyKey(alg, key, usage) {\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith(\"HS\")) {\n            throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n        }\n        return (0, crypto_1.createSecretKey)(key);\n    }\n    if (key instanceof crypto_1.KeyObject) {\n        return key;\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkSigCryptoKey)(key, alg, usage);\n        return crypto_1.KeyObject.from(key);\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, \"Uint8Array\"));\n}\nexports[\"default\"] = getSignVerifyKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZ2V0X3NpZ25fdmVyaWZ5X2tleS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxXQUFXQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNQyxpQkFBaUJELG1CQUFPQSxDQUFDLDBGQUFnQjtBQUMvQyxNQUFNRSxrQkFBa0JGLG1CQUFPQSxDQUFDLDZGQUFzQjtBQUN0RCxNQUFNRyx5QkFBeUJILG1CQUFPQSxDQUFDLDJHQUE2QjtBQUNwRSxNQUFNSSxtQkFBbUJKLG1CQUFPQSxDQUFDLDhGQUFrQjtBQUNuRCxTQUFTSyxpQkFBaUJDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxLQUFLO0lBQ3JDLElBQUlELGVBQWVFLFlBQVk7UUFDM0IsSUFBSSxDQUFDSCxJQUFJSSxXQUFXLE9BQU87WUFDdkIsTUFBTSxJQUFJQyxVQUFVLENBQUMsR0FBR1IsdUJBQXVCUyxPQUFNLEVBQUdMLFFBQVFILGlCQUFpQlM7UUFDckY7UUFDQSxPQUFPLENBQUMsR0FBR2QsU0FBU2UsZUFBYyxFQUFHUDtJQUN6QztJQUNBLElBQUlBLGVBQWVSLFNBQVNnQixXQUFXO1FBQ25DLE9BQU9SO0lBQ1g7SUFDQSxJQUFJLENBQUMsR0FBR04sZUFBZWUsV0FBVSxFQUFHVCxNQUFNO1FBQ3JDLElBQUdMLGdCQUFnQmUsaUJBQWdCLEVBQUdWLEtBQUtELEtBQUtFO1FBQ2pELE9BQU9ULFNBQVNnQixVQUFVRyxLQUFLWDtJQUNuQztJQUNBLE1BQU0sSUFBSUksVUFBVSxDQUFDLEdBQUdSLHVCQUF1QlMsT0FBTSxFQUFHTCxRQUFRSCxpQkFBaUJTLE9BQU87QUFDNUY7QUFDQWhCLGtCQUFlZSxHQUFHUCIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvZ2V0X3NpZ25fdmVyaWZ5X2tleS5qcz9mOGIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3Qgd2ViY3J5cHRvX2pzXzEgPSByZXF1aXJlKFwiLi93ZWJjcnlwdG8uanNcIik7XG5jb25zdCBjcnlwdG9fa2V5X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2NyeXB0b19rZXkuanNcIik7XG5jb25zdCBpbnZhbGlkX2tleV9pbnB1dF9qc18xID0gcmVxdWlyZShcIi4uL2xpYi9pbnZhbGlkX2tleV9pbnB1dC5qc1wiKTtcbmNvbnN0IGlzX2tleV9saWtlX2pzXzEgPSByZXF1aXJlKFwiLi9pc19rZXlfbGlrZS5qc1wiKTtcbmZ1bmN0aW9uIGdldFNpZ25WZXJpZnlLZXkoYWxnLCBrZXksIHVzYWdlKSB7XG4gICAgaWYgKGtleSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgaWYgKCFhbGcuc3RhcnRzV2l0aCgnSFMnKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigoMCwgaW52YWxpZF9rZXlfaW5wdXRfanNfMS5kZWZhdWx0KShrZXksIC4uLmlzX2tleV9saWtlX2pzXzEudHlwZXMpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKDAsIGNyeXB0b18xLmNyZWF0ZVNlY3JldEtleSkoa2V5KTtcbiAgICB9XG4gICAgaWYgKGtleSBpbnN0YW5jZW9mIGNyeXB0b18xLktleU9iamVjdCkge1xuICAgICAgICByZXR1cm4ga2V5O1xuICAgIH1cbiAgICBpZiAoKDAsIHdlYmNyeXB0b19qc18xLmlzQ3J5cHRvS2V5KShrZXkpKSB7XG4gICAgICAgICgwLCBjcnlwdG9fa2V5X2pzXzEuY2hlY2tTaWdDcnlwdG9LZXkpKGtleSwgYWxnLCB1c2FnZSk7XG4gICAgICAgIHJldHVybiBjcnlwdG9fMS5LZXlPYmplY3QuZnJvbShrZXkpO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCgwLCBpbnZhbGlkX2tleV9pbnB1dF9qc18xLmRlZmF1bHQpKGtleSwgLi4uaXNfa2V5X2xpa2VfanNfMS50eXBlcywgJ1VpbnQ4QXJyYXknKSk7XG59XG5leHBvcnRzLmRlZmF1bHQgPSBnZXRTaWduVmVyaWZ5S2V5O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvXzEiLCJyZXF1aXJlIiwid2ViY3J5cHRvX2pzXzEiLCJjcnlwdG9fa2V5X2pzXzEiLCJpbnZhbGlkX2tleV9pbnB1dF9qc18xIiwiaXNfa2V5X2xpa2VfanNfMSIsImdldFNpZ25WZXJpZnlLZXkiLCJhbGciLCJrZXkiLCJ1c2FnZSIsIlVpbnQ4QXJyYXkiLCJzdGFydHNXaXRoIiwiVHlwZUVycm9yIiwiZGVmYXVsdCIsInR5cGVzIiwiY3JlYXRlU2VjcmV0S2V5IiwiS2V5T2JqZWN0IiwiaXNDcnlwdG9LZXkiLCJjaGVja1NpZ0NyeXB0b0tleSIsImZyb20iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/hmac_digest.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/hmac_digest.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction hmacDigest(alg) {\n    switch(alg){\n        case \"HS256\":\n            return \"sha256\";\n        case \"HS384\":\n            return \"sha384\";\n        case \"HS512\":\n            return \"sha512\";\n        default:\n            throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\nexports[\"default\"] = hmacDigest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvaG1hY19kaWdlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsY0FBY0MsbUJBQU9BLENBQUMsdUZBQW1CO0FBQy9DLFNBQVNDLFdBQVdDLEdBQUc7SUFDbkIsT0FBUUE7UUFDSixLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWDtZQUNJLE1BQU0sSUFBSUgsWUFBWUksaUJBQWlCLENBQUMsSUFBSSxFQUFFRCxJQUFJLDJEQUEyRCxDQUFDO0lBQ3RIO0FBQ0o7QUFDQUwsa0JBQWVPLEdBQUdIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9obWFjX2RpZ2VzdC5qcz8wMWMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi4vdXRpbC9lcnJvcnMuanNcIik7XG5mdW5jdGlvbiBobWFjRGlnZXN0KGFsZykge1xuICAgIHN3aXRjaCAoYWxnKSB7XG4gICAgICAgIGNhc2UgJ0hTMjU2JzpcbiAgICAgICAgICAgIHJldHVybiAnc2hhMjU2JztcbiAgICAgICAgY2FzZSAnSFMzODQnOlxuICAgICAgICAgICAgcmV0dXJuICdzaGEzODQnO1xuICAgICAgICBjYXNlICdIUzUxMic6XG4gICAgICAgICAgICByZXR1cm4gJ3NoYTUxMic7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSk9TRU5vdFN1cHBvcnRlZChgYWxnICR7YWxnfSBpcyBub3Qgc3VwcG9ydGVkIGVpdGhlciBieSBKT1NFIG9yIHlvdXIgamF2YXNjcmlwdCBydW50aW1lYCk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gaG1hY0RpZ2VzdDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVycm9yc19qc18xIiwicmVxdWlyZSIsImhtYWNEaWdlc3QiLCJhbGciLCJKT1NFTm90U3VwcG9ydGVkIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/hmac_digest.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/is_key_like.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.types = void 0;\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nexports[\"default\"] = (key)=>(0, is_key_object_js_1.default)(key) || (0, webcrypto_js_1.isCryptoKey)(key);\nconst types = [\n    \"KeyObject\"\n];\nexports.types = types;\nif (globalThis.CryptoKey || (webcrypto_js_1.default === null || webcrypto_js_1.default === void 0 ? void 0 : webcrypto_js_1.default.CryptoKey)) {\n    types.push(\"CryptoKey\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvaXNfa2V5X2xpa2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGFBQWFFLEdBQUcsS0FBSztBQUNyQixNQUFNQyxpQkFBaUJDLG1CQUFPQSxDQUFDLDBGQUFnQjtBQUMvQyxNQUFNQyxxQkFBcUJELG1CQUFPQSxDQUFDLGtHQUFvQjtBQUN2REosa0JBQWVNLEdBQUcsQ0FBQ0MsTUFBUSxDQUFDLEdBQUdGLG1CQUFtQkMsT0FBTSxFQUFHQyxRQUFRLENBQUMsR0FBR0osZUFBZUssV0FBVSxFQUFHRDtBQUNuRyxNQUFNTCxRQUFRO0lBQUM7Q0FBWTtBQUMzQkYsYUFBYUUsR0FBR0E7QUFDaEIsSUFBSU8sV0FBV0MsYUFBY1AsQ0FBQUEsZUFBZUcsWUFBWSxRQUFRSCxlQUFlRyxZQUFZLEtBQUssSUFBSSxLQUFLLElBQUlILGVBQWVHLFFBQVFJLFNBQVEsR0FBSTtJQUM1SVIsTUFBTVMsS0FBSztBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS9pc19rZXlfbGlrZS5qcz8yZDY3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50eXBlcyA9IHZvaWQgMDtcbmNvbnN0IHdlYmNyeXB0b19qc18xID0gcmVxdWlyZShcIi4vd2ViY3J5cHRvLmpzXCIpO1xuY29uc3QgaXNfa2V5X29iamVjdF9qc18xID0gcmVxdWlyZShcIi4vaXNfa2V5X29iamVjdC5qc1wiKTtcbmV4cG9ydHMuZGVmYXVsdCA9IChrZXkpID0+ICgwLCBpc19rZXlfb2JqZWN0X2pzXzEuZGVmYXVsdCkoa2V5KSB8fCAoMCwgd2ViY3J5cHRvX2pzXzEuaXNDcnlwdG9LZXkpKGtleSk7XG5jb25zdCB0eXBlcyA9IFsnS2V5T2JqZWN0J107XG5leHBvcnRzLnR5cGVzID0gdHlwZXM7XG5pZiAoZ2xvYmFsVGhpcy5DcnlwdG9LZXkgfHwgKHdlYmNyeXB0b19qc18xLmRlZmF1bHQgPT09IG51bGwgfHwgd2ViY3J5cHRvX2pzXzEuZGVmYXVsdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogd2ViY3J5cHRvX2pzXzEuZGVmYXVsdC5DcnlwdG9LZXkpKSB7XG4gICAgdHlwZXMucHVzaCgnQ3J5cHRvS2V5Jyk7XG59XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0eXBlcyIsIndlYmNyeXB0b19qc18xIiwicmVxdWlyZSIsImlzX2tleV9vYmplY3RfanNfMSIsImRlZmF1bHQiLCJrZXkiLCJpc0NyeXB0b0tleSIsImdsb2JhbFRoaXMiLCJDcnlwdG9LZXkiLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js":
/*!******************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/is_key_object.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst util = __webpack_require__(/*! util */ \"util\");\nexports[\"default\"] = util.types.isKeyObject ? (obj)=>util.types.isKeyObject(obj) : (obj)=>obj != null && obj instanceof crypto_1.KeyObject;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvaXNfa2V5X29iamVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxXQUFXQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNQyxPQUFPRCxtQkFBT0EsQ0FBQyxrQkFBTTtBQUMzQkgsa0JBQWVLLEdBQUdELEtBQUtFLE1BQU1DLGNBQ3ZCLENBQUNDLE1BQVFKLEtBQUtFLE1BQU1DLFlBQVlDLE9BQ2hDLENBQUNBLE1BQVFBLE9BQU8sUUFBUUEsZUFBZU4sU0FBU08iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL2lzX2tleV9vYmplY3QuanM/NWNkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IHV0aWwgPSByZXF1aXJlKFwidXRpbFwiKTtcbmV4cG9ydHMuZGVmYXVsdCA9IHV0aWwudHlwZXMuaXNLZXlPYmplY3RcbiAgICA/IChvYmopID0+IHV0aWwudHlwZXMuaXNLZXlPYmplY3Qob2JqKVxuICAgIDogKG9iaikgPT4gb2JqICE9IG51bGwgJiYgb2JqIGluc3RhbmNlb2YgY3J5cHRvXzEuS2V5T2JqZWN0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvXzEiLCJyZXF1aXJlIiwidXRpbCIsImRlZmF1bHQiLCJ0eXBlcyIsImlzS2V5T2JqZWN0Iiwib2JqIiwiS2V5T2JqZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst get_named_curve_js_1 = __webpack_require__(/*! ./get_named_curve.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\");\nconst check_modulus_length_js_1 = __webpack_require__(/*! ./check_modulus_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\");\nconst asn1_sequence_encoder_js_1 = __webpack_require__(/*! ./asn1_sequence_encoder.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_encoder.js\");\nconst flags_js_1 = __webpack_require__(/*! ./flags.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/flags.js\");\nconst parse = (jwk)=>{\n    if (flags_js_1.jwkImport && jwk.kty !== \"oct\") {\n        return jwk.d ? (0, crypto_1.createPrivateKey)({\n            format: \"jwk\",\n            key: jwk\n        }) : (0, crypto_1.createPublicKey)({\n            format: \"jwk\",\n            key: jwk\n        });\n    }\n    switch(jwk.kty){\n        case \"oct\":\n            {\n                return (0, crypto_1.createSecretKey)((0, base64url_js_1.decode)(jwk.k));\n            }\n        case \"RSA\":\n            {\n                const enc = new asn1_sequence_encoder_js_1.default();\n                const isPrivate = jwk.d !== undefined;\n                const modulus = buffer_1.Buffer.from(jwk.n, \"base64\");\n                const exponent = buffer_1.Buffer.from(jwk.e, \"base64\");\n                if (isPrivate) {\n                    enc.zero();\n                    enc.unsignedInteger(modulus);\n                    enc.unsignedInteger(exponent);\n                    enc.unsignedInteger(buffer_1.Buffer.from(jwk.d, \"base64\"));\n                    enc.unsignedInteger(buffer_1.Buffer.from(jwk.p, \"base64\"));\n                    enc.unsignedInteger(buffer_1.Buffer.from(jwk.q, \"base64\"));\n                    enc.unsignedInteger(buffer_1.Buffer.from(jwk.dp, \"base64\"));\n                    enc.unsignedInteger(buffer_1.Buffer.from(jwk.dq, \"base64\"));\n                    enc.unsignedInteger(buffer_1.Buffer.from(jwk.qi, \"base64\"));\n                } else {\n                    enc.unsignedInteger(modulus);\n                    enc.unsignedInteger(exponent);\n                }\n                const der = enc.end();\n                const createInput = {\n                    key: der,\n                    format: \"der\",\n                    type: \"pkcs1\"\n                };\n                const keyObject = isPrivate ? (0, crypto_1.createPrivateKey)(createInput) : (0, crypto_1.createPublicKey)(createInput);\n                (0, check_modulus_length_js_1.setModulusLength)(keyObject, modulus.length << 3);\n                return keyObject;\n            }\n        case \"EC\":\n            {\n                const enc = new asn1_sequence_encoder_js_1.default();\n                const isPrivate = jwk.d !== undefined;\n                const pub = buffer_1.Buffer.concat([\n                    buffer_1.Buffer.alloc(1, 4),\n                    buffer_1.Buffer.from(jwk.x, \"base64\"),\n                    buffer_1.Buffer.from(jwk.y, \"base64\")\n                ]);\n                if (isPrivate) {\n                    enc.zero();\n                    const enc$1 = new asn1_sequence_encoder_js_1.default();\n                    enc$1.oidFor(\"ecPublicKey\");\n                    enc$1.oidFor(jwk.crv);\n                    enc.add(enc$1.end());\n                    const enc$2 = new asn1_sequence_encoder_js_1.default();\n                    enc$2.one();\n                    enc$2.octStr(buffer_1.Buffer.from(jwk.d, \"base64\"));\n                    const enc$3 = new asn1_sequence_encoder_js_1.default();\n                    enc$3.bitStr(pub);\n                    const f2 = enc$3.end(buffer_1.Buffer.from([\n                        0xa1\n                    ]));\n                    enc$2.add(f2);\n                    const f = enc$2.end();\n                    const enc$4 = new asn1_sequence_encoder_js_1.default();\n                    enc$4.add(f);\n                    const f3 = enc$4.end(buffer_1.Buffer.from([\n                        0x04\n                    ]));\n                    enc.add(f3);\n                    const der = enc.end();\n                    const keyObject = (0, crypto_1.createPrivateKey)({\n                        key: der,\n                        format: \"der\",\n                        type: \"pkcs8\"\n                    });\n                    (0, get_named_curve_js_1.setCurve)(keyObject, jwk.crv);\n                    return keyObject;\n                }\n                const enc$1 = new asn1_sequence_encoder_js_1.default();\n                enc$1.oidFor(\"ecPublicKey\");\n                enc$1.oidFor(jwk.crv);\n                enc.add(enc$1.end());\n                enc.bitStr(pub);\n                const der = enc.end();\n                const keyObject = (0, crypto_1.createPublicKey)({\n                    key: der,\n                    format: \"der\",\n                    type: \"spki\"\n                });\n                (0, get_named_curve_js_1.setCurve)(keyObject, jwk.crv);\n                return keyObject;\n            }\n        case \"OKP\":\n            {\n                const enc = new asn1_sequence_encoder_js_1.default();\n                const isPrivate = jwk.d !== undefined;\n                if (isPrivate) {\n                    enc.zero();\n                    const enc$1 = new asn1_sequence_encoder_js_1.default();\n                    enc$1.oidFor(jwk.crv);\n                    enc.add(enc$1.end());\n                    const enc$2 = new asn1_sequence_encoder_js_1.default();\n                    enc$2.octStr(buffer_1.Buffer.from(jwk.d, \"base64\"));\n                    const f = enc$2.end(buffer_1.Buffer.from([\n                        0x04\n                    ]));\n                    enc.add(f);\n                    const der = enc.end();\n                    return (0, crypto_1.createPrivateKey)({\n                        key: der,\n                        format: \"der\",\n                        type: \"pkcs8\"\n                    });\n                }\n                const enc$1 = new asn1_sequence_encoder_js_1.default();\n                enc$1.oidFor(jwk.crv);\n                enc.add(enc$1.end());\n                enc.bitStr(buffer_1.Buffer.from(jwk.x, \"base64\"));\n                const der = enc.end();\n                return (0, crypto_1.createPublicKey)({\n                    key: der,\n                    format: \"der\",\n                    type: \"spki\"\n                });\n            }\n        default:\n            throw new errors_js_1.JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n};\nexports[\"default\"] = parse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/jwk_to_key.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst asn1_sequence_decoder_js_1 = __webpack_require__(/*! ./asn1_sequence_decoder.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/asn1_sequence_decoder.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst get_named_curve_js_1 = __webpack_require__(/*! ./get_named_curve.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst flags_js_1 = __webpack_require__(/*! ./flags.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/flags.js\");\nconst keyToJWK = (key)=>{\n    let keyObject;\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        if (!key.extractable) {\n            throw new TypeError(\"CryptoKey is not extractable\");\n        }\n        keyObject = crypto_1.KeyObject.from(key);\n    } else if ((0, is_key_object_js_1.default)(key)) {\n        keyObject = key;\n    } else if (key instanceof Uint8Array) {\n        return {\n            kty: \"oct\",\n            k: (0, base64url_js_1.encode)(key)\n        };\n    } else {\n        throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, \"Uint8Array\"));\n    }\n    if (flags_js_1.jwkExport) {\n        if (keyObject.type !== \"secret\" && ![\n            \"rsa\",\n            \"ec\",\n            \"ed25519\",\n            \"x25519\",\n            \"ed448\",\n            \"x448\"\n        ].includes(keyObject.asymmetricKeyType)) {\n            throw new errors_js_1.JOSENotSupported(\"Unsupported key asymmetricKeyType\");\n        }\n        return keyObject.export({\n            format: \"jwk\"\n        });\n    }\n    switch(keyObject.type){\n        case \"secret\":\n            return {\n                kty: \"oct\",\n                k: (0, base64url_js_1.encode)(keyObject.export())\n            };\n        case \"private\":\n        case \"public\":\n            {\n                switch(keyObject.asymmetricKeyType){\n                    case \"rsa\":\n                        {\n                            const der = keyObject.export({\n                                format: \"der\",\n                                type: \"pkcs1\"\n                            });\n                            const dec = new asn1_sequence_decoder_js_1.default(der);\n                            if (keyObject.type === \"private\") {\n                                dec.unsignedInteger();\n                            }\n                            const n = (0, base64url_js_1.encode)(dec.unsignedInteger());\n                            const e = (0, base64url_js_1.encode)(dec.unsignedInteger());\n                            let jwk;\n                            if (keyObject.type === \"private\") {\n                                jwk = {\n                                    d: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                                    p: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                                    q: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                                    dp: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                                    dq: (0, base64url_js_1.encode)(dec.unsignedInteger()),\n                                    qi: (0, base64url_js_1.encode)(dec.unsignedInteger())\n                                };\n                            }\n                            dec.end();\n                            return {\n                                kty: \"RSA\",\n                                n,\n                                e,\n                                ...jwk\n                            };\n                        }\n                    case \"ec\":\n                        {\n                            const crv = (0, get_named_curve_js_1.default)(keyObject);\n                            let len;\n                            let offset;\n                            let correction;\n                            switch(crv){\n                                case \"secp256k1\":\n                                    len = 64;\n                                    offset = 31 + 2;\n                                    correction = -1;\n                                    break;\n                                case \"P-256\":\n                                    len = 64;\n                                    offset = 34 + 2;\n                                    correction = -1;\n                                    break;\n                                case \"P-384\":\n                                    len = 96;\n                                    offset = 33 + 2;\n                                    correction = -3;\n                                    break;\n                                case \"P-521\":\n                                    len = 132;\n                                    offset = 33 + 2;\n                                    correction = -3;\n                                    break;\n                                default:\n                                    throw new errors_js_1.JOSENotSupported(\"Unsupported curve\");\n                            }\n                            if (keyObject.type === \"public\") {\n                                const der = keyObject.export({\n                                    type: \"spki\",\n                                    format: \"der\"\n                                });\n                                return {\n                                    kty: \"EC\",\n                                    crv,\n                                    x: (0, base64url_js_1.encode)(der.subarray(-len, -len / 2)),\n                                    y: (0, base64url_js_1.encode)(der.subarray(-len / 2))\n                                };\n                            }\n                            const der = keyObject.export({\n                                type: \"pkcs8\",\n                                format: \"der\"\n                            });\n                            if (der.length < 100) {\n                                offset += correction;\n                            }\n                            return {\n                                ...keyToJWK((0, crypto_1.createPublicKey)(keyObject)),\n                                d: (0, base64url_js_1.encode)(der.subarray(offset, offset + len / 2))\n                            };\n                        }\n                    case \"ed25519\":\n                    case \"x25519\":\n                        {\n                            const crv = (0, get_named_curve_js_1.default)(keyObject);\n                            if (keyObject.type === \"public\") {\n                                const der = keyObject.export({\n                                    type: \"spki\",\n                                    format: \"der\"\n                                });\n                                return {\n                                    kty: \"OKP\",\n                                    crv,\n                                    x: (0, base64url_js_1.encode)(der.subarray(-32))\n                                };\n                            }\n                            const der = keyObject.export({\n                                type: \"pkcs8\",\n                                format: \"der\"\n                            });\n                            return {\n                                ...keyToJWK((0, crypto_1.createPublicKey)(keyObject)),\n                                d: (0, base64url_js_1.encode)(der.subarray(-32))\n                            };\n                        }\n                    case \"ed448\":\n                    case \"x448\":\n                        {\n                            const crv = (0, get_named_curve_js_1.default)(keyObject);\n                            if (keyObject.type === \"public\") {\n                                const der = keyObject.export({\n                                    type: \"spki\",\n                                    format: \"der\"\n                                });\n                                return {\n                                    kty: \"OKP\",\n                                    crv,\n                                    x: (0, base64url_js_1.encode)(der.subarray(crv === \"Ed448\" ? -57 : -56))\n                                };\n                            }\n                            const der = keyObject.export({\n                                type: \"pkcs8\",\n                                format: \"der\"\n                            });\n                            return {\n                                ...keyToJWK((0, crypto_1.createPublicKey)(keyObject)),\n                                d: (0, base64url_js_1.encode)(der.subarray(crv === \"Ed448\" ? -57 : -56))\n                            };\n                        }\n                    default:\n                        throw new errors_js_1.JOSENotSupported(\"Unsupported key asymmetricKeyType\");\n                }\n            }\n        default:\n            throw new errors_js_1.JOSENotSupported(\"Unsupported key type\");\n    }\n};\nexports[\"default\"] = keyToJWK;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/key_to_jwk.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/node_key.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/node_key.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst get_named_curve_js_1 = __webpack_require__(/*! ./get_named_curve.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_named_curve.js\");\nconst errors_js_1 = __webpack_require__(/*! ../util/errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nconst check_modulus_length_js_1 = __webpack_require__(/*! ./check_modulus_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\");\nconst flags_js_1 = __webpack_require__(/*! ./flags.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/flags.js\");\nconst PSS = {\n    padding: crypto_1.constants.RSA_PKCS1_PSS_PADDING,\n    saltLength: crypto_1.constants.RSA_PSS_SALTLEN_DIGEST\n};\nconst ecCurveAlgMap = new Map([\n    [\n        \"ES256\",\n        \"P-256\"\n    ],\n    [\n        \"ES256K\",\n        \"secp256k1\"\n    ],\n    [\n        \"ES384\",\n        \"P-384\"\n    ],\n    [\n        \"ES512\",\n        \"P-521\"\n    ]\n]);\nfunction keyForCrypto(alg, key) {\n    switch(alg){\n        case \"EdDSA\":\n            if (![\n                \"ed25519\",\n                \"ed448\"\n            ].includes(key.asymmetricKeyType)) {\n                throw new TypeError(\"Invalid key for this operation, its asymmetricKeyType must be ed25519 or ed448\");\n            }\n            return key;\n        case \"RS256\":\n        case \"RS384\":\n        case \"RS512\":\n            if (key.asymmetricKeyType !== \"rsa\") {\n                throw new TypeError(\"Invalid key for this operation, its asymmetricKeyType must be rsa\");\n            }\n            (0, check_modulus_length_js_1.default)(key, alg);\n            return key;\n        case flags_js_1.rsaPssParams && \"PS256\":\n        case flags_js_1.rsaPssParams && \"PS384\":\n        case flags_js_1.rsaPssParams && \"PS512\":\n            if (key.asymmetricKeyType === \"rsa-pss\") {\n                const { hashAlgorithm, mgf1HashAlgorithm, saltLength } = key.asymmetricKeyDetails;\n                const length = parseInt(alg.slice(-3), 10);\n                if (hashAlgorithm !== undefined && (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm)) {\n                    throw new TypeError(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of \"alg\" ${alg}`);\n                }\n                if (saltLength !== undefined && saltLength > length >> 3) {\n                    throw new TypeError(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of \"alg\" ${alg}`);\n                }\n            } else if (key.asymmetricKeyType !== \"rsa\") {\n                throw new TypeError(\"Invalid key for this operation, its asymmetricKeyType must be rsa or rsa-pss\");\n            }\n            (0, check_modulus_length_js_1.default)(key, alg);\n            return {\n                key,\n                ...PSS\n            };\n        case !flags_js_1.rsaPssParams && \"PS256\":\n        case !flags_js_1.rsaPssParams && \"PS384\":\n        case !flags_js_1.rsaPssParams && \"PS512\":\n            if (key.asymmetricKeyType !== \"rsa\") {\n                throw new TypeError(\"Invalid key for this operation, its asymmetricKeyType must be rsa\");\n            }\n            (0, check_modulus_length_js_1.default)(key, alg);\n            return {\n                key,\n                ...PSS\n            };\n        case \"ES256\":\n        case \"ES256K\":\n        case \"ES384\":\n        case \"ES512\":\n            {\n                if (key.asymmetricKeyType !== \"ec\") {\n                    throw new TypeError(\"Invalid key for this operation, its asymmetricKeyType must be ec\");\n                }\n                const actual = (0, get_named_curve_js_1.default)(key);\n                const expected = ecCurveAlgMap.get(alg);\n                if (actual !== expected) {\n                    throw new TypeError(`Invalid key curve for the algorithm, its curve must be ${expected}, got ${actual}`);\n                }\n                return {\n                    dsaEncoding: \"ieee-p1363\",\n                    key\n                };\n            }\n        default:\n            throw new errors_js_1.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\nexports[\"default\"] = keyForCrypto;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/node_key.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/pbes2kw.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/pbes2kw.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decrypt = exports.encrypt = void 0;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst random_js_1 = __webpack_require__(/*! ./random.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/random.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nconst aeskw_js_1 = __webpack_require__(/*! ./aeskw.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/aeskw.js\");\nconst check_p2s_js_1 = __webpack_require__(/*! ../lib/check_p2s.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/check_p2s.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst pbkdf2 = (0, util_1.promisify)(crypto_1.pbkdf2);\nfunction getPassword(key, alg) {\n    if ((0, is_key_object_js_1.default)(key)) {\n        return key.export();\n    }\n    if (key instanceof Uint8Array) {\n        return key;\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, \"deriveBits\", \"deriveKey\");\n        return crypto_1.KeyObject.from(key).export();\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types, \"Uint8Array\"));\n}\nconst encrypt = async (alg, key, cek, p2c = 2048, p2s = (0, random_js_1.default)(new Uint8Array(16)))=>{\n    (0, check_p2s_js_1.default)(p2s);\n    const salt = (0, buffer_utils_js_1.p2s)(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n    const password = getPassword(key, alg);\n    const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n    const encryptedKey = await (0, aeskw_js_1.wrap)(alg.slice(-6), derivedKey, cek);\n    return {\n        encryptedKey,\n        p2c,\n        p2s: (0, base64url_js_1.encode)(p2s)\n    };\n};\nexports.encrypt = encrypt;\nconst decrypt = async (alg, key, encryptedKey, p2c, p2s)=>{\n    (0, check_p2s_js_1.default)(p2s);\n    const salt = (0, buffer_utils_js_1.p2s)(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10) >> 3;\n    const password = getPassword(key, alg);\n    const derivedKey = await pbkdf2(password, salt, p2c, keylen, `sha${alg.slice(8, 11)}`);\n    return (0, aeskw_js_1.unwrap)(alg.slice(-6), derivedKey, encryptedKey);\n};\nexports.decrypt = decrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvcGJlczJrdy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZUUsR0FBR0YsZUFBZUcsR0FBRyxLQUFLO0FBQ3pDLE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLGtCQUFNO0FBQzdCLE1BQU1DLFdBQVdELG1CQUFPQSxDQUFDLHNCQUFRO0FBQ2pDLE1BQU1FLGNBQWNGLG1CQUFPQSxDQUFDLG9GQUFhO0FBQ3pDLE1BQU1HLG9CQUFvQkgsbUJBQU9BLENBQUMsaUdBQXdCO0FBQzFELE1BQU1JLGlCQUFpQkosbUJBQU9BLENBQUMsMEZBQWdCO0FBQy9DLE1BQU1LLGFBQWFMLG1CQUFPQSxDQUFDLGtGQUFZO0FBQ3ZDLE1BQU1NLGlCQUFpQk4sbUJBQU9BLENBQUMsMkZBQXFCO0FBQ3BELE1BQU1PLGlCQUFpQlAsbUJBQU9BLENBQUMsMEZBQWdCO0FBQy9DLE1BQU1RLGtCQUFrQlIsbUJBQU9BLENBQUMsNkZBQXNCO0FBQ3RELE1BQU1TLHFCQUFxQlQsbUJBQU9BLENBQUMsa0dBQW9CO0FBQ3ZELE1BQU1VLHlCQUF5QlYsbUJBQU9BLENBQUMsMkdBQTZCO0FBQ3BFLE1BQU1XLG1CQUFtQlgsbUJBQU9BLENBQUMsOEZBQWtCO0FBQ25ELE1BQU1ZLFNBQVMsQ0FBQyxHQUFHYixPQUFPYyxTQUFRLEVBQUdaLFNBQVNXO0FBQzlDLFNBQVNFLFlBQVlDLEdBQUcsRUFBRUMsR0FBRztJQUN6QixJQUFJLENBQUMsR0FBR1AsbUJBQW1CUSxPQUFNLEVBQUdGLE1BQU07UUFDdEMsT0FBT0EsSUFBSUc7SUFDZjtJQUNBLElBQUlILGVBQWVJLFlBQVk7UUFDM0IsT0FBT0o7SUFDWDtJQUNBLElBQUksQ0FBQyxHQUFHUixlQUFlYSxXQUFVLEVBQUdMLE1BQU07UUFDckMsSUFBR1AsZ0JBQWdCYSxpQkFBZ0IsRUFBR04sS0FBS0MsS0FBSyxjQUFjO1FBQy9ELE9BQU9mLFNBQVNxQixVQUFVQyxLQUFLUixLQUFLRztJQUN4QztJQUNBLE1BQU0sSUFBSU0sVUFBVSxDQUFDLEdBQUdkLHVCQUF1Qk8sT0FBTSxFQUFHRixRQUFRSixpQkFBaUJjLE9BQU87QUFDNUY7QUFDQSxNQUFNM0IsVUFBVSxPQUFPa0IsS0FBS0QsS0FBS1csS0FBS0MsTUFBTSxJQUFJLEVBQUVDLE1BQU0sQ0FBQyxHQUFHMUIsWUFBWWUsT0FBTSxFQUFHLElBQUlFLFdBQVcsSUFBSTtJQUMvRixJQUFHYixlQUFlVyxPQUFNLEVBQUdXO0lBQzVCLE1BQU1DLE9BQU8sQ0FBQyxHQUFHMUIsa0JBQWtCeUIsR0FBRSxFQUFHWixLQUFLWTtJQUM3QyxNQUFNRSxTQUFTQyxTQUFTZixJQUFJZ0IsTUFBTSxJQUFJLEtBQUssT0FBTztJQUNsRCxNQUFNQyxXQUFXbkIsWUFBWUMsS0FBS0M7SUFDbEMsTUFBTWtCLGFBQWEsTUFBTXRCLE9BQU9xQixVQUFVSixNQUFNRixLQUFLRyxRQUFRLENBQUMsR0FBRyxFQUFFZCxJQUFJZ0IsTUFBTSxHQUFHLElBQUksQ0FBQztJQUNyRixNQUFNRyxlQUFlLE1BQU0sQ0FBQyxHQUFHOUIsV0FBVytCLElBQUcsRUFBR3BCLElBQUlnQixNQUFNLENBQUMsSUFBSUUsWUFBWVI7SUFDM0UsT0FBTztRQUFFUztRQUFjUjtRQUFLQyxLQUFLLENBQUMsR0FBR3hCLGVBQWVpQyxNQUFLLEVBQUdUO0lBQUs7QUFDckU7QUFDQWpDLGVBQWVHLEdBQUdBO0FBQ2xCLE1BQU1ELFVBQVUsT0FBT21CLEtBQUtELEtBQUtvQixjQUFjUixLQUFLQztJQUMvQyxJQUFHdEIsZUFBZVcsT0FBTSxFQUFHVztJQUM1QixNQUFNQyxPQUFPLENBQUMsR0FBRzFCLGtCQUFrQnlCLEdBQUUsRUFBR1osS0FBS1k7SUFDN0MsTUFBTUUsU0FBU0MsU0FBU2YsSUFBSWdCLE1BQU0sSUFBSSxLQUFLLE9BQU87SUFDbEQsTUFBTUMsV0FBV25CLFlBQVlDLEtBQUtDO0lBQ2xDLE1BQU1rQixhQUFhLE1BQU10QixPQUFPcUIsVUFBVUosTUFBTUYsS0FBS0csUUFBUSxDQUFDLEdBQUcsRUFBRWQsSUFBSWdCLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDckYsT0FBTyxDQUFDLEdBQUczQixXQUFXaUMsTUFBSyxFQUFHdEIsSUFBSWdCLE1BQU0sQ0FBQyxJQUFJRSxZQUFZQztBQUM3RDtBQUNBeEMsZUFBZUUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL3BiZXMya3cuanM/ODYxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjcnlwdCA9IGV4cG9ydHMuZW5jcnlwdCA9IHZvaWQgMDtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCJ1dGlsXCIpO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgcmFuZG9tX2pzXzEgPSByZXF1aXJlKFwiLi9yYW5kb20uanNcIik7XG5jb25zdCBidWZmZXJfdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvYnVmZmVyX3V0aWxzLmpzXCIpO1xuY29uc3QgYmFzZTY0dXJsX2pzXzEgPSByZXF1aXJlKFwiLi9iYXNlNjR1cmwuanNcIik7XG5jb25zdCBhZXNrd19qc18xID0gcmVxdWlyZShcIi4vYWVza3cuanNcIik7XG5jb25zdCBjaGVja19wMnNfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvY2hlY2tfcDJzLmpzXCIpO1xuY29uc3Qgd2ViY3J5cHRvX2pzXzEgPSByZXF1aXJlKFwiLi93ZWJjcnlwdG8uanNcIik7XG5jb25zdCBjcnlwdG9fa2V5X2pzXzEgPSByZXF1aXJlKFwiLi4vbGliL2NyeXB0b19rZXkuanNcIik7XG5jb25zdCBpc19rZXlfb2JqZWN0X2pzXzEgPSByZXF1aXJlKFwiLi9pc19rZXlfb2JqZWN0LmpzXCIpO1xuY29uc3QgaW52YWxpZF9rZXlfaW5wdXRfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaW52YWxpZF9rZXlfaW5wdXQuanNcIik7XG5jb25zdCBpc19rZXlfbGlrZV9qc18xID0gcmVxdWlyZShcIi4vaXNfa2V5X2xpa2UuanNcIik7XG5jb25zdCBwYmtkZjIgPSAoMCwgdXRpbF8xLnByb21pc2lmeSkoY3J5cHRvXzEucGJrZGYyKTtcbmZ1bmN0aW9uIGdldFBhc3N3b3JkKGtleSwgYWxnKSB7XG4gICAgaWYgKCgwLCBpc19rZXlfb2JqZWN0X2pzXzEuZGVmYXVsdCkoa2V5KSkge1xuICAgICAgICByZXR1cm4ga2V5LmV4cG9ydCgpO1xuICAgIH1cbiAgICBpZiAoa2V5IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICByZXR1cm4ga2V5O1xuICAgIH1cbiAgICBpZiAoKDAsIHdlYmNyeXB0b19qc18xLmlzQ3J5cHRvS2V5KShrZXkpKSB7XG4gICAgICAgICgwLCBjcnlwdG9fa2V5X2pzXzEuY2hlY2tFbmNDcnlwdG9LZXkpKGtleSwgYWxnLCAnZGVyaXZlQml0cycsICdkZXJpdmVLZXknKTtcbiAgICAgICAgcmV0dXJuIGNyeXB0b18xLktleU9iamVjdC5mcm9tKGtleSkuZXhwb3J0KCk7XG4gICAgfVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoKDAsIGludmFsaWRfa2V5X2lucHV0X2pzXzEuZGVmYXVsdCkoa2V5LCAuLi5pc19rZXlfbGlrZV9qc18xLnR5cGVzLCAnVWludDhBcnJheScpKTtcbn1cbmNvbnN0IGVuY3J5cHQgPSBhc3luYyAoYWxnLCBrZXksIGNlaywgcDJjID0gMjA0OCwgcDJzID0gKDAsIHJhbmRvbV9qc18xLmRlZmF1bHQpKG5ldyBVaW50OEFycmF5KDE2KSkpID0+IHtcbiAgICAoMCwgY2hlY2tfcDJzX2pzXzEuZGVmYXVsdCkocDJzKTtcbiAgICBjb25zdCBzYWx0ID0gKDAsIGJ1ZmZlcl91dGlsc19qc18xLnAycykoYWxnLCBwMnMpO1xuICAgIGNvbnN0IGtleWxlbiA9IHBhcnNlSW50KGFsZy5zbGljZSgxMywgMTYpLCAxMCkgPj4gMztcbiAgICBjb25zdCBwYXNzd29yZCA9IGdldFBhc3N3b3JkKGtleSwgYWxnKTtcbiAgICBjb25zdCBkZXJpdmVkS2V5ID0gYXdhaXQgcGJrZGYyKHBhc3N3b3JkLCBzYWx0LCBwMmMsIGtleWxlbiwgYHNoYSR7YWxnLnNsaWNlKDgsIDExKX1gKTtcbiAgICBjb25zdCBlbmNyeXB0ZWRLZXkgPSBhd2FpdCAoMCwgYWVza3dfanNfMS53cmFwKShhbGcuc2xpY2UoLTYpLCBkZXJpdmVkS2V5LCBjZWspO1xuICAgIHJldHVybiB7IGVuY3J5cHRlZEtleSwgcDJjLCBwMnM6ICgwLCBiYXNlNjR1cmxfanNfMS5lbmNvZGUpKHAycykgfTtcbn07XG5leHBvcnRzLmVuY3J5cHQgPSBlbmNyeXB0O1xuY29uc3QgZGVjcnlwdCA9IGFzeW5jIChhbGcsIGtleSwgZW5jcnlwdGVkS2V5LCBwMmMsIHAycykgPT4ge1xuICAgICgwLCBjaGVja19wMnNfanNfMS5kZWZhdWx0KShwMnMpO1xuICAgIGNvbnN0IHNhbHQgPSAoMCwgYnVmZmVyX3V0aWxzX2pzXzEucDJzKShhbGcsIHAycyk7XG4gICAgY29uc3Qga2V5bGVuID0gcGFyc2VJbnQoYWxnLnNsaWNlKDEzLCAxNiksIDEwKSA+PiAzO1xuICAgIGNvbnN0IHBhc3N3b3JkID0gZ2V0UGFzc3dvcmQoa2V5LCBhbGcpO1xuICAgIGNvbnN0IGRlcml2ZWRLZXkgPSBhd2FpdCBwYmtkZjIocGFzc3dvcmQsIHNhbHQsIHAyYywga2V5bGVuLCBgc2hhJHthbGcuc2xpY2UoOCwgMTEpfWApO1xuICAgIHJldHVybiAoMCwgYWVza3dfanNfMS51bndyYXApKGFsZy5zbGljZSgtNiksIGRlcml2ZWRLZXksIGVuY3J5cHRlZEtleSk7XG59O1xuZXhwb3J0cy5kZWNyeXB0ID0gZGVjcnlwdDtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlY3J5cHQiLCJlbmNyeXB0IiwidXRpbF8xIiwicmVxdWlyZSIsImNyeXB0b18xIiwicmFuZG9tX2pzXzEiLCJidWZmZXJfdXRpbHNfanNfMSIsImJhc2U2NHVybF9qc18xIiwiYWVza3dfanNfMSIsImNoZWNrX3Ayc19qc18xIiwid2ViY3J5cHRvX2pzXzEiLCJjcnlwdG9fa2V5X2pzXzEiLCJpc19rZXlfb2JqZWN0X2pzXzEiLCJpbnZhbGlkX2tleV9pbnB1dF9qc18xIiwiaXNfa2V5X2xpa2VfanNfMSIsInBia2RmMiIsInByb21pc2lmeSIsImdldFBhc3N3b3JkIiwia2V5IiwiYWxnIiwiZGVmYXVsdCIsImV4cG9ydCIsIlVpbnQ4QXJyYXkiLCJpc0NyeXB0b0tleSIsImNoZWNrRW5jQ3J5cHRvS2V5IiwiS2V5T2JqZWN0IiwiZnJvbSIsIlR5cGVFcnJvciIsInR5cGVzIiwiY2VrIiwicDJjIiwicDJzIiwic2FsdCIsImtleWxlbiIsInBhcnNlSW50Iiwic2xpY2UiLCJwYXNzd29yZCIsImRlcml2ZWRLZXkiLCJlbmNyeXB0ZWRLZXkiLCJ3cmFwIiwiZW5jb2RlIiwidW53cmFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/pbes2kw.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/random.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/random.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return crypto_1.randomFillSync;\n    }\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvcmFuZG9tLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBZUUsR0FBRyxLQUFLO0FBQ3ZCLElBQUlDLFdBQVdDLG1CQUFPQSxDQUFDLHNCQUFRO0FBQy9CTiwyQ0FBMEM7SUFBRU8sWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT0gsU0FBU0k7SUFBZ0I7QUFBRSxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL3JhbmRvbS5qcz9mYTUwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNyeXB0b18xLnJhbmRvbUZpbGxTeW5jOyB9IH0pO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsImNyeXB0b18xIiwicmVxdWlyZSIsImVudW1lcmFibGUiLCJnZXQiLCJyYW5kb21GaWxsU3luYyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/random.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/rsaes.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/rsaes.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decrypt = exports.encrypt = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst check_modulus_length_js_1 = __webpack_require__(/*! ./check_modulus_length.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/check_modulus_length.js\");\nconst webcrypto_js_1 = __webpack_require__(/*! ./webcrypto.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\");\nconst crypto_key_js_1 = __webpack_require__(/*! ../lib/crypto_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/crypto_key.js\");\nconst is_key_object_js_1 = __webpack_require__(/*! ./is_key_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_object.js\");\nconst invalid_key_input_js_1 = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/invalid_key_input.js\");\nconst is_key_like_js_1 = __webpack_require__(/*! ./is_key_like.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/is_key_like.js\");\nconst checkKey = (key, alg)=>{\n    if (key.asymmetricKeyType !== \"rsa\") {\n        throw new TypeError(\"Invalid key for this operation, its asymmetricKeyType must be rsa\");\n    }\n    (0, check_modulus_length_js_1.default)(key, alg);\n};\nconst resolvePadding = (alg)=>{\n    switch(alg){\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            return crypto_1.constants.RSA_PKCS1_OAEP_PADDING;\n        case \"RSA1_5\":\n            return crypto_1.constants.RSA_PKCS1_PADDING;\n        default:\n            return undefined;\n    }\n};\nconst resolveOaepHash = (alg)=>{\n    switch(alg){\n        case \"RSA-OAEP\":\n            return \"sha1\";\n        case \"RSA-OAEP-256\":\n            return \"sha256\";\n        case \"RSA-OAEP-384\":\n            return \"sha384\";\n        case \"RSA-OAEP-512\":\n            return \"sha512\";\n        default:\n            return undefined;\n    }\n};\nfunction ensureKeyObject(key, alg, ...usages) {\n    if ((0, is_key_object_js_1.default)(key)) {\n        return key;\n    }\n    if ((0, webcrypto_js_1.isCryptoKey)(key)) {\n        (0, crypto_key_js_1.checkEncCryptoKey)(key, alg, ...usages);\n        return crypto_1.KeyObject.from(key);\n    }\n    throw new TypeError((0, invalid_key_input_js_1.default)(key, ...is_key_like_js_1.types));\n}\nconst encrypt = (alg, key, cek)=>{\n    const padding = resolvePadding(alg);\n    const oaepHash = resolveOaepHash(alg);\n    const keyObject = ensureKeyObject(key, alg, \"wrapKey\", \"encrypt\");\n    checkKey(keyObject, alg);\n    return (0, crypto_1.publicEncrypt)({\n        key: keyObject,\n        oaepHash,\n        padding\n    }, cek);\n};\nexports.encrypt = encrypt;\nconst decrypt = (alg, key, encryptedKey)=>{\n    const padding = resolvePadding(alg);\n    const oaepHash = resolveOaepHash(alg);\n    const keyObject = ensureKeyObject(key, alg, \"unwrapKey\", \"decrypt\");\n    checkKey(keyObject, alg);\n    return (0, crypto_1.privateDecrypt)({\n        key: keyObject,\n        oaepHash,\n        padding\n    }, encryptedKey);\n};\nexports.decrypt = decrypt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvcnNhZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGVBQWVFLEdBQUdGLGVBQWVHLEdBQUcsS0FBSztBQUN6QyxNQUFNQyxXQUFXQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUNqQyxNQUFNQyw0QkFBNEJELG1CQUFPQSxDQUFDLGdIQUEyQjtBQUNyRSxNQUFNRSxpQkFBaUJGLG1CQUFPQSxDQUFDLDBGQUFnQjtBQUMvQyxNQUFNRyxrQkFBa0JILG1CQUFPQSxDQUFDLDZGQUFzQjtBQUN0RCxNQUFNSSxxQkFBcUJKLG1CQUFPQSxDQUFDLGtHQUFvQjtBQUN2RCxNQUFNSyx5QkFBeUJMLG1CQUFPQSxDQUFDLDJHQUE2QjtBQUNwRSxNQUFNTSxtQkFBbUJOLG1CQUFPQSxDQUFDLDhGQUFrQjtBQUNuRCxNQUFNTyxXQUFXLENBQUNDLEtBQUtDO0lBQ25CLElBQUlELElBQUlFLHNCQUFzQixPQUFPO1FBQ2pDLE1BQU0sSUFBSUMsVUFBVTtJQUN4QjtJQUNDLElBQUdWLDBCQUEwQlcsT0FBTSxFQUFHSixLQUFLQztBQUNoRDtBQUNBLE1BQU1JLGlCQUFpQixDQUFDSjtJQUNwQixPQUFRQTtRQUNKLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPVixTQUFTZSxVQUFVQztRQUM5QixLQUFLO1lBQ0QsT0FBT2hCLFNBQVNlLFVBQVVFO1FBQzlCO1lBQ0ksT0FBT0M7SUFDZjtBQUNKO0FBQ0EsTUFBTUMsa0JBQWtCLENBQUNUO0lBQ3JCLE9BQVFBO1FBQ0osS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWDtZQUNJLE9BQU9RO0lBQ2Y7QUFDSjtBQUNBLFNBQVNFLGdCQUFnQlgsR0FBRyxFQUFFQyxHQUFHLEVBQUUsR0FBR1csTUFBTTtJQUN4QyxJQUFJLENBQUMsR0FBR2hCLG1CQUFtQlEsT0FBTSxFQUFHSixNQUFNO1FBQ3RDLE9BQU9BO0lBQ1g7SUFDQSxJQUFJLENBQUMsR0FBR04sZUFBZW1CLFdBQVUsRUFBR2IsTUFBTTtRQUNyQyxJQUFHTCxnQkFBZ0JtQixpQkFBZ0IsRUFBR2QsS0FBS0MsUUFBUVc7UUFDcEQsT0FBT3JCLFNBQVN3QixVQUFVQyxLQUFLaEI7SUFDbkM7SUFDQSxNQUFNLElBQUlHLFVBQVUsQ0FBQyxHQUFHTix1QkFBdUJPLE9BQU0sRUFBR0osUUFBUUYsaUJBQWlCbUI7QUFDckY7QUFDQSxNQUFNM0IsVUFBVSxDQUFDVyxLQUFLRCxLQUFLa0I7SUFDdkIsTUFBTUMsVUFBVWQsZUFBZUo7SUFDL0IsTUFBTW1CLFdBQVdWLGdCQUFnQlQ7SUFDakMsTUFBTW9CLFlBQVlWLGdCQUFnQlgsS0FBS0MsS0FBSyxXQUFXO0lBQ3ZERixTQUFTc0IsV0FBV3BCO0lBQ3BCLE9BQU8sQ0FBQyxHQUFHVixTQUFTK0IsYUFBWSxFQUFHO1FBQUV0QixLQUFLcUI7UUFBV0Q7UUFBVUQ7SUFBUSxHQUFHRDtBQUM5RTtBQUNBL0IsZUFBZUcsR0FBR0E7QUFDbEIsTUFBTUQsVUFBVSxDQUFDWSxLQUFLRCxLQUFLdUI7SUFDdkIsTUFBTUosVUFBVWQsZUFBZUo7SUFDL0IsTUFBTW1CLFdBQVdWLGdCQUFnQlQ7SUFDakMsTUFBTW9CLFlBQVlWLGdCQUFnQlgsS0FBS0MsS0FBSyxhQUFhO0lBQ3pERixTQUFTc0IsV0FBV3BCO0lBQ3BCLE9BQU8sQ0FBQyxHQUFHVixTQUFTaUMsY0FBYSxFQUFHO1FBQUV4QixLQUFLcUI7UUFBV0Q7UUFBVUQ7SUFBUSxHQUFHSTtBQUMvRTtBQUNBcEMsZUFBZUUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL3JzYWVzLmpzP2IwMGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY3J5cHQgPSBleHBvcnRzLmVuY3J5cHQgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCBjaGVja19tb2R1bHVzX2xlbmd0aF9qc18xID0gcmVxdWlyZShcIi4vY2hlY2tfbW9kdWx1c19sZW5ndGguanNcIik7XG5jb25zdCB3ZWJjcnlwdG9fanNfMSA9IHJlcXVpcmUoXCIuL3dlYmNyeXB0by5qc1wiKTtcbmNvbnN0IGNyeXB0b19rZXlfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvY3J5cHRvX2tleS5qc1wiKTtcbmNvbnN0IGlzX2tleV9vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuL2lzX2tleV9vYmplY3QuanNcIik7XG5jb25zdCBpbnZhbGlkX2tleV9pbnB1dF9qc18xID0gcmVxdWlyZShcIi4uL2xpYi9pbnZhbGlkX2tleV9pbnB1dC5qc1wiKTtcbmNvbnN0IGlzX2tleV9saWtlX2pzXzEgPSByZXF1aXJlKFwiLi9pc19rZXlfbGlrZS5qc1wiKTtcbmNvbnN0IGNoZWNrS2V5ID0gKGtleSwgYWxnKSA9PiB7XG4gICAgaWYgKGtleS5hc3ltbWV0cmljS2V5VHlwZSAhPT0gJ3JzYScpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCBrZXkgZm9yIHRoaXMgb3BlcmF0aW9uLCBpdHMgYXN5bW1ldHJpY0tleVR5cGUgbXVzdCBiZSByc2EnKTtcbiAgICB9XG4gICAgKDAsIGNoZWNrX21vZHVsdXNfbGVuZ3RoX2pzXzEuZGVmYXVsdCkoa2V5LCBhbGcpO1xufTtcbmNvbnN0IHJlc29sdmVQYWRkaW5nID0gKGFsZykgPT4ge1xuICAgIHN3aXRjaCAoYWxnKSB7XG4gICAgICAgIGNhc2UgJ1JTQS1PQUVQJzpcbiAgICAgICAgY2FzZSAnUlNBLU9BRVAtMjU2JzpcbiAgICAgICAgY2FzZSAnUlNBLU9BRVAtMzg0JzpcbiAgICAgICAgY2FzZSAnUlNBLU9BRVAtNTEyJzpcbiAgICAgICAgICAgIHJldHVybiBjcnlwdG9fMS5jb25zdGFudHMuUlNBX1BLQ1MxX09BRVBfUEFERElORztcbiAgICAgICAgY2FzZSAnUlNBMV81JzpcbiAgICAgICAgICAgIHJldHVybiBjcnlwdG9fMS5jb25zdGFudHMuUlNBX1BLQ1MxX1BBRERJTkc7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn07XG5jb25zdCByZXNvbHZlT2FlcEhhc2ggPSAoYWxnKSA9PiB7XG4gICAgc3dpdGNoIChhbGcpIHtcbiAgICAgICAgY2FzZSAnUlNBLU9BRVAnOlxuICAgICAgICAgICAgcmV0dXJuICdzaGExJztcbiAgICAgICAgY2FzZSAnUlNBLU9BRVAtMjU2JzpcbiAgICAgICAgICAgIHJldHVybiAnc2hhMjU2JztcbiAgICAgICAgY2FzZSAnUlNBLU9BRVAtMzg0JzpcbiAgICAgICAgICAgIHJldHVybiAnc2hhMzg0JztcbiAgICAgICAgY2FzZSAnUlNBLU9BRVAtNTEyJzpcbiAgICAgICAgICAgIHJldHVybiAnc2hhNTEyJztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxufTtcbmZ1bmN0aW9uIGVuc3VyZUtleU9iamVjdChrZXksIGFsZywgLi4udXNhZ2VzKSB7XG4gICAgaWYgKCgwLCBpc19rZXlfb2JqZWN0X2pzXzEuZGVmYXVsdCkoa2V5KSkge1xuICAgICAgICByZXR1cm4ga2V5O1xuICAgIH1cbiAgICBpZiAoKDAsIHdlYmNyeXB0b19qc18xLmlzQ3J5cHRvS2V5KShrZXkpKSB7XG4gICAgICAgICgwLCBjcnlwdG9fa2V5X2pzXzEuY2hlY2tFbmNDcnlwdG9LZXkpKGtleSwgYWxnLCAuLi51c2FnZXMpO1xuICAgICAgICByZXR1cm4gY3J5cHRvXzEuS2V5T2JqZWN0LmZyb20oa2V5KTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcigoMCwgaW52YWxpZF9rZXlfaW5wdXRfanNfMS5kZWZhdWx0KShrZXksIC4uLmlzX2tleV9saWtlX2pzXzEudHlwZXMpKTtcbn1cbmNvbnN0IGVuY3J5cHQgPSAoYWxnLCBrZXksIGNlaykgPT4ge1xuICAgIGNvbnN0IHBhZGRpbmcgPSByZXNvbHZlUGFkZGluZyhhbGcpO1xuICAgIGNvbnN0IG9hZXBIYXNoID0gcmVzb2x2ZU9hZXBIYXNoKGFsZyk7XG4gICAgY29uc3Qga2V5T2JqZWN0ID0gZW5zdXJlS2V5T2JqZWN0KGtleSwgYWxnLCAnd3JhcEtleScsICdlbmNyeXB0Jyk7XG4gICAgY2hlY2tLZXkoa2V5T2JqZWN0LCBhbGcpO1xuICAgIHJldHVybiAoMCwgY3J5cHRvXzEucHVibGljRW5jcnlwdCkoeyBrZXk6IGtleU9iamVjdCwgb2FlcEhhc2gsIHBhZGRpbmcgfSwgY2VrKTtcbn07XG5leHBvcnRzLmVuY3J5cHQgPSBlbmNyeXB0O1xuY29uc3QgZGVjcnlwdCA9IChhbGcsIGtleSwgZW5jcnlwdGVkS2V5KSA9PiB7XG4gICAgY29uc3QgcGFkZGluZyA9IHJlc29sdmVQYWRkaW5nKGFsZyk7XG4gICAgY29uc3Qgb2FlcEhhc2ggPSByZXNvbHZlT2FlcEhhc2goYWxnKTtcbiAgICBjb25zdCBrZXlPYmplY3QgPSBlbnN1cmVLZXlPYmplY3Qoa2V5LCBhbGcsICd1bndyYXBLZXknLCAnZGVjcnlwdCcpO1xuICAgIGNoZWNrS2V5KGtleU9iamVjdCwgYWxnKTtcbiAgICByZXR1cm4gKDAsIGNyeXB0b18xLnByaXZhdGVEZWNyeXB0KSh7IGtleToga2V5T2JqZWN0LCBvYWVwSGFzaCwgcGFkZGluZyB9LCBlbmNyeXB0ZWRLZXkpO1xufTtcbmV4cG9ydHMuZGVjcnlwdCA9IGRlY3J5cHQ7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWNyeXB0IiwiZW5jcnlwdCIsImNyeXB0b18xIiwicmVxdWlyZSIsImNoZWNrX21vZHVsdXNfbGVuZ3RoX2pzXzEiLCJ3ZWJjcnlwdG9fanNfMSIsImNyeXB0b19rZXlfanNfMSIsImlzX2tleV9vYmplY3RfanNfMSIsImludmFsaWRfa2V5X2lucHV0X2pzXzEiLCJpc19rZXlfbGlrZV9qc18xIiwiY2hlY2tLZXkiLCJrZXkiLCJhbGciLCJhc3ltbWV0cmljS2V5VHlwZSIsIlR5cGVFcnJvciIsImRlZmF1bHQiLCJyZXNvbHZlUGFkZGluZyIsImNvbnN0YW50cyIsIlJTQV9QS0NTMV9PQUVQX1BBRERJTkciLCJSU0FfUEtDUzFfUEFERElORyIsInVuZGVmaW5lZCIsInJlc29sdmVPYWVwSGFzaCIsImVuc3VyZUtleU9iamVjdCIsInVzYWdlcyIsImlzQ3J5cHRvS2V5IiwiY2hlY2tFbmNDcnlwdG9LZXkiLCJLZXlPYmplY3QiLCJmcm9tIiwidHlwZXMiLCJjZWsiLCJwYWRkaW5nIiwib2FlcEhhc2giLCJrZXlPYmplY3QiLCJwdWJsaWNFbmNyeXB0IiwiZW5jcnlwdGVkS2V5IiwicHJpdmF0ZURlY3J5cHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/rsaes.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/sign.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/sign.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst dsa_digest_js_1 = __webpack_require__(/*! ./dsa_digest.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/dsa_digest.js\");\nconst hmac_digest_js_1 = __webpack_require__(/*! ./hmac_digest.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/hmac_digest.js\");\nconst node_key_js_1 = __webpack_require__(/*! ./node_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/node_key.js\");\nconst get_sign_verify_key_js_1 = __webpack_require__(/*! ./get_sign_verify_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js\");\nlet oneShotSign;\nif (crypto.sign.length > 3) {\n    oneShotSign = (0, util_1.promisify)(crypto.sign);\n} else {\n    oneShotSign = crypto.sign;\n}\nconst sign = async (alg, key, data)=>{\n    const keyObject = (0, get_sign_verify_key_js_1.default)(alg, key, \"sign\");\n    if (alg.startsWith(\"HS\")) {\n        const hmac = crypto.createHmac((0, hmac_digest_js_1.default)(alg), keyObject);\n        hmac.update(data);\n        return hmac.digest();\n    }\n    return oneShotSign((0, dsa_digest_js_1.default)(alg), data, (0, node_key_js_1.default)(alg, keyObject));\n};\nexports[\"default\"] = sign;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvc2lnbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUMvQixNQUFNQyxTQUFTRCxtQkFBT0EsQ0FBQyxrQkFBTTtBQUM3QixNQUFNRSxrQkFBa0JGLG1CQUFPQSxDQUFDLDRGQUFpQjtBQUNqRCxNQUFNRyxtQkFBbUJILG1CQUFPQSxDQUFDLDhGQUFrQjtBQUNuRCxNQUFNSSxnQkFBZ0JKLG1CQUFPQSxDQUFDLHdGQUFlO0FBQzdDLE1BQU1LLDJCQUEyQkwsbUJBQU9BLENBQUMsOEdBQTBCO0FBQ25FLElBQUlNO0FBQ0osSUFBSVAsT0FBT1EsS0FBS0MsU0FBUyxHQUFHO0lBQ3hCRixjQUFjLENBQUMsR0FBR0wsT0FBT1EsU0FBUSxFQUFHVixPQUFPUTtBQUMvQyxPQUNLO0lBQ0RELGNBQWNQLE9BQU9RO0FBQ3pCO0FBQ0EsTUFBTUEsT0FBTyxPQUFPRyxLQUFLQyxLQUFLQztJQUMxQixNQUFNQyxZQUFZLENBQUMsR0FBR1IseUJBQXlCUyxPQUFNLEVBQUdKLEtBQUtDLEtBQUs7SUFDbEUsSUFBSUQsSUFBSUssV0FBVyxPQUFPO1FBQ3RCLE1BQU1DLE9BQU9qQixPQUFPa0IsV0FBVyxDQUFDLEdBQUdkLGlCQUFpQlcsT0FBTSxFQUFHSixNQUFNRztRQUNuRUcsS0FBS0UsT0FBT047UUFDWixPQUFPSSxLQUFLRztJQUNoQjtJQUNBLE9BQU9iLFlBQVksQ0FBQyxHQUFHSixnQkFBZ0JZLE9BQU0sRUFBR0osTUFBTUUsTUFBTSxDQUFDLEdBQUdSLGNBQWNVLE9BQU0sRUFBR0osS0FBS0c7QUFDaEc7QUFDQWhCLGtCQUFlaUIsR0FBR1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL3NpZ24uanM/YmU5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwidXRpbFwiKTtcbmNvbnN0IGRzYV9kaWdlc3RfanNfMSA9IHJlcXVpcmUoXCIuL2RzYV9kaWdlc3QuanNcIik7XG5jb25zdCBobWFjX2RpZ2VzdF9qc18xID0gcmVxdWlyZShcIi4vaG1hY19kaWdlc3QuanNcIik7XG5jb25zdCBub2RlX2tleV9qc18xID0gcmVxdWlyZShcIi4vbm9kZV9rZXkuanNcIik7XG5jb25zdCBnZXRfc2lnbl92ZXJpZnlfa2V5X2pzXzEgPSByZXF1aXJlKFwiLi9nZXRfc2lnbl92ZXJpZnlfa2V5LmpzXCIpO1xubGV0IG9uZVNob3RTaWduO1xuaWYgKGNyeXB0by5zaWduLmxlbmd0aCA+IDMpIHtcbiAgICBvbmVTaG90U2lnbiA9ICgwLCB1dGlsXzEucHJvbWlzaWZ5KShjcnlwdG8uc2lnbik7XG59XG5lbHNlIHtcbiAgICBvbmVTaG90U2lnbiA9IGNyeXB0by5zaWduO1xufVxuY29uc3Qgc2lnbiA9IGFzeW5jIChhbGcsIGtleSwgZGF0YSkgPT4ge1xuICAgIGNvbnN0IGtleU9iamVjdCA9ICgwLCBnZXRfc2lnbl92ZXJpZnlfa2V5X2pzXzEuZGVmYXVsdCkoYWxnLCBrZXksICdzaWduJyk7XG4gICAgaWYgKGFsZy5zdGFydHNXaXRoKCdIUycpKSB7XG4gICAgICAgIGNvbnN0IGhtYWMgPSBjcnlwdG8uY3JlYXRlSG1hYygoMCwgaG1hY19kaWdlc3RfanNfMS5kZWZhdWx0KShhbGcpLCBrZXlPYmplY3QpO1xuICAgICAgICBobWFjLnVwZGF0ZShkYXRhKTtcbiAgICAgICAgcmV0dXJuIGhtYWMuZGlnZXN0KCk7XG4gICAgfVxuICAgIHJldHVybiBvbmVTaG90U2lnbigoMCwgZHNhX2RpZ2VzdF9qc18xLmRlZmF1bHQpKGFsZyksIGRhdGEsICgwLCBub2RlX2tleV9qc18xLmRlZmF1bHQpKGFsZywga2V5T2JqZWN0KSk7XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gc2lnbjtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNyeXB0byIsInJlcXVpcmUiLCJ1dGlsXzEiLCJkc2FfZGlnZXN0X2pzXzEiLCJobWFjX2RpZ2VzdF9qc18xIiwibm9kZV9rZXlfanNfMSIsImdldF9zaWduX3ZlcmlmeV9rZXlfanNfMSIsIm9uZVNob3RTaWduIiwic2lnbiIsImxlbmd0aCIsInByb21pc2lmeSIsImFsZyIsImtleSIsImRhdGEiLCJrZXlPYmplY3QiLCJkZWZhdWx0Iiwic3RhcnRzV2l0aCIsImhtYWMiLCJjcmVhdGVIbWFjIiwidXBkYXRlIiwiZGlnZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/sign.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst timingSafeEqual = crypto_1.timingSafeEqual;\nexports[\"default\"] = timingSafeEqual;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvdGltaW5nX3NhZmVfZXF1YWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsV0FBV0MsbUJBQU9BLENBQUMsc0JBQVE7QUFDakMsTUFBTUMsa0JBQWtCRixTQUFTRTtBQUNqQ0osa0JBQWVLLEdBQUdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS90aW1pbmdfc2FmZV9lcXVhbC5qcz9kMDM2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgdGltaW5nU2FmZUVxdWFsID0gY3J5cHRvXzEudGltaW5nU2FmZUVxdWFsO1xuZXhwb3J0cy5kZWZhdWx0ID0gdGltaW5nU2FmZUVxdWFsO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvXzEiLCJyZXF1aXJlIiwidGltaW5nU2FmZUVxdWFsIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/timing_safe_equal.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/verify.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/verify.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst dsa_digest_js_1 = __webpack_require__(/*! ./dsa_digest.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/dsa_digest.js\");\nconst node_key_js_1 = __webpack_require__(/*! ./node_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/node_key.js\");\nconst sign_js_1 = __webpack_require__(/*! ./sign.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/sign.js\");\nconst get_sign_verify_key_js_1 = __webpack_require__(/*! ./get_sign_verify_key.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/get_sign_verify_key.js\");\nconst flags_js_1 = __webpack_require__(/*! ./flags.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/flags.js\");\nlet oneShotVerify;\nif (crypto.verify.length > 4 && flags_js_1.oneShotCallback) {\n    oneShotVerify = (0, util_1.promisify)(crypto.verify);\n} else {\n    oneShotVerify = crypto.verify;\n}\nconst verify = async (alg, key, signature, data)=>{\n    const keyObject = (0, get_sign_verify_key_js_1.default)(alg, key, \"verify\");\n    if (alg.startsWith(\"HS\")) {\n        const expected = await (0, sign_js_1.default)(alg, keyObject, data);\n        const actual = signature;\n        try {\n            return crypto.timingSafeEqual(actual, expected);\n        } catch  {\n            return false;\n        }\n    }\n    const algorithm = (0, dsa_digest_js_1.default)(alg);\n    const keyInput = (0, node_key_js_1.default)(alg, keyObject);\n    try {\n        return await oneShotVerify(algorithm, data, keyInput, signature);\n    } catch  {\n        return false;\n    }\n};\nexports[\"default\"] = verify;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvdmVyaWZ5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLHNCQUFRO0FBQy9CLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDLGtCQUFNO0FBQzdCLE1BQU1FLGtCQUFrQkYsbUJBQU9BLENBQUMsNEZBQWlCO0FBQ2pELE1BQU1HLGdCQUFnQkgsbUJBQU9BLENBQUMsd0ZBQWU7QUFDN0MsTUFBTUksWUFBWUosbUJBQU9BLENBQUMsZ0ZBQVc7QUFDckMsTUFBTUssMkJBQTJCTCxtQkFBT0EsQ0FBQyw4R0FBMEI7QUFDbkUsTUFBTU0sYUFBYU4sbUJBQU9BLENBQUMsa0ZBQVk7QUFDdkMsSUFBSU87QUFDSixJQUFJUixPQUFPUyxPQUFPQyxTQUFTLEtBQUtILFdBQVdJLGlCQUFpQjtJQUN4REgsZ0JBQWdCLENBQUMsR0FBR04sT0FBT1UsU0FBUSxFQUFHWixPQUFPUztBQUNqRCxPQUNLO0lBQ0RELGdCQUFnQlIsT0FBT1M7QUFDM0I7QUFDQSxNQUFNQSxTQUFTLE9BQU9JLEtBQUtDLEtBQUtDLFdBQVdDO0lBQ3ZDLE1BQU1DLFlBQVksQ0FBQyxHQUFHWCx5QkFBeUJZLE9BQU0sRUFBR0wsS0FBS0MsS0FBSztJQUNsRSxJQUFJRCxJQUFJTSxXQUFXLE9BQU87UUFDdEIsTUFBTUMsV0FBVyxNQUFNLENBQUMsR0FBR2YsVUFBVWEsT0FBTSxFQUFHTCxLQUFLSSxXQUFXRDtRQUM5RCxNQUFNSyxTQUFTTjtRQUNmLElBQUk7WUFDQSxPQUFPZixPQUFPc0IsZ0JBQWdCRCxRQUFRRDtRQUMxQyxFQUNBLE9BQU07WUFDRixPQUFPO1FBQ1g7SUFDSjtJQUNBLE1BQU1HLFlBQVksQ0FBQyxHQUFHcEIsZ0JBQWdCZSxPQUFNLEVBQUdMO0lBQy9DLE1BQU1XLFdBQVcsQ0FBQyxHQUFHcEIsY0FBY2MsT0FBTSxFQUFHTCxLQUFLSTtJQUNqRCxJQUFJO1FBQ0EsT0FBTyxNQUFNVCxjQUFjZSxXQUFXUCxNQUFNUSxVQUFVVDtJQUMxRCxFQUNBLE9BQU07UUFDRixPQUFPO0lBQ1g7QUFDSjtBQUNBakIsa0JBQWVvQixHQUFHVCIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvdmVyaWZ5LmpzP2M2MTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBjcnlwdG8gPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgdXRpbF8xID0gcmVxdWlyZShcInV0aWxcIik7XG5jb25zdCBkc2FfZGlnZXN0X2pzXzEgPSByZXF1aXJlKFwiLi9kc2FfZGlnZXN0LmpzXCIpO1xuY29uc3Qgbm9kZV9rZXlfanNfMSA9IHJlcXVpcmUoXCIuL25vZGVfa2V5LmpzXCIpO1xuY29uc3Qgc2lnbl9qc18xID0gcmVxdWlyZShcIi4vc2lnbi5qc1wiKTtcbmNvbnN0IGdldF9zaWduX3ZlcmlmeV9rZXlfanNfMSA9IHJlcXVpcmUoXCIuL2dldF9zaWduX3ZlcmlmeV9rZXkuanNcIik7XG5jb25zdCBmbGFnc19qc18xID0gcmVxdWlyZShcIi4vZmxhZ3MuanNcIik7XG5sZXQgb25lU2hvdFZlcmlmeTtcbmlmIChjcnlwdG8udmVyaWZ5Lmxlbmd0aCA+IDQgJiYgZmxhZ3NfanNfMS5vbmVTaG90Q2FsbGJhY2spIHtcbiAgICBvbmVTaG90VmVyaWZ5ID0gKDAsIHV0aWxfMS5wcm9taXNpZnkpKGNyeXB0by52ZXJpZnkpO1xufVxuZWxzZSB7XG4gICAgb25lU2hvdFZlcmlmeSA9IGNyeXB0by52ZXJpZnk7XG59XG5jb25zdCB2ZXJpZnkgPSBhc3luYyAoYWxnLCBrZXksIHNpZ25hdHVyZSwgZGF0YSkgPT4ge1xuICAgIGNvbnN0IGtleU9iamVjdCA9ICgwLCBnZXRfc2lnbl92ZXJpZnlfa2V5X2pzXzEuZGVmYXVsdCkoYWxnLCBrZXksICd2ZXJpZnknKTtcbiAgICBpZiAoYWxnLnN0YXJ0c1dpdGgoJ0hTJykpIHtcbiAgICAgICAgY29uc3QgZXhwZWN0ZWQgPSBhd2FpdCAoMCwgc2lnbl9qc18xLmRlZmF1bHQpKGFsZywga2V5T2JqZWN0LCBkYXRhKTtcbiAgICAgICAgY29uc3QgYWN0dWFsID0gc2lnbmF0dXJlO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGNyeXB0by50aW1pbmdTYWZlRXF1YWwoYWN0dWFsLCBleHBlY3RlZCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGFsZ29yaXRobSA9ICgwLCBkc2FfZGlnZXN0X2pzXzEuZGVmYXVsdCkoYWxnKTtcbiAgICBjb25zdCBrZXlJbnB1dCA9ICgwLCBub2RlX2tleV9qc18xLmRlZmF1bHQpKGFsZywga2V5T2JqZWN0KTtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gYXdhaXQgb25lU2hvdFZlcmlmeShhbGdvcml0aG0sIGRhdGEsIGtleUlucHV0LCBzaWduYXR1cmUpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59O1xuZXhwb3J0cy5kZWZhdWx0ID0gdmVyaWZ5O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3J5cHRvIiwicmVxdWlyZSIsInV0aWxfMSIsImRzYV9kaWdlc3RfanNfMSIsIm5vZGVfa2V5X2pzXzEiLCJzaWduX2pzXzEiLCJnZXRfc2lnbl92ZXJpZnlfa2V5X2pzXzEiLCJmbGFnc19qc18xIiwib25lU2hvdFZlcmlmeSIsInZlcmlmeSIsImxlbmd0aCIsIm9uZVNob3RDYWxsYmFjayIsInByb21pc2lmeSIsImFsZyIsImtleSIsInNpZ25hdHVyZSIsImRhdGEiLCJrZXlPYmplY3QiLCJkZWZhdWx0Iiwic3RhcnRzV2l0aCIsImV4cGVjdGVkIiwiYWN0dWFsIiwidGltaW5nU2FmZUVxdWFsIiwiYWxnb3JpdGhtIiwia2V5SW5wdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/verify.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/webcrypto.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isCryptoKey = void 0;\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst util = __webpack_require__(/*! util */ \"util\");\nconst webcrypto = crypto.webcrypto;\nexports[\"default\"] = webcrypto;\nexports.isCryptoKey = util.types.isCryptoKey ? (key)=>util.types.isCryptoKey(key) : (key)=>false;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvd2ViY3J5cHRvLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQkFBbUJFLEdBQUcsS0FBSztBQUMzQixNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQyxzQkFBUTtBQUMvQixNQUFNQyxPQUFPRCxtQkFBT0EsQ0FBQyxrQkFBTTtBQUMzQixNQUFNRSxZQUFZSCxPQUFPRztBQUN6Qk4sa0JBQWVPLEdBQUdEO0FBQ2xCTixtQkFBbUJFLEdBQUdHLEtBQUtHLE1BQU1OLGNBQzNCLENBQUNPLE1BQVFKLEtBQUtHLE1BQU1OLFlBQVlPLE9BRTlCLENBQUNBLE1BQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy9ydW50aW1lL3dlYmNyeXB0by5qcz8xNzdhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0NyeXB0b0tleSA9IHZvaWQgMDtcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5jb25zdCB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XG5jb25zdCB3ZWJjcnlwdG8gPSBjcnlwdG8ud2ViY3J5cHRvO1xuZXhwb3J0cy5kZWZhdWx0ID0gd2ViY3J5cHRvO1xuZXhwb3J0cy5pc0NyeXB0b0tleSA9IHV0aWwudHlwZXMuaXNDcnlwdG9LZXlcbiAgICA/IChrZXkpID0+IHV0aWwudHlwZXMuaXNDcnlwdG9LZXkoa2V5KVxuICAgIDpcbiAgICAgICAgKGtleSkgPT4gZmFsc2U7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpc0NyeXB0b0tleSIsImNyeXB0byIsInJlcXVpcmUiLCJ1dGlsIiwid2ViY3J5cHRvIiwiZGVmYXVsdCIsInR5cGVzIiwia2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/webcrypto.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/runtime/zlib.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/runtime/zlib.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.deflate = exports.inflate = void 0;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nconst inflateRaw = (0, util_1.promisify)(zlib_1.inflateRaw);\nconst deflateRaw = (0, util_1.promisify)(zlib_1.deflateRaw);\nconst inflate = (input)=>inflateRaw(input);\nexports.inflate = inflate;\nconst deflate = (input)=>deflateRaw(input);\nexports.deflate = deflate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3J1bnRpbWUvemxpYi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsZUFBZUUsR0FBR0YsZUFBZUcsR0FBRyxLQUFLO0FBQ3pDLE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLGtCQUFNO0FBQzdCLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDLGtCQUFNO0FBQzdCLE1BQU1FLGFBQWEsQ0FBQyxHQUFHSCxPQUFPSSxTQUFRLEVBQUdGLE9BQU9DO0FBQ2hELE1BQU1FLGFBQWEsQ0FBQyxHQUFHTCxPQUFPSSxTQUFRLEVBQUdGLE9BQU9HO0FBQ2hELE1BQU1OLFVBQVUsQ0FBQ08sUUFBVUgsV0FBV0c7QUFDdENWLGVBQWVHLEdBQUdBO0FBQ2xCLE1BQU1ELFVBQVUsQ0FBQ1EsUUFBVUQsV0FBV0M7QUFDdENWLGVBQWVFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvcnVudGltZS96bGliLmpzPzFiMGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlZmxhdGUgPSBleHBvcnRzLmluZmxhdGUgPSB2b2lkIDA7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwidXRpbFwiKTtcbmNvbnN0IHpsaWJfMSA9IHJlcXVpcmUoXCJ6bGliXCIpO1xuY29uc3QgaW5mbGF0ZVJhdyA9ICgwLCB1dGlsXzEucHJvbWlzaWZ5KSh6bGliXzEuaW5mbGF0ZVJhdyk7XG5jb25zdCBkZWZsYXRlUmF3ID0gKDAsIHV0aWxfMS5wcm9taXNpZnkpKHpsaWJfMS5kZWZsYXRlUmF3KTtcbmNvbnN0IGluZmxhdGUgPSAoaW5wdXQpID0+IGluZmxhdGVSYXcoaW5wdXQpO1xuZXhwb3J0cy5pbmZsYXRlID0gaW5mbGF0ZTtcbmNvbnN0IGRlZmxhdGUgPSAoaW5wdXQpID0+IGRlZmxhdGVSYXcoaW5wdXQpO1xuZXhwb3J0cy5kZWZsYXRlID0gZGVmbGF0ZTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmxhdGUiLCJpbmZsYXRlIiwidXRpbF8xIiwicmVxdWlyZSIsInpsaWJfMSIsImluZmxhdGVSYXciLCJwcm9taXNpZnkiLCJkZWZsYXRlUmF3IiwiaW5wdXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/runtime/zlib.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/util/base64url.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/util/base64url.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decode = exports.encode = void 0;\nconst base64url = __webpack_require__(/*! ../runtime/base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/runtime/base64url.js\");\nexports.encode = base64url.encode;\nexports.decode = base64url.decode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3V0aWwvYmFzZTY0dXJsLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxjQUFjRSxHQUFHRixjQUFjRyxHQUFHLEtBQUs7QUFDdkMsTUFBTUMsWUFBWUMsbUJBQU9BLENBQUMsbUdBQXlCO0FBQ25ETCxjQUFjRyxHQUFHQyxVQUFVRDtBQUMzQkgsY0FBY0UsR0FBR0UsVUFBVUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9ub2RlL2Nqcy91dGlsL2Jhc2U2NHVybC5qcz9iOWY1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGUgPSBleHBvcnRzLmVuY29kZSA9IHZvaWQgMDtcbmNvbnN0IGJhc2U2NHVybCA9IHJlcXVpcmUoXCIuLi9ydW50aW1lL2Jhc2U2NHVybC5qc1wiKTtcbmV4cG9ydHMuZW5jb2RlID0gYmFzZTY0dXJsLmVuY29kZTtcbmV4cG9ydHMuZGVjb2RlID0gYmFzZTY0dXJsLmRlY29kZTtcbiJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlY29kZSIsImVuY29kZSIsImJhc2U2NHVybCIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/util/base64url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/util/decode_jwt.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/util/decode_jwt.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decodeJwt = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/base64url.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nconst errors_js_1 = __webpack_require__(/*! ./errors.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\");\nfunction decodeJwt(jwt) {\n    if (typeof jwt !== \"string\") throw new errors_js_1.JWTInvalid(\"JWTs must use Compact JWS serialization, JWT must be a string\");\n    const { 1: payload, length } = jwt.split(\".\");\n    if (length === 5) throw new errors_js_1.JWTInvalid(\"Only JWTs using Compact JWS serialization can be decoded\");\n    if (length !== 3) throw new errors_js_1.JWTInvalid(\"Invalid JWT\");\n    if (!payload) throw new errors_js_1.JWTInvalid(\"JWTs must contain a payload\");\n    let decoded;\n    try {\n        decoded = (0, base64url_js_1.decode)(payload);\n    } catch  {\n        throw new errors_js_1.JWTInvalid(\"Failed to parse the base64url encoded payload\");\n    }\n    let result;\n    try {\n        result = JSON.parse(buffer_utils_js_1.decoder.decode(decoded));\n    } catch  {\n        throw new errors_js_1.JWTInvalid(\"Failed to parse the decoded payload as JSON\");\n    }\n    if (!(0, is_object_js_1.default)(result)) throw new errors_js_1.JWTInvalid(\"Invalid JWT Claims Set\");\n    return result;\n}\nexports.decodeJwt = decodeJwt;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3V0aWwvZGVjb2RlX2p3dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsaUJBQWlCRSxHQUFHLEtBQUs7QUFDekIsTUFBTUMsaUJBQWlCQyxtQkFBT0EsQ0FBQyx1RkFBZ0I7QUFDL0MsTUFBTUMsb0JBQW9CRCxtQkFBT0EsQ0FBQyxpR0FBd0I7QUFDMUQsTUFBTUUsaUJBQWlCRixtQkFBT0EsQ0FBQywyRkFBcUI7QUFDcEQsTUFBTUcsY0FBY0gsbUJBQU9BLENBQUMsaUZBQWE7QUFDekMsU0FBU0YsVUFBVU0sR0FBRztJQUNsQixJQUFJLE9BQU9BLFFBQVEsVUFDZixNQUFNLElBQUlELFlBQVlFLFdBQVc7SUFDckMsTUFBTSxFQUFFLEdBQUdDLE9BQU8sRUFBRUMsTUFBTSxFQUFFLEdBQUdILElBQUlJLE1BQU07SUFDekMsSUFBSUQsV0FBVyxHQUNYLE1BQU0sSUFBSUosWUFBWUUsV0FBVztJQUNyQyxJQUFJRSxXQUFXLEdBQ1gsTUFBTSxJQUFJSixZQUFZRSxXQUFXO0lBQ3JDLElBQUksQ0FBQ0MsU0FDRCxNQUFNLElBQUlILFlBQVlFLFdBQVc7SUFDckMsSUFBSUk7SUFDSixJQUFJO1FBQ0FBLFVBQVUsQ0FBQyxHQUFHVixlQUFlVyxNQUFLLEVBQUdKO0lBQ3pDLEVBQ0EsT0FBTTtRQUNGLE1BQU0sSUFBSUgsWUFBWUUsV0FBVztJQUNyQztJQUNBLElBQUlNO0lBQ0osSUFBSTtRQUNBQSxTQUFTQyxLQUFLQyxNQUFNWixrQkFBa0JhLFFBQVFKLE9BQU9EO0lBQ3pELEVBQ0EsT0FBTTtRQUNGLE1BQU0sSUFBSU4sWUFBWUUsV0FBVztJQUNyQztJQUNBLElBQUksQ0FBQyxDQUFDLEdBQUdILGVBQWVhLE9BQU0sRUFBR0osU0FDN0IsTUFBTSxJQUFJUixZQUFZRSxXQUFXO0lBQ3JDLE9BQU9NO0FBQ1g7QUFDQWYsaUJBQWlCRSxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3V0aWwvZGVjb2RlX2p3dC5qcz8xYjQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGVKd3QgPSB2b2lkIDA7XG5jb25zdCBiYXNlNjR1cmxfanNfMSA9IHJlcXVpcmUoXCIuL2Jhc2U2NHVybC5qc1wiKTtcbmNvbnN0IGJ1ZmZlcl91dGlsc19qc18xID0gcmVxdWlyZShcIi4uL2xpYi9idWZmZXJfdXRpbHMuanNcIik7XG5jb25zdCBpc19vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaXNfb2JqZWN0LmpzXCIpO1xuY29uc3QgZXJyb3JzX2pzXzEgPSByZXF1aXJlKFwiLi9lcnJvcnMuanNcIik7XG5mdW5jdGlvbiBkZWNvZGVKd3Qoand0KSB7XG4gICAgaWYgKHR5cGVvZiBqd3QgIT09ICdzdHJpbmcnKVxuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnSldUcyBtdXN0IHVzZSBDb21wYWN0IEpXUyBzZXJpYWxpemF0aW9uLCBKV1QgbXVzdCBiZSBhIHN0cmluZycpO1xuICAgIGNvbnN0IHsgMTogcGF5bG9hZCwgbGVuZ3RoIH0gPSBqd3Quc3BsaXQoJy4nKTtcbiAgICBpZiAobGVuZ3RoID09PSA1KVxuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnT25seSBKV1RzIHVzaW5nIENvbXBhY3QgSldTIHNlcmlhbGl6YXRpb24gY2FuIGJlIGRlY29kZWQnKTtcbiAgICBpZiAobGVuZ3RoICE9PSAzKVxuICAgICAgICB0aHJvdyBuZXcgZXJyb3JzX2pzXzEuSldUSW52YWxpZCgnSW52YWxpZCBKV1QnKTtcbiAgICBpZiAoIXBheWxvYWQpXG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1RJbnZhbGlkKCdKV1RzIG11c3QgY29udGFpbiBhIHBheWxvYWQnKTtcbiAgICBsZXQgZGVjb2RlZDtcbiAgICB0cnkge1xuICAgICAgICBkZWNvZGVkID0gKDAsIGJhc2U2NHVybF9qc18xLmRlY29kZSkocGF5bG9hZCk7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc19qc18xLkpXVEludmFsaWQoJ0ZhaWxlZCB0byBwYXJzZSB0aGUgYmFzZTY0dXJsIGVuY29kZWQgcGF5bG9hZCcpO1xuICAgIH1cbiAgICBsZXQgcmVzdWx0O1xuICAgIHRyeSB7XG4gICAgICAgIHJlc3VsdCA9IEpTT04ucGFyc2UoYnVmZmVyX3V0aWxzX2pzXzEuZGVjb2Rlci5kZWNvZGUoZGVjb2RlZCkpO1xuICAgIH1cbiAgICBjYXRjaCB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1RJbnZhbGlkKCdGYWlsZWQgdG8gcGFyc2UgdGhlIGRlY29kZWQgcGF5bG9hZCBhcyBKU09OJyk7XG4gICAgfVxuICAgIGlmICghKDAsIGlzX29iamVjdF9qc18xLmRlZmF1bHQpKHJlc3VsdCkpXG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfanNfMS5KV1RJbnZhbGlkKCdJbnZhbGlkIEpXVCBDbGFpbXMgU2V0Jyk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMuZGVjb2RlSnd0ID0gZGVjb2RlSnd0O1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVjb2RlSnd0IiwiYmFzZTY0dXJsX2pzXzEiLCJyZXF1aXJlIiwiYnVmZmVyX3V0aWxzX2pzXzEiLCJpc19vYmplY3RfanNfMSIsImVycm9yc19qc18xIiwiand0IiwiSldUSW52YWxpZCIsInBheWxvYWQiLCJsZW5ndGgiLCJzcGxpdCIsImRlY29kZWQiLCJkZWNvZGUiLCJyZXN1bHQiLCJKU09OIiwicGFyc2UiLCJkZWNvZGVyIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/util/decode_jwt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/util/decode_protected_header.js":
/*!*************************************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/util/decode_protected_header.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decodeProtectedHeader = void 0;\nconst base64url_js_1 = __webpack_require__(/*! ./base64url.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/util/base64url.js\");\nconst buffer_utils_js_1 = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/buffer_utils.js\");\nconst is_object_js_1 = __webpack_require__(/*! ../lib/is_object.js */ \"(sc_server)/./node_modules/jose/dist/node/cjs/lib/is_object.js\");\nfunction decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === \"string\") {\n        const parts = token.split(\".\");\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    } else if (typeof token === \"object\" && token) {\n        if (\"protected\" in token) {\n            protectedB64u = token.protected;\n        } else {\n            throw new TypeError(\"Token does not contain a Protected Header\");\n        }\n    }\n    try {\n        if (typeof protectedB64u !== \"string\" || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(buffer_utils_js_1.decoder.decode((0, base64url_js_1.decode)(protectedB64u)));\n        if (!(0, is_object_js_1.default)(result)) {\n            throw new Error();\n        }\n        return result;\n    } catch  {\n        throw new TypeError(\"Invalid Token or Protected Header formatting\");\n    }\n}\nexports.decodeProtectedHeader = decodeProtectedHeader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L25vZGUvY2pzL3V0aWwvZGVjb2RlX3Byb3RlY3RlZF9oZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDZCQUE2QkUsR0FBRyxLQUFLO0FBQ3JDLE1BQU1DLGlCQUFpQkMsbUJBQU9BLENBQUMsdUZBQWdCO0FBQy9DLE1BQU1DLG9CQUFvQkQsbUJBQU9BLENBQUMsaUdBQXdCO0FBQzFELE1BQU1FLGlCQUFpQkYsbUJBQU9BLENBQUMsMkZBQXFCO0FBQ3BELFNBQVNGLHNCQUFzQkssS0FBSztJQUNoQyxJQUFJQztJQUNKLElBQUksT0FBT0QsVUFBVSxVQUFVO1FBQzNCLE1BQU1FLFFBQVFGLE1BQU1HLE1BQU07UUFDMUIsSUFBSUQsTUFBTUUsV0FBVyxLQUFLRixNQUFNRSxXQUFXLEdBQUc7O1lBRTFDLENBQUNILGNBQWMsR0FBR0M7UUFDdEI7SUFDSixPQUNLLElBQUksT0FBT0YsVUFBVSxZQUFZQSxPQUFPO1FBQ3pDLElBQUksZUFBZUEsT0FBTztZQUN0QkMsZ0JBQWdCRCxNQUFNSztRQUMxQixPQUNLO1lBQ0QsTUFBTSxJQUFJQyxVQUFVO1FBQ3hCO0lBQ0o7SUFDQSxJQUFJO1FBQ0EsSUFBSSxPQUFPTCxrQkFBa0IsWUFBWSxDQUFDQSxlQUFlO1lBQ3JELE1BQU0sSUFBSU07UUFDZDtRQUNBLE1BQU1DLFNBQVNDLEtBQUtDLE1BQU1aLGtCQUFrQmEsUUFBUUMsT0FBTyxDQUFDLEdBQUdoQixlQUFlZ0IsTUFBSyxFQUFHWDtRQUN0RixJQUFJLENBQUMsQ0FBQyxHQUFHRixlQUFlYyxPQUFNLEVBQUdMLFNBQVM7WUFDdEMsTUFBTSxJQUFJRDtRQUNkO1FBQ0EsT0FBT0M7SUFDWCxFQUNBLE9BQU07UUFDRixNQUFNLElBQUlGLFVBQVU7SUFDeEI7QUFDSjtBQUNBYiw2QkFBNkJFLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3Qvbm9kZS9janMvdXRpbC9kZWNvZGVfcHJvdGVjdGVkX2hlYWRlci5qcz9lZDI0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGVQcm90ZWN0ZWRIZWFkZXIgPSB2b2lkIDA7XG5jb25zdCBiYXNlNjR1cmxfanNfMSA9IHJlcXVpcmUoXCIuL2Jhc2U2NHVybC5qc1wiKTtcbmNvbnN0IGJ1ZmZlcl91dGlsc19qc18xID0gcmVxdWlyZShcIi4uL2xpYi9idWZmZXJfdXRpbHMuanNcIik7XG5jb25zdCBpc19vYmplY3RfanNfMSA9IHJlcXVpcmUoXCIuLi9saWIvaXNfb2JqZWN0LmpzXCIpO1xuZnVuY3Rpb24gZGVjb2RlUHJvdGVjdGVkSGVhZGVyKHRva2VuKSB7XG4gICAgbGV0IHByb3RlY3RlZEI2NHU7XG4gICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgY29uc3QgcGFydHMgPSB0b2tlbi5zcGxpdCgnLicpO1xuICAgICAgICBpZiAocGFydHMubGVuZ3RoID09PSAzIHx8IHBhcnRzLmxlbmd0aCA9PT0gNSkge1xuICAgICAgICAgICAgO1xuICAgICAgICAgICAgW3Byb3RlY3RlZEI2NHVdID0gcGFydHM7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIHRva2VuID09PSAnb2JqZWN0JyAmJiB0b2tlbikge1xuICAgICAgICBpZiAoJ3Byb3RlY3RlZCcgaW4gdG9rZW4pIHtcbiAgICAgICAgICAgIHByb3RlY3RlZEI2NHUgPSB0b2tlbi5wcm90ZWN0ZWQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdUb2tlbiBkb2VzIG5vdCBjb250YWluIGEgUHJvdGVjdGVkIEhlYWRlcicpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgcHJvdGVjdGVkQjY0dSAhPT0gJ3N0cmluZycgfHwgIXByb3RlY3RlZEI2NHUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IEpTT04ucGFyc2UoYnVmZmVyX3V0aWxzX2pzXzEuZGVjb2Rlci5kZWNvZGUoKDAsIGJhc2U2NHVybF9qc18xLmRlY29kZSkocHJvdGVjdGVkQjY0dSkpKTtcbiAgICAgICAgaWYgKCEoMCwgaXNfb2JqZWN0X2pzXzEuZGVmYXVsdCkocmVzdWx0KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgY2F0Y2gge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIFRva2VuIG9yIFByb3RlY3RlZCBIZWFkZXIgZm9ybWF0dGluZycpO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVjb2RlUHJvdGVjdGVkSGVhZGVyID0gZGVjb2RlUHJvdGVjdGVkSGVhZGVyO1xuIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVjb2RlUHJvdGVjdGVkSGVhZGVyIiwiYmFzZTY0dXJsX2pzXzEiLCJyZXF1aXJlIiwiYnVmZmVyX3V0aWxzX2pzXzEiLCJpc19vYmplY3RfanNfMSIsInRva2VuIiwicHJvdGVjdGVkQjY0dSIsInBhcnRzIiwic3BsaXQiLCJsZW5ndGgiLCJwcm90ZWN0ZWQiLCJUeXBlRXJyb3IiLCJFcnJvciIsInJlc3VsdCIsIkpTT04iLCJwYXJzZSIsImRlY29kZXIiLCJkZWNvZGUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/util/decode_protected_header.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/node/cjs/util/errors.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.JWSSignatureVerificationFailed = exports.JWKSTimeout = exports.JWKSMultipleMatchingKeys = exports.JWKSNoMatchingKey = exports.JWKSInvalid = exports.JWKInvalid = exports.JWTInvalid = exports.JWSInvalid = exports.JWEInvalid = exports.JWEDecryptionFailed = exports.JOSENotSupported = exports.JOSEAlgNotAllowed = exports.JWTExpired = exports.JWTClaimValidationFailed = exports.JOSEError = void 0;\nclass JOSEError extends Error {\n    static get code() {\n        return \"ERR_JOSE_GENERIC\";\n    }\n    constructor(message){\n        var _a;\n        super(message);\n        this.code = \"ERR_JOSE_GENERIC\";\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nexports.JOSEError = JOSEError;\nclass JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return \"ERR_JWT_CLAIM_VALIDATION_FAILED\";\n    }\n    constructor(message, claim = \"unspecified\", reason = \"unspecified\"){\n        super(message);\n        this.code = \"ERR_JWT_CLAIM_VALIDATION_FAILED\";\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexports.JWTClaimValidationFailed = JWTClaimValidationFailed;\nclass JWTExpired extends JOSEError {\n    static get code() {\n        return \"ERR_JWT_EXPIRED\";\n    }\n    constructor(message, claim = \"unspecified\", reason = \"unspecified\"){\n        super(message);\n        this.code = \"ERR_JWT_EXPIRED\";\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexports.JWTExpired = JWTExpired;\nclass JOSEAlgNotAllowed extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JOSE_ALG_NOT_ALLOWED\";\n    }\n    static get code() {\n        return \"ERR_JOSE_ALG_NOT_ALLOWED\";\n    }\n}\nexports.JOSEAlgNotAllowed = JOSEAlgNotAllowed;\nclass JOSENotSupported extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JOSE_NOT_SUPPORTED\";\n    }\n    static get code() {\n        return \"ERR_JOSE_NOT_SUPPORTED\";\n    }\n}\nexports.JOSENotSupported = JOSENotSupported;\nclass JWEDecryptionFailed extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWE_DECRYPTION_FAILED\";\n        this.message = \"decryption operation failed\";\n    }\n    static get code() {\n        return \"ERR_JWE_DECRYPTION_FAILED\";\n    }\n}\nexports.JWEDecryptionFailed = JWEDecryptionFailed;\nclass JWEInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWE_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWE_INVALID\";\n    }\n}\nexports.JWEInvalid = JWEInvalid;\nclass JWSInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWS_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWS_INVALID\";\n    }\n}\nexports.JWSInvalid = JWSInvalid;\nclass JWTInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWT_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWT_INVALID\";\n    }\n}\nexports.JWTInvalid = JWTInvalid;\nclass JWKInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWK_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWK_INVALID\";\n    }\n}\nexports.JWKInvalid = JWKInvalid;\nclass JWKSInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWKS_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWKS_INVALID\";\n    }\n}\nexports.JWKSInvalid = JWKSInvalid;\nclass JWKSNoMatchingKey extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWKS_NO_MATCHING_KEY\";\n        this.message = \"no applicable key found in the JSON Web Key Set\";\n    }\n    static get code() {\n        return \"ERR_JWKS_NO_MATCHING_KEY\";\n    }\n}\nexports.JWKSNoMatchingKey = JWKSNoMatchingKey;\nclass JWKSMultipleMatchingKeys extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWKS_MULTIPLE_MATCHING_KEYS\";\n        this.message = \"multiple matching keys found in the JSON Web Key Set\";\n    }\n    static get code() {\n        return \"ERR_JWKS_MULTIPLE_MATCHING_KEYS\";\n    }\n}\nexports.JWKSMultipleMatchingKeys = JWKSMultipleMatchingKeys;\nSymbol.asyncIterator;\nclass JWKSTimeout extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWKS_TIMEOUT\";\n        this.message = \"request timed out\";\n    }\n    static get code() {\n        return \"ERR_JWKS_TIMEOUT\";\n    }\n}\nexports.JWKSTimeout = JWKSTimeout;\nclass JWSSignatureVerificationFailed extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWS_SIGNATURE_VERIFICATION_FAILED\";\n        this.message = \"signature verification failed\";\n    }\n    static get code() {\n        return \"ERR_JWS_SIGNATURE_VERIFICATION_FAILED\";\n    }\n}\nexports.JWSSignatureVerificationFailed = JWSSignatureVerificationFailed;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/jose/dist/node/cjs/util/errors.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/lru-cache/index.js":
/*!*****************************************!*\
  !*** ./node_modules/lru-cache/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n// A linked list to keep track of recently-used-ness\nconst Yallist = __webpack_require__(/*! yallist */ \"(sc_server)/./node_modules/yallist/yallist.js\");\nconst MAX = Symbol(\"max\");\nconst LENGTH = Symbol(\"length\");\nconst LENGTH_CALCULATOR = Symbol(\"lengthCalculator\");\nconst ALLOW_STALE = Symbol(\"allowStale\");\nconst MAX_AGE = Symbol(\"maxAge\");\nconst DISPOSE = Symbol(\"dispose\");\nconst NO_DISPOSE_ON_SET = Symbol(\"noDisposeOnSet\");\nconst LRU_LIST = Symbol(\"lruList\");\nconst CACHE = Symbol(\"cache\");\nconst UPDATE_AGE_ON_GET = Symbol(\"updateAgeOnGet\");\nconst naiveLength = ()=>1;\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n    constructor(options){\n        if (typeof options === \"number\") options = {\n            max: options\n        };\n        if (!options) options = {};\n        if (options.max && (typeof options.max !== \"number\" || options.max < 0)) throw new TypeError(\"max must be a non-negative number\");\n        // Kind of weird to have a default max of Infinity, but oh well.\n        const max = this[MAX] = options.max || Infinity;\n        const lc = options.length || naiveLength;\n        this[LENGTH_CALCULATOR] = typeof lc !== \"function\" ? naiveLength : lc;\n        this[ALLOW_STALE] = options.stale || false;\n        if (options.maxAge && typeof options.maxAge !== \"number\") throw new TypeError(\"maxAge must be a number\");\n        this[MAX_AGE] = options.maxAge || 0;\n        this[DISPOSE] = options.dispose;\n        this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;\n        this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false;\n        this.reset();\n    }\n    // resize the cache when the max changes.\n    set max(mL) {\n        if (typeof mL !== \"number\" || mL < 0) throw new TypeError(\"max must be a non-negative number\");\n        this[MAX] = mL || Infinity;\n        trim(this);\n    }\n    get max() {\n        return this[MAX];\n    }\n    set allowStale(allowStale) {\n        this[ALLOW_STALE] = !!allowStale;\n    }\n    get allowStale() {\n        return this[ALLOW_STALE];\n    }\n    set maxAge(mA) {\n        if (typeof mA !== \"number\") throw new TypeError(\"maxAge must be a non-negative number\");\n        this[MAX_AGE] = mA;\n        trim(this);\n    }\n    get maxAge() {\n        return this[MAX_AGE];\n    }\n    // resize the cache when the lengthCalculator changes.\n    set lengthCalculator(lC) {\n        if (typeof lC !== \"function\") lC = naiveLength;\n        if (lC !== this[LENGTH_CALCULATOR]) {\n            this[LENGTH_CALCULATOR] = lC;\n            this[LENGTH] = 0;\n            this[LRU_LIST].forEach((hit)=>{\n                hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);\n                this[LENGTH] += hit.length;\n            });\n        }\n        trim(this);\n    }\n    get lengthCalculator() {\n        return this[LENGTH_CALCULATOR];\n    }\n    get length() {\n        return this[LENGTH];\n    }\n    get itemCount() {\n        return this[LRU_LIST].length;\n    }\n    rforEach(fn, thisp) {\n        thisp = thisp || this;\n        for(let walker = this[LRU_LIST].tail; walker !== null;){\n            const prev = walker.prev;\n            forEachStep(this, fn, walker, thisp);\n            walker = prev;\n        }\n    }\n    forEach(fn, thisp) {\n        thisp = thisp || this;\n        for(let walker = this[LRU_LIST].head; walker !== null;){\n            const next = walker.next;\n            forEachStep(this, fn, walker, thisp);\n            walker = next;\n        }\n    }\n    keys() {\n        return this[LRU_LIST].toArray().map((k)=>k.key);\n    }\n    values() {\n        return this[LRU_LIST].toArray().map((k)=>k.value);\n    }\n    reset() {\n        if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {\n            this[LRU_LIST].forEach((hit)=>this[DISPOSE](hit.key, hit.value));\n        }\n        this[CACHE] = new Map() // hash of items by key\n        ;\n        this[LRU_LIST] = new Yallist() // list of items in order of use recency\n        ;\n        this[LENGTH] = 0 // length of items in the list\n        ;\n    }\n    dump() {\n        return this[LRU_LIST].map((hit)=>isStale(this, hit) ? false : {\n                k: hit.key,\n                v: hit.value,\n                e: hit.now + (hit.maxAge || 0)\n            }).toArray().filter((h)=>h);\n    }\n    dumpLru() {\n        return this[LRU_LIST];\n    }\n    set(key, value, maxAge) {\n        maxAge = maxAge || this[MAX_AGE];\n        if (maxAge && typeof maxAge !== \"number\") throw new TypeError(\"maxAge must be a number\");\n        const now = maxAge ? Date.now() : 0;\n        const len = this[LENGTH_CALCULATOR](value, key);\n        if (this[CACHE].has(key)) {\n            if (len > this[MAX]) {\n                del(this, this[CACHE].get(key));\n                return false;\n            }\n            const node = this[CACHE].get(key);\n            const item = node.value;\n            // dispose of the old one before overwriting\n            // split out into 2 ifs for better coverage tracking\n            if (this[DISPOSE]) {\n                if (!this[NO_DISPOSE_ON_SET]) this[DISPOSE](key, item.value);\n            }\n            item.now = now;\n            item.maxAge = maxAge;\n            item.value = value;\n            this[LENGTH] += len - item.length;\n            item.length = len;\n            this.get(key);\n            trim(this);\n            return true;\n        }\n        const hit = new Entry(key, value, len, now, maxAge);\n        // oversized objects fall out of cache automatically.\n        if (hit.length > this[MAX]) {\n            if (this[DISPOSE]) this[DISPOSE](key, value);\n            return false;\n        }\n        this[LENGTH] += hit.length;\n        this[LRU_LIST].unshift(hit);\n        this[CACHE].set(key, this[LRU_LIST].head);\n        trim(this);\n        return true;\n    }\n    has(key) {\n        if (!this[CACHE].has(key)) return false;\n        const hit = this[CACHE].get(key).value;\n        return !isStale(this, hit);\n    }\n    get(key) {\n        return get(this, key, true);\n    }\n    peek(key) {\n        return get(this, key, false);\n    }\n    pop() {\n        const node = this[LRU_LIST].tail;\n        if (!node) return null;\n        del(this, node);\n        return node.value;\n    }\n    del(key) {\n        del(this, this[CACHE].get(key));\n    }\n    load(arr) {\n        // reset the cache\n        this.reset();\n        const now = Date.now();\n        // A previous serialized cache has the most recent items first\n        for(let l = arr.length - 1; l >= 0; l--){\n            const hit = arr[l];\n            const expiresAt = hit.e || 0;\n            if (expiresAt === 0) // the item was created without expiration in a non aged cache\n            this.set(hit.k, hit.v);\n            else {\n                const maxAge = expiresAt - now;\n                // dont add already expired items\n                if (maxAge > 0) {\n                    this.set(hit.k, hit.v, maxAge);\n                }\n            }\n        }\n    }\n    prune() {\n        this[CACHE].forEach((value, key)=>get(this, key, false));\n    }\n}\nconst get = (self, key, doUse)=>{\n    const node = self[CACHE].get(key);\n    if (node) {\n        const hit = node.value;\n        if (isStale(self, hit)) {\n            del(self, node);\n            if (!self[ALLOW_STALE]) return undefined;\n        } else {\n            if (doUse) {\n                if (self[UPDATE_AGE_ON_GET]) node.value.now = Date.now();\n                self[LRU_LIST].unshiftNode(node);\n            }\n        }\n        return hit.value;\n    }\n};\nconst isStale = (self, hit)=>{\n    if (!hit || !hit.maxAge && !self[MAX_AGE]) return false;\n    const diff = Date.now() - hit.now;\n    return hit.maxAge ? diff > hit.maxAge : self[MAX_AGE] && diff > self[MAX_AGE];\n};\nconst trim = (self)=>{\n    if (self[LENGTH] > self[MAX]) {\n        for(let walker = self[LRU_LIST].tail; self[LENGTH] > self[MAX] && walker !== null;){\n            // We know that we're about to delete this one, and also\n            // what the next least recently used key will be, so just\n            // go ahead and set it now.\n            const prev = walker.prev;\n            del(self, walker);\n            walker = prev;\n        }\n    }\n};\nconst del = (self, node)=>{\n    if (node) {\n        const hit = node.value;\n        if (self[DISPOSE]) self[DISPOSE](hit.key, hit.value);\n        self[LENGTH] -= hit.length;\n        self[CACHE].delete(hit.key);\n        self[LRU_LIST].removeNode(node);\n    }\n};\nclass Entry {\n    constructor(key, value, length, now, maxAge){\n        this.key = key;\n        this.value = value;\n        this.length = length;\n        this.now = now;\n        this.maxAge = maxAge || 0;\n    }\n}\nconst forEachStep = (self, fn, node, thisp)=>{\n    let hit = node.value;\n    if (isStale(self, hit)) {\n        del(self, node);\n        if (!self[ALLOW_STALE]) hit = undefined;\n    }\n    if (hit) fn.call(thisp, hit.value, hit.key, self);\n};\nmodule.exports = LRUCache;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/lru-cache/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/client/_utils.js":
/*!*************************************************!*\
  !*** ./node_modules/next-auth/client/_utils.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.BroadcastChannel = BroadcastChannel;\nexports.apiBaseUrl = apiBaseUrl;\nexports.fetchData = fetchData;\nexports.now = now;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(sc_server)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(sc_server)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(sc_server)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            (0, _defineProperty2.default)(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction fetchData(_x, _x2, _x3) {\n    return _fetchData.apply(this, arguments);\n}\nfunction _fetchData() {\n    _fetchData = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee(path, __NEXTAUTH, logger) {\n        var _ref, ctx, _ref$req, req, url, _req$headers, options, res, data, _args = arguments;\n        return _regenerator.default.wrap(function _callee$(_context) {\n            while(1){\n                switch(_context.prev = _context.next){\n                    case 0:\n                        _ref = _args.length > 3 && _args[3] !== undefined ? _args[3] : {}, ctx = _ref.ctx, _ref$req = _ref.req, req = _ref$req === void 0 ? ctx === null || ctx === void 0 ? void 0 : ctx.req : _ref$req;\n                        url = \"\".concat(apiBaseUrl(__NEXTAUTH), \"/\").concat(path);\n                        _context.prev = 2;\n                        options = {\n                            headers: _objectSpread({\n                                \"Content-Type\": \"application/json\"\n                            }, req !== null && req !== void 0 && (_req$headers = req.headers) !== null && _req$headers !== void 0 && _req$headers.cookie ? {\n                                cookie: req.headers.cookie\n                            } : {})\n                        };\n                        if (req !== null && req !== void 0 && req.body) {\n                            options.body = JSON.stringify(req.body);\n                            options.method = \"POST\";\n                        }\n                        _context.next = 7;\n                        return fetch(url, options);\n                    case 7:\n                        res = _context.sent;\n                        _context.next = 10;\n                        return res.json();\n                    case 10:\n                        data = _context.sent;\n                        if (res.ok) {\n                            _context.next = 13;\n                            break;\n                        }\n                        throw data;\n                    case 13:\n                        return _context.abrupt(\"return\", Object.keys(data).length > 0 ? data : null);\n                    case 16:\n                        _context.prev = 16;\n                        _context.t0 = _context[\"catch\"](2);\n                        logger.error(\"CLIENT_FETCH_ERROR\", {\n                            error: _context.t0,\n                            url: url\n                        });\n                        return _context.abrupt(\"return\", null);\n                    case 20:\n                    case \"end\":\n                        return _context.stop();\n                }\n            }\n        }, _callee, null, [\n            [\n                2,\n                16\n            ]\n        ]);\n    }));\n    return _fetchData.apply(this, arguments);\n}\nfunction apiBaseUrl(__NEXTAUTH) {\n    if (true) {\n        return \"\".concat(__NEXTAUTH.baseUrlServer).concat(__NEXTAUTH.basePathServer);\n    }\n    return __NEXTAUTH.basePath;\n}\nfunction now() {\n    return Math.floor(Date.now() / 1000);\n}\nfunction BroadcastChannel() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"nextauth.message\";\n    return {\n        receive: function receive(onReceive) {\n            var handler = function handler(event) {\n                var _event$newValue;\n                if (event.key !== name) return;\n                var message = JSON.parse((_event$newValue = event.newValue) !== null && _event$newValue !== void 0 ? _event$newValue : \"{}\");\n                if ((message === null || message === void 0 ? void 0 : message.event) !== \"session\" || !(message !== null && message !== void 0 && message.data)) return;\n                onReceive(message);\n            };\n            window.addEventListener(\"storage\", handler);\n            return function() {\n                return window.removeEventListener(\"storage\", handler);\n            };\n        },\n        post: function post(message) {\n            if (true) return;\n            try {\n                localStorage.setItem(name, JSON.stringify(_objectSpread(_objectSpread({}, message), {}, {\n                    timestamp: now()\n                })));\n            } catch (_unused) {}\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/client/_utils.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/errors.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/core/errors.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.UnsupportedStrategy = exports.UnknownError = exports.OAuthCallbackError = exports.MissingSecret = exports.MissingAuthorize = exports.MissingAdapterMethods = exports.MissingAdapter = exports.MissingAPIRoute = exports.InvalidCallbackUrl = exports.AccountNotLinkedError = void 0;\nexports.adapterErrorHandler = adapterErrorHandler;\nexports.capitalize = capitalize;\nexports.eventsErrorHandler = eventsErrorHandler;\nexports.upperSnake = upperSnake;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(sc_server)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(sc_server)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \"(sc_server)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(sc_server)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(sc_server)/./node_modules/@babel/runtime/helpers/createClass.js\"));\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(sc_server)/./node_modules/@babel/runtime/helpers/inherits.js\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"(sc_server)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"(sc_server)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\nvar _wrapNativeSuper2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ \"(sc_server)/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\"));\nfunction _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = (0, _getPrototypeOf2.default)(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return (0, _possibleConstructorReturn2.default)(this, result);\n    };\n}\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nvar UnknownError = function(_Error) {\n    (0, _inherits2.default)(UnknownError, _Error);\n    var _super = _createSuper(UnknownError);\n    function UnknownError(error) {\n        var _message;\n        var _this;\n        (0, _classCallCheck2.default)(this, UnknownError);\n        _this = _super.call(this, (_message = error === null || error === void 0 ? void 0 : error.message) !== null && _message !== void 0 ? _message : error);\n        _this.name = \"UnknownError\";\n        _this.code = error.code;\n        if (error instanceof Error) {\n            _this.stack = error.stack;\n        }\n        return _this;\n    }\n    (0, _createClass2.default)(UnknownError, [\n        {\n            key: \"toJSON\",\n            value: function toJSON() {\n                return {\n                    name: this.name,\n                    message: this.message,\n                    stack: this.stack\n                };\n            }\n        }\n    ]);\n    return UnknownError;\n}((0, _wrapNativeSuper2.default)(Error));\nexports.UnknownError = UnknownError;\nvar OAuthCallbackError = function(_UnknownError) {\n    (0, _inherits2.default)(OAuthCallbackError, _UnknownError);\n    var _super2 = _createSuper(OAuthCallbackError);\n    function OAuthCallbackError() {\n        var _this2;\n        (0, _classCallCheck2.default)(this, OAuthCallbackError);\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        _this2 = _super2.call.apply(_super2, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this2), \"name\", \"OAuthCallbackError\");\n        return _this2;\n    }\n    return (0, _createClass2.default)(OAuthCallbackError);\n}(UnknownError);\nexports.OAuthCallbackError = OAuthCallbackError;\nvar AccountNotLinkedError = function(_UnknownError2) {\n    (0, _inherits2.default)(AccountNotLinkedError, _UnknownError2);\n    var _super3 = _createSuper(AccountNotLinkedError);\n    function AccountNotLinkedError() {\n        var _this3;\n        (0, _classCallCheck2.default)(this, AccountNotLinkedError);\n        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n            args[_key2] = arguments[_key2];\n        }\n        _this3 = _super3.call.apply(_super3, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this3), \"name\", \"AccountNotLinkedError\");\n        return _this3;\n    }\n    return (0, _createClass2.default)(AccountNotLinkedError);\n}(UnknownError);\nexports.AccountNotLinkedError = AccountNotLinkedError;\nvar MissingAPIRoute = function(_UnknownError3) {\n    (0, _inherits2.default)(MissingAPIRoute, _UnknownError3);\n    var _super4 = _createSuper(MissingAPIRoute);\n    function MissingAPIRoute() {\n        var _this4;\n        (0, _classCallCheck2.default)(this, MissingAPIRoute);\n        for(var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++){\n            args[_key3] = arguments[_key3];\n        }\n        _this4 = _super4.call.apply(_super4, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this4), \"name\", \"MissingAPIRouteError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this4), \"code\", \"MISSING_NEXTAUTH_API_ROUTE_ERROR\");\n        return _this4;\n    }\n    return (0, _createClass2.default)(MissingAPIRoute);\n}(UnknownError);\nexports.MissingAPIRoute = MissingAPIRoute;\nvar MissingSecret = function(_UnknownError4) {\n    (0, _inherits2.default)(MissingSecret, _UnknownError4);\n    var _super5 = _createSuper(MissingSecret);\n    function MissingSecret() {\n        var _this5;\n        (0, _classCallCheck2.default)(this, MissingSecret);\n        for(var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++){\n            args[_key4] = arguments[_key4];\n        }\n        _this5 = _super5.call.apply(_super5, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this5), \"name\", \"MissingSecretError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this5), \"code\", \"NO_SECRET\");\n        return _this5;\n    }\n    return (0, _createClass2.default)(MissingSecret);\n}(UnknownError);\nexports.MissingSecret = MissingSecret;\nvar MissingAuthorize = function(_UnknownError5) {\n    (0, _inherits2.default)(MissingAuthorize, _UnknownError5);\n    var _super6 = _createSuper(MissingAuthorize);\n    function MissingAuthorize() {\n        var _this6;\n        (0, _classCallCheck2.default)(this, MissingAuthorize);\n        for(var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++){\n            args[_key5] = arguments[_key5];\n        }\n        _this6 = _super6.call.apply(_super6, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this6), \"name\", \"MissingAuthorizeError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this6), \"code\", \"CALLBACK_CREDENTIALS_HANDLER_ERROR\");\n        return _this6;\n    }\n    return (0, _createClass2.default)(MissingAuthorize);\n}(UnknownError);\nexports.MissingAuthorize = MissingAuthorize;\nvar MissingAdapter = function(_UnknownError6) {\n    (0, _inherits2.default)(MissingAdapter, _UnknownError6);\n    var _super7 = _createSuper(MissingAdapter);\n    function MissingAdapter() {\n        var _this7;\n        (0, _classCallCheck2.default)(this, MissingAdapter);\n        for(var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++){\n            args[_key6] = arguments[_key6];\n        }\n        _this7 = _super7.call.apply(_super7, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this7), \"name\", \"MissingAdapterError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this7), \"code\", \"EMAIL_REQUIRES_ADAPTER_ERROR\");\n        return _this7;\n    }\n    return (0, _createClass2.default)(MissingAdapter);\n}(UnknownError);\nexports.MissingAdapter = MissingAdapter;\nvar MissingAdapterMethods = function(_UnknownError7) {\n    (0, _inherits2.default)(MissingAdapterMethods, _UnknownError7);\n    var _super8 = _createSuper(MissingAdapterMethods);\n    function MissingAdapterMethods() {\n        var _this8;\n        (0, _classCallCheck2.default)(this, MissingAdapterMethods);\n        for(var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++){\n            args[_key7] = arguments[_key7];\n        }\n        _this8 = _super8.call.apply(_super8, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this8), \"name\", \"MissingAdapterMethodsError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this8), \"code\", \"MISSING_ADAPTER_METHODS_ERROR\");\n        return _this8;\n    }\n    return (0, _createClass2.default)(MissingAdapterMethods);\n}(UnknownError);\nexports.MissingAdapterMethods = MissingAdapterMethods;\nvar UnsupportedStrategy = function(_UnknownError8) {\n    (0, _inherits2.default)(UnsupportedStrategy, _UnknownError8);\n    var _super9 = _createSuper(UnsupportedStrategy);\n    function UnsupportedStrategy() {\n        var _this9;\n        (0, _classCallCheck2.default)(this, UnsupportedStrategy);\n        for(var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++){\n            args[_key8] = arguments[_key8];\n        }\n        _this9 = _super9.call.apply(_super9, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this9), \"name\", \"UnsupportedStrategyError\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this9), \"code\", \"CALLBACK_CREDENTIALS_JWT_ERROR\");\n        return _this9;\n    }\n    return (0, _createClass2.default)(UnsupportedStrategy);\n}(UnknownError);\nexports.UnsupportedStrategy = UnsupportedStrategy;\nvar InvalidCallbackUrl = function(_UnknownError9) {\n    (0, _inherits2.default)(InvalidCallbackUrl, _UnknownError9);\n    var _super10 = _createSuper(InvalidCallbackUrl);\n    function InvalidCallbackUrl() {\n        var _this10;\n        (0, _classCallCheck2.default)(this, InvalidCallbackUrl);\n        for(var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++){\n            args[_key9] = arguments[_key9];\n        }\n        _this10 = _super10.call.apply(_super10, [\n            this\n        ].concat(args));\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this10), \"name\", \"InvalidCallbackUrl\");\n        (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this10), \"code\", \"INVALID_CALLBACK_URL_ERROR\");\n        return _this10;\n    }\n    return (0, _createClass2.default)(InvalidCallbackUrl);\n}(UnknownError);\nexports.InvalidCallbackUrl = InvalidCallbackUrl;\nfunction upperSnake(s) {\n    return s.replace(/([A-Z])/g, \"_$1\").toUpperCase();\n}\nfunction capitalize(s) {\n    return \"\".concat(s[0].toUpperCase()).concat(s.slice(1));\n}\nfunction eventsErrorHandler(methods, logger) {\n    return Object.keys(methods).reduce(function(acc, name) {\n        acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n            var method, _args = arguments;\n            return _regenerator.default.wrap(function _callee$(_context) {\n                while(1){\n                    switch(_context.prev = _context.next){\n                        case 0:\n                            _context.prev = 0;\n                            method = methods[name];\n                            _context.next = 4;\n                            return method.apply(void 0, _args);\n                        case 4:\n                            return _context.abrupt(\"return\", _context.sent);\n                        case 7:\n                            _context.prev = 7;\n                            _context.t0 = _context[\"catch\"](0);\n                            logger.error(\"\".concat(upperSnake(name), \"_EVENT_ERROR\"), _context.t0);\n                        case 10:\n                        case \"end\":\n                            return _context.stop();\n                    }\n                }\n            }, _callee, null, [\n                [\n                    0,\n                    7\n                ]\n            ]);\n        }));\n        return acc;\n    }, {});\n}\nfunction adapterErrorHandler(adapter, logger) {\n    if (!adapter) return;\n    return Object.keys(adapter).reduce(function(acc, name) {\n        acc[name] = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {\n            var _len10, args, _key10, method, e, _args2 = arguments;\n            return _regenerator.default.wrap(function _callee2$(_context2) {\n                while(1){\n                    switch(_context2.prev = _context2.next){\n                        case 0:\n                            _context2.prev = 0;\n                            for(_len10 = _args2.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++){\n                                args[_key10] = _args2[_key10];\n                            }\n                            logger.debug(\"adapter_\".concat(name), {\n                                args: args\n                            });\n                            method = adapter[name];\n                            _context2.next = 6;\n                            return method.apply(void 0, args);\n                        case 6:\n                            return _context2.abrupt(\"return\", _context2.sent);\n                        case 9:\n                            _context2.prev = 9;\n                            _context2.t0 = _context2[\"catch\"](0);\n                            logger.error(\"adapter_error_\".concat(name), _context2.t0);\n                            e = new UnknownError(_context2.t0);\n                            e.name = \"\".concat(capitalize(name), \"Error\");\n                            throw e;\n                        case 15:\n                        case \"end\":\n                            return _context2.stop();\n                    }\n                }\n            }, _callee2, null, [\n                [\n                    0,\n                    9\n                ]\n            ]);\n        }));\n        return acc;\n    }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/errors.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/index.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/core/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AuthHandler = AuthHandler;\nvar _logger = _interopRequireWildcard(__webpack_require__(/*! ../utils/logger */ \"(sc_server)/./node_modules/next-auth/utils/logger.js\"));\nvar _detectOrigin = __webpack_require__(/*! ../utils/detect-origin */ \"(sc_server)/./node_modules/next-auth/utils/detect-origin.js\");\nvar routes = _interopRequireWildcard(__webpack_require__(/*! ./routes */ \"(sc_server)/./node_modules/next-auth/core/routes/index.js\"));\nvar _pages = _interopRequireDefault(__webpack_require__(/*! ./pages */ \"(sc_server)/./node_modules/next-auth/core/pages/index.js\"));\nvar _init = __webpack_require__(/*! ./init */ \"(sc_server)/./node_modules/next-auth/core/init.js\");\nvar _assert = __webpack_require__(/*! ./lib/assert */ \"(sc_server)/./node_modules/next-auth/core/lib/assert.js\");\nvar _cookie = __webpack_require__(/*! ./lib/cookie */ \"(sc_server)/./node_modules/next-auth/core/lib/cookie.js\");\nvar _cookie2 = __webpack_require__(/*! cookie */ \"(sc_server)/./node_modules/cookie/index.js\");\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function getBody(req) {\n    try {\n        return await req.json();\n    } catch (_unused) {}\n}\nasync function toInternalRequest(req) {\n    var _headers$xForwarded2;\n    if (req instanceof Request) {\n        var _req$headers$get, _url$searchParams$get, _headers$xForwarded;\n        const url = new URL(req.url);\n        const nextauth = url.pathname.split(\"/\").slice(3);\n        const headers = Object.fromEntries(req.headers);\n        const query = Object.fromEntries(url.searchParams);\n        query.nextauth = nextauth;\n        return {\n            action: nextauth[0],\n            method: req.method,\n            headers,\n            body: await getBody(req),\n            cookies: (0, _cookie2.parse)((_req$headers$get = req.headers.get(\"cookie\")) !== null && _req$headers$get !== void 0 ? _req$headers$get : \"\"),\n            providerId: nextauth[1],\n            error: (_url$searchParams$get = url.searchParams.get(\"error\")) !== null && _url$searchParams$get !== void 0 ? _url$searchParams$get : nextauth[1],\n            origin: (0, _detectOrigin.detectOrigin)((_headers$xForwarded = headers[\"x-forwarded-host\"]) !== null && _headers$xForwarded !== void 0 ? _headers$xForwarded : headers.host, headers[\"x-forwarded-proto\"]),\n            query\n        };\n    }\n    const { headers } = req;\n    const host = (_headers$xForwarded2 = headers === null || headers === void 0 ? void 0 : headers[\"x-forwarded-host\"]) !== null && _headers$xForwarded2 !== void 0 ? _headers$xForwarded2 : headers === null || headers === void 0 ? void 0 : headers.host;\n    req.origin = (0, _detectOrigin.detectOrigin)(host, headers === null || headers === void 0 ? void 0 : headers[\"x-forwarded-proto\"]);\n    return req;\n}\nasync function AuthHandler(params) {\n    var _req$body$callbackUrl, _req$body, _req$query2, _req$body2;\n    const { options: authOptions, req: incomingRequest } = params;\n    const req = await toInternalRequest(incomingRequest);\n    (0, _logger.setLogger)(authOptions.logger, authOptions.debug);\n    const assertionResult = (0, _assert.assertConfig)({\n        options: authOptions,\n        req\n    });\n    if (Array.isArray(assertionResult)) {\n        assertionResult.forEach(_logger.default.warn);\n    } else if (assertionResult instanceof Error) {\n        var _req$query, _req$query$callbackUr;\n        _logger.default.error(assertionResult.code, assertionResult);\n        const htmlPages = [\n            \"signin\",\n            \"signout\",\n            \"error\",\n            \"verify-request\"\n        ];\n        if (!htmlPages.includes(req.action) || req.method !== \"GET\") {\n            const message = `There is a problem with the server configuration. Check the server logs for more information.`;\n            return {\n                status: 500,\n                headers: [\n                    {\n                        key: \"Content-Type\",\n                        value: \"application/json\"\n                    }\n                ],\n                body: {\n                    message\n                }\n            };\n        }\n        const { pages, theme } = authOptions;\n        const authOnErrorPage = (pages === null || pages === void 0 ? void 0 : pages.error) && ((_req$query = req.query) === null || _req$query === void 0 ? void 0 : (_req$query$callbackUr = _req$query.callbackUrl) === null || _req$query$callbackUr === void 0 ? void 0 : _req$query$callbackUr.startsWith(pages.error));\n        if (!(pages !== null && pages !== void 0 && pages.error) || authOnErrorPage) {\n            if (authOnErrorPage) {\n                _logger.default.error(\"AUTH_ON_ERROR_PAGE_ERROR\", new Error(`The error page ${pages === null || pages === void 0 ? void 0 : pages.error} should not require authentication`));\n            }\n            const render = (0, _pages.default)({\n                theme\n            });\n            return render.error({\n                error: \"configuration\"\n            });\n        }\n        return {\n            redirect: `${pages.error}?error=Configuration`\n        };\n    }\n    const { action, providerId, error, method = \"GET\" } = req;\n    const { options, cookies } = await (0, _init.init)({\n        authOptions,\n        action,\n        providerId,\n        origin: req.origin,\n        callbackUrl: (_req$body$callbackUrl = (_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.callbackUrl) !== null && _req$body$callbackUrl !== void 0 ? _req$body$callbackUrl : (_req$query2 = req.query) === null || _req$query2 === void 0 ? void 0 : _req$query2.callbackUrl,\n        csrfToken: (_req$body2 = req.body) === null || _req$body2 === void 0 ? void 0 : _req$body2.csrfToken,\n        cookies: req.cookies,\n        isPost: method === \"POST\"\n    });\n    const sessionStore = new _cookie.SessionStore(options.cookies.sessionToken, req, options.logger);\n    if (method === \"GET\") {\n        const render = (0, _pages.default)({\n            ...options,\n            query: req.query,\n            cookies\n        });\n        const { pages } = options;\n        switch(action){\n            case \"providers\":\n                return await routes.providers(options.providers);\n            case \"session\":\n                {\n                    const session = await routes.session({\n                        options,\n                        sessionStore\n                    });\n                    if (session.cookies) cookies.push(...session.cookies);\n                    return {\n                        ...session,\n                        cookies\n                    };\n                }\n            case \"csrf\":\n                return {\n                    headers: [\n                        {\n                            key: \"Content-Type\",\n                            value: \"application/json\"\n                        }\n                    ],\n                    body: {\n                        csrfToken: options.csrfToken\n                    },\n                    cookies\n                };\n            case \"signin\":\n                if (pages.signIn) {\n                    let signinUrl = `${pages.signIn}${pages.signIn.includes(\"?\") ? \"&\" : \"?\"}callbackUrl=${encodeURIComponent(options.callbackUrl)}`;\n                    if (error) signinUrl = `${signinUrl}&error=${encodeURIComponent(error)}`;\n                    return {\n                        redirect: signinUrl,\n                        cookies\n                    };\n                }\n                return render.signin();\n            case \"signout\":\n                if (pages.signOut) return {\n                    redirect: pages.signOut,\n                    cookies\n                };\n                return render.signout();\n            case \"callback\":\n                if (options.provider) {\n                    const callback = await routes.callback({\n                        body: req.body,\n                        query: req.query,\n                        headers: req.headers,\n                        cookies: req.cookies,\n                        method,\n                        options,\n                        sessionStore\n                    });\n                    if (callback.cookies) cookies.push(...callback.cookies);\n                    return {\n                        ...callback,\n                        cookies\n                    };\n                }\n                break;\n            case \"verify-request\":\n                if (pages.verifyRequest) {\n                    return {\n                        redirect: pages.verifyRequest,\n                        cookies\n                    };\n                }\n                return render.verifyRequest();\n            case \"error\":\n                if ([\n                    \"Signin\",\n                    \"OAuthSignin\",\n                    \"OAuthCallback\",\n                    \"OAuthCreateAccount\",\n                    \"EmailCreateAccount\",\n                    \"Callback\",\n                    \"OAuthAccountNotLinked\",\n                    \"EmailSignin\",\n                    \"CredentialsSignin\",\n                    \"SessionRequired\"\n                ].includes(error)) {\n                    return {\n                        redirect: `${options.url}/signin?error=${error}`,\n                        cookies\n                    };\n                }\n                if (pages.error) {\n                    return {\n                        redirect: `${pages.error}${pages.error.includes(\"?\") ? \"&\" : \"?\"}error=${error}`,\n                        cookies\n                    };\n                }\n                return render.error({\n                    error: error\n                });\n            default:\n        }\n    } else if (method === \"POST\") {\n        switch(action){\n            case \"signin\":\n                if (options.csrfTokenVerified && options.provider) {\n                    const signin = await routes.signin({\n                        query: req.query,\n                        body: req.body,\n                        options\n                    });\n                    if (signin.cookies) cookies.push(...signin.cookies);\n                    return {\n                        ...signin,\n                        cookies\n                    };\n                }\n                return {\n                    redirect: `${options.url}/signin?csrf=true`,\n                    cookies\n                };\n            case \"signout\":\n                if (options.csrfTokenVerified) {\n                    const signout = await routes.signout({\n                        options,\n                        sessionStore\n                    });\n                    if (signout.cookies) cookies.push(...signout.cookies);\n                    return {\n                        ...signout,\n                        cookies\n                    };\n                }\n                return {\n                    redirect: `${options.url}/signout?csrf=true`,\n                    cookies\n                };\n            case \"callback\":\n                if (options.provider) {\n                    if (options.provider.type === \"credentials\" && !options.csrfTokenVerified) {\n                        return {\n                            redirect: `${options.url}/signin?csrf=true`,\n                            cookies\n                        };\n                    }\n                    const callback = await routes.callback({\n                        body: req.body,\n                        query: req.query,\n                        headers: req.headers,\n                        cookies: req.cookies,\n                        method,\n                        options,\n                        sessionStore\n                    });\n                    if (callback.cookies) cookies.push(...callback.cookies);\n                    return {\n                        ...callback,\n                        cookies\n                    };\n                }\n                break;\n            case \"_log\":\n                {\n                    if (authOptions.logger) {\n                        try {\n                            var _req$body3;\n                            const { code, level, ...metadata } = (_req$body3 = req.body) !== null && _req$body3 !== void 0 ? _req$body3 : {};\n                            _logger.default[level](code, metadata);\n                        } catch (error) {\n                            _logger.default.error(\"LOGGER_ERROR\", error);\n                        }\n                    }\n                    return {};\n                }\n            case \"session\":\n                {\n                    if (options.csrfTokenVerified) {\n                        var _req$body4;\n                        const session = await routes.session({\n                            options,\n                            sessionStore,\n                            newSession: (_req$body4 = req.body) === null || _req$body4 === void 0 ? void 0 : _req$body4.data,\n                            isUpdate: true\n                        });\n                        if (session.cookies) cookies.push(...session.cookies);\n                        return {\n                            ...session,\n                            cookies\n                        };\n                    }\n                    return {\n                        status: 400,\n                        body: {},\n                        cookies\n                    };\n                }\n            default:\n        }\n    }\n    return {\n        status: 400,\n        body: `Error: This action with HTTP ${method} is not supported by NextAuth.js`\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/init.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/core/init.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.init = init;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar _logger = _interopRequireDefault(__webpack_require__(/*! ../utils/logger */ \"(sc_server)/./node_modules/next-auth/utils/logger.js\"));\nvar _errors = __webpack_require__(/*! ./errors */ \"(sc_server)/./node_modules/next-auth/core/errors.js\");\nvar _providers = _interopRequireDefault(__webpack_require__(/*! ./lib/providers */ \"(sc_server)/./node_modules/next-auth/core/lib/providers.js\"));\nvar _utils = __webpack_require__(/*! ./lib/utils */ \"(sc_server)/./node_modules/next-auth/core/lib/utils.js\");\nvar cookie = _interopRequireWildcard(__webpack_require__(/*! ./lib/cookie */ \"(sc_server)/./node_modules/next-auth/core/lib/cookie.js\"));\nvar jwt = _interopRequireWildcard(__webpack_require__(/*! ../jwt */ \"(sc_server)/./node_modules/next-auth/jwt/index.js\"));\nvar _defaultCallbacks = __webpack_require__(/*! ./lib/default-callbacks */ \"(sc_server)/./node_modules/next-auth/core/lib/default-callbacks.js\");\nvar _csrfToken = __webpack_require__(/*! ./lib/csrf-token */ \"(sc_server)/./node_modules/next-auth/core/lib/csrf-token.js\");\nvar _callbackUrl = __webpack_require__(/*! ./lib/callback-url */ \"(sc_server)/./node_modules/next-auth/core/lib/callback-url.js\");\nvar _parseUrl = _interopRequireDefault(__webpack_require__(/*! ../utils/parse-url */ \"(sc_server)/./node_modules/next-auth/utils/parse-url.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function init({ authOptions, providerId, action, origin, cookies: reqCookies, callbackUrl: reqCallbackUrl, csrfToken: reqCsrfToken, isPost }) {\n    var _authOptions$useSecur, _authOptions$events;\n    const url = (0, _parseUrl.default)(origin);\n    const secret = (0, _utils.createSecret)({\n        authOptions,\n        url\n    });\n    const { providers, provider } = (0, _providers.default)({\n        providers: authOptions.providers,\n        url,\n        providerId\n    });\n    const maxAge = 30 * 24 * 60 * 60;\n    const options = {\n        debug: false,\n        pages: {},\n        theme: {\n            colorScheme: \"auto\",\n            logo: \"\",\n            brandColor: \"\",\n            buttonText: \"\"\n        },\n        ...authOptions,\n        url,\n        action,\n        provider,\n        cookies: {\n            ...cookie.defaultCookies((_authOptions$useSecur = authOptions.useSecureCookies) !== null && _authOptions$useSecur !== void 0 ? _authOptions$useSecur : url.base.startsWith(\"https://\")),\n            ...authOptions.cookies\n        },\n        secret,\n        providers,\n        session: {\n            strategy: authOptions.adapter ? \"database\" : \"jwt\",\n            maxAge,\n            updateAge: 24 * 60 * 60,\n            generateSessionToken: ()=>{\n                var _randomUUID;\n                return (_randomUUID = _crypto.randomUUID === null || _crypto.randomUUID === void 0 ? void 0 : (0, _crypto.randomUUID)()) !== null && _randomUUID !== void 0 ? _randomUUID : (0, _crypto.randomBytes)(32).toString(\"hex\");\n            },\n            ...authOptions.session\n        },\n        jwt: {\n            secret,\n            maxAge,\n            encode: jwt.encode,\n            decode: jwt.decode,\n            ...authOptions.jwt\n        },\n        events: (0, _errors.eventsErrorHandler)((_authOptions$events = authOptions.events) !== null && _authOptions$events !== void 0 ? _authOptions$events : {}, _logger.default),\n        adapter: (0, _errors.adapterErrorHandler)(authOptions.adapter, _logger.default),\n        callbacks: {\n            ..._defaultCallbacks.defaultCallbacks,\n            ...authOptions.callbacks\n        },\n        logger: _logger.default,\n        callbackUrl: url.origin\n    };\n    const cookies = [];\n    const { csrfToken, cookie: csrfCookie, csrfTokenVerified } = (0, _csrfToken.createCSRFToken)({\n        options,\n        cookieValue: reqCookies === null || reqCookies === void 0 ? void 0 : reqCookies[options.cookies.csrfToken.name],\n        isPost,\n        bodyValue: reqCsrfToken\n    });\n    options.csrfToken = csrfToken;\n    options.csrfTokenVerified = csrfTokenVerified;\n    if (csrfCookie) {\n        cookies.push({\n            name: options.cookies.csrfToken.name,\n            value: csrfCookie,\n            options: options.cookies.csrfToken.options\n        });\n    }\n    const { callbackUrl, callbackUrlCookie } = await (0, _callbackUrl.createCallbackUrl)({\n        options,\n        cookieValue: reqCookies === null || reqCookies === void 0 ? void 0 : reqCookies[options.cookies.callbackUrl.name],\n        paramValue: reqCallbackUrl\n    });\n    options.callbackUrl = callbackUrl;\n    if (callbackUrlCookie) {\n        cookies.push({\n            name: options.cookies.callbackUrl.name,\n            value: callbackUrlCookie,\n            options: options.cookies.callbackUrl.options\n        });\n    }\n    return {\n        options,\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/init.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/assert.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/core/lib/assert.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.assertConfig = assertConfig;\nvar _errors = __webpack_require__(/*! ../errors */ \"(sc_server)/./node_modules/next-auth/core/errors.js\");\nvar _parseUrl = _interopRequireDefault(__webpack_require__(/*! ../../utils/parse-url */ \"(sc_server)/./node_modules/next-auth/utils/parse-url.js\"));\nvar _cookie = __webpack_require__(/*! ./cookie */ \"(sc_server)/./node_modules/next-auth/core/lib/cookie.js\");\nlet warned = false;\nfunction isValidHttpUrl(url, baseUrl) {\n    try {\n        return /^https?:/.test(new URL(url, url.startsWith(\"/\") ? baseUrl : undefined).protocol);\n    } catch (_unused) {\n        return false;\n    }\n}\nfunction assertConfig(params) {\n    var _req$query, _req$query2, _options$useSecureCoo, _req$cookies, _options$cookies$call, _options$cookies, _options$cookies$call2;\n    const { options, req } = params;\n    const warnings = [];\n    if (!warned) {\n        if (!req.origin) warnings.push(\"NEXTAUTH_URL\");\n        if (!options.secret && \"development\" !== \"production\") warnings.push(\"NO_SECRET\");\n        if (options.debug) warnings.push(\"DEBUG_ENABLED\");\n    }\n    if (!options.secret && \"development\" === \"production\") {}\n    if (!((_req$query = req.query) !== null && _req$query !== void 0 && _req$query.nextauth) && !req.action) {\n        return new _errors.MissingAPIRoute(\"Cannot find [...nextauth].{js,ts} in `/pages/api/auth`. Make sure the filename is written correctly.\");\n    }\n    const callbackUrlParam = (_req$query2 = req.query) === null || _req$query2 === void 0 ? void 0 : _req$query2.callbackUrl;\n    const url = (0, _parseUrl.default)(req.origin);\n    if (callbackUrlParam && !isValidHttpUrl(callbackUrlParam, url.base)) {\n        return new _errors.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlParam}`);\n    }\n    const { callbackUrl: defaultCallbackUrl } = (0, _cookie.defaultCookies)((_options$useSecureCoo = options.useSecureCookies) !== null && _options$useSecureCoo !== void 0 ? _options$useSecureCoo : url.base.startsWith(\"https://\"));\n    const callbackUrlCookie = (_req$cookies = req.cookies) === null || _req$cookies === void 0 ? void 0 : _req$cookies[(_options$cookies$call = (_options$cookies = options.cookies) === null || _options$cookies === void 0 ? void 0 : (_options$cookies$call2 = _options$cookies.callbackUrl) === null || _options$cookies$call2 === void 0 ? void 0 : _options$cookies$call2.name) !== null && _options$cookies$call !== void 0 ? _options$cookies$call : defaultCallbackUrl.name];\n    if (callbackUrlCookie && !isValidHttpUrl(callbackUrlCookie, url.base)) {\n        return new _errors.InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlCookie}`);\n    }\n    let hasCredentials, hasEmail;\n    let hasTwitterOAuth2;\n    for (const provider of options.providers){\n        if (provider.type === \"credentials\") hasCredentials = true;\n        else if (provider.type === \"email\") hasEmail = true;\n        else if (provider.id === \"twitter\" && provider.version === \"2.0\") hasTwitterOAuth2 = true;\n    }\n    if (hasCredentials) {\n        var _options$session;\n        const dbStrategy = ((_options$session = options.session) === null || _options$session === void 0 ? void 0 : _options$session.strategy) === \"database\";\n        const onlyCredentials = !options.providers.some((p)=>p.type !== \"credentials\");\n        if (dbStrategy && onlyCredentials) {\n            return new _errors.UnsupportedStrategy(\"Signin in with credentials only supported if JWT strategy is enabled\");\n        }\n        const credentialsNoAuthorize = options.providers.some((p)=>p.type === \"credentials\" && !p.authorize);\n        if (credentialsNoAuthorize) {\n            return new _errors.MissingAuthorize(\"Must define an authorize() handler to use credentials authentication provider\");\n        }\n    }\n    if (hasEmail) {\n        const { adapter } = options;\n        if (!adapter) {\n            return new _errors.MissingAdapter(\"E-mail login requires an adapter.\");\n        }\n        const missingMethods = [\n            \"createVerificationToken\",\n            \"useVerificationToken\",\n            \"getUserByEmail\"\n        ].filter((method)=>!adapter[method]);\n        if (missingMethods.length) {\n            return new _errors.MissingAdapterMethods(`Required adapter methods were missing: ${missingMethods.join(\", \")}`);\n        }\n    }\n    if (!warned) {\n        if (hasTwitterOAuth2) warnings.push(\"TWITTER_OAUTH_2_BETA\");\n        warned = true;\n    }\n    return warnings;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/assert.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/callback-handler.js":
/*!*************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/callback-handler.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = callbackHandler;\nvar _errors = __webpack_require__(/*! ../errors */ \"(sc_server)/./node_modules/next-auth/core/errors.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(sc_server)/./node_modules/next-auth/core/lib/utils.js\");\nasync function callbackHandler(params) {\n    const { sessionToken, profile: _profile, account, options } = params;\n    if (!(account !== null && account !== void 0 && account.providerAccountId) || !account.type) throw new Error(\"Missing or invalid provider account\");\n    if (![\n        \"email\",\n        \"oauth\"\n    ].includes(account.type)) throw new Error(\"Provider not supported\");\n    const { adapter, jwt, events, session: { strategy: sessionStrategy, generateSessionToken } } = options;\n    if (!adapter) {\n        return {\n            user: _profile,\n            account\n        };\n    }\n    const profile = _profile;\n    const { createUser, updateUser, getUser, getUserByAccount, getUserByEmail, linkAccount, createSession, getSessionAndUser, deleteSession } = adapter;\n    let session = null;\n    let user = null;\n    let isNewUser = false;\n    const useJwtSession = sessionStrategy === \"jwt\";\n    if (sessionToken) {\n        if (useJwtSession) {\n            try {\n                session = await jwt.decode({\n                    ...jwt,\n                    token: sessionToken\n                });\n                if (session && \"sub\" in session && session.sub) {\n                    user = await getUser(session.sub);\n                }\n            } catch (_unused) {}\n        } else {\n            const userAndSession = await getSessionAndUser(sessionToken);\n            if (userAndSession) {\n                session = userAndSession.session;\n                user = userAndSession.user;\n            }\n        }\n    }\n    if (account.type === \"email\") {\n        const userByEmail = await getUserByEmail(profile.email);\n        if (userByEmail) {\n            var _user, _events$updateUser;\n            if (((_user = user) === null || _user === void 0 ? void 0 : _user.id) !== userByEmail.id && !useJwtSession && sessionToken) {\n                await deleteSession(sessionToken);\n            }\n            user = await updateUser({\n                id: userByEmail.id,\n                emailVerified: new Date()\n            });\n            await ((_events$updateUser = events.updateUser) === null || _events$updateUser === void 0 ? void 0 : _events$updateUser.call(events, {\n                user\n            }));\n        } else {\n            var _events$createUser;\n            const { id: _, ...newUser } = {\n                ...profile,\n                emailVerified: new Date()\n            };\n            user = await createUser(newUser);\n            await ((_events$createUser = events.createUser) === null || _events$createUser === void 0 ? void 0 : _events$createUser.call(events, {\n                user\n            }));\n            isNewUser = true;\n        }\n        session = useJwtSession ? {} : await createSession({\n            sessionToken: await generateSessionToken(),\n            userId: user.id,\n            expires: (0, _utils.fromDate)(options.session.maxAge)\n        });\n        return {\n            session,\n            user,\n            isNewUser\n        };\n    } else if (account.type === \"oauth\") {\n        const userByAccount = await getUserByAccount({\n            providerAccountId: account.providerAccountId,\n            provider: account.provider\n        });\n        if (userByAccount) {\n            if (user) {\n                if (userByAccount.id === user.id) {\n                    return {\n                        session,\n                        user,\n                        isNewUser\n                    };\n                }\n                throw new _errors.AccountNotLinkedError(\"The account is already associated with another user\");\n            }\n            session = useJwtSession ? {} : await createSession({\n                sessionToken: await generateSessionToken(),\n                userId: userByAccount.id,\n                expires: (0, _utils.fromDate)(options.session.maxAge)\n            });\n            return {\n                session,\n                user: userByAccount,\n                isNewUser\n            };\n        } else {\n            var _events$createUser2, _events$linkAccount2;\n            if (user) {\n                var _events$linkAccount;\n                await linkAccount({\n                    ...account,\n                    userId: user.id\n                });\n                await ((_events$linkAccount = events.linkAccount) === null || _events$linkAccount === void 0 ? void 0 : _events$linkAccount.call(events, {\n                    user,\n                    account,\n                    profile\n                }));\n                return {\n                    session,\n                    user,\n                    isNewUser\n                };\n            }\n            const userByEmail = profile.email ? await getUserByEmail(profile.email) : null;\n            if (userByEmail) {\n                const provider = options.provider;\n                if (provider !== null && provider !== void 0 && provider.allowDangerousEmailAccountLinking) {\n                    user = userByEmail;\n                } else {\n                    throw new _errors.AccountNotLinkedError(\"Another account already exists with the same e-mail address\");\n                }\n            } else {\n                const { id: _, ...newUser } = {\n                    ...profile,\n                    emailVerified: null\n                };\n                user = await createUser(newUser);\n            }\n            await ((_events$createUser2 = events.createUser) === null || _events$createUser2 === void 0 ? void 0 : _events$createUser2.call(events, {\n                user\n            }));\n            await linkAccount({\n                ...account,\n                userId: user.id\n            });\n            await ((_events$linkAccount2 = events.linkAccount) === null || _events$linkAccount2 === void 0 ? void 0 : _events$linkAccount2.call(events, {\n                user,\n                account,\n                profile\n            }));\n            session = useJwtSession ? {} : await createSession({\n                sessionToken: await generateSessionToken(),\n                userId: user.id,\n                expires: (0, _utils.fromDate)(options.session.maxAge)\n            });\n            return {\n                session,\n                user,\n                isNewUser: true\n            };\n        }\n    }\n    throw new Error(\"Unsupported account type\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/callback-handler.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/callback-url.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/callback-url.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createCallbackUrl = createCallbackUrl;\nasync function createCallbackUrl({ options, paramValue, cookieValue }) {\n    const { url, callbacks } = options;\n    let callbackUrl = url.origin;\n    if (paramValue) {\n        callbackUrl = await callbacks.redirect({\n            url: paramValue,\n            baseUrl: url.origin\n        });\n    } else if (cookieValue) {\n        callbackUrl = await callbacks.redirect({\n            url: cookieValue,\n            baseUrl: url.origin\n        });\n    }\n    return {\n        callbackUrl,\n        callbackUrlCookie: callbackUrl !== cookieValue ? callbackUrl : undefined\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2NhbGxiYWNrLXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQseUJBQXlCRSxHQUFHQTtBQUU1QixlQUFlQSxrQkFBa0IsRUFDL0JDLE9BQU8sRUFDUEMsVUFBVSxFQUNWQyxXQUFXLEVBQ1o7SUFDQyxNQUFNLEVBQ0pDLEdBQUcsRUFDSEMsU0FBUyxFQUNWLEdBQUdKO0lBQ0osSUFBSUssY0FBY0YsSUFBSUc7SUFFdEIsSUFBSUwsWUFBWTtRQUNkSSxjQUFjLE1BQU1ELFVBQVVHLFNBQVM7WUFDckNKLEtBQUtGO1lBQ0xPLFNBQVNMLElBQUlHO1FBQ2Y7SUFDRixPQUFPLElBQUlKLGFBQWE7UUFDdEJHLGNBQWMsTUFBTUQsVUFBVUcsU0FBUztZQUNyQ0osS0FBS0Q7WUFDTE0sU0FBU0wsSUFBSUc7UUFDZjtJQUNGO0lBRUEsT0FBTztRQUNMRDtRQUNBSSxtQkFBbUJKLGdCQUFnQkgsY0FBY0csY0FBY0s7SUFDakU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2NhbGxiYWNrLXVybC5qcz83YmJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5jcmVhdGVDYWxsYmFja1VybCA9IGNyZWF0ZUNhbGxiYWNrVXJsO1xuXG5hc3luYyBmdW5jdGlvbiBjcmVhdGVDYWxsYmFja1VybCh7XG4gIG9wdGlvbnMsXG4gIHBhcmFtVmFsdWUsXG4gIGNvb2tpZVZhbHVlXG59KSB7XG4gIGNvbnN0IHtcbiAgICB1cmwsXG4gICAgY2FsbGJhY2tzXG4gIH0gPSBvcHRpb25zO1xuICBsZXQgY2FsbGJhY2tVcmwgPSB1cmwub3JpZ2luO1xuXG4gIGlmIChwYXJhbVZhbHVlKSB7XG4gICAgY2FsbGJhY2tVcmwgPSBhd2FpdCBjYWxsYmFja3MucmVkaXJlY3Qoe1xuICAgICAgdXJsOiBwYXJhbVZhbHVlLFxuICAgICAgYmFzZVVybDogdXJsLm9yaWdpblxuICAgIH0pO1xuICB9IGVsc2UgaWYgKGNvb2tpZVZhbHVlKSB7XG4gICAgY2FsbGJhY2tVcmwgPSBhd2FpdCBjYWxsYmFja3MucmVkaXJlY3Qoe1xuICAgICAgdXJsOiBjb29raWVWYWx1ZSxcbiAgICAgIGJhc2VVcmw6IHVybC5vcmlnaW5cbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgY2FsbGJhY2tVcmwsXG4gICAgY2FsbGJhY2tVcmxDb29raWU6IGNhbGxiYWNrVXJsICE9PSBjb29raWVWYWx1ZSA/IGNhbGxiYWNrVXJsIDogdW5kZWZpbmVkXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3JlYXRlQ2FsbGJhY2tVcmwiLCJvcHRpb25zIiwicGFyYW1WYWx1ZSIsImNvb2tpZVZhbHVlIiwidXJsIiwiY2FsbGJhY2tzIiwiY2FsbGJhY2tVcmwiLCJvcmlnaW4iLCJyZWRpcmVjdCIsImJhc2VVcmwiLCJjYWxsYmFja1VybENvb2tpZSIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/callback-url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/cookie.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/core/lib/cookie.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SessionStore = void 0;\nexports.defaultCookies = defaultCookies;\nvar _classPrivateFieldGet3 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classPrivateFieldGet */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classPrivateFieldGet.js\"));\nvar _classPrivateFieldSet2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classPrivateFieldSet */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classPrivateFieldSet.js\"));\nfunction _classPrivateMethodInitSpec(obj, privateSet) {\n    _checkPrivateRedeclaration(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n    _checkPrivateRedeclaration(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\nconst ALLOWED_COOKIE_SIZE = 4096;\nconst ESTIMATED_EMPTY_COOKIE_SIZE = 163;\nconst CHUNK_SIZE = ALLOWED_COOKIE_SIZE - ESTIMATED_EMPTY_COOKIE_SIZE;\nfunction defaultCookies(useSecureCookies) {\n    const cookiePrefix = useSecureCookies ? \"__Secure-\" : \"\";\n    return {\n        sessionToken: {\n            name: `${cookiePrefix}next-auth.session-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        callbackUrl: {\n            name: `${cookiePrefix}next-auth.callback-url`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        csrfToken: {\n            name: `${useSecureCookies ? \"__Host-\" : \"\"}next-auth.csrf-token`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        },\n        pkceCodeVerifier: {\n            name: `${cookiePrefix}next-auth.pkce.code_verifier`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15\n            }\n        },\n        state: {\n            name: `${cookiePrefix}next-auth.state`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies,\n                maxAge: 60 * 15\n            }\n        },\n        nonce: {\n            name: `${cookiePrefix}next-auth.nonce`,\n            options: {\n                httpOnly: true,\n                sameSite: \"lax\",\n                path: \"/\",\n                secure: useSecureCookies\n            }\n        }\n    };\n}\nvar _chunks = new WeakMap();\nvar _option = new WeakMap();\nvar _logger = new WeakMap();\nvar _chunk = new WeakSet();\nvar _clean = new WeakSet();\nclass SessionStore {\n    constructor(option, req, logger){\n        _classPrivateMethodInitSpec(this, _clean);\n        _classPrivateMethodInitSpec(this, _chunk);\n        _classPrivateFieldInitSpec(this, _chunks, {\n            writable: true,\n            value: {}\n        });\n        _classPrivateFieldInitSpec(this, _option, {\n            writable: true,\n            value: void 0\n        });\n        _classPrivateFieldInitSpec(this, _logger, {\n            writable: true,\n            value: void 0\n        });\n        (0, _classPrivateFieldSet2.default)(this, _logger, logger);\n        (0, _classPrivateFieldSet2.default)(this, _option, option);\n        const { cookies: _cookies } = req;\n        const { name: cookieName } = option;\n        if (typeof (_cookies === null || _cookies === void 0 ? void 0 : _cookies.getAll) === \"function\") {\n            for (const { name, value } of _cookies.getAll()){\n                if (name.startsWith(cookieName)) {\n                    (0, _classPrivateFieldGet3.default)(this, _chunks)[name] = value;\n                }\n            }\n        } else if (_cookies instanceof Map) {\n            for (const name of _cookies.keys()){\n                if (name.startsWith(cookieName)) (0, _classPrivateFieldGet3.default)(this, _chunks)[name] = _cookies.get(name);\n            }\n        } else {\n            for(const name in _cookies){\n                if (name.startsWith(cookieName)) (0, _classPrivateFieldGet3.default)(this, _chunks)[name] = _cookies[name];\n            }\n        }\n    }\n    get value() {\n        var _Object$values;\n        return (_Object$values = Object.values((0, _classPrivateFieldGet3.default)(this, _chunks))) === null || _Object$values === void 0 ? void 0 : _Object$values.join(\"\");\n    }\n    chunk(value, options) {\n        const cookies = _classPrivateMethodGet(this, _clean, _clean2).call(this);\n        const chunked = _classPrivateMethodGet(this, _chunk, _chunk2).call(this, {\n            name: (0, _classPrivateFieldGet3.default)(this, _option).name,\n            value,\n            options: {\n                ...(0, _classPrivateFieldGet3.default)(this, _option).options,\n                ...options\n            }\n        });\n        for (const chunk of chunked){\n            cookies[chunk.name] = chunk;\n        }\n        return Object.values(cookies);\n    }\n    clean() {\n        return Object.values(_classPrivateMethodGet(this, _clean, _clean2).call(this));\n    }\n}\nexports.SessionStore = SessionStore;\nfunction _chunk2(cookie) {\n    const chunkCount = Math.ceil(cookie.value.length / CHUNK_SIZE);\n    if (chunkCount === 1) {\n        (0, _classPrivateFieldGet3.default)(this, _chunks)[cookie.name] = cookie.value;\n        return [\n            cookie\n        ];\n    }\n    const cookies = [];\n    for(let i = 0; i < chunkCount; i++){\n        const name = `${cookie.name}.${i}`;\n        const value = cookie.value.substr(i * CHUNK_SIZE, CHUNK_SIZE);\n        cookies.push({\n            ...cookie,\n            name,\n            value\n        });\n        (0, _classPrivateFieldGet3.default)(this, _chunks)[name] = value;\n    }\n    (0, _classPrivateFieldGet3.default)(this, _logger).debug(\"CHUNKING_SESSION_COOKIE\", {\n        message: `Session cookie exceeds allowed ${ALLOWED_COOKIE_SIZE} bytes.`,\n        emptyCookieSize: ESTIMATED_EMPTY_COOKIE_SIZE,\n        valueSize: cookie.value.length,\n        chunks: cookies.map((c)=>c.value.length + ESTIMATED_EMPTY_COOKIE_SIZE)\n    });\n    return cookies;\n}\nfunction _clean2() {\n    const cleanedChunks = {};\n    for(const name in (0, _classPrivateFieldGet3.default)(this, _chunks)){\n        var _classPrivateFieldGet2;\n        (_classPrivateFieldGet2 = (0, _classPrivateFieldGet3.default)(this, _chunks)) === null || _classPrivateFieldGet2 === void 0 ? true : delete _classPrivateFieldGet2[name];\n        cleanedChunks[name] = {\n            name,\n            value: \"\",\n            options: {\n                ...(0, _classPrivateFieldGet3.default)(this, _option).options,\n                maxAge: 0\n            }\n        };\n    }\n    return cleanedChunks;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/cookie.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/csrf-token.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/core/lib/csrf-token.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createCSRFToken = createCSRFToken;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nfunction createCSRFToken({ options, cookieValue, isPost, bodyValue }) {\n    if (cookieValue) {\n        const [csrfToken, csrfTokenHash] = cookieValue.split(\"|\");\n        const expectedCsrfTokenHash = (0, _crypto.createHash)(\"sha256\").update(`${csrfToken}${options.secret}`).digest(\"hex\");\n        if (csrfTokenHash === expectedCsrfTokenHash) {\n            const csrfTokenVerified = isPost && csrfToken === bodyValue;\n            return {\n                csrfTokenVerified,\n                csrfToken\n            };\n        }\n    }\n    const csrfToken = (0, _crypto.randomBytes)(32).toString(\"hex\");\n    const csrfTokenHash = (0, _crypto.createHash)(\"sha256\").update(`${csrfToken}${options.secret}`).digest(\"hex\");\n    const cookie = `${csrfToken}|${csrfTokenHash}`;\n    return {\n        cookie,\n        csrfToken\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2NzcmYtdG9rZW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELHVCQUF1QkUsR0FBR0E7QUFFMUIsSUFBSUMsVUFBVUMsbUJBQU9BLENBQUMsc0JBQVE7QUFFOUIsU0FBU0YsZ0JBQWdCLEVBQ3ZCRyxPQUFPLEVBQ1BDLFdBQVcsRUFDWEMsTUFBTSxFQUNOQyxTQUFTLEVBQ1Y7SUFDQyxJQUFJRixhQUFhO1FBQ2YsTUFBTSxDQUFDRyxXQUFXQyxjQUFjLEdBQUdKLFlBQVlLLE1BQU07UUFDckQsTUFBTUMsd0JBQXdCLENBQUMsR0FBR1QsUUFBUVUsVUFBUyxFQUFHLFVBQVVDLE9BQU8sQ0FBQyxFQUFFTCxVQUFVLEVBQUVKLFFBQVFVLE9BQU8sQ0FBQyxFQUFFQyxPQUFPO1FBRS9HLElBQUlOLGtCQUFrQkUsdUJBQXVCO1lBQzNDLE1BQU1LLG9CQUFvQlYsVUFBVUUsY0FBY0Q7WUFDbEQsT0FBTztnQkFDTFM7Z0JBQ0FSO1lBQ0Y7UUFDRjtJQUNGO0lBRUEsTUFBTUEsWUFBWSxDQUFDLEdBQUdOLFFBQVFlLFdBQVUsRUFBRyxJQUFJQyxTQUFTO0lBQ3hELE1BQU1ULGdCQUFnQixDQUFDLEdBQUdQLFFBQVFVLFVBQVMsRUFBRyxVQUFVQyxPQUFPLENBQUMsRUFBRUwsVUFBVSxFQUFFSixRQUFRVSxPQUFPLENBQUMsRUFBRUMsT0FBTztJQUN2RyxNQUFNSSxTQUFTLENBQUMsRUFBRVgsVUFBVSxDQUFDLEVBQUVDLGNBQWMsQ0FBQztJQUM5QyxPQUFPO1FBQ0xVO1FBQ0FYO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2NzcmYtdG9rZW4uanM/MzBiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuY3JlYXRlQ1NSRlRva2VuID0gY3JlYXRlQ1NSRlRva2VuO1xuXG52YXIgX2NyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5cbmZ1bmN0aW9uIGNyZWF0ZUNTUkZUb2tlbih7XG4gIG9wdGlvbnMsXG4gIGNvb2tpZVZhbHVlLFxuICBpc1Bvc3QsXG4gIGJvZHlWYWx1ZVxufSkge1xuICBpZiAoY29va2llVmFsdWUpIHtcbiAgICBjb25zdCBbY3NyZlRva2VuLCBjc3JmVG9rZW5IYXNoXSA9IGNvb2tpZVZhbHVlLnNwbGl0KFwifFwiKTtcbiAgICBjb25zdCBleHBlY3RlZENzcmZUb2tlbkhhc2ggPSAoMCwgX2NyeXB0by5jcmVhdGVIYXNoKShcInNoYTI1NlwiKS51cGRhdGUoYCR7Y3NyZlRva2VufSR7b3B0aW9ucy5zZWNyZXR9YCkuZGlnZXN0KFwiaGV4XCIpO1xuXG4gICAgaWYgKGNzcmZUb2tlbkhhc2ggPT09IGV4cGVjdGVkQ3NyZlRva2VuSGFzaCkge1xuICAgICAgY29uc3QgY3NyZlRva2VuVmVyaWZpZWQgPSBpc1Bvc3QgJiYgY3NyZlRva2VuID09PSBib2R5VmFsdWU7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBjc3JmVG9rZW5WZXJpZmllZCxcbiAgICAgICAgY3NyZlRva2VuXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IGNzcmZUb2tlbiA9ICgwLCBfY3J5cHRvLnJhbmRvbUJ5dGVzKSgzMikudG9TdHJpbmcoXCJoZXhcIik7XG4gIGNvbnN0IGNzcmZUb2tlbkhhc2ggPSAoMCwgX2NyeXB0by5jcmVhdGVIYXNoKShcInNoYTI1NlwiKS51cGRhdGUoYCR7Y3NyZlRva2VufSR7b3B0aW9ucy5zZWNyZXR9YCkuZGlnZXN0KFwiaGV4XCIpO1xuICBjb25zdCBjb29raWUgPSBgJHtjc3JmVG9rZW59fCR7Y3NyZlRva2VuSGFzaH1gO1xuICByZXR1cm4ge1xuICAgIGNvb2tpZSxcbiAgICBjc3JmVG9rZW5cbiAgfTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjcmVhdGVDU1JGVG9rZW4iLCJfY3J5cHRvIiwicmVxdWlyZSIsIm9wdGlvbnMiLCJjb29raWVWYWx1ZSIsImlzUG9zdCIsImJvZHlWYWx1ZSIsImNzcmZUb2tlbiIsImNzcmZUb2tlbkhhc2giLCJzcGxpdCIsImV4cGVjdGVkQ3NyZlRva2VuSGFzaCIsImNyZWF0ZUhhc2giLCJ1cGRhdGUiLCJzZWNyZXQiLCJkaWdlc3QiLCJjc3JmVG9rZW5WZXJpZmllZCIsInJhbmRvbUJ5dGVzIiwidG9TdHJpbmciLCJjb29raWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/csrf-token.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/default-callbacks.js":
/*!**************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/default-callbacks.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.defaultCallbacks = void 0;\nconst defaultCallbacks = {\n    signIn () {\n        return true;\n    },\n    redirect ({ url, baseUrl }) {\n        if (url.startsWith(\"/\")) return `${baseUrl}${url}`;\n        else if (new URL(url).origin === baseUrl) return url;\n        return baseUrl;\n    },\n    session ({ session }) {\n        return session;\n    },\n    jwt ({ token }) {\n        return token;\n    }\n};\nexports.defaultCallbacks = defaultCallbacks;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2RlZmF1bHQtY2FsbGJhY2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCx3QkFBd0JFLEdBQUcsS0FBSztBQUNoQyxNQUFNQSxtQkFBbUI7SUFDdkJDO1FBQ0UsT0FBTztJQUNUO0lBRUFDLFVBQVMsRUFDUEMsR0FBRyxFQUNIQyxPQUFPLEVBQ1I7UUFDQyxJQUFJRCxJQUFJRSxXQUFXLE1BQU0sT0FBTyxDQUFDLEVBQUVELFFBQVEsRUFBRUQsSUFBSSxDQUFDO2FBQU0sSUFBSSxJQUFJRyxJQUFJSCxLQUFLSSxXQUFXSCxTQUFTLE9BQU9EO1FBQ3BHLE9BQU9DO0lBQ1Q7SUFFQUksU0FBUSxFQUNOQSxPQUFPLEVBQ1I7UUFDQyxPQUFPQTtJQUNUO0lBRUFDLEtBQUksRUFDRkMsS0FBSyxFQUNOO1FBQ0MsT0FBT0E7SUFDVDtBQUVGO0FBQ0FaLHdCQUF3QkUsR0FBR0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi9kZWZhdWx0LWNhbGxiYWNrcy5qcz9mZjZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0Q2FsbGJhY2tzID0gdm9pZCAwO1xuY29uc3QgZGVmYXVsdENhbGxiYWNrcyA9IHtcbiAgc2lnbkluKCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuXG4gIHJlZGlyZWN0KHtcbiAgICB1cmwsXG4gICAgYmFzZVVybFxuICB9KSB7XG4gICAgaWYgKHVybC5zdGFydHNXaXRoKFwiL1wiKSkgcmV0dXJuIGAke2Jhc2VVcmx9JHt1cmx9YDtlbHNlIGlmIChuZXcgVVJMKHVybCkub3JpZ2luID09PSBiYXNlVXJsKSByZXR1cm4gdXJsO1xuICAgIHJldHVybiBiYXNlVXJsO1xuICB9LFxuXG4gIHNlc3Npb24oe1xuICAgIHNlc3Npb25cbiAgfSkge1xuICAgIHJldHVybiBzZXNzaW9uO1xuICB9LFxuXG4gIGp3dCh7XG4gICAgdG9rZW5cbiAgfSkge1xuICAgIHJldHVybiB0b2tlbjtcbiAgfVxuXG59O1xuZXhwb3J0cy5kZWZhdWx0Q2FsbGJhY2tzID0gZGVmYXVsdENhbGxiYWNrczsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0Q2FsbGJhY2tzIiwic2lnbkluIiwicmVkaXJlY3QiLCJ1cmwiLCJiYXNlVXJsIiwic3RhcnRzV2l0aCIsIlVSTCIsIm9yaWdpbiIsInNlc3Npb24iLCJqd3QiLCJ0b2tlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/default-callbacks.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/email/getUserFromEmail.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = getAdapterUserFromEmail;\nasync function getAdapterUserFromEmail({ email, adapter }) {\n    const { getUserByEmail } = adapter;\n    const adapterUser = email ? await getUserByEmail(email) : null;\n    if (adapterUser) return adapterUser;\n    return {\n        id: email,\n        email,\n        emailVerified: null\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2VtYWlsL2dldFVzZXJGcm9tRW1haWwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlRSxHQUFHQztBQUVsQixlQUFlQSx3QkFBd0IsRUFDckNDLEtBQUssRUFDTEMsT0FBTyxFQUNSO0lBQ0MsTUFBTSxFQUNKQyxjQUFjLEVBQ2YsR0FBR0Q7SUFDSixNQUFNRSxjQUFjSCxRQUFRLE1BQU1FLGVBQWVGLFNBQVM7SUFDMUQsSUFBSUcsYUFBYSxPQUFPQTtJQUN4QixPQUFPO1FBQ0xDLElBQUlKO1FBQ0pBO1FBQ0FLLGVBQWU7SUFDakI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2VtYWlsL2dldFVzZXJGcm9tRW1haWwuanM/MWMwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGdldEFkYXB0ZXJVc2VyRnJvbUVtYWlsO1xuXG5hc3luYyBmdW5jdGlvbiBnZXRBZGFwdGVyVXNlckZyb21FbWFpbCh7XG4gIGVtYWlsLFxuICBhZGFwdGVyXG59KSB7XG4gIGNvbnN0IHtcbiAgICBnZXRVc2VyQnlFbWFpbFxuICB9ID0gYWRhcHRlcjtcbiAgY29uc3QgYWRhcHRlclVzZXIgPSBlbWFpbCA/IGF3YWl0IGdldFVzZXJCeUVtYWlsKGVtYWlsKSA6IG51bGw7XG4gIGlmIChhZGFwdGVyVXNlcikgcmV0dXJuIGFkYXB0ZXJVc2VyO1xuICByZXR1cm4ge1xuICAgIGlkOiBlbWFpbCxcbiAgICBlbWFpbCxcbiAgICBlbWFpbFZlcmlmaWVkOiBudWxsXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsImdldEFkYXB0ZXJVc2VyRnJvbUVtYWlsIiwiZW1haWwiLCJhZGFwdGVyIiwiZ2V0VXNlckJ5RW1haWwiLCJhZGFwdGVyVXNlciIsImlkIiwiZW1haWxWZXJpZmllZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/email/signin.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/email/signin.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = email;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nvar _utils = __webpack_require__(/*! ../utils */ \"(sc_server)/./node_modules/next-auth/core/lib/utils.js\");\nasync function email(identifier, options) {\n    var _await$provider$gener, _provider$generateVer, _provider$maxAge;\n    const { url, adapter, provider, callbackUrl, theme } = options;\n    const token = (_await$provider$gener = await ((_provider$generateVer = provider.generateVerificationToken) === null || _provider$generateVer === void 0 ? void 0 : _provider$generateVer.call(provider))) !== null && _await$provider$gener !== void 0 ? _await$provider$gener : (0, _crypto.randomBytes)(32).toString(\"hex\");\n    const ONE_DAY_IN_SECONDS = 86400;\n    const expires = new Date(Date.now() + ((_provider$maxAge = provider.maxAge) !== null && _provider$maxAge !== void 0 ? _provider$maxAge : ONE_DAY_IN_SECONDS) * 1000);\n    const params = new URLSearchParams({\n        callbackUrl,\n        token,\n        email: identifier\n    });\n    const _url = `${url}/callback/${provider.id}?${params}`;\n    await Promise.all([\n        provider.sendVerificationRequest({\n            identifier,\n            token,\n            expires,\n            url: _url,\n            provider,\n            theme\n        }),\n        adapter.createVerificationToken({\n            identifier,\n            token: (0, _utils.hashToken)(token, options),\n            expires\n        })\n    ]);\n    return `${url}/verify-request?${new URLSearchParams({\n        provider: provider.id,\n        type: provider.type\n    })}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL2VtYWlsL3NpZ25pbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWVFLEdBQUdDO0FBRWxCLElBQUlDLFVBQVVDLG1CQUFPQSxDQUFDLHNCQUFRO0FBRTlCLElBQUlDLFNBQVNELG1CQUFPQSxDQUFDLHdFQUFVO0FBRS9CLGVBQWVGLE1BQU1JLFVBQVUsRUFBRUMsT0FBTztJQUN0QyxJQUFJQyx1QkFBdUJDLHVCQUF1QkM7SUFFbEQsTUFBTSxFQUNKQyxHQUFHLEVBQ0hDLE9BQU8sRUFDUEMsUUFBUSxFQUNSQyxXQUFXLEVBQ1hDLEtBQUssRUFDTixHQUFHUjtJQUNKLE1BQU1TLFFBQVEsQ0FBQ1Isd0JBQXdCLE1BQU8sRUFBQ0Msd0JBQXdCSSxTQUFTSSx5QkFBd0IsTUFBTyxRQUFRUiwwQkFBMEIsS0FBSyxJQUFJLEtBQUssSUFBSUEsc0JBQXNCUyxLQUFLTCxTQUFRLENBQUMsTUFBTyxRQUFRTCwwQkFBMEIsS0FBSyxJQUFJQSx3QkFBd0IsQ0FBQyxHQUFHTCxRQUFRZ0IsV0FBVSxFQUFHLElBQUlDLFNBQVM7SUFDdlQsTUFBTUMscUJBQXFCO0lBQzNCLE1BQU1DLFVBQVUsSUFBSUMsS0FBS0EsS0FBS0MsUUFBUSxDQUFDLENBQUNkLG1CQUFtQkcsU0FBU1ksTUFBSyxNQUFPLFFBQVFmLHFCQUFxQixLQUFLLElBQUlBLG1CQUFtQlcsa0JBQWlCLElBQUs7SUFDL0osTUFBTUssU0FBUyxJQUFJQyxnQkFBZ0I7UUFDakNiO1FBQ0FFO1FBQ0FkLE9BQU9JO0lBQ1Q7SUFDQSxNQUFNc0IsT0FBTyxDQUFDLEVBQUVqQixJQUFJLFVBQVUsRUFBRUUsU0FBU2dCLEdBQUcsQ0FBQyxFQUFFSCxPQUFPLENBQUM7SUFDdkQsTUFBTUksUUFBUUMsSUFBSTtRQUFDbEIsU0FBU21CLHdCQUF3QjtZQUNsRDFCO1lBQ0FVO1lBQ0FNO1lBQ0FYLEtBQUtpQjtZQUNMZjtZQUNBRTtRQUNGO1FBQUlILFFBQVFxQix3QkFBd0I7WUFDbEMzQjtZQUNBVSxPQUFPLENBQUMsR0FBR1gsT0FBTzZCLFNBQVEsRUFBR2xCLE9BQU9UO1lBQ3BDZTtRQUNGO0tBQUc7SUFDSCxPQUFPLENBQUMsRUFBRVgsSUFBSSxnQkFBZ0IsRUFBRSxJQUFJZ0IsZ0JBQWdCO1FBQ2xEZCxVQUFVQSxTQUFTZ0I7UUFDbkJNLE1BQU10QixTQUFTc0I7SUFDakIsR0FBRyxDQUFDO0FBQ04iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi9lbWFpbC9zaWduaW4uanM/ZWM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGVtYWlsO1xuXG52YXIgX2NyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIik7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKFwiLi4vdXRpbHNcIik7XG5cbmFzeW5jIGZ1bmN0aW9uIGVtYWlsKGlkZW50aWZpZXIsIG9wdGlvbnMpIHtcbiAgdmFyIF9hd2FpdCRwcm92aWRlciRnZW5lciwgX3Byb3ZpZGVyJGdlbmVyYXRlVmVyLCBfcHJvdmlkZXIkbWF4QWdlO1xuXG4gIGNvbnN0IHtcbiAgICB1cmwsXG4gICAgYWRhcHRlcixcbiAgICBwcm92aWRlcixcbiAgICBjYWxsYmFja1VybCxcbiAgICB0aGVtZVxuICB9ID0gb3B0aW9ucztcbiAgY29uc3QgdG9rZW4gPSAoX2F3YWl0JHByb3ZpZGVyJGdlbmVyID0gYXdhaXQgKChfcHJvdmlkZXIkZ2VuZXJhdGVWZXIgPSBwcm92aWRlci5nZW5lcmF0ZVZlcmlmaWNhdGlvblRva2VuKSA9PT0gbnVsbCB8fCBfcHJvdmlkZXIkZ2VuZXJhdGVWZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm92aWRlciRnZW5lcmF0ZVZlci5jYWxsKHByb3ZpZGVyKSkpICE9PSBudWxsICYmIF9hd2FpdCRwcm92aWRlciRnZW5lciAhPT0gdm9pZCAwID8gX2F3YWl0JHByb3ZpZGVyJGdlbmVyIDogKDAsIF9jcnlwdG8ucmFuZG9tQnl0ZXMpKDMyKS50b1N0cmluZyhcImhleFwiKTtcbiAgY29uc3QgT05FX0RBWV9JTl9TRUNPTkRTID0gODY0MDA7XG4gIGNvbnN0IGV4cGlyZXMgPSBuZXcgRGF0ZShEYXRlLm5vdygpICsgKChfcHJvdmlkZXIkbWF4QWdlID0gcHJvdmlkZXIubWF4QWdlKSAhPT0gbnVsbCAmJiBfcHJvdmlkZXIkbWF4QWdlICE9PSB2b2lkIDAgPyBfcHJvdmlkZXIkbWF4QWdlIDogT05FX0RBWV9JTl9TRUNPTkRTKSAqIDEwMDApO1xuICBjb25zdCBwYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKHtcbiAgICBjYWxsYmFja1VybCxcbiAgICB0b2tlbixcbiAgICBlbWFpbDogaWRlbnRpZmllclxuICB9KTtcbiAgY29uc3QgX3VybCA9IGAke3VybH0vY2FsbGJhY2svJHtwcm92aWRlci5pZH0/JHtwYXJhbXN9YDtcbiAgYXdhaXQgUHJvbWlzZS5hbGwoW3Byb3ZpZGVyLnNlbmRWZXJpZmljYXRpb25SZXF1ZXN0KHtcbiAgICBpZGVudGlmaWVyLFxuICAgIHRva2VuLFxuICAgIGV4cGlyZXMsXG4gICAgdXJsOiBfdXJsLFxuICAgIHByb3ZpZGVyLFxuICAgIHRoZW1lXG4gIH0pLCBhZGFwdGVyLmNyZWF0ZVZlcmlmaWNhdGlvblRva2VuKHtcbiAgICBpZGVudGlmaWVyLFxuICAgIHRva2VuOiAoMCwgX3V0aWxzLmhhc2hUb2tlbikodG9rZW4sIG9wdGlvbnMpLFxuICAgIGV4cGlyZXNcbiAgfSldKTtcbiAgcmV0dXJuIGAke3VybH0vdmVyaWZ5LXJlcXVlc3Q/JHtuZXcgVVJMU2VhcmNoUGFyYW1zKHtcbiAgICBwcm92aWRlcjogcHJvdmlkZXIuaWQsXG4gICAgdHlwZTogcHJvdmlkZXIudHlwZVxuICB9KX1gO1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJlbWFpbCIsIl9jcnlwdG8iLCJyZXF1aXJlIiwiX3V0aWxzIiwiaWRlbnRpZmllciIsIm9wdGlvbnMiLCJfYXdhaXQkcHJvdmlkZXIkZ2VuZXIiLCJfcHJvdmlkZXIkZ2VuZXJhdGVWZXIiLCJfcHJvdmlkZXIkbWF4QWdlIiwidXJsIiwiYWRhcHRlciIsInByb3ZpZGVyIiwiY2FsbGJhY2tVcmwiLCJ0aGVtZSIsInRva2VuIiwiZ2VuZXJhdGVWZXJpZmljYXRpb25Ub2tlbiIsImNhbGwiLCJyYW5kb21CeXRlcyIsInRvU3RyaW5nIiwiT05FX0RBWV9JTl9TRUNPTkRTIiwiZXhwaXJlcyIsIkRhdGUiLCJub3ciLCJtYXhBZ2UiLCJwYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJfdXJsIiwiaWQiLCJQcm9taXNlIiwiYWxsIiwic2VuZFZlcmlmaWNhdGlvblJlcXVlc3QiLCJjcmVhdGVWZXJpZmljYXRpb25Ub2tlbiIsImhhc2hUb2tlbiIsInR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/email/signin.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/oauth/authorization-url.js":
/*!********************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/authorization-url.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = getAuthorizationUrl;\nvar _client = __webpack_require__(/*! ./client */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/client.js\");\nvar _clientLegacy = __webpack_require__(/*! ./client-legacy */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/client-legacy.js\");\nvar checks = _interopRequireWildcard(__webpack_require__(/*! ./checks */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/checks.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function getAuthorizationUrl({ options, query }) {\n    var _provider$version;\n    const { logger, provider } = options;\n    let params = {};\n    if (typeof provider.authorization === \"string\") {\n        const parsedUrl = new URL(provider.authorization);\n        const parsedParams = Object.fromEntries(parsedUrl.searchParams);\n        params = {\n            ...params,\n            ...parsedParams\n        };\n    } else {\n        var _provider$authorizati;\n        params = {\n            ...params,\n            ...(_provider$authorizati = provider.authorization) === null || _provider$authorizati === void 0 ? void 0 : _provider$authorizati.params\n        };\n    }\n    params = {\n        ...params,\n        ...query\n    };\n    if ((_provider$version = provider.version) !== null && _provider$version !== void 0 && _provider$version.startsWith(\"1.\")) {\n        var _provider$authorizati2;\n        const client = (0, _clientLegacy.oAuth1Client)(options);\n        const tokens = await client.getOAuthRequestToken(params);\n        const url = `${(_provider$authorizati2 = provider.authorization) === null || _provider$authorizati2 === void 0 ? void 0 : _provider$authorizati2.url}?${new URLSearchParams({\n            oauth_token: tokens.oauth_token,\n            oauth_token_secret: tokens.oauth_token_secret,\n            ...tokens.params\n        })}`;\n        _clientLegacy.oAuth1TokenStore.set(tokens.oauth_token, tokens.oauth_token_secret);\n        logger.debug(\"GET_AUTHORIZATION_URL\", {\n            url,\n            provider\n        });\n        return {\n            redirect: url\n        };\n    }\n    const client = await (0, _client.openidClient)(options);\n    const authorizationParams = params;\n    const cookies = [];\n    await checks.state.create(options, cookies, authorizationParams);\n    await checks.pkce.create(options, cookies, authorizationParams);\n    await checks.nonce.create(options, cookies, authorizationParams);\n    const url = client.authorizationUrl(authorizationParams);\n    logger.debug(\"GET_AUTHORIZATION_URL\", {\n        url,\n        cookies,\n        provider\n    });\n    return {\n        redirect: url,\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/oauth/authorization-url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/oauth/callback.js":
/*!***********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/callback.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = oAuthCallback;\nvar _openidClient = __webpack_require__(/*! openid-client */ \"(sc_server)/./node_modules/openid-client/lib/index.js\");\nvar _client = __webpack_require__(/*! ./client */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/client.js\");\nvar _clientLegacy = __webpack_require__(/*! ./client-legacy */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/client-legacy.js\");\nvar _checks = _interopRequireWildcard(__webpack_require__(/*! ./checks */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/checks.js\"));\nvar _errors = __webpack_require__(/*! ../../errors */ \"(sc_server)/./node_modules/next-auth/core/errors.js\");\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function oAuthCallback(params) {\n    var _body$error, _provider$version;\n    const { options, query, body, method, cookies } = params;\n    const { logger, provider } = options;\n    const errorMessage = (_body$error = body === null || body === void 0 ? void 0 : body.error) !== null && _body$error !== void 0 ? _body$error : query === null || query === void 0 ? void 0 : query.error;\n    if (errorMessage) {\n        const error = new Error(errorMessage);\n        logger.error(\"OAUTH_CALLBACK_HANDLER_ERROR\", {\n            error,\n            error_description: query === null || query === void 0 ? void 0 : query.error_description,\n            providerId: provider.id\n        });\n        logger.debug(\"OAUTH_CALLBACK_HANDLER_ERROR\", {\n            body\n        });\n        throw error;\n    }\n    if ((_provider$version = provider.version) !== null && _provider$version !== void 0 && _provider$version.startsWith(\"1.\")) {\n        try {\n            const client = await (0, _clientLegacy.oAuth1Client)(options);\n            const { oauth_token, oauth_verifier } = query !== null && query !== void 0 ? query : {};\n            const tokens = await client.getOAuthAccessToken(oauth_token, _clientLegacy.oAuth1TokenStore.get(oauth_token), oauth_verifier);\n            let profile = await client.get(provider.profileUrl, tokens.oauth_token, tokens.oauth_token_secret);\n            if (typeof profile === \"string\") {\n                profile = JSON.parse(profile);\n            }\n            const newProfile = await getProfile({\n                profile,\n                tokens,\n                provider,\n                logger\n            });\n            return {\n                ...newProfile,\n                cookies: []\n            };\n        } catch (error) {\n            logger.error(\"OAUTH_V1_GET_ACCESS_TOKEN_ERROR\", error);\n            throw error;\n        }\n    }\n    if (query !== null && query !== void 0 && query.oauth_token) _clientLegacy.oAuth1TokenStore.delete(query.oauth_token);\n    try {\n        var _provider$token, _provider$token2, _provider$userinfo;\n        const client = await (0, _client.openidClient)(options);\n        let tokens;\n        const checks = {};\n        const resCookies = [];\n        await _checks.state.use(cookies, resCookies, options, checks);\n        await _checks.pkce.use(cookies, resCookies, options, checks);\n        await _checks.nonce.use(cookies, resCookies, options, checks);\n        const params = {\n            ...client.callbackParams({\n                url: `http://n?${new URLSearchParams(query)}`,\n                body,\n                method\n            }),\n            ...(_provider$token = provider.token) === null || _provider$token === void 0 ? void 0 : _provider$token.params\n        };\n        if ((_provider$token2 = provider.token) !== null && _provider$token2 !== void 0 && _provider$token2.request) {\n            const response = await provider.token.request({\n                provider,\n                params,\n                checks,\n                client\n            });\n            tokens = new _openidClient.TokenSet(response.tokens);\n        } else if (provider.idToken) {\n            tokens = await client.callback(provider.callbackUrl, params, checks);\n        } else {\n            tokens = await client.oauthCallback(provider.callbackUrl, params, checks);\n        }\n        if (Array.isArray(tokens.scope)) {\n            tokens.scope = tokens.scope.join(\" \");\n        }\n        let profile;\n        if ((_provider$userinfo = provider.userinfo) !== null && _provider$userinfo !== void 0 && _provider$userinfo.request) {\n            profile = await provider.userinfo.request({\n                provider,\n                tokens,\n                client\n            });\n        } else if (provider.idToken) {\n            profile = tokens.claims();\n        } else {\n            var _provider$userinfo2;\n            profile = await client.userinfo(tokens, {\n                params: (_provider$userinfo2 = provider.userinfo) === null || _provider$userinfo2 === void 0 ? void 0 : _provider$userinfo2.params\n            });\n        }\n        const profileResult = await getProfile({\n            profile,\n            provider,\n            tokens,\n            logger\n        });\n        return {\n            ...profileResult,\n            cookies: resCookies\n        };\n    } catch (error) {\n        throw new _errors.OAuthCallbackError(error);\n    }\n}\nasync function getProfile({ profile: OAuthProfile, tokens, provider, logger }) {\n    try {\n        var _profile$email;\n        logger.debug(\"PROFILE_DATA\", {\n            OAuthProfile\n        });\n        const profile = await provider.profile(OAuthProfile, tokens);\n        profile.email = (_profile$email = profile.email) === null || _profile$email === void 0 ? void 0 : _profile$email.toLowerCase();\n        if (!profile.id) throw new TypeError(`Profile id is missing in ${provider.name} OAuth profile response`);\n        return {\n            profile,\n            account: {\n                provider: provider.id,\n                type: provider.type,\n                providerAccountId: profile.id.toString(),\n                ...tokens\n            },\n            OAuthProfile\n        };\n    } catch (error) {\n        logger.error(\"OAUTH_PARSE_PROFILE_ERROR\", {\n            error: error,\n            OAuthProfile\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/oauth/callback.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/oauth/checks.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/checks.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.pkce = exports.nonce = exports.PKCE_CODE_CHALLENGE_METHOD = void 0;\nexports.signCookie = signCookie;\nexports.state = void 0;\nvar _openidClient = __webpack_require__(/*! openid-client */ \"(sc_server)/./node_modules/openid-client/lib/index.js\");\nvar jwt = _interopRequireWildcard(__webpack_require__(/*! ../../../jwt */ \"(sc_server)/./node_modules/next-auth/jwt/index.js\"));\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nasync function signCookie(type, value, maxAge, options) {\n    const { cookies, logger } = options;\n    logger.debug(`CREATE_${type.toUpperCase()}`, {\n        value,\n        maxAge\n    });\n    const expires = new Date();\n    expires.setTime(expires.getTime() + maxAge * 1000);\n    return {\n        name: cookies[type].name,\n        value: await jwt.encode({\n            ...options.jwt,\n            maxAge,\n            token: {\n                value\n            }\n        }),\n        options: {\n            ...cookies[type].options,\n            expires\n        }\n    };\n}\nconst PKCE_MAX_AGE = 60 * 15;\nconst PKCE_CODE_CHALLENGE_METHOD = \"S256\";\nexports.PKCE_CODE_CHALLENGE_METHOD = PKCE_CODE_CHALLENGE_METHOD;\nconst pkce = {\n    async create (options, cookies, resParams) {\n        var _options$provider, _options$provider$che, _options$cookies$pkce;\n        if (!((_options$provider = options.provider) !== null && _options$provider !== void 0 && (_options$provider$che = _options$provider.checks) !== null && _options$provider$che !== void 0 && _options$provider$che.includes(\"pkce\"))) return;\n        const code_verifier = _openidClient.generators.codeVerifier();\n        const value = _openidClient.generators.codeChallenge(code_verifier);\n        resParams.code_challenge = value;\n        resParams.code_challenge_method = PKCE_CODE_CHALLENGE_METHOD;\n        const maxAge = (_options$cookies$pkce = options.cookies.pkceCodeVerifier.options.maxAge) !== null && _options$cookies$pkce !== void 0 ? _options$cookies$pkce : PKCE_MAX_AGE;\n        cookies.push(await signCookie(\"pkceCodeVerifier\", code_verifier, maxAge, options));\n    },\n    async use (cookies, resCookies, options, checks) {\n        var _options$provider2, _options$provider2$ch;\n        if (!((_options$provider2 = options.provider) !== null && _options$provider2 !== void 0 && (_options$provider2$ch = _options$provider2.checks) !== null && _options$provider2$ch !== void 0 && _options$provider2$ch.includes(\"pkce\"))) return;\n        const codeVerifier = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.pkceCodeVerifier.name];\n        if (!codeVerifier) throw new TypeError(\"PKCE code_verifier cookie was missing.\");\n        const value = await jwt.decode({\n            ...options.jwt,\n            token: codeVerifier\n        });\n        if (!(value !== null && value !== void 0 && value.value)) throw new TypeError(\"PKCE code_verifier value could not be parsed.\");\n        resCookies.push({\n            name: options.cookies.pkceCodeVerifier.name,\n            value: \"\",\n            options: {\n                ...options.cookies.pkceCodeVerifier.options,\n                maxAge: 0\n            }\n        });\n        checks.code_verifier = value.value;\n    }\n};\nexports.pkce = pkce;\nconst STATE_MAX_AGE = 60 * 15;\nconst state = {\n    async create (options, cookies, resParams) {\n        var _options$provider$che2, _options$cookies$stat;\n        if (!((_options$provider$che2 = options.provider.checks) !== null && _options$provider$che2 !== void 0 && _options$provider$che2.includes(\"state\"))) return;\n        const value = _openidClient.generators.state();\n        resParams.state = value;\n        const maxAge = (_options$cookies$stat = options.cookies.state.options.maxAge) !== null && _options$cookies$stat !== void 0 ? _options$cookies$stat : STATE_MAX_AGE;\n        cookies.push(await signCookie(\"state\", value, maxAge, options));\n    },\n    async use (cookies, resCookies, options, checks) {\n        var _options$provider$che3;\n        if (!((_options$provider$che3 = options.provider.checks) !== null && _options$provider$che3 !== void 0 && _options$provider$che3.includes(\"state\"))) return;\n        const state = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.state.name];\n        if (!state) throw new TypeError(\"State cookie was missing.\");\n        const value = await jwt.decode({\n            ...options.jwt,\n            token: state\n        });\n        if (!(value !== null && value !== void 0 && value.value)) throw new TypeError(\"State value could not be parsed.\");\n        resCookies.push({\n            name: options.cookies.state.name,\n            value: \"\",\n            options: {\n                ...options.cookies.state.options,\n                maxAge: 0\n            }\n        });\n        checks.state = value.value;\n    }\n};\nexports.state = state;\nconst NONCE_MAX_AGE = 60 * 15;\nconst nonce = {\n    async create (options, cookies, resParams) {\n        var _options$provider$che4, _options$cookies$nonc;\n        if (!((_options$provider$che4 = options.provider.checks) !== null && _options$provider$che4 !== void 0 && _options$provider$che4.includes(\"nonce\"))) return;\n        const value = _openidClient.generators.nonce();\n        resParams.nonce = value;\n        const maxAge = (_options$cookies$nonc = options.cookies.nonce.options.maxAge) !== null && _options$cookies$nonc !== void 0 ? _options$cookies$nonc : NONCE_MAX_AGE;\n        cookies.push(await signCookie(\"nonce\", value, maxAge, options));\n    },\n    async use (cookies, resCookies, options, checks) {\n        var _options$provider3, _options$provider3$ch;\n        if (!((_options$provider3 = options.provider) !== null && _options$provider3 !== void 0 && (_options$provider3$ch = _options$provider3.checks) !== null && _options$provider3$ch !== void 0 && _options$provider3$ch.includes(\"nonce\"))) return;\n        const nonce = cookies === null || cookies === void 0 ? void 0 : cookies[options.cookies.nonce.name];\n        if (!nonce) throw new TypeError(\"Nonce cookie was missing.\");\n        const value = await jwt.decode({\n            ...options.jwt,\n            token: nonce\n        });\n        if (!(value !== null && value !== void 0 && value.value)) throw new TypeError(\"Nonce value could not be parsed.\");\n        resCookies.push({\n            name: options.cookies.nonce.name,\n            value: \"\",\n            options: {\n                ...options.cookies.nonce.options,\n                maxAge: 0\n            }\n        });\n        checks.nonce = value.value;\n    }\n};\nexports.nonce = nonce;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/oauth/checks.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/oauth/client-legacy.js":
/*!****************************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/client-legacy.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.oAuth1Client = oAuth1Client;\nexports.oAuth1TokenStore = void 0;\nvar _oauth = __webpack_require__(/*! oauth */ \"(sc_server)/./node_modules/oauth/index.js\");\nfunction oAuth1Client(options) {\n    var _provider$version, _provider$encoding;\n    const provider = options.provider;\n    const oauth1Client = new _oauth.OAuth(provider.requestTokenUrl, provider.accessTokenUrl, provider.clientId, provider.clientSecret, (_provider$version = provider.version) !== null && _provider$version !== void 0 ? _provider$version : \"1.0\", provider.callbackUrl, (_provider$encoding = provider.encoding) !== null && _provider$encoding !== void 0 ? _provider$encoding : \"HMAC-SHA1\");\n    const originalGet = oauth1Client.get.bind(oauth1Client);\n    oauth1Client.get = async (...args)=>{\n        return await new Promise((resolve, reject)=>{\n            originalGet(...args, (error, result)=>{\n                if (error) {\n                    return reject(error);\n                }\n                resolve(result);\n            });\n        });\n    };\n    const originalGetOAuth1AccessToken = oauth1Client.getOAuthAccessToken.bind(oauth1Client);\n    oauth1Client.getOAuthAccessToken = async (...args)=>{\n        return await new Promise((resolve, reject)=>{\n            originalGetOAuth1AccessToken(...args, (error, oauth_token, oauth_token_secret)=>{\n                if (error) {\n                    return reject(error);\n                }\n                resolve({\n                    oauth_token,\n                    oauth_token_secret\n                });\n            });\n        });\n    };\n    const originalGetOAuthRequestToken = oauth1Client.getOAuthRequestToken.bind(oauth1Client);\n    oauth1Client.getOAuthRequestToken = async (params = {})=>{\n        return await new Promise((resolve, reject)=>{\n            originalGetOAuthRequestToken(params, (error, oauth_token, oauth_token_secret, params)=>{\n                if (error) {\n                    return reject(error);\n                }\n                resolve({\n                    oauth_token,\n                    oauth_token_secret,\n                    params\n                });\n            });\n        });\n    };\n    return oauth1Client;\n}\nconst oAuth1TokenStore = new Map();\nexports.oAuth1TokenStore = oAuth1TokenStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2NsaWVudC1sZWdhY3kuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELG9CQUFvQkUsR0FBR0E7QUFDdkJGLHdCQUF3QkcsR0FBRyxLQUFLO0FBRWhDLElBQUlDLFNBQVNDLG1CQUFPQSxDQUFDLHdEQUFPO0FBRTVCLFNBQVNILGFBQWFJLE9BQU87SUFDM0IsSUFBSUMsbUJBQW1CQztJQUV2QixNQUFNQyxXQUFXSCxRQUFRRztJQUN6QixNQUFNQyxlQUFlLElBQUlOLE9BQU9PLE1BQU1GLFNBQVNHLGlCQUFpQkgsU0FBU0ksZ0JBQWdCSixTQUFTSyxVQUFVTCxTQUFTTSxjQUFjLENBQUNSLG9CQUFvQkUsU0FBU08sT0FBTSxNQUFPLFFBQVFULHNCQUFzQixLQUFLLElBQUlBLG9CQUFvQixPQUFPRSxTQUFTUSxhQUFhLENBQUNULHFCQUFxQkMsU0FBU1MsUUFBTyxNQUFPLFFBQVFWLHVCQUF1QixLQUFLLElBQUlBLHFCQUFxQjtJQUNoWCxNQUFNVyxjQUFjVCxhQUFhVSxJQUFJQyxLQUFLWDtJQUUxQ0EsYUFBYVUsTUFBTSxPQUFPLEdBQUdFO1FBQzNCLE9BQU8sTUFBTSxJQUFJQyxRQUFRLENBQUNDLFNBQVNDO1lBQ2pDTixlQUFlRyxNQUFNLENBQUNJLE9BQU9DO2dCQUMzQixJQUFJRCxPQUFPO29CQUNULE9BQU9ELE9BQU9DO2dCQUNoQjtnQkFFQUYsUUFBUUc7WUFDVjtRQUNGO0lBQ0Y7SUFFQSxNQUFNQywrQkFBK0JsQixhQUFhbUIsb0JBQW9CUixLQUFLWDtJQUUzRUEsYUFBYW1CLHNCQUFzQixPQUFPLEdBQUdQO1FBQzNDLE9BQU8sTUFBTSxJQUFJQyxRQUFRLENBQUNDLFNBQVNDO1lBQ2pDRyxnQ0FBZ0NOLE1BQU0sQ0FBQ0ksT0FBT0ksYUFBYUM7Z0JBQ3pELElBQUlMLE9BQU87b0JBQ1QsT0FBT0QsT0FBT0M7Z0JBQ2hCO2dCQUVBRixRQUFRO29CQUNOTTtvQkFDQUM7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxNQUFNQywrQkFBK0J0QixhQUFhdUIscUJBQXFCWixLQUFLWDtJQUU1RUEsYUFBYXVCLHVCQUF1QixPQUFPQyxTQUFTLENBQUMsQ0FBQztRQUNwRCxPQUFPLE1BQU0sSUFBSVgsUUFBUSxDQUFDQyxTQUFTQztZQUNqQ08sNkJBQTZCRSxRQUFRLENBQUNSLE9BQU9JLGFBQWFDLG9CQUFvQkc7Z0JBQzVFLElBQUlSLE9BQU87b0JBQ1QsT0FBT0QsT0FBT0M7Z0JBQ2hCO2dCQUVBRixRQUFRO29CQUNOTTtvQkFDQUM7b0JBQ0FHO2dCQUNGO1lBQ0Y7UUFDRjtJQUNGO0lBRUEsT0FBT3hCO0FBQ1Q7QUFFQSxNQUFNUCxtQkFBbUIsSUFBSWdDO0FBQzdCbkMsd0JBQXdCRyxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2NsaWVudC1sZWdhY3kuanM/ODZjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMub0F1dGgxQ2xpZW50ID0gb0F1dGgxQ2xpZW50O1xuZXhwb3J0cy5vQXV0aDFUb2tlblN0b3JlID0gdm9pZCAwO1xuXG52YXIgX29hdXRoID0gcmVxdWlyZShcIm9hdXRoXCIpO1xuXG5mdW5jdGlvbiBvQXV0aDFDbGllbnQob3B0aW9ucykge1xuICB2YXIgX3Byb3ZpZGVyJHZlcnNpb24sIF9wcm92aWRlciRlbmNvZGluZztcblxuICBjb25zdCBwcm92aWRlciA9IG9wdGlvbnMucHJvdmlkZXI7XG4gIGNvbnN0IG9hdXRoMUNsaWVudCA9IG5ldyBfb2F1dGguT0F1dGgocHJvdmlkZXIucmVxdWVzdFRva2VuVXJsLCBwcm92aWRlci5hY2Nlc3NUb2tlblVybCwgcHJvdmlkZXIuY2xpZW50SWQsIHByb3ZpZGVyLmNsaWVudFNlY3JldCwgKF9wcm92aWRlciR2ZXJzaW9uID0gcHJvdmlkZXIudmVyc2lvbikgIT09IG51bGwgJiYgX3Byb3ZpZGVyJHZlcnNpb24gIT09IHZvaWQgMCA/IF9wcm92aWRlciR2ZXJzaW9uIDogXCIxLjBcIiwgcHJvdmlkZXIuY2FsbGJhY2tVcmwsIChfcHJvdmlkZXIkZW5jb2RpbmcgPSBwcm92aWRlci5lbmNvZGluZykgIT09IG51bGwgJiYgX3Byb3ZpZGVyJGVuY29kaW5nICE9PSB2b2lkIDAgPyBfcHJvdmlkZXIkZW5jb2RpbmcgOiBcIkhNQUMtU0hBMVwiKTtcbiAgY29uc3Qgb3JpZ2luYWxHZXQgPSBvYXV0aDFDbGllbnQuZ2V0LmJpbmQob2F1dGgxQ2xpZW50KTtcblxuICBvYXV0aDFDbGllbnQuZ2V0ID0gYXN5bmMgKC4uLmFyZ3MpID0+IHtcbiAgICByZXR1cm4gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgb3JpZ2luYWxHZXQoLi4uYXJncywgKGVycm9yLCByZXN1bHQpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgIH1cblxuICAgICAgICByZXNvbHZlKHJlc3VsdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBvcmlnaW5hbEdldE9BdXRoMUFjY2Vzc1Rva2VuID0gb2F1dGgxQ2xpZW50LmdldE9BdXRoQWNjZXNzVG9rZW4uYmluZChvYXV0aDFDbGllbnQpO1xuXG4gIG9hdXRoMUNsaWVudC5nZXRPQXV0aEFjY2Vzc1Rva2VuID0gYXN5bmMgKC4uLmFyZ3MpID0+IHtcbiAgICByZXR1cm4gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgb3JpZ2luYWxHZXRPQXV0aDFBY2Nlc3NUb2tlbiguLi5hcmdzLCAoZXJyb3IsIG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQpID0+IHtcbiAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgcmV0dXJuIHJlamVjdChlcnJvcik7XG4gICAgICAgIH1cblxuICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICBvYXV0aF90b2tlbixcbiAgICAgICAgICBvYXV0aF90b2tlbl9zZWNyZXRcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBvcmlnaW5hbEdldE9BdXRoUmVxdWVzdFRva2VuID0gb2F1dGgxQ2xpZW50LmdldE9BdXRoUmVxdWVzdFRva2VuLmJpbmQob2F1dGgxQ2xpZW50KTtcblxuICBvYXV0aDFDbGllbnQuZ2V0T0F1dGhSZXF1ZXN0VG9rZW4gPSBhc3luYyAocGFyYW1zID0ge30pID0+IHtcbiAgICByZXR1cm4gYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgb3JpZ2luYWxHZXRPQXV0aFJlcXVlc3RUb2tlbihwYXJhbXMsIChlcnJvciwgb2F1dGhfdG9rZW4sIG9hdXRoX3Rva2VuX3NlY3JldCwgcGFyYW1zKSA9PiB7XG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgb2F1dGhfdG9rZW4sXG4gICAgICAgICAgb2F1dGhfdG9rZW5fc2VjcmV0LFxuICAgICAgICAgIHBhcmFtc1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBvYXV0aDFDbGllbnQ7XG59XG5cbmNvbnN0IG9BdXRoMVRva2VuU3RvcmUgPSBuZXcgTWFwKCk7XG5leHBvcnRzLm9BdXRoMVRva2VuU3RvcmUgPSBvQXV0aDFUb2tlblN0b3JlOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm9BdXRoMUNsaWVudCIsIm9BdXRoMVRva2VuU3RvcmUiLCJfb2F1dGgiLCJyZXF1aXJlIiwib3B0aW9ucyIsIl9wcm92aWRlciR2ZXJzaW9uIiwiX3Byb3ZpZGVyJGVuY29kaW5nIiwicHJvdmlkZXIiLCJvYXV0aDFDbGllbnQiLCJPQXV0aCIsInJlcXVlc3RUb2tlblVybCIsImFjY2Vzc1Rva2VuVXJsIiwiY2xpZW50SWQiLCJjbGllbnRTZWNyZXQiLCJ2ZXJzaW9uIiwiY2FsbGJhY2tVcmwiLCJlbmNvZGluZyIsIm9yaWdpbmFsR2V0IiwiZ2V0IiwiYmluZCIsImFyZ3MiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImVycm9yIiwicmVzdWx0Iiwib3JpZ2luYWxHZXRPQXV0aDFBY2Nlc3NUb2tlbiIsImdldE9BdXRoQWNjZXNzVG9rZW4iLCJvYXV0aF90b2tlbiIsIm9hdXRoX3Rva2VuX3NlY3JldCIsIm9yaWdpbmFsR2V0T0F1dGhSZXF1ZXN0VG9rZW4iLCJnZXRPQXV0aFJlcXVlc3RUb2tlbiIsInBhcmFtcyIsIk1hcCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/oauth/client-legacy.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/oauth/client.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/lib/oauth/client.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.openidClient = openidClient;\nvar _openidClient = __webpack_require__(/*! openid-client */ \"(sc_server)/./node_modules/openid-client/lib/index.js\");\nasync function openidClient(options) {\n    const provider = options.provider;\n    if (provider.httpOptions) _openidClient.custom.setHttpOptionsDefaults(provider.httpOptions);\n    let issuer;\n    if (provider.wellKnown) {\n        issuer = await _openidClient.Issuer.discover(provider.wellKnown);\n    } else {\n        var _provider$authorizati, _provider$token, _provider$userinfo;\n        issuer = new _openidClient.Issuer({\n            issuer: provider.issuer,\n            authorization_endpoint: (_provider$authorizati = provider.authorization) === null || _provider$authorizati === void 0 ? void 0 : _provider$authorizati.url,\n            token_endpoint: (_provider$token = provider.token) === null || _provider$token === void 0 ? void 0 : _provider$token.url,\n            userinfo_endpoint: (_provider$userinfo = provider.userinfo) === null || _provider$userinfo === void 0 ? void 0 : _provider$userinfo.url,\n            jwks_uri: provider.jwks_endpoint\n        });\n    }\n    const client = new issuer.Client({\n        client_id: provider.clientId,\n        client_secret: provider.clientSecret,\n        redirect_uris: [\n            provider.callbackUrl\n        ],\n        ...provider.client\n    }, provider.jwks);\n    client[_openidClient.custom.clock_tolerance] = 10;\n    return client;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2NsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsb0JBQW9CRSxHQUFHQTtBQUV2QixJQUFJQyxnQkFBZ0JDLG1CQUFPQSxDQUFDLDRFQUFlO0FBRTNDLGVBQWVGLGFBQWFHLE9BQU87SUFDakMsTUFBTUMsV0FBV0QsUUFBUUM7SUFDekIsSUFBSUEsU0FBU0MsYUFBYUosY0FBY0ssT0FBT0MsdUJBQXVCSCxTQUFTQztJQUMvRSxJQUFJRztJQUVKLElBQUlKLFNBQVNLLFdBQVc7UUFDdEJELFNBQVMsTUFBTVAsY0FBY1MsT0FBT0MsU0FBU1AsU0FBU0s7SUFDeEQsT0FBTztRQUNMLElBQUlHLHVCQUF1QkMsaUJBQWlCQztRQUU1Q04sU0FBUyxJQUFJUCxjQUFjUyxPQUFPO1lBQ2hDRixRQUFRSixTQUFTSTtZQUNqQk8sd0JBQXdCLENBQUNILHdCQUF3QlIsU0FBU1ksYUFBWSxNQUFPLFFBQVFKLDBCQUEwQixLQUFLLElBQUksS0FBSyxJQUFJQSxzQkFBc0JLO1lBQ3ZKQyxnQkFBZ0IsQ0FBQ0wsa0JBQWtCVCxTQUFTZSxLQUFJLE1BQU8sUUFBUU4sb0JBQW9CLEtBQUssSUFBSSxLQUFLLElBQUlBLGdCQUFnQkk7WUFDckhHLG1CQUFtQixDQUFDTixxQkFBcUJWLFNBQVNpQixRQUFPLE1BQU8sUUFBUVAsdUJBQXVCLEtBQUssSUFBSSxLQUFLLElBQUlBLG1CQUFtQkc7WUFDcElLLFVBQVVsQixTQUFTbUI7UUFDckI7SUFDRjtJQUVBLE1BQU1DLFNBQVMsSUFBSWhCLE9BQU9pQixPQUFPO1FBQy9CQyxXQUFXdEIsU0FBU3VCO1FBQ3BCQyxlQUFleEIsU0FBU3lCO1FBQ3hCQyxlQUFlO1lBQUMxQixTQUFTMkI7U0FBWTtRQUNyQyxHQUFHM0IsU0FBU29CLE1BQU07SUFDcEIsR0FBR3BCLFNBQVM0QjtJQUNaUixNQUFNLENBQUN2QixjQUFjSyxPQUFPMkIsZ0JBQWdCLEdBQUc7SUFDL0MsT0FBT1Q7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL29hdXRoL2NsaWVudC5qcz8wMDNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5vcGVuaWRDbGllbnQgPSBvcGVuaWRDbGllbnQ7XG5cbnZhciBfb3BlbmlkQ2xpZW50ID0gcmVxdWlyZShcIm9wZW5pZC1jbGllbnRcIik7XG5cbmFzeW5jIGZ1bmN0aW9uIG9wZW5pZENsaWVudChvcHRpb25zKSB7XG4gIGNvbnN0IHByb3ZpZGVyID0gb3B0aW9ucy5wcm92aWRlcjtcbiAgaWYgKHByb3ZpZGVyLmh0dHBPcHRpb25zKSBfb3BlbmlkQ2xpZW50LmN1c3RvbS5zZXRIdHRwT3B0aW9uc0RlZmF1bHRzKHByb3ZpZGVyLmh0dHBPcHRpb25zKTtcbiAgbGV0IGlzc3VlcjtcblxuICBpZiAocHJvdmlkZXIud2VsbEtub3duKSB7XG4gICAgaXNzdWVyID0gYXdhaXQgX29wZW5pZENsaWVudC5Jc3N1ZXIuZGlzY292ZXIocHJvdmlkZXIud2VsbEtub3duKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgX3Byb3ZpZGVyJGF1dGhvcml6YXRpLCBfcHJvdmlkZXIkdG9rZW4sIF9wcm92aWRlciR1c2VyaW5mbztcblxuICAgIGlzc3VlciA9IG5ldyBfb3BlbmlkQ2xpZW50Lklzc3Vlcih7XG4gICAgICBpc3N1ZXI6IHByb3ZpZGVyLmlzc3VlcixcbiAgICAgIGF1dGhvcml6YXRpb25fZW5kcG9pbnQ6IChfcHJvdmlkZXIkYXV0aG9yaXphdGkgPSBwcm92aWRlci5hdXRob3JpemF0aW9uKSA9PT0gbnVsbCB8fCBfcHJvdmlkZXIkYXV0aG9yaXphdGkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm92aWRlciRhdXRob3JpemF0aS51cmwsXG4gICAgICB0b2tlbl9lbmRwb2ludDogKF9wcm92aWRlciR0b2tlbiA9IHByb3ZpZGVyLnRva2VuKSA9PT0gbnVsbCB8fCBfcHJvdmlkZXIkdG9rZW4gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm92aWRlciR0b2tlbi51cmwsXG4gICAgICB1c2VyaW5mb19lbmRwb2ludDogKF9wcm92aWRlciR1c2VyaW5mbyA9IHByb3ZpZGVyLnVzZXJpbmZvKSA9PT0gbnVsbCB8fCBfcHJvdmlkZXIkdXNlcmluZm8gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm92aWRlciR1c2VyaW5mby51cmwsXG4gICAgICBqd2tzX3VyaTogcHJvdmlkZXIuandrc19lbmRwb2ludFxuICAgIH0pO1xuICB9XG5cbiAgY29uc3QgY2xpZW50ID0gbmV3IGlzc3Vlci5DbGllbnQoe1xuICAgIGNsaWVudF9pZDogcHJvdmlkZXIuY2xpZW50SWQsXG4gICAgY2xpZW50X3NlY3JldDogcHJvdmlkZXIuY2xpZW50U2VjcmV0LFxuICAgIHJlZGlyZWN0X3VyaXM6IFtwcm92aWRlci5jYWxsYmFja1VybF0sXG4gICAgLi4ucHJvdmlkZXIuY2xpZW50XG4gIH0sIHByb3ZpZGVyLmp3a3MpO1xuICBjbGllbnRbX29wZW5pZENsaWVudC5jdXN0b20uY2xvY2tfdG9sZXJhbmNlXSA9IDEwO1xuICByZXR1cm4gY2xpZW50O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm9wZW5pZENsaWVudCIsIl9vcGVuaWRDbGllbnQiLCJyZXF1aXJlIiwib3B0aW9ucyIsInByb3ZpZGVyIiwiaHR0cE9wdGlvbnMiLCJjdXN0b20iLCJzZXRIdHRwT3B0aW9uc0RlZmF1bHRzIiwiaXNzdWVyIiwid2VsbEtub3duIiwiSXNzdWVyIiwiZGlzY292ZXIiLCJfcHJvdmlkZXIkYXV0aG9yaXphdGkiLCJfcHJvdmlkZXIkdG9rZW4iLCJfcHJvdmlkZXIkdXNlcmluZm8iLCJhdXRob3JpemF0aW9uX2VuZHBvaW50IiwiYXV0aG9yaXphdGlvbiIsInVybCIsInRva2VuX2VuZHBvaW50IiwidG9rZW4iLCJ1c2VyaW5mb19lbmRwb2ludCIsInVzZXJpbmZvIiwiandrc191cmkiLCJqd2tzX2VuZHBvaW50IiwiY2xpZW50IiwiQ2xpZW50IiwiY2xpZW50X2lkIiwiY2xpZW50SWQiLCJjbGllbnRfc2VjcmV0IiwiY2xpZW50U2VjcmV0IiwicmVkaXJlY3RfdXJpcyIsImNhbGxiYWNrVXJsIiwiandrcyIsImNsb2NrX3RvbGVyYW5jZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/oauth/client.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/providers.js":
/*!******************************************************!*\
  !*** ./node_modules/next-auth/core/lib/providers.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = parseProviders;\nvar _merge = __webpack_require__(/*! ../../utils/merge */ \"(sc_server)/./node_modules/next-auth/utils/merge.js\");\nfunction parseProviders(params) {\n    const { url, providerId } = params;\n    const providers = params.providers.map(({ options: userOptions, ...rest })=>{\n        var _ref;\n        if (rest.type === \"oauth\") {\n            var _normalizedUserOption;\n            const normalizedOptions = normalizeOAuthOptions(rest);\n            const normalizedUserOptions = normalizeOAuthOptions(userOptions, true);\n            const id = (_normalizedUserOption = normalizedUserOptions === null || normalizedUserOptions === void 0 ? void 0 : normalizedUserOptions.id) !== null && _normalizedUserOption !== void 0 ? _normalizedUserOption : rest.id;\n            return (0, _merge.merge)(normalizedOptions, {\n                ...normalizedUserOptions,\n                signinUrl: `${url}/signin/${id}`,\n                callbackUrl: `${url}/callback/${id}`\n            });\n        }\n        const id = (_ref = userOptions === null || userOptions === void 0 ? void 0 : userOptions.id) !== null && _ref !== void 0 ? _ref : rest.id;\n        return (0, _merge.merge)(rest, {\n            ...userOptions,\n            signinUrl: `${url}/signin/${id}`,\n            callbackUrl: `${url}/callback/${id}`\n        });\n    });\n    return {\n        providers,\n        provider: providers.find(({ id })=>id === providerId)\n    };\n}\nfunction normalizeOAuthOptions(oauthOptions, isUserOptions = false) {\n    var _normalized$version;\n    if (!oauthOptions) return;\n    const normalized = Object.entries(oauthOptions).reduce((acc, [key, value])=>{\n        if ([\n            \"authorization\",\n            \"token\",\n            \"userinfo\"\n        ].includes(key) && typeof value === \"string\") {\n            var _url$searchParams;\n            const url = new URL(value);\n            acc[key] = {\n                url: `${url.origin}${url.pathname}`,\n                params: Object.fromEntries((_url$searchParams = url.searchParams) !== null && _url$searchParams !== void 0 ? _url$searchParams : [])\n            };\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, {});\n    if (!isUserOptions && !((_normalized$version = normalized.version) !== null && _normalized$version !== void 0 && _normalized$version.startsWith(\"1.\"))) {\n        var _ref2, _normalized$idToken, _normalized$wellKnown, _normalized$authoriza, _normalized$authoriza2, _normalized$authoriza3;\n        normalized.idToken = Boolean((_ref2 = (_normalized$idToken = normalized.idToken) !== null && _normalized$idToken !== void 0 ? _normalized$idToken : (_normalized$wellKnown = normalized.wellKnown) === null || _normalized$wellKnown === void 0 ? void 0 : _normalized$wellKnown.includes(\"openid-configuration\")) !== null && _ref2 !== void 0 ? _ref2 : (_normalized$authoriza = normalized.authorization) === null || _normalized$authoriza === void 0 ? void 0 : (_normalized$authoriza2 = _normalized$authoriza.params) === null || _normalized$authoriza2 === void 0 ? void 0 : (_normalized$authoriza3 = _normalized$authoriza2.scope) === null || _normalized$authoriza3 === void 0 ? void 0 : _normalized$authoriza3.includes(\"openid\"));\n        if (!normalized.checks) normalized.checks = [\n            \"state\"\n        ];\n    }\n    return normalized;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/providers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/lib/utils.js":
/*!**************************************************!*\
  !*** ./node_modules/next-auth/core/lib/utils.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.createSecret = createSecret;\nexports.fromDate = fromDate;\nexports.hashToken = hashToken;\nvar _crypto = __webpack_require__(/*! crypto */ \"crypto\");\nfunction fromDate(time, date = Date.now()) {\n    return new Date(date + time * 1000);\n}\nfunction hashToken(token, options) {\n    var _provider$secret;\n    const { provider, secret } = options;\n    return (0, _crypto.createHash)(\"sha256\").update(`${token}${(_provider$secret = provider.secret) !== null && _provider$secret !== void 0 ? _provider$secret : secret}`).digest(\"hex\");\n}\nfunction createSecret(params) {\n    var _authOptions$secret;\n    const { authOptions, url } = params;\n    return (_authOptions$secret = authOptions.secret) !== null && _authOptions$secret !== void 0 ? _authOptions$secret : (0, _crypto.createHash)(\"sha256\").update(JSON.stringify({\n        ...url,\n        ...authOptions\n    })).digest(\"hex\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvbGliL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCxvQkFBb0JFLEdBQUdBO0FBQ3ZCRixnQkFBZ0JHLEdBQUdBO0FBQ25CSCxpQkFBaUJJLEdBQUdBO0FBRXBCLElBQUlDLFVBQVVDLG1CQUFPQSxDQUFDLHNCQUFRO0FBRTlCLFNBQVNILFNBQVNJLElBQUksRUFBRUMsT0FBT0MsS0FBS0MsS0FBSztJQUN2QyxPQUFPLElBQUlELEtBQUtELE9BQU9ELE9BQU87QUFDaEM7QUFFQSxTQUFTSCxVQUFVTyxLQUFLLEVBQUVDLE9BQU87SUFDL0IsSUFBSUM7SUFFSixNQUFNLEVBQ0pDLFFBQVEsRUFDUkMsTUFBTSxFQUNQLEdBQUdIO0lBQ0osT0FBTyxDQUFDLEdBQUdQLFFBQVFXLFVBQVMsRUFBRyxVQUFVQyxPQUFPLENBQUMsRUFBRU4sTUFBTSxFQUFFLENBQUNFLG1CQUFtQkMsU0FBU0MsTUFBSyxNQUFPLFFBQVFGLHFCQUFxQixLQUFLLElBQUlBLG1CQUFtQkUsT0FBTyxDQUFDLEVBQUVHLE9BQU87QUFDaEw7QUFFQSxTQUFTaEIsYUFBYWlCLE1BQU07SUFDMUIsSUFBSUM7SUFFSixNQUFNLEVBQ0pDLFdBQVcsRUFDWEMsR0FBRyxFQUNKLEdBQUdIO0lBQ0osT0FBTyxDQUFDQyxzQkFBc0JDLFlBQVlOLE1BQUssTUFBTyxRQUFRSyx3QkFBd0IsS0FBSyxJQUFJQSxzQkFBc0IsQ0FBQyxHQUFHZixRQUFRVyxVQUFTLEVBQUcsVUFBVUMsT0FBT00sS0FBS0MsVUFBVTtRQUFFLEdBQUdGLEdBQUc7UUFDbkwsR0FBR0QsV0FBVztJQUNoQixJQUFJSCxPQUFPO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL2xpYi91dGlscy5qcz8yMzY0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5jcmVhdGVTZWNyZXQgPSBjcmVhdGVTZWNyZXQ7XG5leHBvcnRzLmZyb21EYXRlID0gZnJvbURhdGU7XG5leHBvcnRzLmhhc2hUb2tlbiA9IGhhc2hUb2tlbjtcblxudmFyIF9jcnlwdG8gPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuXG5mdW5jdGlvbiBmcm9tRGF0ZSh0aW1lLCBkYXRlID0gRGF0ZS5ub3coKSkge1xuICByZXR1cm4gbmV3IERhdGUoZGF0ZSArIHRpbWUgKiAxMDAwKTtcbn1cblxuZnVuY3Rpb24gaGFzaFRva2VuKHRva2VuLCBvcHRpb25zKSB7XG4gIHZhciBfcHJvdmlkZXIkc2VjcmV0O1xuXG4gIGNvbnN0IHtcbiAgICBwcm92aWRlcixcbiAgICBzZWNyZXRcbiAgfSA9IG9wdGlvbnM7XG4gIHJldHVybiAoMCwgX2NyeXB0by5jcmVhdGVIYXNoKShcInNoYTI1NlwiKS51cGRhdGUoYCR7dG9rZW59JHsoX3Byb3ZpZGVyJHNlY3JldCA9IHByb3ZpZGVyLnNlY3JldCkgIT09IG51bGwgJiYgX3Byb3ZpZGVyJHNlY3JldCAhPT0gdm9pZCAwID8gX3Byb3ZpZGVyJHNlY3JldCA6IHNlY3JldH1gKS5kaWdlc3QoXCJoZXhcIik7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVNlY3JldChwYXJhbXMpIHtcbiAgdmFyIF9hdXRoT3B0aW9ucyRzZWNyZXQ7XG5cbiAgY29uc3Qge1xuICAgIGF1dGhPcHRpb25zLFxuICAgIHVybFxuICB9ID0gcGFyYW1zO1xuICByZXR1cm4gKF9hdXRoT3B0aW9ucyRzZWNyZXQgPSBhdXRoT3B0aW9ucy5zZWNyZXQpICE9PSBudWxsICYmIF9hdXRoT3B0aW9ucyRzZWNyZXQgIT09IHZvaWQgMCA/IF9hdXRoT3B0aW9ucyRzZWNyZXQgOiAoMCwgX2NyeXB0by5jcmVhdGVIYXNoKShcInNoYTI1NlwiKS51cGRhdGUoSlNPTi5zdHJpbmdpZnkoeyAuLi51cmwsXG4gICAgLi4uYXV0aE9wdGlvbnNcbiAgfSkpLmRpZ2VzdChcImhleFwiKTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjcmVhdGVTZWNyZXQiLCJmcm9tRGF0ZSIsImhhc2hUb2tlbiIsIl9jcnlwdG8iLCJyZXF1aXJlIiwidGltZSIsImRhdGUiLCJEYXRlIiwibm93IiwidG9rZW4iLCJvcHRpb25zIiwiX3Byb3ZpZGVyJHNlY3JldCIsInByb3ZpZGVyIiwic2VjcmV0IiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsImRpZ2VzdCIsInBhcmFtcyIsIl9hdXRoT3B0aW9ucyRzZWNyZXQiLCJhdXRoT3B0aW9ucyIsInVybCIsIkpTT04iLCJzdHJpbmdpZnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/lib/utils.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/pages/error.js":
/*!****************************************************!*\
  !*** ./node_modules/next-auth/core/pages/error.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = ErrorPage;\nvar _preact = __webpack_require__(/*! preact */ \"(sc_server)/./node_modules/preact/dist/preact.js\");\nfunction ErrorPage(props) {\n    var _errors$error$toLower;\n    const { url, error = \"default\", theme } = props;\n    const signinPageUrl = `${url}/signin`;\n    const errors = {\n        default: {\n            status: 200,\n            heading: \"Error\",\n            message: (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n                className: \"site\",\n                href: url === null || url === void 0 ? void 0 : url.origin\n            }, url === null || url === void 0 ? void 0 : url.host))\n        },\n        configuration: {\n            status: 500,\n            heading: \"Server error\",\n            message: (0, _preact.h)(\"div\", null, (0, _preact.h)(\"p\", null, \"There is a problem with the server configuration.\"), (0, _preact.h)(\"p\", null, \"Check the server logs for more information.\"))\n        },\n        accessdenied: {\n            status: 403,\n            heading: \"Access Denied\",\n            message: (0, _preact.h)(\"div\", null, (0, _preact.h)(\"p\", null, \"You do not have permission to sign in.\"), (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n                className: \"button\",\n                href: signinPageUrl\n            }, \"Sign in\")))\n        },\n        verification: {\n            status: 403,\n            heading: \"Unable to sign in\",\n            message: (0, _preact.h)(\"div\", null, (0, _preact.h)(\"p\", null, \"The sign in link is no longer valid.\"), (0, _preact.h)(\"p\", null, \"It may have been used already or it may have expired.\")),\n            signin: (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n                className: \"button\",\n                href: signinPageUrl\n            }, \"Sign in\"))\n        }\n    };\n    const { status, heading, message, signin } = (_errors$error$toLower = errors[error.toLowerCase()]) !== null && _errors$error$toLower !== void 0 ? _errors$error$toLower : errors.default;\n    return {\n        status,\n        html: (0, _preact.h)(\"div\", {\n            className: \"error\"\n        }, (theme === null || theme === void 0 ? void 0 : theme.brandColor) && (0, _preact.h)(\"style\", {\n            dangerouslySetInnerHTML: {\n                __html: `\n        :root {\n          --brand-color: ${theme === null || theme === void 0 ? void 0 : theme.brandColor}\n        }\n      `\n            }\n        }), (0, _preact.h)(\"div\", {\n            className: \"card\"\n        }, (theme === null || theme === void 0 ? void 0 : theme.logo) && (0, _preact.h)(\"img\", {\n            src: theme.logo,\n            alt: \"Logo\",\n            className: \"logo\"\n        }), (0, _preact.h)(\"h1\", null, heading), (0, _preact.h)(\"div\", {\n            className: \"message\"\n        }, message), signin))\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvZXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlRSxHQUFHQztBQUVsQixJQUFJQyxVQUFVQyxtQkFBT0EsQ0FBQyxnRUFBUTtBQUU5QixTQUFTRixVQUFVRyxLQUFLO0lBQ3RCLElBQUlDO0lBRUosTUFBTSxFQUNKQyxHQUFHLEVBQ0hDLFFBQVEsU0FBUyxFQUNqQkMsS0FBSyxFQUNOLEdBQUdKO0lBQ0osTUFBTUssZ0JBQWdCLENBQUMsRUFBRUgsSUFBSSxPQUFPLENBQUM7SUFDckMsTUFBTUksU0FBUztRQUNiVixTQUFTO1lBQ1BXLFFBQVE7WUFDUkMsU0FBUztZQUNUQyxTQUFTLENBQUMsR0FBR1gsUUFBUVksQ0FBQUEsRUFBRyxLQUFLLE1BQU0sQ0FBQyxHQUFHWixRQUFRWSxDQUFBQSxFQUFHLEtBQUs7Z0JBQ3JEQyxXQUFXO2dCQUNYQyxNQUFNVixRQUFRLFFBQVFBLFFBQVEsS0FBSyxJQUFJLEtBQUssSUFBSUEsSUFBSVc7WUFDdEQsR0FBR1gsUUFBUSxRQUFRQSxRQUFRLEtBQUssSUFBSSxLQUFLLElBQUlBLElBQUlZO1FBQ25EO1FBQ0FDLGVBQWU7WUFDYlIsUUFBUTtZQUNSQyxTQUFTO1lBQ1RDLFNBQVMsQ0FBQyxHQUFHWCxRQUFRWSxDQUFBQSxFQUFHLE9BQU8sTUFBTSxDQUFDLEdBQUdaLFFBQVFZLENBQUFBLEVBQUcsS0FBSyxNQUFNLHNEQUFzRCxDQUFDLEdBQUdaLFFBQVFZLENBQUFBLEVBQUcsS0FBSyxNQUFNO1FBQ2pKO1FBQ0FNLGNBQWM7WUFDWlQsUUFBUTtZQUNSQyxTQUFTO1lBQ1RDLFNBQVMsQ0FBQyxHQUFHWCxRQUFRWSxDQUFBQSxFQUFHLE9BQU8sTUFBTSxDQUFDLEdBQUdaLFFBQVFZLENBQUFBLEVBQUcsS0FBSyxNQUFNLDJDQUEyQyxDQUFDLEdBQUdaLFFBQVFZLENBQUFBLEVBQUcsS0FBSyxNQUFNLENBQUMsR0FBR1osUUFBUVksQ0FBQUEsRUFBRyxLQUFLO2dCQUN0SkMsV0FBVztnQkFDWEMsTUFBTVA7WUFDUixHQUFHO1FBQ0w7UUFDQVksY0FBYztZQUNaVixRQUFRO1lBQ1JDLFNBQVM7WUFDVEMsU0FBUyxDQUFDLEdBQUdYLFFBQVFZLENBQUFBLEVBQUcsT0FBTyxNQUFNLENBQUMsR0FBR1osUUFBUVksQ0FBQUEsRUFBRyxLQUFLLE1BQU0seUNBQXlDLENBQUMsR0FBR1osUUFBUVksQ0FBQUEsRUFBRyxLQUFLLE1BQU07WUFDbElRLFFBQVEsQ0FBQyxHQUFHcEIsUUFBUVksQ0FBQUEsRUFBRyxLQUFLLE1BQU0sQ0FBQyxHQUFHWixRQUFRWSxDQUFBQSxFQUFHLEtBQUs7Z0JBQ3BEQyxXQUFXO2dCQUNYQyxNQUFNUDtZQUNSLEdBQUc7UUFDTDtJQUNGO0lBQ0EsTUFBTSxFQUNKRSxNQUFNLEVBQ05DLE9BQU8sRUFDUEMsT0FBTyxFQUNQUyxNQUFNLEVBQ1AsR0FBRyxDQUFDakIsd0JBQXdCSyxNQUFNLENBQUNILE1BQU1nQixjQUFjLE1BQU0sUUFBUWxCLDBCQUEwQixLQUFLLElBQUlBLHdCQUF3QkssT0FBT1Y7SUFDeEksT0FBTztRQUNMVztRQUNBYSxNQUFNLENBQUMsR0FBR3RCLFFBQVFZLENBQUFBLEVBQUcsT0FBTztZQUMxQkMsV0FBVztRQUNiLEdBQUcsQ0FBQ1AsVUFBVSxRQUFRQSxVQUFVLEtBQUssSUFBSSxLQUFLLElBQUlBLE1BQU1pQixVQUFTLEtBQU0sQ0FBQyxHQUFHdkIsUUFBUVksQ0FBQUEsRUFBRyxTQUFTO1lBQzdGWSx5QkFBeUI7Z0JBQ3ZCQyxRQUFRLENBQUM7O3lCQUVRLEVBQUVuQixVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsTUFBTWlCLFdBQVc7O01BRXBGLENBQUM7WUFDRDtRQUNGLElBQUksQ0FBQyxHQUFHdkIsUUFBUVksQ0FBQUEsRUFBRyxPQUFPO1lBQ3hCQyxXQUFXO1FBQ2IsR0FBRyxDQUFDUCxVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsTUFBTW9CLElBQUcsS0FBTSxDQUFDLEdBQUcxQixRQUFRWSxDQUFBQSxFQUFHLE9BQU87WUFDckZlLEtBQUtyQixNQUFNb0I7WUFDWEUsS0FBSztZQUNMZixXQUFXO1FBQ2IsSUFBSSxDQUFDLEdBQUdiLFFBQVFZLENBQUFBLEVBQUcsTUFBTSxNQUFNRixVQUFVLENBQUMsR0FBR1YsUUFBUVksQ0FBQUEsRUFBRyxPQUFPO1lBQzdEQyxXQUFXO1FBQ2IsR0FBR0YsVUFBVVM7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9wYWdlcy9lcnJvci5qcz8yYWUwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gRXJyb3JQYWdlO1xuXG52YXIgX3ByZWFjdCA9IHJlcXVpcmUoXCJwcmVhY3RcIik7XG5cbmZ1bmN0aW9uIEVycm9yUGFnZShwcm9wcykge1xuICB2YXIgX2Vycm9ycyRlcnJvciR0b0xvd2VyO1xuXG4gIGNvbnN0IHtcbiAgICB1cmwsXG4gICAgZXJyb3IgPSBcImRlZmF1bHRcIixcbiAgICB0aGVtZVxuICB9ID0gcHJvcHM7XG4gIGNvbnN0IHNpZ25pblBhZ2VVcmwgPSBgJHt1cmx9L3NpZ25pbmA7XG4gIGNvbnN0IGVycm9ycyA9IHtcbiAgICBkZWZhdWx0OiB7XG4gICAgICBzdGF0dXM6IDIwMCxcbiAgICAgIGhlYWRpbmc6IFwiRXJyb3JcIixcbiAgICAgIG1lc3NhZ2U6ICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCAoMCwgX3ByZWFjdC5oKShcImFcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwic2l0ZVwiLFxuICAgICAgICBocmVmOiB1cmwgPT09IG51bGwgfHwgdXJsID09PSB2b2lkIDAgPyB2b2lkIDAgOiB1cmwub3JpZ2luXG4gICAgICB9LCB1cmwgPT09IG51bGwgfHwgdXJsID09PSB2b2lkIDAgPyB2b2lkIDAgOiB1cmwuaG9zdCkpXG4gICAgfSxcbiAgICBjb25maWd1cmF0aW9uOiB7XG4gICAgICBzdGF0dXM6IDUwMCxcbiAgICAgIGhlYWRpbmc6IFwiU2VydmVyIGVycm9yXCIsXG4gICAgICBtZXNzYWdlOiAoMCwgX3ByZWFjdC5oKShcImRpdlwiLCBudWxsLCAoMCwgX3ByZWFjdC5oKShcInBcIiwgbnVsbCwgXCJUaGVyZSBpcyBhIHByb2JsZW0gd2l0aCB0aGUgc2VydmVyIGNvbmZpZ3VyYXRpb24uXCIpLCAoMCwgX3ByZWFjdC5oKShcInBcIiwgbnVsbCwgXCJDaGVjayB0aGUgc2VydmVyIGxvZ3MgZm9yIG1vcmUgaW5mb3JtYXRpb24uXCIpKVxuICAgIH0sXG4gICAgYWNjZXNzZGVuaWVkOiB7XG4gICAgICBzdGF0dXM6IDQwMyxcbiAgICAgIGhlYWRpbmc6IFwiQWNjZXNzIERlbmllZFwiLFxuICAgICAgbWVzc2FnZTogKDAsIF9wcmVhY3QuaCkoXCJkaXZcIiwgbnVsbCwgKDAsIF9wcmVhY3QuaCkoXCJwXCIsIG51bGwsIFwiWW91IGRvIG5vdCBoYXZlIHBlcm1pc3Npb24gdG8gc2lnbiBpbi5cIiksICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCAoMCwgX3ByZWFjdC5oKShcImFcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwiYnV0dG9uXCIsXG4gICAgICAgIGhyZWY6IHNpZ25pblBhZ2VVcmxcbiAgICAgIH0sIFwiU2lnbiBpblwiKSkpXG4gICAgfSxcbiAgICB2ZXJpZmljYXRpb246IHtcbiAgICAgIHN0YXR1czogNDAzLFxuICAgICAgaGVhZGluZzogXCJVbmFibGUgdG8gc2lnbiBpblwiLFxuICAgICAgbWVzc2FnZTogKDAsIF9wcmVhY3QuaCkoXCJkaXZcIiwgbnVsbCwgKDAsIF9wcmVhY3QuaCkoXCJwXCIsIG51bGwsIFwiVGhlIHNpZ24gaW4gbGluayBpcyBubyBsb25nZXIgdmFsaWQuXCIpLCAoMCwgX3ByZWFjdC5oKShcInBcIiwgbnVsbCwgXCJJdCBtYXkgaGF2ZSBiZWVuIHVzZWQgYWxyZWFkeSBvciBpdCBtYXkgaGF2ZSBleHBpcmVkLlwiKSksXG4gICAgICBzaWduaW46ICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCAoMCwgX3ByZWFjdC5oKShcImFcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwiYnV0dG9uXCIsXG4gICAgICAgIGhyZWY6IHNpZ25pblBhZ2VVcmxcbiAgICAgIH0sIFwiU2lnbiBpblwiKSlcbiAgICB9XG4gIH07XG4gIGNvbnN0IHtcbiAgICBzdGF0dXMsXG4gICAgaGVhZGluZyxcbiAgICBtZXNzYWdlLFxuICAgIHNpZ25pblxuICB9ID0gKF9lcnJvcnMkZXJyb3IkdG9Mb3dlciA9IGVycm9yc1tlcnJvci50b0xvd2VyQ2FzZSgpXSkgIT09IG51bGwgJiYgX2Vycm9ycyRlcnJvciR0b0xvd2VyICE9PSB2b2lkIDAgPyBfZXJyb3JzJGVycm9yJHRvTG93ZXIgOiBlcnJvcnMuZGVmYXVsdDtcbiAgcmV0dXJuIHtcbiAgICBzdGF0dXMsXG4gICAgaHRtbDogKDAsIF9wcmVhY3QuaCkoXCJkaXZcIiwge1xuICAgICAgY2xhc3NOYW1lOiBcImVycm9yXCJcbiAgICB9LCAodGhlbWUgPT09IG51bGwgfHwgdGhlbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRoZW1lLmJyYW5kQ29sb3IpICYmICgwLCBfcHJlYWN0LmgpKFwic3R5bGVcIiwge1xuICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgICAgX19odG1sOiBgXG4gICAgICAgIDpyb290IHtcbiAgICAgICAgICAtLWJyYW5kLWNvbG9yOiAke3RoZW1lID09PSBudWxsIHx8IHRoZW1lID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0aGVtZS5icmFuZENvbG9yfVxuICAgICAgICB9XG4gICAgICBgXG4gICAgICB9XG4gICAgfSksICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJjYXJkXCJcbiAgICB9LCAodGhlbWUgPT09IG51bGwgfHwgdGhlbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRoZW1lLmxvZ28pICYmICgwLCBfcHJlYWN0LmgpKFwiaW1nXCIsIHtcbiAgICAgIHNyYzogdGhlbWUubG9nbyxcbiAgICAgIGFsdDogXCJMb2dvXCIsXG4gICAgICBjbGFzc05hbWU6IFwibG9nb1wiXG4gICAgfSksICgwLCBfcHJlYWN0LmgpKFwiaDFcIiwgbnVsbCwgaGVhZGluZyksICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIHtcbiAgICAgIGNsYXNzTmFtZTogXCJtZXNzYWdlXCJcbiAgICB9LCBtZXNzYWdlKSwgc2lnbmluKSlcbiAgfTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiRXJyb3JQYWdlIiwiX3ByZWFjdCIsInJlcXVpcmUiLCJwcm9wcyIsIl9lcnJvcnMkZXJyb3IkdG9Mb3dlciIsInVybCIsImVycm9yIiwidGhlbWUiLCJzaWduaW5QYWdlVXJsIiwiZXJyb3JzIiwic3RhdHVzIiwiaGVhZGluZyIsIm1lc3NhZ2UiLCJoIiwiY2xhc3NOYW1lIiwiaHJlZiIsIm9yaWdpbiIsImhvc3QiLCJjb25maWd1cmF0aW9uIiwiYWNjZXNzZGVuaWVkIiwidmVyaWZpY2F0aW9uIiwic2lnbmluIiwidG9Mb3dlckNhc2UiLCJodG1sIiwiYnJhbmRDb2xvciIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiX19odG1sIiwibG9nbyIsInNyYyIsImFsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/pages/error.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/pages/index.js":
/*!****************************************************!*\
  !*** ./node_modules/next-auth/core/pages/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = renderPage;\nvar _preactRenderToString = _interopRequireDefault(__webpack_require__(/*! preact-render-to-string */ \"(sc_server)/./node_modules/preact-render-to-string/dist/index.js\"));\nvar _signin = _interopRequireDefault(__webpack_require__(/*! ./signin */ \"(sc_server)/./node_modules/next-auth/core/pages/signin.js\"));\nvar _signout = _interopRequireDefault(__webpack_require__(/*! ./signout */ \"(sc_server)/./node_modules/next-auth/core/pages/signout.js\"));\nvar _verifyRequest = _interopRequireDefault(__webpack_require__(/*! ./verify-request */ \"(sc_server)/./node_modules/next-auth/core/pages/verify-request.js\"));\nvar _error = _interopRequireDefault(__webpack_require__(/*! ./error */ \"(sc_server)/./node_modules/next-auth/core/pages/error.js\"));\nvar _css = _interopRequireDefault(__webpack_require__(/*! ../../css */ \"(sc_server)/./node_modules/next-auth/css/index.js\"));\nfunction renderPage(params) {\n    const { url, theme, query, cookies } = params;\n    function send({ html, title, status }) {\n        var _theme$colorScheme;\n        return {\n            cookies,\n            status,\n            headers: [\n                {\n                    key: \"Content-Type\",\n                    value: \"text/html\"\n                }\n            ],\n            body: `<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><style>${(0, _css.default)()}</style><title>${title}</title></head><body class=\"__next-auth-theme-${(_theme$colorScheme = theme === null || theme === void 0 ? void 0 : theme.colorScheme) !== null && _theme$colorScheme !== void 0 ? _theme$colorScheme : \"auto\"}\"><div class=\"page\">${(0, _preactRenderToString.default)(html)}</div></body></html>`\n        };\n    }\n    return {\n        signin (props) {\n            return send({\n                html: (0, _signin.default)({\n                    csrfToken: params.csrfToken,\n                    providers: params.providers,\n                    callbackUrl: params.callbackUrl,\n                    theme,\n                    ...query,\n                    ...props\n                }),\n                title: \"Sign In\"\n            });\n        },\n        signout (props) {\n            return send({\n                html: (0, _signout.default)({\n                    csrfToken: params.csrfToken,\n                    url,\n                    theme,\n                    ...props\n                }),\n                title: \"Sign Out\"\n            });\n        },\n        verifyRequest (props) {\n            return send({\n                html: (0, _verifyRequest.default)({\n                    url,\n                    theme,\n                    ...props\n                }),\n                title: \"Verify Request\"\n            });\n        },\n        error (props) {\n            return send({\n                ...(0, _error.default)({\n                    url,\n                    theme,\n                    ...props\n                }),\n                title: \"Error\"\n            });\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYixJQUFJQSx5QkFBeUJDLG1CQUFPQSxDQUFDLGdJQUE4QztBQUVuRkMsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlRSxHQUFHQztBQUVsQixJQUFJQyx3QkFBd0JSLHVCQUF1QkMsbUJBQU9BLENBQUMsaUdBQXlCO0FBRXBGLElBQUlRLFVBQVVULHVCQUF1QkMsbUJBQU9BLENBQUMsMkVBQVU7QUFFdkQsSUFBSVMsV0FBV1YsdUJBQXVCQyxtQkFBT0EsQ0FBQyw2RUFBVztBQUV6RCxJQUFJVSxpQkFBaUJYLHVCQUF1QkMsbUJBQU9BLENBQUMsMkZBQWtCO0FBRXRFLElBQUlXLFNBQVNaLHVCQUF1QkMsbUJBQU9BLENBQUMseUVBQVM7QUFFckQsSUFBSVksT0FBT2IsdUJBQXVCQyxtQkFBT0EsQ0FBQyxvRUFBVztBQUVyRCxTQUFTTSxXQUFXTyxNQUFNO0lBQ3hCLE1BQU0sRUFDSkMsR0FBRyxFQUNIQyxLQUFLLEVBQ0xDLEtBQUssRUFDTEMsT0FBTyxFQUNSLEdBQUdKO0lBRUosU0FBU0ssS0FBSyxFQUNaQyxJQUFJLEVBQ0pDLEtBQUssRUFDTEMsTUFBTSxFQUNQO1FBQ0MsSUFBSUM7UUFFSixPQUFPO1lBQ0xMO1lBQ0FJO1lBQ0FFLFNBQVM7Z0JBQUM7b0JBQ1JDLEtBQUs7b0JBQ0xwQixPQUFPO2dCQUNUO2FBQUU7WUFDRnFCLE1BQU0sQ0FBQyw2TEFBNkwsRUFBRSxDQUFDLEdBQUdiLEtBQUtQLE9BQU0sSUFBSyxlQUFlLEVBQUVlLE1BQU0sOENBQThDLEVBQUUsQ0FBQ0UscUJBQXFCUCxVQUFVLFFBQVFBLFVBQVUsS0FBSyxJQUFJLEtBQUssSUFBSUEsTUFBTVcsV0FBVSxNQUFPLFFBQVFKLHVCQUF1QixLQUFLLElBQUlBLHFCQUFxQixPQUFPLG9CQUFvQixFQUFFLENBQUMsR0FBR2Ysc0JBQXNCRixPQUFNLEVBQUdjLE1BQU0sb0JBQW9CLENBQUM7UUFDdGhCO0lBQ0Y7SUFFQSxPQUFPO1FBQ0xRLFFBQU9DLEtBQUs7WUFDVixPQUFPVixLQUFLO2dCQUNWQyxNQUFNLENBQUMsR0FBR1gsUUFBUUgsT0FBTSxFQUFHO29CQUN6QndCLFdBQVdoQixPQUFPZ0I7b0JBQ2xCQyxXQUFXakIsT0FBT2lCO29CQUNsQkMsYUFBYWxCLE9BQU9rQjtvQkFDcEJoQjtvQkFDQSxHQUFHQyxLQUFLO29CQUNSLEdBQUdZLEtBQUs7Z0JBQ1Y7Z0JBQ0FSLE9BQU87WUFDVDtRQUNGO1FBRUFZLFNBQVFKLEtBQUs7WUFDWCxPQUFPVixLQUFLO2dCQUNWQyxNQUFNLENBQUMsR0FBR1YsU0FBU0osT0FBTSxFQUFHO29CQUMxQndCLFdBQVdoQixPQUFPZ0I7b0JBQ2xCZjtvQkFDQUM7b0JBQ0EsR0FBR2EsS0FBSztnQkFDVjtnQkFDQVIsT0FBTztZQUNUO1FBQ0Y7UUFFQWEsZUFBY0wsS0FBSztZQUNqQixPQUFPVixLQUFLO2dCQUNWQyxNQUFNLENBQUMsR0FBR1QsZUFBZUwsT0FBTSxFQUFHO29CQUNoQ1M7b0JBQ0FDO29CQUNBLEdBQUdhLEtBQUs7Z0JBQ1Y7Z0JBQ0FSLE9BQU87WUFDVDtRQUNGO1FBRUFjLE9BQU1OLEtBQUs7WUFDVCxPQUFPVixLQUFLO2dCQUFFLEdBQUcsQ0FBQyxHQUFHUCxPQUFPTixPQUFNLEVBQUc7b0JBQ2pDUztvQkFDQUM7b0JBQ0EsR0FBR2EsS0FBSztnQkFDVixFQUFFO2dCQUNGUixPQUFPO1lBQ1Q7UUFDRjtJQUVGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL3BhZ2VzL2luZGV4LmpzPzI3YjAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcmVuZGVyUGFnZTtcblxudmFyIF9wcmVhY3RSZW5kZXJUb1N0cmluZyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcInByZWFjdC1yZW5kZXItdG8tc3RyaW5nXCIpKTtcblxudmFyIF9zaWduaW4gPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3NpZ25pblwiKSk7XG5cbnZhciBfc2lnbm91dCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc2lnbm91dFwiKSk7XG5cbnZhciBfdmVyaWZ5UmVxdWVzdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vdmVyaWZ5LXJlcXVlc3RcIikpO1xuXG52YXIgX2Vycm9yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9lcnJvclwiKSk7XG5cbnZhciBfY3NzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi4vLi4vY3NzXCIpKTtcblxuZnVuY3Rpb24gcmVuZGVyUGFnZShwYXJhbXMpIHtcbiAgY29uc3Qge1xuICAgIHVybCxcbiAgICB0aGVtZSxcbiAgICBxdWVyeSxcbiAgICBjb29raWVzXG4gIH0gPSBwYXJhbXM7XG5cbiAgZnVuY3Rpb24gc2VuZCh7XG4gICAgaHRtbCxcbiAgICB0aXRsZSxcbiAgICBzdGF0dXNcbiAgfSkge1xuICAgIHZhciBfdGhlbWUkY29sb3JTY2hlbWU7XG5cbiAgICByZXR1cm4ge1xuICAgICAgY29va2llcyxcbiAgICAgIHN0YXR1cyxcbiAgICAgIGhlYWRlcnM6IFt7XG4gICAgICAgIGtleTogXCJDb250ZW50LVR5cGVcIixcbiAgICAgICAgdmFsdWU6IFwidGV4dC9odG1sXCJcbiAgICAgIH1dLFxuICAgICAgYm9keTogYDwhRE9DVFlQRSBodG1sPjxodG1sIGxhbmc9XCJlblwiPjxoZWFkPjxtZXRhIGNoYXJzZXQ9XCJVVEYtOFwiPjxtZXRhIGh0dHAtZXF1aXY9XCJYLVVBLUNvbXBhdGlibGVcIiBjb250ZW50PVwiSUU9ZWRnZVwiPjxtZXRhIG5hbWU9XCJ2aWV3cG9ydFwiIGNvbnRlbnQ9XCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wXCI+PHN0eWxlPiR7KDAsIF9jc3MuZGVmYXVsdCkoKX08L3N0eWxlPjx0aXRsZT4ke3RpdGxlfTwvdGl0bGU+PC9oZWFkPjxib2R5IGNsYXNzPVwiX19uZXh0LWF1dGgtdGhlbWUtJHsoX3RoZW1lJGNvbG9yU2NoZW1lID0gdGhlbWUgPT09IG51bGwgfHwgdGhlbWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRoZW1lLmNvbG9yU2NoZW1lKSAhPT0gbnVsbCAmJiBfdGhlbWUkY29sb3JTY2hlbWUgIT09IHZvaWQgMCA/IF90aGVtZSRjb2xvclNjaGVtZSA6IFwiYXV0b1wifVwiPjxkaXYgY2xhc3M9XCJwYWdlXCI+JHsoMCwgX3ByZWFjdFJlbmRlclRvU3RyaW5nLmRlZmF1bHQpKGh0bWwpfTwvZGl2PjwvYm9keT48L2h0bWw+YFxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHNpZ25pbihwcm9wcykge1xuICAgICAgcmV0dXJuIHNlbmQoe1xuICAgICAgICBodG1sOiAoMCwgX3NpZ25pbi5kZWZhdWx0KSh7XG4gICAgICAgICAgY3NyZlRva2VuOiBwYXJhbXMuY3NyZlRva2VuLFxuICAgICAgICAgIHByb3ZpZGVyczogcGFyYW1zLnByb3ZpZGVycyxcbiAgICAgICAgICBjYWxsYmFja1VybDogcGFyYW1zLmNhbGxiYWNrVXJsLFxuICAgICAgICAgIHRoZW1lLFxuICAgICAgICAgIC4uLnF1ZXJ5LFxuICAgICAgICAgIC4uLnByb3BzXG4gICAgICAgIH0pLFxuICAgICAgICB0aXRsZTogXCJTaWduIEluXCJcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBzaWdub3V0KHByb3BzKSB7XG4gICAgICByZXR1cm4gc2VuZCh7XG4gICAgICAgIGh0bWw6ICgwLCBfc2lnbm91dC5kZWZhdWx0KSh7XG4gICAgICAgICAgY3NyZlRva2VuOiBwYXJhbXMuY3NyZlRva2VuLFxuICAgICAgICAgIHVybCxcbiAgICAgICAgICB0aGVtZSxcbiAgICAgICAgICAuLi5wcm9wc1xuICAgICAgICB9KSxcbiAgICAgICAgdGl0bGU6IFwiU2lnbiBPdXRcIlxuICAgICAgfSk7XG4gICAgfSxcblxuICAgIHZlcmlmeVJlcXVlc3QocHJvcHMpIHtcbiAgICAgIHJldHVybiBzZW5kKHtcbiAgICAgICAgaHRtbDogKDAsIF92ZXJpZnlSZXF1ZXN0LmRlZmF1bHQpKHtcbiAgICAgICAgICB1cmwsXG4gICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgLi4ucHJvcHNcbiAgICAgICAgfSksXG4gICAgICAgIHRpdGxlOiBcIlZlcmlmeSBSZXF1ZXN0XCJcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBlcnJvcihwcm9wcykge1xuICAgICAgcmV0dXJuIHNlbmQoeyAuLi4oMCwgX2Vycm9yLmRlZmF1bHQpKHtcbiAgICAgICAgICB1cmwsXG4gICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgLi4ucHJvcHNcbiAgICAgICAgfSksXG4gICAgICAgIHRpdGxlOiBcIkVycm9yXCJcbiAgICAgIH0pO1xuICAgIH1cblxuICB9O1xufSJdLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsInJlbmRlclBhZ2UiLCJfcHJlYWN0UmVuZGVyVG9TdHJpbmciLCJfc2lnbmluIiwiX3NpZ25vdXQiLCJfdmVyaWZ5UmVxdWVzdCIsIl9lcnJvciIsIl9jc3MiLCJwYXJhbXMiLCJ1cmwiLCJ0aGVtZSIsInF1ZXJ5IiwiY29va2llcyIsInNlbmQiLCJodG1sIiwidGl0bGUiLCJzdGF0dXMiLCJfdGhlbWUkY29sb3JTY2hlbWUiLCJoZWFkZXJzIiwia2V5IiwiYm9keSIsImNvbG9yU2NoZW1lIiwic2lnbmluIiwicHJvcHMiLCJjc3JmVG9rZW4iLCJwcm92aWRlcnMiLCJjYWxsYmFja1VybCIsInNpZ25vdXQiLCJ2ZXJpZnlSZXF1ZXN0IiwiZXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/pages/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/pages/signin.js":
/*!*****************************************************!*\
  !*** ./node_modules/next-auth/core/pages/signin.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = SigninPage;\nvar _preact = __webpack_require__(/*! preact */ \"(sc_server)/./node_modules/preact/dist/preact.js\");\nvar _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"(sc_server)/./node_modules/@babel/runtime/helpers/extends.js\"));\nfunction SigninPage(props) {\n    var _errors$errorType;\n    const { csrfToken, providers, callbackUrl, theme, email, error: errorType } = props;\n    const providersToRender = providers.filter((provider)=>{\n        if (provider.type === \"oauth\" || provider.type === \"email\") {\n            return true;\n        } else if (provider.type === \"credentials\" && provider.credentials) {\n            return true;\n        }\n        return false;\n    });\n    if (typeof document !== \"undefined\" && theme.buttonText) {\n        document.documentElement.style.setProperty(\"--button-text-color\", theme.buttonText);\n    }\n    if (typeof document !== \"undefined\" && theme.brandColor) {\n        document.documentElement.style.setProperty(\"--brand-color\", theme.brandColor);\n    }\n    const errors = {\n        Signin: \"Try signing in with a different account.\",\n        OAuthSignin: \"Try signing in with a different account.\",\n        OAuthCallback: \"Try signing in with a different account.\",\n        OAuthCreateAccount: \"Try signing in with a different account.\",\n        EmailCreateAccount: \"Try signing in with a different account.\",\n        Callback: \"Try signing in with a different account.\",\n        OAuthAccountNotLinked: \"To confirm your identity, sign in with the same account you used originally.\",\n        EmailSignin: \"The e-mail could not be sent.\",\n        CredentialsSignin: \"Sign in failed. Check the details you provided are correct.\",\n        SessionRequired: \"Please sign in to access this page.\",\n        default: \"Unable to sign in.\"\n    };\n    const error = errorType && ((_errors$errorType = errors[errorType]) !== null && _errors$errorType !== void 0 ? _errors$errorType : errors.default);\n    const logos = \"https://authjs.dev/img/providers\";\n    return (0, _preact.h)(\"div\", {\n        className: \"signin\"\n    }, theme.brandColor && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n        }\n    }), theme.buttonText && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `\n        }\n    }), (0, _preact.h)(\"div\", {\n        className: \"card\"\n    }, theme.logo && (0, _preact.h)(\"img\", {\n        src: theme.logo,\n        alt: \"Logo\",\n        className: \"logo\"\n    }), error && (0, _preact.h)(\"div\", {\n        className: \"error\"\n    }, (0, _preact.h)(\"p\", null, error)), providersToRender.map((provider, i)=>{\n        var _provider$style$bg, _provider$style, _provider$style$bgDar, _provider$style2, _provider$style$text, _provider$style3, _provider$style$textD, _provider$style4, _provider$style5, _provider$style6;\n        return (0, _preact.h)(\"div\", {\n            key: provider.id,\n            className: \"provider\"\n        }, provider.type === \"oauth\" && (0, _preact.h)(\"form\", {\n            action: provider.signinUrl,\n            method: \"POST\"\n        }, (0, _preact.h)(\"input\", {\n            type: \"hidden\",\n            name: \"csrfToken\",\n            value: csrfToken\n        }), callbackUrl && (0, _preact.h)(\"input\", {\n            type: \"hidden\",\n            name: \"callbackUrl\",\n            value: callbackUrl\n        }), (0, _preact.h)(\"button\", {\n            type: \"submit\",\n            className: \"button\",\n            style: {\n                \"--provider-bg\": (_provider$style$bg = (_provider$style = provider.style) === null || _provider$style === void 0 ? void 0 : _provider$style.bg) !== null && _provider$style$bg !== void 0 ? _provider$style$bg : \"\",\n                \"--provider-dark-bg\": (_provider$style$bgDar = (_provider$style2 = provider.style) === null || _provider$style2 === void 0 ? void 0 : _provider$style2.bgDark) !== null && _provider$style$bgDar !== void 0 ? _provider$style$bgDar : \"\",\n                \"--provider-color\": (_provider$style$text = (_provider$style3 = provider.style) === null || _provider$style3 === void 0 ? void 0 : _provider$style3.text) !== null && _provider$style$text !== void 0 ? _provider$style$text : \"\",\n                \"--provider-dark-color\": (_provider$style$textD = (_provider$style4 = provider.style) === null || _provider$style4 === void 0 ? void 0 : _provider$style4.textDark) !== null && _provider$style$textD !== void 0 ? _provider$style$textD : \"\"\n            }\n        }, ((_provider$style5 = provider.style) === null || _provider$style5 === void 0 ? void 0 : _provider$style5.logo) && (0, _preact.h)(\"img\", {\n            loading: \"lazy\",\n            height: 24,\n            width: 24,\n            id: \"provider-logo\",\n            src: `${provider.style.logo.startsWith(\"/\") ? logos : \"\"}${provider.style.logo}`\n        }), ((_provider$style6 = provider.style) === null || _provider$style6 === void 0 ? void 0 : _provider$style6.logoDark) && (0, _preact.h)(\"img\", {\n            loading: \"lazy\",\n            height: 24,\n            width: 24,\n            id: \"provider-logo-dark\",\n            src: `${provider.style.logo.startsWith(\"/\") ? logos : \"\"}${provider.style.logoDark}`\n        }), (0, _preact.h)(\"span\", null, \"Sign in with \", provider.name))), (provider.type === \"email\" || provider.type === \"credentials\") && i > 0 && providersToRender[i - 1].type !== \"email\" && providersToRender[i - 1].type !== \"credentials\" && (0, _preact.h)(\"hr\", null), provider.type === \"email\" && (0, _preact.h)(\"form\", {\n            action: provider.signinUrl,\n            method: \"POST\"\n        }, (0, _preact.h)(\"input\", {\n            type: \"hidden\",\n            name: \"csrfToken\",\n            value: csrfToken\n        }), (0, _preact.h)(\"label\", {\n            className: \"section-header\",\n            htmlFor: `input-email-for-${provider.id}-provider`\n        }, \"Email\"), (0, _preact.h)(\"input\", {\n            id: `input-email-for-${provider.id}-provider`,\n            autoFocus: true,\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            placeholder: \"email@example.com\",\n            required: true\n        }), (0, _preact.h)(\"button\", {\n            id: \"submitButton\",\n            type: \"submit\"\n        }, \"Sign in with \", provider.name)), provider.type === \"credentials\" && (0, _preact.h)(\"form\", {\n            action: provider.callbackUrl,\n            method: \"POST\"\n        }, (0, _preact.h)(\"input\", {\n            type: \"hidden\",\n            name: \"csrfToken\",\n            value: csrfToken\n        }), Object.keys(provider.credentials).map((credential)=>{\n            var _provider$credentials, _provider$credentials2, _provider$credentials3;\n            return (0, _preact.h)(\"div\", {\n                key: `input-group-${provider.id}`\n            }, (0, _preact.h)(\"label\", {\n                className: \"section-header\",\n                htmlFor: `input-${credential}-for-${provider.id}-provider`\n            }, (_provider$credentials = provider.credentials[credential].label) !== null && _provider$credentials !== void 0 ? _provider$credentials : credential), (0, _preact.h)(\"input\", (0, _extends2.default)({\n                name: credential,\n                id: `input-${credential}-for-${provider.id}-provider`,\n                type: (_provider$credentials2 = provider.credentials[credential].type) !== null && _provider$credentials2 !== void 0 ? _provider$credentials2 : \"text\",\n                placeholder: (_provider$credentials3 = provider.credentials[credential].placeholder) !== null && _provider$credentials3 !== void 0 ? _provider$credentials3 : \"\"\n            }, provider.credentials[credential])));\n        }), (0, _preact.h)(\"button\", {\n            type: \"submit\"\n        }, \"Sign in with \", provider.name)), (provider.type === \"email\" || provider.type === \"credentials\") && i + 1 < providersToRender.length && (0, _preact.h)(\"hr\", null));\n    })));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/pages/signin.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/pages/signout.js":
/*!******************************************************!*\
  !*** ./node_modules/next-auth/core/pages/signout.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = SignoutPage;\nvar _preact = __webpack_require__(/*! preact */ \"(sc_server)/./node_modules/preact/dist/preact.js\");\nfunction SignoutPage(props) {\n    const { url, csrfToken, theme } = props;\n    return (0, _preact.h)(\"div\", {\n        className: \"signout\"\n    }, theme.brandColor && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n        }\n    }), theme.buttonText && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --button-text-color: ${theme.buttonText}\n        }\n      `\n        }\n    }), (0, _preact.h)(\"div\", {\n        className: \"card\"\n    }, theme.logo && (0, _preact.h)(\"img\", {\n        src: theme.logo,\n        alt: \"Logo\",\n        className: \"logo\"\n    }), (0, _preact.h)(\"h1\", null, \"Signout\"), (0, _preact.h)(\"p\", null, \"Are you sure you want to sign out?\"), (0, _preact.h)(\"form\", {\n        action: `${url}/signout`,\n        method: \"POST\"\n    }, (0, _preact.h)(\"input\", {\n        type: \"hidden\",\n        name: \"csrfToken\",\n        value: csrfToken\n    }), (0, _preact.h)(\"button\", {\n        id: \"submitButton\",\n        type: \"submit\"\n    }, \"Sign out\"))));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvc2lnbm91dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWVFLEdBQUdDO0FBRWxCLElBQUlDLFVBQVVDLG1CQUFPQSxDQUFDLGdFQUFRO0FBRTlCLFNBQVNGLFlBQVlHLEtBQUs7SUFDeEIsTUFBTSxFQUNKQyxHQUFHLEVBQ0hDLFNBQVMsRUFDVEMsS0FBSyxFQUNOLEdBQUdIO0lBQ0osT0FBTyxDQUFDLEdBQUdGLFFBQVFNLENBQUFBLEVBQUcsT0FBTztRQUMzQkMsV0FBVztJQUNiLEdBQUdGLE1BQU1HLGNBQWMsQ0FBQyxHQUFHUixRQUFRTSxDQUFBQSxFQUFHLFNBQVM7UUFDN0NHLHlCQUF5QjtZQUN2QkMsUUFBUSxDQUFDOzt5QkFFVSxFQUFFTCxNQUFNRyxXQUFXOztNQUV0QyxDQUFDO1FBQ0g7SUFDRixJQUFJSCxNQUFNTSxjQUFjLENBQUMsR0FBR1gsUUFBUU0sQ0FBQUEsRUFBRyxTQUFTO1FBQzlDRyx5QkFBeUI7WUFDdkJDLFFBQVEsQ0FBQzs7K0JBRWdCLEVBQUVMLE1BQU1NLFdBQVc7O01BRTVDLENBQUM7UUFDSDtJQUNGLElBQUksQ0FBQyxHQUFHWCxRQUFRTSxDQUFBQSxFQUFHLE9BQU87UUFDeEJDLFdBQVc7SUFDYixHQUFHRixNQUFNTyxRQUFRLENBQUMsR0FBR1osUUFBUU0sQ0FBQUEsRUFBRyxPQUFPO1FBQ3JDTyxLQUFLUixNQUFNTztRQUNYRSxLQUFLO1FBQ0xQLFdBQVc7SUFDYixJQUFJLENBQUMsR0FBR1AsUUFBUU0sQ0FBQUEsRUFBRyxNQUFNLE1BQU0sWUFBWSxDQUFDLEdBQUdOLFFBQVFNLENBQUFBLEVBQUcsS0FBSyxNQUFNLHVDQUF1QyxDQUFDLEdBQUdOLFFBQVFNLENBQUFBLEVBQUcsUUFBUTtRQUNqSVMsUUFBUSxDQUFDLEVBQUVaLElBQUksUUFBUSxDQUFDO1FBQ3hCYSxRQUFRO0lBQ1YsR0FBRyxDQUFDLEdBQUdoQixRQUFRTSxDQUFBQSxFQUFHLFNBQVM7UUFDekJXLE1BQU07UUFDTkMsTUFBTTtRQUNOckIsT0FBT087SUFDVCxJQUFJLENBQUMsR0FBR0osUUFBUU0sQ0FBQUEsRUFBRyxVQUFVO1FBQzNCYSxJQUFJO1FBQ0pGLE1BQU07SUFDUixHQUFHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL3BhZ2VzL3NpZ25vdXQuanM/MGQzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IFNpZ25vdXRQYWdlO1xuXG52YXIgX3ByZWFjdCA9IHJlcXVpcmUoXCJwcmVhY3RcIik7XG5cbmZ1bmN0aW9uIFNpZ25vdXRQYWdlKHByb3BzKSB7XG4gIGNvbnN0IHtcbiAgICB1cmwsXG4gICAgY3NyZlRva2VuLFxuICAgIHRoZW1lXG4gIH0gPSBwcm9wcztcbiAgcmV0dXJuICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwic2lnbm91dFwiXG4gIH0sIHRoZW1lLmJyYW5kQ29sb3IgJiYgKDAsIF9wcmVhY3QuaCkoXCJzdHlsZVwiLCB7XG4gICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHtcbiAgICAgIF9faHRtbDogYFxuICAgICAgICA6cm9vdCB7XG4gICAgICAgICAgLS1icmFuZC1jb2xvcjogJHt0aGVtZS5icmFuZENvbG9yfVxuICAgICAgICB9XG4gICAgICBgXG4gICAgfVxuICB9KSwgdGhlbWUuYnV0dG9uVGV4dCAmJiAoMCwgX3ByZWFjdC5oKShcInN0eWxlXCIsIHtcbiAgICBkYW5nZXJvdXNseVNldElubmVySFRNTDoge1xuICAgICAgX19odG1sOiBgXG4gICAgICAgIDpyb290IHtcbiAgICAgICAgICAtLWJ1dHRvbi10ZXh0LWNvbG9yOiAke3RoZW1lLmJ1dHRvblRleHR9XG4gICAgICAgIH1cbiAgICAgIGBcbiAgICB9XG4gIH0pLCAoMCwgX3ByZWFjdC5oKShcImRpdlwiLCB7XG4gICAgY2xhc3NOYW1lOiBcImNhcmRcIlxuICB9LCB0aGVtZS5sb2dvICYmICgwLCBfcHJlYWN0LmgpKFwiaW1nXCIsIHtcbiAgICBzcmM6IHRoZW1lLmxvZ28sXG4gICAgYWx0OiBcIkxvZ29cIixcbiAgICBjbGFzc05hbWU6IFwibG9nb1wiXG4gIH0pLCAoMCwgX3ByZWFjdC5oKShcImgxXCIsIG51bGwsIFwiU2lnbm91dFwiKSwgKDAsIF9wcmVhY3QuaCkoXCJwXCIsIG51bGwsIFwiQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIHNpZ24gb3V0P1wiKSwgKDAsIF9wcmVhY3QuaCkoXCJmb3JtXCIsIHtcbiAgICBhY3Rpb246IGAke3VybH0vc2lnbm91dGAsXG4gICAgbWV0aG9kOiBcIlBPU1RcIlxuICB9LCAoMCwgX3ByZWFjdC5oKShcImlucHV0XCIsIHtcbiAgICB0eXBlOiBcImhpZGRlblwiLFxuICAgIG5hbWU6IFwiY3NyZlRva2VuXCIsXG4gICAgdmFsdWU6IGNzcmZUb2tlblxuICB9KSwgKDAsIF9wcmVhY3QuaCkoXCJidXR0b25cIiwge1xuICAgIGlkOiBcInN1Ym1pdEJ1dHRvblwiLFxuICAgIHR5cGU6IFwic3VibWl0XCJcbiAgfSwgXCJTaWduIG91dFwiKSkpKTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0IiwiU2lnbm91dFBhZ2UiLCJfcHJlYWN0IiwicmVxdWlyZSIsInByb3BzIiwidXJsIiwiY3NyZlRva2VuIiwidGhlbWUiLCJoIiwiY2xhc3NOYW1lIiwiYnJhbmRDb2xvciIsImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MIiwiX19odG1sIiwiYnV0dG9uVGV4dCIsImxvZ28iLCJzcmMiLCJhbHQiLCJhY3Rpb24iLCJtZXRob2QiLCJ0eXBlIiwibmFtZSIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/pages/signout.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/pages/verify-request.js":
/*!*************************************************************!*\
  !*** ./node_modules/next-auth/core/pages/verify-request.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = VerifyRequestPage;\nvar _preact = __webpack_require__(/*! preact */ \"(sc_server)/./node_modules/preact/dist/preact.js\");\nfunction VerifyRequestPage(props) {\n    const { url, theme } = props;\n    return (0, _preact.h)(\"div\", {\n        className: \"verify-request\"\n    }, theme.brandColor && (0, _preact.h)(\"style\", {\n        dangerouslySetInnerHTML: {\n            __html: `\n        :root {\n          --brand-color: ${theme.brandColor}\n        }\n      `\n        }\n    }), (0, _preact.h)(\"div\", {\n        className: \"card\"\n    }, theme.logo && (0, _preact.h)(\"img\", {\n        src: theme.logo,\n        alt: \"Logo\",\n        className: \"logo\"\n    }), (0, _preact.h)(\"h1\", null, \"Check your email\"), (0, _preact.h)(\"p\", null, \"A sign in link has been sent to your email address.\"), (0, _preact.h)(\"p\", null, (0, _preact.h)(\"a\", {\n        className: \"site\",\n        href: url.origin\n    }, url.host))));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcGFnZXMvdmVyaWZ5LXJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlRSxHQUFHQztBQUVsQixJQUFJQyxVQUFVQyxtQkFBT0EsQ0FBQyxnRUFBUTtBQUU5QixTQUFTRixrQkFBa0JHLEtBQUs7SUFDOUIsTUFBTSxFQUNKQyxHQUFHLEVBQ0hDLEtBQUssRUFDTixHQUFHRjtJQUNKLE9BQU8sQ0FBQyxHQUFHRixRQUFRSyxDQUFBQSxFQUFHLE9BQU87UUFDM0JDLFdBQVc7SUFDYixHQUFHRixNQUFNRyxjQUFjLENBQUMsR0FBR1AsUUFBUUssQ0FBQUEsRUFBRyxTQUFTO1FBQzdDRyx5QkFBeUI7WUFDdkJDLFFBQVEsQ0FBQzs7eUJBRVUsRUFBRUwsTUFBTUcsV0FBVzs7TUFFdEMsQ0FBQztRQUNIO0lBQ0YsSUFBSSxDQUFDLEdBQUdQLFFBQVFLLENBQUFBLEVBQUcsT0FBTztRQUN4QkMsV0FBVztJQUNiLEdBQUdGLE1BQU1NLFFBQVEsQ0FBQyxHQUFHVixRQUFRSyxDQUFBQSxFQUFHLE9BQU87UUFDckNNLEtBQUtQLE1BQU1NO1FBQ1hFLEtBQUs7UUFDTE4sV0FBVztJQUNiLElBQUksQ0FBQyxHQUFHTixRQUFRSyxDQUFBQSxFQUFHLE1BQU0sTUFBTSxxQkFBcUIsQ0FBQyxHQUFHTCxRQUFRSyxDQUFBQSxFQUFHLEtBQUssTUFBTSx3REFBd0QsQ0FBQyxHQUFHTCxRQUFRSyxDQUFBQSxFQUFHLEtBQUssTUFBTSxDQUFDLEdBQUdMLFFBQVFLLENBQUFBLEVBQUcsS0FBSztRQUNsTEMsV0FBVztRQUNYTyxNQUFNVixJQUFJVztJQUNaLEdBQUdYLElBQUlZO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL3BhZ2VzL3ZlcmlmeS1yZXF1ZXN0LmpzPzZmMWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBWZXJpZnlSZXF1ZXN0UGFnZTtcblxudmFyIF9wcmVhY3QgPSByZXF1aXJlKFwicHJlYWN0XCIpO1xuXG5mdW5jdGlvbiBWZXJpZnlSZXF1ZXN0UGFnZShwcm9wcykge1xuICBjb25zdCB7XG4gICAgdXJsLFxuICAgIHRoZW1lXG4gIH0gPSBwcm9wcztcbiAgcmV0dXJuICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwidmVyaWZ5LXJlcXVlc3RcIlxuICB9LCB0aGVtZS5icmFuZENvbG9yICYmICgwLCBfcHJlYWN0LmgpKFwic3R5bGVcIiwge1xuICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7XG4gICAgICBfX2h0bWw6IGBcbiAgICAgICAgOnJvb3Qge1xuICAgICAgICAgIC0tYnJhbmQtY29sb3I6ICR7dGhlbWUuYnJhbmRDb2xvcn1cbiAgICAgICAgfVxuICAgICAgYFxuICAgIH1cbiAgfSksICgwLCBfcHJlYWN0LmgpKFwiZGl2XCIsIHtcbiAgICBjbGFzc05hbWU6IFwiY2FyZFwiXG4gIH0sIHRoZW1lLmxvZ28gJiYgKDAsIF9wcmVhY3QuaCkoXCJpbWdcIiwge1xuICAgIHNyYzogdGhlbWUubG9nbyxcbiAgICBhbHQ6IFwiTG9nb1wiLFxuICAgIGNsYXNzTmFtZTogXCJsb2dvXCJcbiAgfSksICgwLCBfcHJlYWN0LmgpKFwiaDFcIiwgbnVsbCwgXCJDaGVjayB5b3VyIGVtYWlsXCIpLCAoMCwgX3ByZWFjdC5oKShcInBcIiwgbnVsbCwgXCJBIHNpZ24gaW4gbGluayBoYXMgYmVlbiBzZW50IHRvIHlvdXIgZW1haWwgYWRkcmVzcy5cIiksICgwLCBfcHJlYWN0LmgpKFwicFwiLCBudWxsLCAoMCwgX3ByZWFjdC5oKShcImFcIiwge1xuICAgIGNsYXNzTmFtZTogXCJzaXRlXCIsXG4gICAgaHJlZjogdXJsLm9yaWdpblxuICB9LCB1cmwuaG9zdCkpKSk7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIlZlcmlmeVJlcXVlc3RQYWdlIiwiX3ByZWFjdCIsInJlcXVpcmUiLCJwcm9wcyIsInVybCIsInRoZW1lIiwiaCIsImNsYXNzTmFtZSIsImJyYW5kQ29sb3IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsImxvZ28iLCJzcmMiLCJhbHQiLCJocmVmIiwib3JpZ2luIiwiaG9zdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/pages/verify-request.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/routes/callback.js":
/*!********************************************************!*\
  !*** ./node_modules/next-auth/core/routes/callback.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = callback;\nvar _callback = _interopRequireDefault(__webpack_require__(/*! ../lib/oauth/callback */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/callback.js\"));\nvar _callbackHandler = _interopRequireDefault(__webpack_require__(/*! ../lib/callback-handler */ \"(sc_server)/./node_modules/next-auth/core/lib/callback-handler.js\"));\nvar _utils = __webpack_require__(/*! ../lib/utils */ \"(sc_server)/./node_modules/next-auth/core/lib/utils.js\");\nvar _getUserFromEmail = _interopRequireDefault(__webpack_require__(/*! ../lib/email/getUserFromEmail */ \"(sc_server)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js\"));\nasync function callback(params) {\n    const { options, query, body, method, headers, sessionStore } = params;\n    const { provider, adapter, url, callbackUrl, pages, jwt, events, callbacks, session: { strategy: sessionStrategy, maxAge: sessionMaxAge }, logger } = options;\n    const cookies = [];\n    const useJwtSession = sessionStrategy === \"jwt\";\n    if (provider.type === \"oauth\") {\n        try {\n            const { profile, account, OAuthProfile, cookies: oauthCookies } = await (0, _callback.default)({\n                query,\n                body,\n                method,\n                options,\n                cookies: params.cookies\n            });\n            if (oauthCookies.length) cookies.push(...oauthCookies);\n            try {\n                var _events$signIn;\n                logger.debug(\"OAUTH_CALLBACK_RESPONSE\", {\n                    profile,\n                    account,\n                    OAuthProfile\n                });\n                if (!profile || !account || !OAuthProfile) {\n                    return {\n                        redirect: `${url}/signin`,\n                        cookies\n                    };\n                }\n                let userOrProfile = profile;\n                if (adapter) {\n                    const { getUserByAccount } = adapter;\n                    const userByAccount = await getUserByAccount({\n                        providerAccountId: account.providerAccountId,\n                        provider: provider.id\n                    });\n                    if (userByAccount) userOrProfile = userByAccount;\n                }\n                try {\n                    const isAllowed = await callbacks.signIn({\n                        user: userOrProfile,\n                        account,\n                        profile: OAuthProfile\n                    });\n                    if (!isAllowed) {\n                        return {\n                            redirect: `${url}/error?error=AccessDenied`,\n                            cookies\n                        };\n                    } else if (typeof isAllowed === \"string\") {\n                        return {\n                            redirect: isAllowed,\n                            cookies\n                        };\n                    }\n                } catch (error) {\n                    return {\n                        redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n                        cookies\n                    };\n                }\n                const { user, session, isNewUser } = await (0, _callbackHandler.default)({\n                    sessionToken: sessionStore.value,\n                    profile,\n                    account,\n                    options\n                });\n                if (useJwtSession) {\n                    var _user$id;\n                    const defaultToken = {\n                        name: user.name,\n                        email: user.email,\n                        picture: user.image,\n                        sub: (_user$id = user.id) === null || _user$id === void 0 ? void 0 : _user$id.toString()\n                    };\n                    const token = await callbacks.jwt({\n                        token: defaultToken,\n                        user,\n                        account,\n                        profile: OAuthProfile,\n                        isNewUser,\n                        trigger: isNewUser ? \"signUp\" : \"signIn\"\n                    });\n                    const newToken = await jwt.encode({\n                        ...jwt,\n                        token\n                    });\n                    const cookieExpires = new Date();\n                    cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                    const sessionCookies = sessionStore.chunk(newToken, {\n                        expires: cookieExpires\n                    });\n                    cookies.push(...sessionCookies);\n                } else {\n                    cookies.push({\n                        name: options.cookies.sessionToken.name,\n                        value: session.sessionToken,\n                        options: {\n                            ...options.cookies.sessionToken.options,\n                            expires: session.expires\n                        }\n                    });\n                }\n                await ((_events$signIn = events.signIn) === null || _events$signIn === void 0 ? void 0 : _events$signIn.call(events, {\n                    user,\n                    account,\n                    profile,\n                    isNewUser\n                }));\n                if (isNewUser && pages.newUser) {\n                    return {\n                        redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}callbackUrl=${encodeURIComponent(callbackUrl)}`,\n                        cookies\n                    };\n                }\n                return {\n                    redirect: callbackUrl,\n                    cookies\n                };\n            } catch (error) {\n                if (error.name === \"AccountNotLinkedError\") {\n                    return {\n                        redirect: `${url}/error?error=OAuthAccountNotLinked`,\n                        cookies\n                    };\n                } else if (error.name === \"CreateUserError\") {\n                    return {\n                        redirect: `${url}/error?error=OAuthCreateAccount`,\n                        cookies\n                    };\n                }\n                logger.error(\"OAUTH_CALLBACK_HANDLER_ERROR\", error);\n                return {\n                    redirect: `${url}/error?error=Callback`,\n                    cookies\n                };\n            }\n        } catch (error) {\n            if (error.name === \"OAuthCallbackError\") {\n                logger.error(\"OAUTH_CALLBACK_ERROR\", {\n                    error: error,\n                    providerId: provider.id\n                });\n                return {\n                    redirect: `${url}/error?error=OAuthCallback`,\n                    cookies\n                };\n            }\n            logger.error(\"OAUTH_CALLBACK_ERROR\", error);\n            return {\n                redirect: `${url}/error?error=Callback`,\n                cookies\n            };\n        }\n    } else if (provider.type === \"email\") {\n        try {\n            var _events$signIn2;\n            const token = query === null || query === void 0 ? void 0 : query.token;\n            const identifier = query === null || query === void 0 ? void 0 : query.email;\n            if (!token || !identifier) {\n                return {\n                    redirect: `${url}/error?error=configuration`,\n                    cookies\n                };\n            }\n            const invite = await adapter.useVerificationToken({\n                identifier,\n                token: (0, _utils.hashToken)(token, options)\n            });\n            const invalidInvite = !invite || invite.expires.valueOf() < Date.now();\n            if (invalidInvite) {\n                return {\n                    redirect: `${url}/error?error=Verification`,\n                    cookies\n                };\n            }\n            const profile = await (0, _getUserFromEmail.default)({\n                email: identifier,\n                adapter\n            });\n            const account = {\n                providerAccountId: profile.email,\n                type: \"email\",\n                provider: provider.id\n            };\n            try {\n                const signInCallbackResponse = await callbacks.signIn({\n                    user: profile,\n                    account\n                });\n                if (!signInCallbackResponse) {\n                    return {\n                        redirect: `${url}/error?error=AccessDenied`,\n                        cookies\n                    };\n                } else if (typeof signInCallbackResponse === \"string\") {\n                    return {\n                        redirect: signInCallbackResponse,\n                        cookies\n                    };\n                }\n            } catch (error) {\n                return {\n                    redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n                    cookies\n                };\n            }\n            const { user, session, isNewUser } = await (0, _callbackHandler.default)({\n                sessionToken: sessionStore.value,\n                profile,\n                account,\n                options\n            });\n            if (useJwtSession) {\n                var _user$id2;\n                const defaultToken = {\n                    name: user.name,\n                    email: user.email,\n                    picture: user.image,\n                    sub: (_user$id2 = user.id) === null || _user$id2 === void 0 ? void 0 : _user$id2.toString()\n                };\n                const token = await callbacks.jwt({\n                    token: defaultToken,\n                    user,\n                    account,\n                    isNewUser,\n                    trigger: isNewUser ? \"signUp\" : \"signIn\"\n                });\n                const newToken = await jwt.encode({\n                    ...jwt,\n                    token\n                });\n                const cookieExpires = new Date();\n                cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n                const sessionCookies = sessionStore.chunk(newToken, {\n                    expires: cookieExpires\n                });\n                cookies.push(...sessionCookies);\n            } else {\n                cookies.push({\n                    name: options.cookies.sessionToken.name,\n                    value: session.sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: session.expires\n                    }\n                });\n            }\n            await ((_events$signIn2 = events.signIn) === null || _events$signIn2 === void 0 ? void 0 : _events$signIn2.call(events, {\n                user,\n                account,\n                isNewUser\n            }));\n            if (isNewUser && pages.newUser) {\n                return {\n                    redirect: `${pages.newUser}${pages.newUser.includes(\"?\") ? \"&\" : \"?\"}callbackUrl=${encodeURIComponent(callbackUrl)}`,\n                    cookies\n                };\n            }\n            return {\n                redirect: callbackUrl,\n                cookies\n            };\n        } catch (error) {\n            if (error.name === \"CreateUserError\") {\n                return {\n                    redirect: `${url}/error?error=EmailCreateAccount`,\n                    cookies\n                };\n            }\n            logger.error(\"CALLBACK_EMAIL_ERROR\", error);\n            return {\n                redirect: `${url}/error?error=Callback`,\n                cookies\n            };\n        }\n    } else if (provider.type === \"credentials\" && method === \"POST\") {\n        var _user$id3, _events$signIn3;\n        const credentials = body;\n        let user;\n        try {\n            user = await provider.authorize(credentials, {\n                query,\n                body,\n                headers,\n                method\n            });\n            if (!user) {\n                return {\n                    status: 401,\n                    redirect: `${url}/error?${new URLSearchParams({\n                        error: \"CredentialsSignin\",\n                        provider: provider.id\n                    })}`,\n                    cookies\n                };\n            }\n        } catch (error) {\n            return {\n                status: 401,\n                redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n                cookies\n            };\n        }\n        const account = {\n            providerAccountId: user.id,\n            type: \"credentials\",\n            provider: provider.id\n        };\n        try {\n            const isAllowed = await callbacks.signIn({\n                user,\n                account,\n                credentials\n            });\n            if (!isAllowed) {\n                return {\n                    status: 403,\n                    redirect: `${url}/error?error=AccessDenied`,\n                    cookies\n                };\n            } else if (typeof isAllowed === \"string\") {\n                return {\n                    redirect: isAllowed,\n                    cookies\n                };\n            }\n        } catch (error) {\n            return {\n                redirect: `${url}/error?error=${encodeURIComponent(error.message)}`,\n                cookies\n            };\n        }\n        const defaultToken = {\n            name: user.name,\n            email: user.email,\n            picture: user.image,\n            sub: (_user$id3 = user.id) === null || _user$id3 === void 0 ? void 0 : _user$id3.toString()\n        };\n        const token = await callbacks.jwt({\n            token: defaultToken,\n            user,\n            account,\n            isNewUser: false,\n            trigger: \"signIn\"\n        });\n        const newToken = await jwt.encode({\n            ...jwt,\n            token\n        });\n        const cookieExpires = new Date();\n        cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1000);\n        const sessionCookies = sessionStore.chunk(newToken, {\n            expires: cookieExpires\n        });\n        cookies.push(...sessionCookies);\n        await ((_events$signIn3 = events.signIn) === null || _events$signIn3 === void 0 ? void 0 : _events$signIn3.call(events, {\n            user,\n            account\n        }));\n        return {\n            redirect: callbackUrl,\n            cookies\n        };\n    }\n    return {\n        status: 500,\n        body: `Error: Callback for provider type ${provider.type} not supported`,\n        cookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/routes/callback.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/routes/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/next-auth/core/routes/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"callback\", ({\n    enumerable: true,\n    get: function() {\n        return _callback.default;\n    }\n}));\nObject.defineProperty(exports, \"providers\", ({\n    enumerable: true,\n    get: function() {\n        return _providers.default;\n    }\n}));\nObject.defineProperty(exports, \"session\", ({\n    enumerable: true,\n    get: function() {\n        return _session.default;\n    }\n}));\nObject.defineProperty(exports, \"signin\", ({\n    enumerable: true,\n    get: function() {\n        return _signin.default;\n    }\n}));\nObject.defineProperty(exports, \"signout\", ({\n    enumerable: true,\n    get: function() {\n        return _signout.default;\n    }\n}));\nvar _callback = _interopRequireDefault(__webpack_require__(/*! ./callback */ \"(sc_server)/./node_modules/next-auth/core/routes/callback.js\"));\nvar _signin = _interopRequireDefault(__webpack_require__(/*! ./signin */ \"(sc_server)/./node_modules/next-auth/core/routes/signin.js\"));\nvar _signout = _interopRequireDefault(__webpack_require__(/*! ./signout */ \"(sc_server)/./node_modules/next-auth/core/routes/signout.js\"));\nvar _session = _interopRequireDefault(__webpack_require__(/*! ./session */ \"(sc_server)/./node_modules/next-auth/core/routes/session.js\"));\nvar _providers = _interopRequireDefault(__webpack_require__(/*! ./providers */ \"(sc_server)/./node_modules/next-auth/core/routes/providers.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWIsSUFBSUEseUJBQXlCQyxtQkFBT0EsQ0FBQyxnSUFBOEM7QUFFbkZDLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGSCw0Q0FBMkM7SUFDekNJLFlBQVk7SUFDWkMsS0FBSztRQUNILE9BQU9DLFVBQVVDO0lBQ25CO0FBQ0YsQ0FBQyxFQUFDO0FBQ0ZQLDZDQUE0QztJQUMxQ0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0gsT0FBT0csV0FBV0Q7SUFDcEI7QUFDRixDQUFDLEVBQUM7QUFDRlAsMkNBQTBDO0lBQ3hDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDSCxPQUFPSSxTQUFTRjtJQUNsQjtBQUNGLENBQUMsRUFBQztBQUNGUCwwQ0FBeUM7SUFDdkNJLFlBQVk7SUFDWkMsS0FBSztRQUNILE9BQU9LLFFBQVFIO0lBQ2pCO0FBQ0YsQ0FBQyxFQUFDO0FBQ0ZQLDJDQUEwQztJQUN4Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0gsT0FBT00sU0FBU0o7SUFDbEI7QUFDRixDQUFDLEVBQUM7QUFFRixJQUFJRCxZQUFZUix1QkFBdUJDLG1CQUFPQSxDQUFDLGdGQUFZO0FBRTNELElBQUlXLFVBQVVaLHVCQUF1QkMsbUJBQU9BLENBQUMsNEVBQVU7QUFFdkQsSUFBSVksV0FBV2IsdUJBQXVCQyxtQkFBT0EsQ0FBQyw4RUFBVztBQUV6RCxJQUFJVSxXQUFXWCx1QkFBdUJDLG1CQUFPQSxDQUFDLDhFQUFXO0FBRXpELElBQUlTLGFBQWFWLHVCQUF1QkMsbUJBQU9BLENBQUMsa0ZBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL3JvdXRlcy9pbmRleC5qcz9jNmVmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCA9IHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNhbGxiYWNrXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9jYWxsYmFjay5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInByb3ZpZGVyc1wiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfcHJvdmlkZXJzLmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2Vzc2lvblwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfc2Vzc2lvbi5kZWZhdWx0O1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInNpZ25pblwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfc2lnbmluLmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2lnbm91dFwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfc2lnbm91dC5kZWZhdWx0O1xuICB9XG59KTtcblxudmFyIF9jYWxsYmFjayA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vY2FsbGJhY2tcIikpO1xuXG52YXIgX3NpZ25pbiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vc2lnbmluXCIpKTtcblxudmFyIF9zaWdub3V0ID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zaWdub3V0XCIpKTtcblxudmFyIF9zZXNzaW9uID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9zZXNzaW9uXCIpKTtcblxudmFyIF9wcm92aWRlcnMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3Byb3ZpZGVyc1wiKSk7Il0sIm5hbWVzIjpbIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX2NhbGxiYWNrIiwiZGVmYXVsdCIsIl9wcm92aWRlcnMiLCJfc2Vzc2lvbiIsIl9zaWduaW4iLCJfc2lnbm91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/routes/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/routes/providers.js":
/*!*********************************************************!*\
  !*** ./node_modules/next-auth/core/routes/providers.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = providers;\nfunction providers(providers) {\n    return {\n        headers: [\n            {\n                key: \"Content-Type\",\n                value: \"application/json\"\n            }\n        ],\n        body: providers.reduce((acc, { id, name, type, signinUrl, callbackUrl })=>{\n            acc[id] = {\n                id,\n                name,\n                type,\n                signinUrl,\n                callbackUrl\n            };\n            return acc;\n        }, {})\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL3Byb3ZpZGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWVFLEdBQUdDO0FBRWxCLFNBQVNBLFVBQVVBLFNBQVM7SUFDMUIsT0FBTztRQUNMQyxTQUFTO1lBQUM7Z0JBQ1JDLEtBQUs7Z0JBQ0xKLE9BQU87WUFDVDtTQUFFO1FBQ0ZLLE1BQU1ILFVBQVVJLE9BQU8sQ0FBQ0MsS0FBSyxFQUMzQkMsRUFBRSxFQUNGQyxJQUFJLEVBQ0pDLElBQUksRUFDSkMsU0FBUyxFQUNUQyxXQUFXLEVBQ1o7WUFDQ0wsR0FBRyxDQUFDQyxHQUFHLEdBQUc7Z0JBQ1JBO2dCQUNBQztnQkFDQUM7Z0JBQ0FDO2dCQUNBQztZQUNGO1lBQ0EsT0FBT0w7UUFDVCxHQUFHLENBQUM7SUFDTjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS9yb3V0ZXMvcHJvdmlkZXJzLmpzP2ZmMzAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBwcm92aWRlcnM7XG5cbmZ1bmN0aW9uIHByb3ZpZGVycyhwcm92aWRlcnMpIHtcbiAgcmV0dXJuIHtcbiAgICBoZWFkZXJzOiBbe1xuICAgICAga2V5OiBcIkNvbnRlbnQtVHlwZVwiLFxuICAgICAgdmFsdWU6IFwiYXBwbGljYXRpb24vanNvblwiXG4gICAgfV0sXG4gICAgYm9keTogcHJvdmlkZXJzLnJlZHVjZSgoYWNjLCB7XG4gICAgICBpZCxcbiAgICAgIG5hbWUsXG4gICAgICB0eXBlLFxuICAgICAgc2lnbmluVXJsLFxuICAgICAgY2FsbGJhY2tVcmxcbiAgICB9KSA9PiB7XG4gICAgICBhY2NbaWRdID0ge1xuICAgICAgICBpZCxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgdHlwZSxcbiAgICAgICAgc2lnbmluVXJsLFxuICAgICAgICBjYWxsYmFja1VybFxuICAgICAgfTtcbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsInByb3ZpZGVycyIsImhlYWRlcnMiLCJrZXkiLCJib2R5IiwicmVkdWNlIiwiYWNjIiwiaWQiLCJuYW1lIiwidHlwZSIsInNpZ25pblVybCIsImNhbGxiYWNrVXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/routes/providers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/routes/session.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/core/routes/session.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = session;\nvar _utils = __webpack_require__(/*! ../lib/utils */ \"(sc_server)/./node_modules/next-auth/core/lib/utils.js\");\nasync function session(params) {\n    const { options, sessionStore, newSession, isUpdate } = params;\n    const { adapter, jwt, events, callbacks, logger, session: { strategy: sessionStrategy, maxAge: sessionMaxAge } } = options;\n    const response = {\n        body: {},\n        headers: [\n            {\n                key: \"Content-Type\",\n                value: \"application/json\"\n            }\n        ],\n        cookies: []\n    };\n    const sessionToken = sessionStore.value;\n    if (!sessionToken) return response;\n    if (sessionStrategy === \"jwt\") {\n        try {\n            var _response$cookies, _events$session;\n            const decodedToken = await jwt.decode({\n                ...jwt,\n                token: sessionToken\n            });\n            if (!decodedToken) throw new Error(\"JWT invalid\");\n            const token = await callbacks.jwt({\n                token: decodedToken,\n                ...isUpdate && {\n                    trigger: \"update\"\n                },\n                session: newSession\n            });\n            const newExpires = (0, _utils.fromDate)(sessionMaxAge);\n            const updatedSession = await callbacks.session({\n                session: {\n                    user: {\n                        name: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.name,\n                        email: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.email,\n                        image: decodedToken === null || decodedToken === void 0 ? void 0 : decodedToken.picture\n                    },\n                    expires: newExpires.toISOString()\n                },\n                token\n            });\n            response.body = updatedSession;\n            const newToken = await jwt.encode({\n                ...jwt,\n                token,\n                maxAge: options.session.maxAge\n            });\n            const sessionCookies = sessionStore.chunk(newToken, {\n                expires: newExpires\n            });\n            (_response$cookies = response.cookies) === null || _response$cookies === void 0 ? void 0 : _response$cookies.push(...sessionCookies);\n            await ((_events$session = events.session) === null || _events$session === void 0 ? void 0 : _events$session.call(events, {\n                session: updatedSession,\n                token\n            }));\n        } catch (error) {\n            var _response$cookies2;\n            logger.error(\"JWT_SESSION_ERROR\", error);\n            (_response$cookies2 = response.cookies) === null || _response$cookies2 === void 0 ? void 0 : _response$cookies2.push(...sessionStore.clean());\n        }\n    } else {\n        try {\n            const { getSessionAndUser, deleteSession, updateSession } = adapter;\n            let userAndSession = await getSessionAndUser(sessionToken);\n            if (userAndSession && userAndSession.session.expires.valueOf() < Date.now()) {\n                await deleteSession(sessionToken);\n                userAndSession = null;\n            }\n            if (userAndSession) {\n                var _response$cookies3, _events$session2;\n                const { user, session } = userAndSession;\n                const sessionUpdateAge = options.session.updateAge;\n                const sessionIsDueToBeUpdatedDate = session.expires.valueOf() - sessionMaxAge * 1000 + sessionUpdateAge * 1000;\n                const newExpires = (0, _utils.fromDate)(sessionMaxAge);\n                if (sessionIsDueToBeUpdatedDate <= Date.now()) {\n                    await updateSession({\n                        sessionToken,\n                        expires: newExpires\n                    });\n                }\n                const sessionPayload = await callbacks.session({\n                    session: {\n                        user: {\n                            name: user.name,\n                            email: user.email,\n                            image: user.image\n                        },\n                        expires: session.expires.toISOString()\n                    },\n                    user,\n                    newSession,\n                    ...isUpdate ? {\n                        trigger: \"update\"\n                    } : {}\n                });\n                response.body = sessionPayload;\n                (_response$cookies3 = response.cookies) === null || _response$cookies3 === void 0 ? void 0 : _response$cookies3.push({\n                    name: options.cookies.sessionToken.name,\n                    value: sessionToken,\n                    options: {\n                        ...options.cookies.sessionToken.options,\n                        expires: newExpires\n                    }\n                });\n                await ((_events$session2 = events.session) === null || _events$session2 === void 0 ? void 0 : _events$session2.call(events, {\n                    session: sessionPayload\n                }));\n            } else if (sessionToken) {\n                var _response$cookies4;\n                (_response$cookies4 = response.cookies) === null || _response$cookies4 === void 0 ? void 0 : _response$cookies4.push(...sessionStore.clean());\n            }\n        } catch (error) {\n            logger.error(\"SESSION_ERROR\", error);\n        }\n    }\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/routes/session.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/routes/signin.js":
/*!******************************************************!*\
  !*** ./node_modules/next-auth/core/routes/signin.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = signin;\nvar _authorizationUrl = _interopRequireDefault(__webpack_require__(/*! ../lib/oauth/authorization-url */ \"(sc_server)/./node_modules/next-auth/core/lib/oauth/authorization-url.js\"));\nvar _signin = _interopRequireDefault(__webpack_require__(/*! ../lib/email/signin */ \"(sc_server)/./node_modules/next-auth/core/lib/email/signin.js\"));\nvar _getUserFromEmail = _interopRequireDefault(__webpack_require__(/*! ../lib/email/getUserFromEmail */ \"(sc_server)/./node_modules/next-auth/core/lib/email/getUserFromEmail.js\"));\nasync function signin(params) {\n    const { options, query, body } = params;\n    const { url, callbacks, logger, provider } = options;\n    if (!provider.type) {\n        return {\n            status: 500,\n            text: `Error: Type not specified for ${provider.name}`\n        };\n    }\n    if (provider.type === \"oauth\") {\n        try {\n            const response = await (0, _authorizationUrl.default)({\n                options,\n                query\n            });\n            return response;\n        } catch (error) {\n            logger.error(\"SIGNIN_OAUTH_ERROR\", {\n                error: error,\n                providerId: provider.id\n            });\n            return {\n                redirect: `${url}/error?error=OAuthSignin`\n            };\n        }\n    } else if (provider.type === \"email\") {\n        var _provider$normalizeId;\n        let email = body === null || body === void 0 ? void 0 : body.email;\n        if (!email) return {\n            redirect: `${url}/error?error=EmailSignin`\n        };\n        const normalizer = (_provider$normalizeId = provider.normalizeIdentifier) !== null && _provider$normalizeId !== void 0 ? _provider$normalizeId : (identifier)=>{\n            let [local, domain] = identifier.toLowerCase().trim().split(\"@\");\n            domain = domain.split(\",\")[0];\n            return `${local}@${domain}`;\n        };\n        try {\n            email = normalizer(body === null || body === void 0 ? void 0 : body.email);\n        } catch (error) {\n            logger.error(\"SIGNIN_EMAIL_ERROR\", {\n                error,\n                providerId: provider.id\n            });\n            return {\n                redirect: `${url}/error?error=EmailSignin`\n            };\n        }\n        const user = await (0, _getUserFromEmail.default)({\n            email,\n            adapter: options.adapter\n        });\n        const account = {\n            providerAccountId: email,\n            userId: email,\n            type: \"email\",\n            provider: provider.id\n        };\n        try {\n            const signInCallbackResponse = await callbacks.signIn({\n                user,\n                account,\n                email: {\n                    verificationRequest: true\n                }\n            });\n            if (!signInCallbackResponse) {\n                return {\n                    redirect: `${url}/error?error=AccessDenied`\n                };\n            } else if (typeof signInCallbackResponse === \"string\") {\n                return {\n                    redirect: signInCallbackResponse\n                };\n            }\n        } catch (error) {\n            return {\n                redirect: `${url}/error?${new URLSearchParams({\n                    error: error\n                })}`\n            };\n        }\n        try {\n            const redirect = await (0, _signin.default)(email, options);\n            return {\n                redirect\n            };\n        } catch (error) {\n            logger.error(\"SIGNIN_EMAIL_ERROR\", {\n                error,\n                providerId: provider.id\n            });\n            return {\n                redirect: `${url}/error?error=EmailSignin`\n            };\n        }\n    }\n    return {\n        redirect: `${url}/signin`\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/routes/signin.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/routes/signout.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/core/routes/signout.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = signout;\nasync function signout(params) {\n    const { options, sessionStore } = params;\n    const { adapter, events, jwt, callbackUrl, logger, session } = options;\n    const sessionToken = sessionStore === null || sessionStore === void 0 ? void 0 : sessionStore.value;\n    if (!sessionToken) {\n        return {\n            redirect: callbackUrl\n        };\n    }\n    if (session.strategy === \"jwt\") {\n        try {\n            var _events$signOut;\n            const decodedJwt = await jwt.decode({\n                ...jwt,\n                token: sessionToken\n            });\n            await ((_events$signOut = events.signOut) === null || _events$signOut === void 0 ? void 0 : _events$signOut.call(events, {\n                token: decodedJwt\n            }));\n        } catch (error) {\n            logger.error(\"SIGNOUT_ERROR\", error);\n        }\n    } else {\n        try {\n            var _events$signOut2;\n            const session = await adapter.deleteSession(sessionToken);\n            await ((_events$signOut2 = events.signOut) === null || _events$signOut2 === void 0 ? void 0 : _events$signOut2.call(events, {\n                session\n            }));\n        } catch (error) {\n            logger.error(\"SIGNOUT_ERROR\", error);\n        }\n    }\n    const sessionCookies = sessionStore.clean();\n    return {\n        redirect: callbackUrl,\n        cookies: sessionCookies\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvcm91dGVzL3NpZ25vdXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlRSxHQUFHQztBQUVsQixlQUFlQSxRQUFRQyxNQUFNO0lBQzNCLE1BQU0sRUFDSkMsT0FBTyxFQUNQQyxZQUFZLEVBQ2IsR0FBR0Y7SUFDSixNQUFNLEVBQ0pHLE9BQU8sRUFDUEMsTUFBTSxFQUNOQyxHQUFHLEVBQ0hDLFdBQVcsRUFDWEMsTUFBTSxFQUNOQyxPQUFPLEVBQ1IsR0FBR1A7SUFDSixNQUFNUSxlQUFlUCxpQkFBaUIsUUFBUUEsaUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWFMO0lBRTlGLElBQUksQ0FBQ1ksY0FBYztRQUNqQixPQUFPO1lBQ0xDLFVBQVVKO1FBQ1o7SUFDRjtJQUVBLElBQUlFLFFBQVFHLGFBQWEsT0FBTztRQUM5QixJQUFJO1lBQ0YsSUFBSUM7WUFFSixNQUFNQyxhQUFhLE1BQU1SLElBQUlTLE9BQU87Z0JBQUUsR0FBR1QsR0FBRztnQkFDMUNVLE9BQU9OO1lBQ1Q7WUFDQSxNQUFPLEVBQUNHLGtCQUFrQlIsT0FBT1ksT0FBTSxNQUFPLFFBQVFKLG9CQUFvQixLQUFLLElBQUksS0FBSyxJQUFJQSxnQkFBZ0JLLEtBQUtiLFFBQVE7Z0JBQ3ZIVyxPQUFPRjtZQUNULEVBQUM7UUFDSCxFQUFFLE9BQU9LLE9BQU87WUFDZFgsT0FBT1csTUFBTSxpQkFBaUJBO1FBQ2hDO0lBQ0YsT0FBTztRQUNMLElBQUk7WUFDRixJQUFJQztZQUVKLE1BQU1YLFVBQVUsTUFBTUwsUUFBUWlCLGNBQWNYO1lBQzVDLE1BQU8sRUFBQ1UsbUJBQW1CZixPQUFPWSxPQUFNLE1BQU8sUUFBUUcscUJBQXFCLEtBQUssSUFBSSxLQUFLLElBQUlBLGlCQUFpQkYsS0FBS2IsUUFBUTtnQkFDMUhJO1lBQ0YsRUFBQztRQUNILEVBQUUsT0FBT1UsT0FBTztZQUNkWCxPQUFPVyxNQUFNLGlCQUFpQkE7UUFDaEM7SUFDRjtJQUVBLE1BQU1HLGlCQUFpQm5CLGFBQWFvQjtJQUNwQyxPQUFPO1FBQ0xaLFVBQVVKO1FBQ1ZpQixTQUFTRjtJQUNYO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9jb3JlL3JvdXRlcy9zaWdub3V0LmpzPzI5NTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBzaWdub3V0O1xuXG5hc3luYyBmdW5jdGlvbiBzaWdub3V0KHBhcmFtcykge1xuICBjb25zdCB7XG4gICAgb3B0aW9ucyxcbiAgICBzZXNzaW9uU3RvcmVcbiAgfSA9IHBhcmFtcztcbiAgY29uc3Qge1xuICAgIGFkYXB0ZXIsXG4gICAgZXZlbnRzLFxuICAgIGp3dCxcbiAgICBjYWxsYmFja1VybCxcbiAgICBsb2dnZXIsXG4gICAgc2Vzc2lvblxuICB9ID0gb3B0aW9ucztcbiAgY29uc3Qgc2Vzc2lvblRva2VuID0gc2Vzc2lvblN0b3JlID09PSBudWxsIHx8IHNlc3Npb25TdG9yZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2Vzc2lvblN0b3JlLnZhbHVlO1xuXG4gIGlmICghc2Vzc2lvblRva2VuKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlZGlyZWN0OiBjYWxsYmFja1VybFxuICAgIH07XG4gIH1cblxuICBpZiAoc2Vzc2lvbi5zdHJhdGVneSA9PT0gXCJqd3RcIikge1xuICAgIHRyeSB7XG4gICAgICB2YXIgX2V2ZW50cyRzaWduT3V0O1xuXG4gICAgICBjb25zdCBkZWNvZGVkSnd0ID0gYXdhaXQgand0LmRlY29kZSh7IC4uLmp3dCxcbiAgICAgICAgdG9rZW46IHNlc3Npb25Ub2tlblxuICAgICAgfSk7XG4gICAgICBhd2FpdCAoKF9ldmVudHMkc2lnbk91dCA9IGV2ZW50cy5zaWduT3V0KSA9PT0gbnVsbCB8fCBfZXZlbnRzJHNpZ25PdXQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ldmVudHMkc2lnbk91dC5jYWxsKGV2ZW50cywge1xuICAgICAgICB0b2tlbjogZGVjb2RlZEp3dFxuICAgICAgfSkpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBsb2dnZXIuZXJyb3IoXCJTSUdOT1VUX0VSUk9SXCIsIGVycm9yKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgdHJ5IHtcbiAgICAgIHZhciBfZXZlbnRzJHNpZ25PdXQyO1xuXG4gICAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgYWRhcHRlci5kZWxldGVTZXNzaW9uKHNlc3Npb25Ub2tlbik7XG4gICAgICBhd2FpdCAoKF9ldmVudHMkc2lnbk91dDIgPSBldmVudHMuc2lnbk91dCkgPT09IG51bGwgfHwgX2V2ZW50cyRzaWduT3V0MiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2V2ZW50cyRzaWduT3V0Mi5jYWxsKGV2ZW50cywge1xuICAgICAgICBzZXNzaW9uXG4gICAgICB9KSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGxvZ2dlci5lcnJvcihcIlNJR05PVVRfRVJST1JcIiwgZXJyb3IpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHNlc3Npb25Db29raWVzID0gc2Vzc2lvblN0b3JlLmNsZWFuKCk7XG4gIHJldHVybiB7XG4gICAgcmVkaXJlY3Q6IGNhbGxiYWNrVXJsLFxuICAgIGNvb2tpZXM6IHNlc3Npb25Db29raWVzXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsInNpZ25vdXQiLCJwYXJhbXMiLCJvcHRpb25zIiwic2Vzc2lvblN0b3JlIiwiYWRhcHRlciIsImV2ZW50cyIsImp3dCIsImNhbGxiYWNrVXJsIiwibG9nZ2VyIiwic2Vzc2lvbiIsInNlc3Npb25Ub2tlbiIsInJlZGlyZWN0Iiwic3RyYXRlZ3kiLCJfZXZlbnRzJHNpZ25PdXQiLCJkZWNvZGVkSnd0IiwiZGVjb2RlIiwidG9rZW4iLCJzaWduT3V0IiwiY2FsbCIsImVycm9yIiwiX2V2ZW50cyRzaWduT3V0MiIsImRlbGV0ZVNlc3Npb24iLCJzZXNzaW9uQ29va2llcyIsImNsZWFuIiwiY29va2llcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/routes/signout.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/core/types.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/core/types.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2NvcmUvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvY29yZS90eXBlcy5qcz9lODFkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/core/types.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/css/index.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/css/index.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = function() {\n    return ':root{--border-width:1px;--border-radius:0.5rem;--color-error:#c94b4b;--color-info:#157efb;--color-info-text:#fff}.__next-auth-theme-auto,.__next-auth-theme-light{--color-background:#ececec;--color-background-card:#fff;--color-text:#000;--color-primary:#444;--color-control-border:#bbb;--color-button-active-background:#f9f9f9;--color-button-active-border:#aaa;--color-seperator:#ccc}.__next-auth-theme-dark{--color-background:#161b22;--color-background-card:#0d1117;--color-text:#fff;--color-primary:#ccc;--color-control-border:#555;--color-button-active-background:#060606;--color-button-active-border:#666;--color-seperator:#444}@media (prefers-color-scheme:dark){.__next-auth-theme-auto{--color-background:#161b22;--color-background-card:#0d1117;--color-text:#fff;--color-primary:#ccc;--color-control-border:#555;--color-button-active-background:#060606;--color-button-active-border:#666;--color-seperator:#444}}body{background-color:var(--color-background);font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;margin:0;padding:0}h1{font-weight:400;margin-bottom:1.5rem;padding:0 1rem}h1,p{color:var(--color-text)}form{margin:0;padding:0}label{font-weight:500;margin-bottom:.25rem;text-align:left}input[type],label{color:var(--color-text);display:block}input[type]{background:var(--color-background-card);border:var(--border-width) solid var(--color-control-border);border-radius:var(--border-radius);box-sizing:border-box;font-size:1rem;padding:.5rem 1rem;width:100%}input[type]:focus{box-shadow:none}p{font-size:1.1rem;line-height:2rem;margin:0 0 1.5rem;padding:0 1rem}a.button{line-height:1rem;text-decoration:none}a.button:link,a.button:visited{background-color:var(--color-background);color:var(--color-primary)}button span{flex-grow:1}a.button,button{align-items:center;background-color:var(--provider-bg,var(--color-background-card));border-color:rgba(0,0,0,.1);border-radius:var(--border-radius);color:var(--provider-color,var(--color-primary));display:flex;font-size:1.1rem;font-weight:500;justify-content:center;margin:0 0 .75rem;min-height:62px;padding:.75rem 1rem;position:relative;transition:all .1s ease-in-out}@media (max-width:450px){a.button,button{font-size:.9rem}}a.button:active,a.button:hover,button:active,button:hover{cursor:pointer}a.button #provider-logo,button #provider-logo{display:block;width:25px}a.button #provider-logo-dark,button #provider-logo-dark{display:none}#submitButton{background-color:var(--brand-color,var(--color-info));color:var(--button-text-color,var(--color-info-text));width:100%}@media (prefers-color-scheme:dark){a.button,button{background-color:var(--provider-dark-bg,var(--color-background));color:var(--provider-dark-color,var(--color-primary))}#provider-logo{display:none!important}#provider-logo-dark{display:block!important;width:25px}}a.site{color:var(--color-primary);font-size:1rem;line-height:2rem;text-decoration:none}a.site:hover{text-decoration:underline}.page{display:grid;height:100%;margin:0;padding:0;place-items:center;position:absolute;width:100%}.page>div{text-align:center}.error a.button{display:inline-block;margin-top:.5rem;padding-left:2rem;padding-right:2rem}.error .message{margin-bottom:1.5rem}.signin input[type=text]{display:block;margin-left:auto;margin-right:auto}.signin hr{border:0;border-top:1px solid var(--color-seperator);display:block;margin:2rem auto 1rem;overflow:visible}.signin hr:before{background:var(--color-background-card);color:#888;content:\"or\";padding:0 .4rem;position:relative;top:-.7rem}.signin .error{background:#f5f5f5;background:var(--color-error);border-radius:.3rem;font-weight:500}.signin .error p{color:var(--color-info-text);font-size:.9rem;line-height:1.2rem;padding:.5rem 1rem;text-align:left}.signin form,.signin>div{display:block}.signin form input[type],.signin>div input[type]{margin-bottom:.5rem}.signin form button,.signin>div button{width:100%}.signin form,.signin>div{max-width:300px}.logo{display:inline-block;margin-bottom:25px;margin-top:20px;max-height:70px;max-width:150px}@media screen and (min-width:450px){.card{width:350px}}@media screen and (max-width:450px){.card{width:200px}}.card{background-color:var(--color-background-card);border-radius:30px;margin:20px 0;padding:20px 50px}.card .header{color:var(--color-primary)}.section-header{color:var(--color-text)}';\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2Nzcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUFBLE9BQU9DLFVBQVU7SUFBYSxPQUFPO0FBQTIxSSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2Nzcy9pbmRleC5qcz9jNjFhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7IHJldHVybiBcIjpyb290ey0tYm9yZGVyLXdpZHRoOjFweDstLWJvcmRlci1yYWRpdXM6MC41cmVtOy0tY29sb3ItZXJyb3I6I2M5NGI0YjstLWNvbG9yLWluZm86IzE1N2VmYjstLWNvbG9yLWluZm8tdGV4dDojZmZmfS5fX25leHQtYXV0aC10aGVtZS1hdXRvLC5fX25leHQtYXV0aC10aGVtZS1saWdodHstLWNvbG9yLWJhY2tncm91bmQ6I2VjZWNlYzstLWNvbG9yLWJhY2tncm91bmQtY2FyZDojZmZmOy0tY29sb3ItdGV4dDojMDAwOy0tY29sb3ItcHJpbWFyeTojNDQ0Oy0tY29sb3ItY29udHJvbC1ib3JkZXI6I2JiYjstLWNvbG9yLWJ1dHRvbi1hY3RpdmUtYmFja2dyb3VuZDojZjlmOWY5Oy0tY29sb3ItYnV0dG9uLWFjdGl2ZS1ib3JkZXI6I2FhYTstLWNvbG9yLXNlcGVyYXRvcjojY2NjfS5fX25leHQtYXV0aC10aGVtZS1kYXJrey0tY29sb3ItYmFja2dyb3VuZDojMTYxYjIyOy0tY29sb3ItYmFja2dyb3VuZC1jYXJkOiMwZDExMTc7LS1jb2xvci10ZXh0OiNmZmY7LS1jb2xvci1wcmltYXJ5OiNjY2M7LS1jb2xvci1jb250cm9sLWJvcmRlcjojNTU1Oy0tY29sb3ItYnV0dG9uLWFjdGl2ZS1iYWNrZ3JvdW5kOiMwNjA2MDY7LS1jb2xvci1idXR0b24tYWN0aXZlLWJvcmRlcjojNjY2Oy0tY29sb3Itc2VwZXJhdG9yOiM0NDR9QG1lZGlhIChwcmVmZXJzLWNvbG9yLXNjaGVtZTpkYXJrKXsuX19uZXh0LWF1dGgtdGhlbWUtYXV0b3stLWNvbG9yLWJhY2tncm91bmQ6IzE2MWIyMjstLWNvbG9yLWJhY2tncm91bmQtY2FyZDojMGQxMTE3Oy0tY29sb3ItdGV4dDojZmZmOy0tY29sb3ItcHJpbWFyeTojY2NjOy0tY29sb3ItY29udHJvbC1ib3JkZXI6IzU1NTstLWNvbG9yLWJ1dHRvbi1hY3RpdmUtYmFja2dyb3VuZDojMDYwNjA2Oy0tY29sb3ItYnV0dG9uLWFjdGl2ZS1ib3JkZXI6IzY2NjstLWNvbG9yLXNlcGVyYXRvcjojNDQ0fX1ib2R5e2JhY2tncm91bmQtY29sb3I6dmFyKC0tY29sb3ItYmFja2dyb3VuZCk7Zm9udC1mYW1pbHk6dWktc2Fucy1zZXJpZixzeXN0ZW0tdWksLWFwcGxlLXN5c3RlbSxCbGlua01hY1N5c3RlbUZvbnQsU2Vnb2UgVUksUm9ib3RvLEhlbHZldGljYSBOZXVlLEFyaWFsLE5vdG8gU2FucyxzYW5zLXNlcmlmLEFwcGxlIENvbG9yIEVtb2ppLFNlZ29lIFVJIEVtb2ppLFNlZ29lIFVJIFN5bWJvbCxOb3RvIENvbG9yIEVtb2ppO21hcmdpbjowO3BhZGRpbmc6MH1oMXtmb250LXdlaWdodDo0MDA7bWFyZ2luLWJvdHRvbToxLjVyZW07cGFkZGluZzowIDFyZW19aDEscHtjb2xvcjp2YXIoLS1jb2xvci10ZXh0KX1mb3Jte21hcmdpbjowO3BhZGRpbmc6MH1sYWJlbHtmb250LXdlaWdodDo1MDA7bWFyZ2luLWJvdHRvbTouMjVyZW07dGV4dC1hbGlnbjpsZWZ0fWlucHV0W3R5cGVdLGxhYmVse2NvbG9yOnZhcigtLWNvbG9yLXRleHQpO2Rpc3BsYXk6YmxvY2t9aW5wdXRbdHlwZV17YmFja2dyb3VuZDp2YXIoLS1jb2xvci1iYWNrZ3JvdW5kLWNhcmQpO2JvcmRlcjp2YXIoLS1ib3JkZXItd2lkdGgpIHNvbGlkIHZhcigtLWNvbG9yLWNvbnRyb2wtYm9yZGVyKTtib3JkZXItcmFkaXVzOnZhcigtLWJvcmRlci1yYWRpdXMpO2JveC1zaXppbmc6Ym9yZGVyLWJveDtmb250LXNpemU6MXJlbTtwYWRkaW5nOi41cmVtIDFyZW07d2lkdGg6MTAwJX1pbnB1dFt0eXBlXTpmb2N1c3tib3gtc2hhZG93Om5vbmV9cHtmb250LXNpemU6MS4xcmVtO2xpbmUtaGVpZ2h0OjJyZW07bWFyZ2luOjAgMCAxLjVyZW07cGFkZGluZzowIDFyZW19YS5idXR0b257bGluZS1oZWlnaHQ6MXJlbTt0ZXh0LWRlY29yYXRpb246bm9uZX1hLmJ1dHRvbjpsaW5rLGEuYnV0dG9uOnZpc2l0ZWR7YmFja2dyb3VuZC1jb2xvcjp2YXIoLS1jb2xvci1iYWNrZ3JvdW5kKTtjb2xvcjp2YXIoLS1jb2xvci1wcmltYXJ5KX1idXR0b24gc3BhbntmbGV4LWdyb3c6MX1hLmJ1dHRvbixidXR0b257YWxpZ24taXRlbXM6Y2VudGVyO2JhY2tncm91bmQtY29sb3I6dmFyKC0tcHJvdmlkZXItYmcsdmFyKC0tY29sb3ItYmFja2dyb3VuZC1jYXJkKSk7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjEpO2JvcmRlci1yYWRpdXM6dmFyKC0tYm9yZGVyLXJhZGl1cyk7Y29sb3I6dmFyKC0tcHJvdmlkZXItY29sb3IsdmFyKC0tY29sb3ItcHJpbWFyeSkpO2Rpc3BsYXk6ZmxleDtmb250LXNpemU6MS4xcmVtO2ZvbnQtd2VpZ2h0OjUwMDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO21hcmdpbjowIDAgLjc1cmVtO21pbi1oZWlnaHQ6NjJweDtwYWRkaW5nOi43NXJlbSAxcmVtO3Bvc2l0aW9uOnJlbGF0aXZlO3RyYW5zaXRpb246YWxsIC4xcyBlYXNlLWluLW91dH1AbWVkaWEgKG1heC13aWR0aDo0NTBweCl7YS5idXR0b24sYnV0dG9ue2ZvbnQtc2l6ZTouOXJlbX19YS5idXR0b246YWN0aXZlLGEuYnV0dG9uOmhvdmVyLGJ1dHRvbjphY3RpdmUsYnV0dG9uOmhvdmVye2N1cnNvcjpwb2ludGVyfWEuYnV0dG9uICNwcm92aWRlci1sb2dvLGJ1dHRvbiAjcHJvdmlkZXItbG9nb3tkaXNwbGF5OmJsb2NrO3dpZHRoOjI1cHh9YS5idXR0b24gI3Byb3ZpZGVyLWxvZ28tZGFyayxidXR0b24gI3Byb3ZpZGVyLWxvZ28tZGFya3tkaXNwbGF5Om5vbmV9I3N1Ym1pdEJ1dHRvbntiYWNrZ3JvdW5kLWNvbG9yOnZhcigtLWJyYW5kLWNvbG9yLHZhcigtLWNvbG9yLWluZm8pKTtjb2xvcjp2YXIoLS1idXR0b24tdGV4dC1jb2xvcix2YXIoLS1jb2xvci1pbmZvLXRleHQpKTt3aWR0aDoxMDAlfUBtZWRpYSAocHJlZmVycy1jb2xvci1zY2hlbWU6ZGFyayl7YS5idXR0b24sYnV0dG9ue2JhY2tncm91bmQtY29sb3I6dmFyKC0tcHJvdmlkZXItZGFyay1iZyx2YXIoLS1jb2xvci1iYWNrZ3JvdW5kKSk7Y29sb3I6dmFyKC0tcHJvdmlkZXItZGFyay1jb2xvcix2YXIoLS1jb2xvci1wcmltYXJ5KSl9I3Byb3ZpZGVyLWxvZ297ZGlzcGxheTpub25lIWltcG9ydGFudH0jcHJvdmlkZXItbG9nby1kYXJre2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50O3dpZHRoOjI1cHh9fWEuc2l0ZXtjb2xvcjp2YXIoLS1jb2xvci1wcmltYXJ5KTtmb250LXNpemU6MXJlbTtsaW5lLWhlaWdodDoycmVtO3RleHQtZGVjb3JhdGlvbjpub25lfWEuc2l0ZTpob3Zlcnt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfS5wYWdle2Rpc3BsYXk6Z3JpZDtoZWlnaHQ6MTAwJTttYXJnaW46MDtwYWRkaW5nOjA7cGxhY2UtaXRlbXM6Y2VudGVyO3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCV9LnBhZ2U+ZGl2e3RleHQtYWxpZ246Y2VudGVyfS5lcnJvciBhLmJ1dHRvbntkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tdG9wOi41cmVtO3BhZGRpbmctbGVmdDoycmVtO3BhZGRpbmctcmlnaHQ6MnJlbX0uZXJyb3IgLm1lc3NhZ2V7bWFyZ2luLWJvdHRvbToxLjVyZW19LnNpZ25pbiBpbnB1dFt0eXBlPXRleHRde2Rpc3BsYXk6YmxvY2s7bWFyZ2luLWxlZnQ6YXV0bzttYXJnaW4tcmlnaHQ6YXV0b30uc2lnbmluIGhye2JvcmRlcjowO2JvcmRlci10b3A6MXB4IHNvbGlkIHZhcigtLWNvbG9yLXNlcGVyYXRvcik7ZGlzcGxheTpibG9jazttYXJnaW46MnJlbSBhdXRvIDFyZW07b3ZlcmZsb3c6dmlzaWJsZX0uc2lnbmluIGhyOmJlZm9yZXtiYWNrZ3JvdW5kOnZhcigtLWNvbG9yLWJhY2tncm91bmQtY2FyZCk7Y29sb3I6Izg4ODtjb250ZW50OlxcXCJvclxcXCI7cGFkZGluZzowIC40cmVtO3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDotLjdyZW19LnNpZ25pbiAuZXJyb3J7YmFja2dyb3VuZDojZjVmNWY1O2JhY2tncm91bmQ6dmFyKC0tY29sb3ItZXJyb3IpO2JvcmRlci1yYWRpdXM6LjNyZW07Zm9udC13ZWlnaHQ6NTAwfS5zaWduaW4gLmVycm9yIHB7Y29sb3I6dmFyKC0tY29sb3ItaW5mby10ZXh0KTtmb250LXNpemU6LjlyZW07bGluZS1oZWlnaHQ6MS4ycmVtO3BhZGRpbmc6LjVyZW0gMXJlbTt0ZXh0LWFsaWduOmxlZnR9LnNpZ25pbiBmb3JtLC5zaWduaW4+ZGl2e2Rpc3BsYXk6YmxvY2t9LnNpZ25pbiBmb3JtIGlucHV0W3R5cGVdLC5zaWduaW4+ZGl2IGlucHV0W3R5cGVde21hcmdpbi1ib3R0b206LjVyZW19LnNpZ25pbiBmb3JtIGJ1dHRvbiwuc2lnbmluPmRpdiBidXR0b257d2lkdGg6MTAwJX0uc2lnbmluIGZvcm0sLnNpZ25pbj5kaXZ7bWF4LXdpZHRoOjMwMHB4fS5sb2dve2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1ib3R0b206MjVweDttYXJnaW4tdG9wOjIwcHg7bWF4LWhlaWdodDo3MHB4O21heC13aWR0aDoxNTBweH1AbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOjQ1MHB4KXsuY2FyZHt3aWR0aDozNTBweH19QG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDo0NTBweCl7LmNhcmR7d2lkdGg6MjAwcHh9fS5jYXJke2JhY2tncm91bmQtY29sb3I6dmFyKC0tY29sb3ItYmFja2dyb3VuZC1jYXJkKTtib3JkZXItcmFkaXVzOjMwcHg7bWFyZ2luOjIwcHggMDtwYWRkaW5nOjIwcHggNTBweH0uY2FyZCAuaGVhZGVye2NvbG9yOnZhcigtLWNvbG9yLXByaW1hcnkpfS5zZWN0aW9uLWhlYWRlcntjb2xvcjp2YXIoLS1jb2xvci10ZXh0KX1cIiB9Il0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/css/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/index.js":
/*!*****************************************!*\
  !*** ./node_modules/next-auth/index.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _exportNames = {};\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _next.default;\n    }\n}));\nvar _types = __webpack_require__(/*! ./core/types */ \"(sc_server)/./node_modules/next-auth/core/types.js\");\nObject.keys(_types).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _types[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function() {\n            return _types[key];\n        }\n    });\n});\nvar _next = _interopRequireWildcard(__webpack_require__(/*! ./next */ \"(sc_server)/./node_modules/next-auth/next/index.js\"));\nObject.keys(_next).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _next[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function() {\n            return _next[key];\n        }\n    });\n});\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGLElBQUlDLGVBQWUsQ0FBQztBQUNwQkosMkNBQTBDO0lBQ3hDSyxZQUFZO0lBQ1pDLEtBQUs7UUFDSCxPQUFPQyxNQUFNQztJQUNmO0FBQ0YsQ0FBQyxFQUFDO0FBRUYsSUFBSUMsU0FBU0MsbUJBQU9BLENBQUMsd0VBQWM7QUFFbkNWLE9BQU9XLEtBQUtGLFFBQVFHLFFBQVEsU0FBVUMsR0FBRztJQUN2QyxJQUFJQSxRQUFRLGFBQWFBLFFBQVEsY0FBYztJQUMvQyxJQUFJYixPQUFPYyxVQUFVQyxlQUFlQyxLQUFLWixjQUFjUyxNQUFNO0lBQzdELElBQUlBLE9BQU9YLFdBQVdBLE9BQU8sQ0FBQ1csSUFBSSxLQUFLSixNQUFNLENBQUNJLElBQUksRUFBRTtJQUNwRGIsT0FBT0MsZUFBZUMsU0FBU1csS0FBSztRQUNsQ1IsWUFBWTtRQUNaQyxLQUFLO1lBQ0gsT0FBT0csTUFBTSxDQUFDSSxJQUFJO1FBQ3BCO0lBQ0Y7QUFDRjtBQUVBLElBQUlOLFFBQVFVLHdCQUF3QlAsbUJBQU9BLENBQUMsa0VBQVE7QUFFcERWLE9BQU9XLEtBQUtKLE9BQU9LLFFBQVEsU0FBVUMsR0FBRztJQUN0QyxJQUFJQSxRQUFRLGFBQWFBLFFBQVEsY0FBYztJQUMvQyxJQUFJYixPQUFPYyxVQUFVQyxlQUFlQyxLQUFLWixjQUFjUyxNQUFNO0lBQzdELElBQUlBLE9BQU9YLFdBQVdBLE9BQU8sQ0FBQ1csSUFBSSxLQUFLTixLQUFLLENBQUNNLElBQUksRUFBRTtJQUNuRGIsT0FBT0MsZUFBZUMsU0FBU1csS0FBSztRQUNsQ1IsWUFBWTtRQUNaQyxLQUFLO1lBQ0gsT0FBT0MsS0FBSyxDQUFDTSxJQUFJO1FBQ25CO0lBQ0Y7QUFDRjtBQUVBLFNBQVNLLHlCQUF5QkMsV0FBVztJQUFJLElBQUksT0FBT0MsWUFBWSxZQUFZLE9BQU87SUFBTSxJQUFJQyxvQkFBb0IsSUFBSUQ7SUFBVyxJQUFJRSxtQkFBbUIsSUFBSUY7SUFBVyxPQUFPLENBQUNGLDJCQUEyQixTQUFVQyxXQUFXO1FBQUksT0FBT0EsY0FBY0csbUJBQW1CRDtJQUFtQixHQUFHRjtBQUFjO0FBRXRULFNBQVNGLHdCQUF3Qk0sR0FBRyxFQUFFSixXQUFXO0lBQUksSUFBSSxDQUFDQSxlQUFlSSxPQUFPQSxJQUFJQyxZQUFZO1FBQUUsT0FBT0Q7SUFBSztJQUFFLElBQUlBLFFBQVEsUUFBUSxPQUFPQSxRQUFRLFlBQVksT0FBT0EsUUFBUSxZQUFZO1FBQUUsT0FBTztZQUFFZixTQUFTZTtRQUFJO0lBQUc7SUFBRSxJQUFJRSxRQUFRUCx5QkFBeUJDO0lBQWMsSUFBSU0sU0FBU0EsTUFBTUMsSUFBSUgsTUFBTTtRQUFFLE9BQU9FLE1BQU1uQixJQUFJaUI7SUFBTTtJQUFFLElBQUlJLFNBQVMsQ0FBQztJQUFHLElBQUlDLHdCQUF3QjVCLE9BQU9DLGtCQUFrQkQsT0FBTzZCO0lBQTBCLElBQUssSUFBSWhCLE9BQU9VLElBQUs7UUFBRSxJQUFJVixRQUFRLGFBQWFiLE9BQU9jLFVBQVVDLGVBQWVDLEtBQUtPLEtBQUtWLE1BQU07WUFBRSxJQUFJaUIsT0FBT0Ysd0JBQXdCNUIsT0FBTzZCLHlCQUF5Qk4sS0FBS1YsT0FBTztZQUFNLElBQUlpQixRQUFTQSxDQUFBQSxLQUFLeEIsT0FBT3dCLEtBQUtDLEdBQUUsR0FBSTtnQkFBRS9CLE9BQU9DLGVBQWUwQixRQUFRZCxLQUFLaUI7WUFBTyxPQUFPO2dCQUFFSCxNQUFNLENBQUNkLElBQUksR0FBR1UsR0FBRyxDQUFDVixJQUFJO1lBQUU7UUFBRTtJQUFFO0lBQUVjLE9BQU9uQixVQUFVZTtJQUFLLElBQUlFLE9BQU87UUFBRUEsTUFBTU0sSUFBSVIsS0FBS0k7SUFBUztJQUFFLE9BQU9BO0FBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9pbmRleC5qcz85NjA4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xudmFyIF9leHBvcnROYW1lcyA9IHt9O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdFwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfbmV4dC5kZWZhdWx0O1xuICB9XG59KTtcblxudmFyIF90eXBlcyA9IHJlcXVpcmUoXCIuL2NvcmUvdHlwZXNcIik7XG5cbk9iamVjdC5rZXlzKF90eXBlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gIGlmIChrZXkgPT09IFwiZGVmYXVsdFwiIHx8IGtleSA9PT0gXCJfX2VzTW9kdWxlXCIpIHJldHVybjtcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfZXhwb3J0TmFtZXMsIGtleSkpIHJldHVybjtcbiAgaWYgKGtleSBpbiBleHBvcnRzICYmIGV4cG9ydHNba2V5XSA9PT0gX3R5cGVzW2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX3R5cGVzW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xuXG52YXIgX25leHQgPSBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKFwiLi9uZXh0XCIpKTtcblxuT2JqZWN0LmtleXMoX25leHQpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICBpZiAoa2V5ID09PSBcImRlZmF1bHRcIiB8fCBrZXkgPT09IFwiX19lc01vZHVsZVwiKSByZXR1cm47XG4gIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX2V4cG9ydE5hbWVzLCBrZXkpKSByZXR1cm47XG4gIGlmIChrZXkgaW4gZXhwb3J0cyAmJiBleHBvcnRzW2tleV0gPT09IF9uZXh0W2tleV0pIHJldHVybjtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gX25leHRba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7XG5cbmZ1bmN0aW9uIF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCkgeyBpZiAodHlwZW9mIFdlYWtNYXAgIT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIG51bGw7IHZhciBjYWNoZUJhYmVsSW50ZXJvcCA9IG5ldyBXZWFrTWFwKCk7IHZhciBjYWNoZU5vZGVJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTsgcmV0dXJuIChfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUgPSBmdW5jdGlvbiAobm9kZUludGVyb3ApIHsgcmV0dXJuIG5vZGVJbnRlcm9wID8gY2FjaGVOb2RlSW50ZXJvcCA6IGNhY2hlQmFiZWxJbnRlcm9wOyB9KShub2RlSW50ZXJvcCk7IH1cblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqLCBub2RlSW50ZXJvcCkgeyBpZiAoIW5vZGVJbnRlcm9wICYmIG9iaiAmJiBvYmouX19lc01vZHVsZSkgeyByZXR1cm4gb2JqOyB9IGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiAhPT0gXCJvYmplY3RcIiAmJiB0eXBlb2Ygb2JqICE9PSBcImZ1bmN0aW9uXCIpIHsgcmV0dXJuIHsgZGVmYXVsdDogb2JqIH07IH0gdmFyIGNhY2hlID0gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKTsgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7IHJldHVybiBjYWNoZS5nZXQob2JqKTsgfSB2YXIgbmV3T2JqID0ge307IHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoa2V5ICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7IHZhciBkZXNjID0gaGFzUHJvcGVydHlEZXNjcmlwdG9yID8gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosIGtleSkgOiBudWxsOyBpZiAoZGVzYyAmJiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7IH0gZWxzZSB7IG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyBpZiAoY2FjaGUpIHsgY2FjaGUuc2V0KG9iaiwgbmV3T2JqKTsgfSByZXR1cm4gbmV3T2JqOyB9Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2V4cG9ydE5hbWVzIiwiZW51bWVyYWJsZSIsImdldCIsIl9uZXh0IiwiZGVmYXVsdCIsIl90eXBlcyIsInJlcXVpcmUiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImNhY2hlIiwiaGFzIiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiZGVzYyIsInNldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/jwt/index.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/jwt/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _exportNames = {\n    encode: true,\n    decode: true,\n    getToken: true\n};\nexports.decode = decode;\nexports.encode = encode;\nexports.getToken = getToken;\nvar _jose = __webpack_require__(/*! jose */ \"(sc_server)/./node_modules/jose/dist/node/cjs/index.js\");\nvar _hkdf = _interopRequireDefault(__webpack_require__(/*! @panva/hkdf */ \"(sc_server)/./node_modules/@panva/hkdf/dist/node/cjs/index.js\"));\nvar _uuid = __webpack_require__(/*! uuid */ \"(sc_server)/./node_modules/uuid/dist/esm-node/index.js\");\nvar _cookie = __webpack_require__(/*! ../core/lib/cookie */ \"(sc_server)/./node_modules/next-auth/core/lib/cookie.js\");\nvar _types = __webpack_require__(/*! ./types */ \"(sc_server)/./node_modules/next-auth/jwt/types.js\");\nObject.keys(_types).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _types[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function() {\n            return _types[key];\n        }\n    });\n});\nconst DEFAULT_MAX_AGE = 30 * 24 * 60 * 60;\nconst now = ()=>Date.now() / 1000 | 0;\nasync function encode(params) {\n    const { token = {}, secret, maxAge = DEFAULT_MAX_AGE } = params;\n    const encryptionSecret = await getDerivedEncryptionKey(secret);\n    return await new _jose.EncryptJWT(token).setProtectedHeader({\n        alg: \"dir\",\n        enc: \"A256GCM\"\n    }).setIssuedAt().setExpirationTime(now() + maxAge).setJti((0, _uuid.v4)()).encrypt(encryptionSecret);\n}\nasync function decode(params) {\n    const { token, secret } = params;\n    if (!token) return null;\n    const encryptionSecret = await getDerivedEncryptionKey(secret);\n    const { payload } = await (0, _jose.jwtDecrypt)(token, encryptionSecret, {\n        clockTolerance: 15\n    });\n    return payload;\n}\nasync function getToken(params) {\n    var _process$env$NEXTAUTH, _process$env$NEXTAUTH2, _req$headers;\n    const { req, secureCookie = (_process$env$NEXTAUTH = (_process$env$NEXTAUTH2 = process.env.NEXTAUTH_URL) === null || _process$env$NEXTAUTH2 === void 0 ? void 0 : _process$env$NEXTAUTH2.startsWith(\"https://\")) !== null && _process$env$NEXTAUTH !== void 0 ? _process$env$NEXTAUTH : !!process.env.VERCEL, cookieName = secureCookie ? \"__Secure-next-auth.session-token\" : \"next-auth.session-token\", raw, decode: _decode = decode, logger = console, secret = process.env.NEXTAUTH_SECRET } = params;\n    if (!req) throw new Error(\"Must pass `req` to JWT getToken()\");\n    const sessionStore = new _cookie.SessionStore({\n        name: cookieName,\n        options: {\n            secure: secureCookie\n        }\n    }, {\n        cookies: req.cookies,\n        headers: req.headers\n    }, logger);\n    let token = sessionStore.value;\n    const authorizationHeader = req.headers instanceof Headers ? req.headers.get(\"authorization\") : (_req$headers = req.headers) === null || _req$headers === void 0 ? void 0 : _req$headers.authorization;\n    if (!token && (authorizationHeader === null || authorizationHeader === void 0 ? void 0 : authorizationHeader.split(\" \")[0]) === \"Bearer\") {\n        const urlEncodedToken = authorizationHeader.split(\" \")[1];\n        token = decodeURIComponent(urlEncodedToken);\n    }\n    if (!token) return null;\n    if (raw) return token;\n    try {\n        return await _decode({\n            token,\n            secret\n        });\n    } catch (_unused) {\n        return null;\n    }\n}\nasync function getDerivedEncryptionKey(secret) {\n    return await (0, _hkdf.default)(\"sha256\", secret, \"\", \"NextAuth.js Generated Encryption Key\", 32);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/jwt/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/jwt/types.js":
/*!*********************************************!*\
  !*** ./node_modules/next-auth/jwt/types.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL2p3dC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC9qd3QvdHlwZXMuanM/ZDRjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/jwt/types.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/next/index.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/next/index.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nexports.getServerSession = getServerSession;\nexports.unstable_getServerSession = unstable_getServerSession;\nvar _core = __webpack_require__(/*! ../core */ \"(sc_server)/./node_modules/next-auth/core/index.js\");\nvar _utils = __webpack_require__(/*! ./utils */ \"(sc_server)/./node_modules/next-auth/next/utils.js\");\nasync function NextAuthApiHandler(req, res, options) {\n    var _options$secret, _options$jwt$secret, _options$jwt, _ref, _handler$status, _handler$cookies, _handler$headers;\n    const { nextauth, ...query } = req.query;\n    (_options$secret = options.secret) !== null && _options$secret !== void 0 ? _options$secret : options.secret = (_options$jwt$secret = (_options$jwt = options.jwt) === null || _options$jwt === void 0 ? void 0 : _options$jwt.secret) !== null && _options$jwt$secret !== void 0 ? _options$jwt$secret : process.env.NEXTAUTH_SECRET;\n    const handler = await (0, _core.AuthHandler)({\n        req: {\n            body: req.body,\n            query,\n            cookies: req.cookies,\n            headers: req.headers,\n            method: req.method,\n            action: nextauth === null || nextauth === void 0 ? void 0 : nextauth[0],\n            providerId: nextauth === null || nextauth === void 0 ? void 0 : nextauth[1],\n            error: (_ref = req.query.error) !== null && _ref !== void 0 ? _ref : nextauth === null || nextauth === void 0 ? void 0 : nextauth[1]\n        },\n        options\n    });\n    res.status((_handler$status = handler.status) !== null && _handler$status !== void 0 ? _handler$status : 200);\n    (_handler$cookies = handler.cookies) === null || _handler$cookies === void 0 ? void 0 : _handler$cookies.forEach((cookie)=>(0, _utils.setCookie)(res, cookie));\n    (_handler$headers = handler.headers) === null || _handler$headers === void 0 ? void 0 : _handler$headers.forEach((h)=>res.setHeader(h.key, h.value));\n    if (handler.redirect) {\n        var _req$body;\n        if (((_req$body = req.body) === null || _req$body === void 0 ? void 0 : _req$body.json) !== \"true\") {\n            res.status(302).setHeader(\"Location\", handler.redirect);\n            return res.end();\n        }\n        return res.json({\n            url: handler.redirect\n        });\n    }\n    return res.send(handler.body);\n}\nasync function NextAuthRouteHandler(req, context, options) {\n    var _options$secret2, _context$params, _query$error;\n    (_options$secret2 = options.secret) !== null && _options$secret2 !== void 0 ? _options$secret2 : options.secret = process.env.NEXTAUTH_SECRET;\n    const { headers, cookies } = __webpack_require__(/*! next/headers */ \"(sc_server)/./node_modules/next/headers.js\");\n    const nextauth = (_context$params = context.params) === null || _context$params === void 0 ? void 0 : _context$params.nextauth;\n    const query = Object.fromEntries(req.nextUrl.searchParams);\n    const body = await (0, _utils.getBody)(req);\n    const internalResponse = await (0, _core.AuthHandler)({\n        req: {\n            body,\n            query,\n            cookies: Object.fromEntries(cookies().getAll().map((c)=>[\n                    c.name,\n                    c.value\n                ])),\n            headers: Object.fromEntries(headers()),\n            method: req.method,\n            action: nextauth === null || nextauth === void 0 ? void 0 : nextauth[0],\n            providerId: nextauth === null || nextauth === void 0 ? void 0 : nextauth[1],\n            error: (_query$error = query.error) !== null && _query$error !== void 0 ? _query$error : nextauth === null || nextauth === void 0 ? void 0 : nextauth[1]\n        },\n        options\n    });\n    const response = (0, _utils.toResponse)(internalResponse);\n    const redirect = response.headers.get(\"Location\");\n    if ((body === null || body === void 0 ? void 0 : body.json) === \"true\" && redirect) {\n        response.headers.delete(\"Location\");\n        response.headers.set(\"Content-Type\", \"application/json\");\n        return new Response(JSON.stringify({\n            url: redirect\n        }), {\n            headers: response.headers\n        });\n    }\n    return response;\n}\nfunction NextAuth(...args) {\n    var _args$;\n    if (args.length === 1) {\n        return async (req, res)=>{\n            if (res !== null && res !== void 0 && res.params) {\n                return await NextAuthRouteHandler(req, res, args[0]);\n            }\n            return await NextAuthApiHandler(req, res, args[0]);\n        };\n    }\n    if ((_args$ = args[1]) !== null && _args$ !== void 0 && _args$.params) {\n        return NextAuthRouteHandler(...args);\n    }\n    return NextAuthApiHandler(...args);\n}\nvar _default = NextAuth;\nexports[\"default\"] = _default;\nlet experimentalRSCWarningShown = false;\nasync function getServerSession(...args) {\n    var _options, _options$secret3;\n    const isRSC = args.length === 0 || args.length === 1;\n    if (!experimentalRSCWarningShown && isRSC && \"development\" !== \"production\") {\n        console.warn(\"[next-auth][warn][EXPERIMENTAL_API]\", \"\\n`getServerSession` is used in a React Server Component.\", `\\nhttps://next-auth.js.org/configuration/nextjs#getServerSession}`, `\\nhttps://next-auth.js.org/warnings#EXPERIMENTAL_API`);\n        experimentalRSCWarningShown = true;\n    }\n    let req, res, options;\n    if (isRSC) {\n        options = Object.assign({}, args[0], {\n            providers: []\n        });\n        const { headers, cookies } = __webpack_require__(/*! next/headers */ \"(sc_server)/./node_modules/next/headers.js\");\n        req = {\n            headers: Object.fromEntries(headers()),\n            cookies: Object.fromEntries(cookies().getAll().map((c)=>[\n                    c.name,\n                    c.value\n                ]))\n        };\n        res = {\n            getHeader () {},\n            setCookie () {},\n            setHeader () {}\n        };\n    } else {\n        req = args[0];\n        res = args[1];\n        options = Object.assign({}, args[2], {\n            providers: []\n        });\n    }\n    (_options$secret3 = (_options = options).secret) !== null && _options$secret3 !== void 0 ? _options$secret3 : _options.secret = process.env.NEXTAUTH_SECRET;\n    const session = await (0, _core.AuthHandler)({\n        options,\n        req: {\n            action: \"session\",\n            method: \"GET\",\n            cookies: req.cookies,\n            headers: req.headers\n        }\n    });\n    const { body, cookies, status = 200 } = session;\n    cookies === null || cookies === void 0 ? void 0 : cookies.forEach((cookie)=>(0, _utils.setCookie)(res, cookie));\n    if (body && typeof body !== \"string\" && Object.keys(body).length) {\n        if (status === 200) {\n            if (isRSC) delete body.expires;\n            return body;\n        }\n        throw new Error(body.message);\n    }\n    return null;\n}\nlet deprecatedWarningShown = false;\nasync function unstable_getServerSession(...args) {\n    if (!deprecatedWarningShown && \"development\" !== \"production\") {\n        console.warn(\"`unstable_getServerSession` has been renamed to `getServerSession`.\");\n        deprecatedWarningShown = true;\n    }\n    return await getServerSession(...args);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/next/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/next/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/next-auth/next/utils.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getBody = getBody;\nexports.setCookie = setCookie;\nexports.toResponse = toResponse;\nvar _cookie = __webpack_require__(/*! cookie */ \"(sc_server)/./node_modules/cookie/index.js\");\nfunction setCookie(res, cookie) {\n    var _res$getHeader;\n    let setCookieHeader = (_res$getHeader = res.getHeader(\"Set-Cookie\")) !== null && _res$getHeader !== void 0 ? _res$getHeader : [];\n    if (!Array.isArray(setCookieHeader)) {\n        setCookieHeader = [\n            setCookieHeader\n        ];\n    }\n    const { name, value, options } = cookie;\n    const cookieHeader = (0, _cookie.serialize)(name, value, options);\n    setCookieHeader.push(cookieHeader);\n    res.setHeader(\"Set-Cookie\", setCookieHeader);\n}\nasync function getBody(req) {\n    if (!(\"body\" in req) || !req.body || req.method !== \"POST\") return;\n    const contentType = req.headers.get(\"content-type\");\n    if (contentType !== null && contentType !== void 0 && contentType.includes(\"application/json\")) {\n        return await req.json();\n    } else if (contentType !== null && contentType !== void 0 && contentType.includes(\"application/x-www-form-urlencoded\")) {\n        const params = new URLSearchParams(await req.text());\n        return Object.fromEntries(params);\n    }\n}\nfunction toResponse(res) {\n    var _res$headers, _res$cookies, _res$status;\n    const headers = new Headers((_res$headers = res.headers) === null || _res$headers === void 0 ? void 0 : _res$headers.reduce((acc, { key, value })=>{\n        acc[key] = value;\n        return acc;\n    }, {}));\n    (_res$cookies = res.cookies) === null || _res$cookies === void 0 ? void 0 : _res$cookies.forEach((cookie)=>{\n        const { name, value, options } = cookie;\n        const cookieHeader = (0, _cookie.serialize)(name, value, options);\n        if (headers.has(\"Set-Cookie\")) headers.append(\"Set-Cookie\", cookieHeader);\n        else headers.set(\"Set-Cookie\", cookieHeader);\n    });\n    let body = res.body;\n    if (headers.get(\"content-type\") === \"application/json\") body = JSON.stringify(res.body);\n    else if (headers.get(\"content-type\") === \"application/x-www-form-urlencoded\") body = new URLSearchParams(res.body).toString();\n    const status = res.redirect ? 302 : (_res$status = res.status) !== null && _res$status !== void 0 ? _res$status : 200;\n    const response = new Response(body, {\n        headers,\n        status\n    });\n    if (res.redirect) response.headers.set(\"Location\", res.redirect);\n    return response;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25leHQvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELGVBQWVFLEdBQUdBO0FBQ2xCRixpQkFBaUJHLEdBQUdBO0FBQ3BCSCxrQkFBa0JJLEdBQUdBO0FBRXJCLElBQUlDLFVBQVVDLG1CQUFPQSxDQUFDLDBEQUFRO0FBRTlCLFNBQVNILFVBQVVJLEdBQUcsRUFBRUMsTUFBTTtJQUM1QixJQUFJQztJQUVKLElBQUlDLGtCQUFrQixDQUFDRCxpQkFBaUJGLElBQUlJLFVBQVUsYUFBWSxNQUFPLFFBQVFGLG1CQUFtQixLQUFLLElBQUlBLGlCQUFpQixFQUFFO0lBRWhJLElBQUksQ0FBQ0csTUFBTUMsUUFBUUgsa0JBQWtCO1FBQ25DQSxrQkFBa0I7WUFBQ0E7U0FBZ0I7SUFDckM7SUFFQSxNQUFNLEVBQ0pJLElBQUksRUFDSmIsS0FBSyxFQUNMYyxPQUFPLEVBQ1IsR0FBR1A7SUFDSixNQUFNUSxlQUFlLENBQUMsR0FBR1gsUUFBUVksU0FBUSxFQUFHSCxNQUFNYixPQUFPYztJQUN6REwsZ0JBQWdCUSxLQUFLRjtJQUNyQlQsSUFBSVksVUFBVSxjQUFjVDtBQUM5QjtBQUVBLGVBQWVSLFFBQVFrQixHQUFHO0lBQ3hCLElBQUksQ0FBRSxXQUFVQSxHQUFFLEtBQU0sQ0FBQ0EsSUFBSUMsUUFBUUQsSUFBSUUsV0FBVyxRQUFRO0lBQzVELE1BQU1DLGNBQWNILElBQUlJLFFBQVFDLElBQUk7SUFFcEMsSUFBSUYsZ0JBQWdCLFFBQVFBLGdCQUFnQixLQUFLLEtBQUtBLFlBQVlHLFNBQVMscUJBQXFCO1FBQzlGLE9BQU8sTUFBTU4sSUFBSU87SUFDbkIsT0FBTyxJQUFJSixnQkFBZ0IsUUFBUUEsZ0JBQWdCLEtBQUssS0FBS0EsWUFBWUcsU0FBUyxzQ0FBc0M7UUFDdEgsTUFBTUUsU0FBUyxJQUFJQyxnQkFBZ0IsTUFBTVQsSUFBSVU7UUFDN0MsT0FBT2hDLE9BQU9pQyxZQUFZSDtJQUM1QjtBQUNGO0FBRUEsU0FBU3hCLFdBQVdHLEdBQUc7SUFDckIsSUFBSXlCLGNBQWNDLGNBQWNDO0lBRWhDLE1BQU1WLFVBQVUsSUFBSVcsUUFBUSxDQUFDSCxlQUFlekIsSUFBSWlCLE9BQU0sTUFBTyxRQUFRUSxpQkFBaUIsS0FBSyxJQUFJLEtBQUssSUFBSUEsYUFBYUksT0FBTyxDQUFDQyxLQUFLLEVBQ2hJQyxHQUFHLEVBQ0hyQyxLQUFLLEVBQ047UUFDQ29DLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHckM7UUFDWCxPQUFPb0M7SUFDVCxHQUFHLENBQUM7SUFDSEosQ0FBQUEsZUFBZTFCLElBQUlnQyxPQUFNLE1BQU8sUUFBUU4saUJBQWlCLEtBQUssSUFBSSxLQUFLLElBQUlBLGFBQWFPLFFBQVFoQyxDQUFBQTtRQUMvRixNQUFNLEVBQ0pNLElBQUksRUFDSmIsS0FBSyxFQUNMYyxPQUFPLEVBQ1IsR0FBR1A7UUFDSixNQUFNUSxlQUFlLENBQUMsR0FBR1gsUUFBUVksU0FBUSxFQUFHSCxNQUFNYixPQUFPYztRQUN6RCxJQUFJUyxRQUFRaUIsSUFBSSxlQUFlakIsUUFBUWtCLE9BQU8sY0FBYzFCO2FBQW1CUSxRQUFRbUIsSUFBSSxjQUFjM0I7SUFDM0c7SUFDQSxJQUFJSyxPQUFPZCxJQUFJYztJQUNmLElBQUlHLFFBQVFDLElBQUksb0JBQW9CLG9CQUFvQkosT0FBT3VCLEtBQUtDLFVBQVV0QyxJQUFJYztTQUFXLElBQUlHLFFBQVFDLElBQUksb0JBQW9CLHFDQUFxQ0osT0FBTyxJQUFJUSxnQkFBZ0J0QixJQUFJYyxNQUFNeUI7SUFDM00sTUFBTUMsU0FBU3hDLElBQUl5QyxXQUFXLE1BQU0sQ0FBQ2QsY0FBYzNCLElBQUl3QyxNQUFLLE1BQU8sUUFBUWIsZ0JBQWdCLEtBQUssSUFBSUEsY0FBYztJQUNsSCxNQUFNZSxXQUFXLElBQUlDLFNBQVM3QixNQUFNO1FBQ2xDRztRQUNBdUI7SUFDRjtJQUNBLElBQUl4QyxJQUFJeUMsVUFBVUMsU0FBU3pCLFFBQVFtQixJQUFJLFlBQVlwQyxJQUFJeUM7SUFDdkQsT0FBT0M7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL25leHQvdXRpbHMuanM/YmYxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZ2V0Qm9keSA9IGdldEJvZHk7XG5leHBvcnRzLnNldENvb2tpZSA9IHNldENvb2tpZTtcbmV4cG9ydHMudG9SZXNwb25zZSA9IHRvUmVzcG9uc2U7XG5cbnZhciBfY29va2llID0gcmVxdWlyZShcImNvb2tpZVwiKTtcblxuZnVuY3Rpb24gc2V0Q29va2llKHJlcywgY29va2llKSB7XG4gIHZhciBfcmVzJGdldEhlYWRlcjtcblxuICBsZXQgc2V0Q29va2llSGVhZGVyID0gKF9yZXMkZ2V0SGVhZGVyID0gcmVzLmdldEhlYWRlcihcIlNldC1Db29raWVcIikpICE9PSBudWxsICYmIF9yZXMkZ2V0SGVhZGVyICE9PSB2b2lkIDAgPyBfcmVzJGdldEhlYWRlciA6IFtdO1xuXG4gIGlmICghQXJyYXkuaXNBcnJheShzZXRDb29raWVIZWFkZXIpKSB7XG4gICAgc2V0Q29va2llSGVhZGVyID0gW3NldENvb2tpZUhlYWRlcl07XG4gIH1cblxuICBjb25zdCB7XG4gICAgbmFtZSxcbiAgICB2YWx1ZSxcbiAgICBvcHRpb25zXG4gIH0gPSBjb29raWU7XG4gIGNvbnN0IGNvb2tpZUhlYWRlciA9ICgwLCBfY29va2llLnNlcmlhbGl6ZSkobmFtZSwgdmFsdWUsIG9wdGlvbnMpO1xuICBzZXRDb29raWVIZWFkZXIucHVzaChjb29raWVIZWFkZXIpO1xuICByZXMuc2V0SGVhZGVyKFwiU2V0LUNvb2tpZVwiLCBzZXRDb29raWVIZWFkZXIpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRCb2R5KHJlcSkge1xuICBpZiAoIShcImJvZHlcIiBpbiByZXEpIHx8ICFyZXEuYm9keSB8fCByZXEubWV0aG9kICE9PSBcIlBPU1RcIikgcmV0dXJuO1xuICBjb25zdCBjb250ZW50VHlwZSA9IHJlcS5oZWFkZXJzLmdldChcImNvbnRlbnQtdHlwZVwiKTtcblxuICBpZiAoY29udGVudFR5cGUgIT09IG51bGwgJiYgY29udGVudFR5cGUgIT09IHZvaWQgMCAmJiBjb250ZW50VHlwZS5pbmNsdWRlcyhcImFwcGxpY2F0aW9uL2pzb25cIikpIHtcbiAgICByZXR1cm4gYXdhaXQgcmVxLmpzb24oKTtcbiAgfSBlbHNlIGlmIChjb250ZW50VHlwZSAhPT0gbnVsbCAmJiBjb250ZW50VHlwZSAhPT0gdm9pZCAwICYmIGNvbnRlbnRUeXBlLmluY2x1ZGVzKFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIpKSB7XG4gICAgY29uc3QgcGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhhd2FpdCByZXEudGV4dCgpKTtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKHBhcmFtcyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gdG9SZXNwb25zZShyZXMpIHtcbiAgdmFyIF9yZXMkaGVhZGVycywgX3JlcyRjb29raWVzLCBfcmVzJHN0YXR1cztcblxuICBjb25zdCBoZWFkZXJzID0gbmV3IEhlYWRlcnMoKF9yZXMkaGVhZGVycyA9IHJlcy5oZWFkZXJzKSA9PT0gbnVsbCB8fCBfcmVzJGhlYWRlcnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9yZXMkaGVhZGVycy5yZWR1Y2UoKGFjYywge1xuICAgIGtleSxcbiAgICB2YWx1ZVxuICB9KSA9PiB7XG4gICAgYWNjW2tleV0gPSB2YWx1ZTtcbiAgICByZXR1cm4gYWNjO1xuICB9LCB7fSkpO1xuICAoX3JlcyRjb29raWVzID0gcmVzLmNvb2tpZXMpID09PSBudWxsIHx8IF9yZXMkY29va2llcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3JlcyRjb29raWVzLmZvckVhY2goY29va2llID0+IHtcbiAgICBjb25zdCB7XG4gICAgICBuYW1lLFxuICAgICAgdmFsdWUsXG4gICAgICBvcHRpb25zXG4gICAgfSA9IGNvb2tpZTtcbiAgICBjb25zdCBjb29raWVIZWFkZXIgPSAoMCwgX2Nvb2tpZS5zZXJpYWxpemUpKG5hbWUsIHZhbHVlLCBvcHRpb25zKTtcbiAgICBpZiAoaGVhZGVycy5oYXMoXCJTZXQtQ29va2llXCIpKSBoZWFkZXJzLmFwcGVuZChcIlNldC1Db29raWVcIiwgY29va2llSGVhZGVyKTtlbHNlIGhlYWRlcnMuc2V0KFwiU2V0LUNvb2tpZVwiLCBjb29raWVIZWFkZXIpO1xuICB9KTtcbiAgbGV0IGJvZHkgPSByZXMuYm9keTtcbiAgaWYgKGhlYWRlcnMuZ2V0KFwiY29udGVudC10eXBlXCIpID09PSBcImFwcGxpY2F0aW9uL2pzb25cIikgYm9keSA9IEpTT04uc3RyaW5naWZ5KHJlcy5ib2R5KTtlbHNlIGlmIChoZWFkZXJzLmdldChcImNvbnRlbnQtdHlwZVwiKSA9PT0gXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIikgYm9keSA9IG5ldyBVUkxTZWFyY2hQYXJhbXMocmVzLmJvZHkpLnRvU3RyaW5nKCk7XG4gIGNvbnN0IHN0YXR1cyA9IHJlcy5yZWRpcmVjdCA/IDMwMiA6IChfcmVzJHN0YXR1cyA9IHJlcy5zdGF0dXMpICE9PSBudWxsICYmIF9yZXMkc3RhdHVzICE9PSB2b2lkIDAgPyBfcmVzJHN0YXR1cyA6IDIwMDtcbiAgY29uc3QgcmVzcG9uc2UgPSBuZXcgUmVzcG9uc2UoYm9keSwge1xuICAgIGhlYWRlcnMsXG4gICAgc3RhdHVzXG4gIH0pO1xuICBpZiAocmVzLnJlZGlyZWN0KSByZXNwb25zZS5oZWFkZXJzLnNldChcIkxvY2F0aW9uXCIsIHJlcy5yZWRpcmVjdCk7XG4gIHJldHVybiByZXNwb25zZTtcbn0iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRCb2R5Iiwic2V0Q29va2llIiwidG9SZXNwb25zZSIsIl9jb29raWUiLCJyZXF1aXJlIiwicmVzIiwiY29va2llIiwiX3JlcyRnZXRIZWFkZXIiLCJzZXRDb29raWVIZWFkZXIiLCJnZXRIZWFkZXIiLCJBcnJheSIsImlzQXJyYXkiLCJuYW1lIiwib3B0aW9ucyIsImNvb2tpZUhlYWRlciIsInNlcmlhbGl6ZSIsInB1c2giLCJzZXRIZWFkZXIiLCJyZXEiLCJib2R5IiwibWV0aG9kIiwiY29udGVudFR5cGUiLCJoZWFkZXJzIiwiZ2V0IiwiaW5jbHVkZXMiLCJqc29uIiwicGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwidGV4dCIsImZyb21FbnRyaWVzIiwiX3JlcyRoZWFkZXJzIiwiX3JlcyRjb29raWVzIiwiX3JlcyRzdGF0dXMiLCJIZWFkZXJzIiwicmVkdWNlIiwiYWNjIiwia2V5IiwiY29va2llcyIsImZvckVhY2giLCJoYXMiLCJhcHBlbmQiLCJzZXQiLCJKU09OIiwic3RyaW5naWZ5IiwidG9TdHJpbmciLCJzdGF0dXMiLCJyZWRpcmVjdCIsInJlc3BvbnNlIiwiUmVzcG9uc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/next/utils.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/providers/kakao.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/providers/kakao.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = Kakao;\nfunction Kakao(options) {\n    return {\n        id: \"kakao\",\n        name: \"Kakao\",\n        type: \"oauth\",\n        authorization: \"https://kauth.kakao.com/oauth/authorize?scope\",\n        token: \"https://kauth.kakao.com/oauth/token\",\n        userinfo: \"https://kapi.kakao.com/v2/user/me\",\n        client: {\n            token_endpoint_auth_method: \"client_secret_post\"\n        },\n        profile (profile) {\n            var _profile$kakao_accoun, _profile$kakao_accoun2, _profile$kakao_accoun3, _profile$kakao_accoun4, _profile$kakao_accoun5;\n            return {\n                id: String(profile.id),\n                name: (_profile$kakao_accoun = profile.kakao_account) === null || _profile$kakao_accoun === void 0 ? void 0 : (_profile$kakao_accoun2 = _profile$kakao_accoun.profile) === null || _profile$kakao_accoun2 === void 0 ? void 0 : _profile$kakao_accoun2.nickname,\n                email: (_profile$kakao_accoun3 = profile.kakao_account) === null || _profile$kakao_accoun3 === void 0 ? void 0 : _profile$kakao_accoun3.email,\n                image: (_profile$kakao_accoun4 = profile.kakao_account) === null || _profile$kakao_accoun4 === void 0 ? void 0 : (_profile$kakao_accoun5 = _profile$kakao_accoun4.profile) === null || _profile$kakao_accoun5 === void 0 ? void 0 : _profile$kakao_accoun5.profile_image_url\n            };\n        },\n        options\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9rYWthby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWVFLEdBQUdDO0FBRWxCLFNBQVNBLE1BQU1DLE9BQU87SUFDcEIsT0FBTztRQUNMQyxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsTUFBTTtRQUNOQyxlQUFlO1FBQ2ZDLE9BQU87UUFDUEMsVUFBVTtRQUNWQyxRQUFRO1lBQ05DLDRCQUE0QjtRQUM5QjtRQUVBQyxTQUFRQSxPQUFPO1lBQ2IsSUFBSUMsdUJBQXVCQyx3QkFBd0JDLHdCQUF3QkMsd0JBQXdCQztZQUVuRyxPQUFPO2dCQUNMYixJQUFJYyxPQUFPTixRQUFRUjtnQkFDbkJDLE1BQU0sQ0FBQ1Esd0JBQXdCRCxRQUFRTyxhQUFZLE1BQU8sUUFBUU4sMEJBQTBCLEtBQUssSUFBSSxLQUFLLElBQUksQ0FBQ0MseUJBQXlCRCxzQkFBc0JELE9BQU0sTUFBTyxRQUFRRSwyQkFBMkIsS0FBSyxJQUFJLEtBQUssSUFBSUEsdUJBQXVCTTtnQkFDdlBDLE9BQU8sQ0FBQ04seUJBQXlCSCxRQUFRTyxhQUFZLE1BQU8sUUFBUUosMkJBQTJCLEtBQUssSUFBSSxLQUFLLElBQUlBLHVCQUF1Qk07Z0JBQ3hJQyxPQUFPLENBQUNOLHlCQUF5QkosUUFBUU8sYUFBWSxNQUFPLFFBQVFILDJCQUEyQixLQUFLLElBQUksS0FBSyxJQUFJLENBQUNDLHlCQUF5QkQsdUJBQXVCSixPQUFNLE1BQU8sUUFBUUssMkJBQTJCLEtBQUssSUFBSSxLQUFLLElBQUlBLHVCQUF1Qk07WUFDN1A7UUFDRjtRQUVBcEI7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL2tha2FvLmpzP2IwMmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBLYWthbztcblxuZnVuY3Rpb24gS2FrYW8ob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGlkOiBcImtha2FvXCIsXG4gICAgbmFtZTogXCJLYWthb1wiLFxuICAgIHR5cGU6IFwib2F1dGhcIixcbiAgICBhdXRob3JpemF0aW9uOiBcImh0dHBzOi8va2F1dGgua2FrYW8uY29tL29hdXRoL2F1dGhvcml6ZT9zY29wZVwiLFxuICAgIHRva2VuOiBcImh0dHBzOi8va2F1dGgua2FrYW8uY29tL29hdXRoL3Rva2VuXCIsXG4gICAgdXNlcmluZm86IFwiaHR0cHM6Ly9rYXBpLmtha2FvLmNvbS92Mi91c2VyL21lXCIsXG4gICAgY2xpZW50OiB7XG4gICAgICB0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZDogXCJjbGllbnRfc2VjcmV0X3Bvc3RcIlxuICAgIH0sXG5cbiAgICBwcm9maWxlKHByb2ZpbGUpIHtcbiAgICAgIHZhciBfcHJvZmlsZSRrYWthb19hY2NvdW4sIF9wcm9maWxlJGtha2FvX2FjY291bjIsIF9wcm9maWxlJGtha2FvX2FjY291bjMsIF9wcm9maWxlJGtha2FvX2FjY291bjQsIF9wcm9maWxlJGtha2FvX2FjY291bjU7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGlkOiBTdHJpbmcocHJvZmlsZS5pZCksXG4gICAgICAgIG5hbWU6IChfcHJvZmlsZSRrYWthb19hY2NvdW4gPSBwcm9maWxlLmtha2FvX2FjY291bnQpID09PSBudWxsIHx8IF9wcm9maWxlJGtha2FvX2FjY291biA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9wcm9maWxlJGtha2FvX2FjY291bjIgPSBfcHJvZmlsZSRrYWthb19hY2NvdW4ucHJvZmlsZSkgPT09IG51bGwgfHwgX3Byb2ZpbGUka2FrYW9fYWNjb3VuMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3Byb2ZpbGUka2FrYW9fYWNjb3VuMi5uaWNrbmFtZSxcbiAgICAgICAgZW1haWw6IChfcHJvZmlsZSRrYWthb19hY2NvdW4zID0gcHJvZmlsZS5rYWthb19hY2NvdW50KSA9PT0gbnVsbCB8fCBfcHJvZmlsZSRrYWthb19hY2NvdW4zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcHJvZmlsZSRrYWthb19hY2NvdW4zLmVtYWlsLFxuICAgICAgICBpbWFnZTogKF9wcm9maWxlJGtha2FvX2FjY291bjQgPSBwcm9maWxlLmtha2FvX2FjY291bnQpID09PSBudWxsIHx8IF9wcm9maWxlJGtha2FvX2FjY291bjQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfcHJvZmlsZSRrYWthb19hY2NvdW41ID0gX3Byb2ZpbGUka2FrYW9fYWNjb3VuNC5wcm9maWxlKSA9PT0gbnVsbCB8fCBfcHJvZmlsZSRrYWthb19hY2NvdW41ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcHJvZmlsZSRrYWthb19hY2NvdW41LnByb2ZpbGVfaW1hZ2VfdXJsXG4gICAgICB9O1xuICAgIH0sXG5cbiAgICBvcHRpb25zXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIktha2FvIiwib3B0aW9ucyIsImlkIiwibmFtZSIsInR5cGUiLCJhdXRob3JpemF0aW9uIiwidG9rZW4iLCJ1c2VyaW5mbyIsImNsaWVudCIsInRva2VuX2VuZHBvaW50X2F1dGhfbWV0aG9kIiwicHJvZmlsZSIsIl9wcm9maWxlJGtha2FvX2FjY291biIsIl9wcm9maWxlJGtha2FvX2FjY291bjIiLCJfcHJvZmlsZSRrYWthb19hY2NvdW4zIiwiX3Byb2ZpbGUka2FrYW9fYWNjb3VuNCIsIl9wcm9maWxlJGtha2FvX2FjY291bjUiLCJTdHJpbmciLCJrYWthb19hY2NvdW50Iiwibmlja25hbWUiLCJlbWFpbCIsImltYWdlIiwicHJvZmlsZV9pbWFnZV91cmwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/providers/kakao.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/providers/naver.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/providers/naver.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = Naver;\nfunction Naver(options) {\n    return {\n        id: \"naver\",\n        name: \"Naver\",\n        type: \"oauth\",\n        authorization: \"https://nid.naver.com/oauth2.0/authorize\",\n        token: \"https://nid.naver.com/oauth2.0/token\",\n        userinfo: \"https://openapi.naver.com/v1/nid/me\",\n        profile (profile) {\n            return {\n                id: profile.response.id,\n                name: profile.response.nickname,\n                email: profile.response.email,\n                image: profile.response.profile_image\n            };\n        },\n        checks: [\n            \"state\"\n        ],\n        options\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3Byb3ZpZGVycy9uYXZlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWVFLEdBQUdDO0FBRWxCLFNBQVNBLE1BQU1DLE9BQU87SUFDcEIsT0FBTztRQUNMQyxJQUFJO1FBQ0pDLE1BQU07UUFDTkMsTUFBTTtRQUNOQyxlQUFlO1FBQ2ZDLE9BQU87UUFDUEMsVUFBVTtRQUVWQyxTQUFRQSxPQUFPO1lBQ2IsT0FBTztnQkFDTE4sSUFBSU0sUUFBUUMsU0FBU1A7Z0JBQ3JCQyxNQUFNSyxRQUFRQyxTQUFTQztnQkFDdkJDLE9BQU9ILFFBQVFDLFNBQVNFO2dCQUN4QkMsT0FBT0osUUFBUUMsU0FBU0k7WUFDMUI7UUFDRjtRQUVBQyxRQUFRO1lBQUM7U0FBUTtRQUNqQmI7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0LWF1dGgvcHJvdmlkZXJzL25hdmVyLmpzPzE0Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBOYXZlcjtcblxuZnVuY3Rpb24gTmF2ZXIob3B0aW9ucykge1xuICByZXR1cm4ge1xuICAgIGlkOiBcIm5hdmVyXCIsXG4gICAgbmFtZTogXCJOYXZlclwiLFxuICAgIHR5cGU6IFwib2F1dGhcIixcbiAgICBhdXRob3JpemF0aW9uOiBcImh0dHBzOi8vbmlkLm5hdmVyLmNvbS9vYXV0aDIuMC9hdXRob3JpemVcIixcbiAgICB0b2tlbjogXCJodHRwczovL25pZC5uYXZlci5jb20vb2F1dGgyLjAvdG9rZW5cIixcbiAgICB1c2VyaW5mbzogXCJodHRwczovL29wZW5hcGkubmF2ZXIuY29tL3YxL25pZC9tZVwiLFxuXG4gICAgcHJvZmlsZShwcm9maWxlKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBpZDogcHJvZmlsZS5yZXNwb25zZS5pZCxcbiAgICAgICAgbmFtZTogcHJvZmlsZS5yZXNwb25zZS5uaWNrbmFtZSxcbiAgICAgICAgZW1haWw6IHByb2ZpbGUucmVzcG9uc2UuZW1haWwsXG4gICAgICAgIGltYWdlOiBwcm9maWxlLnJlc3BvbnNlLnByb2ZpbGVfaW1hZ2VcbiAgICAgIH07XG4gICAgfSxcblxuICAgIGNoZWNrczogW1wic3RhdGVcIl0sXG4gICAgb3B0aW9uc1xuICB9O1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJOYXZlciIsIm9wdGlvbnMiLCJpZCIsIm5hbWUiLCJ0eXBlIiwiYXV0aG9yaXphdGlvbiIsInRva2VuIiwidXNlcmluZm8iLCJwcm9maWxlIiwicmVzcG9uc2UiLCJuaWNrbmFtZSIsImVtYWlsIiwiaW1hZ2UiLCJwcm9maWxlX2ltYWdlIiwiY2hlY2tzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/providers/naver.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/react/index.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/react/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nvar _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nvar _exportNames = {\n    SessionContext: true,\n    useSession: true,\n    getSession: true,\n    getCsrfToken: true,\n    getProviders: true,\n    signIn: true,\n    signOut: true,\n    SessionProvider: true\n};\nexports.SessionContext = void 0;\nexports.SessionProvider = SessionProvider;\nexports.getCsrfToken = getCsrfToken;\nexports.getProviders = getProviders;\nexports.getSession = getSession;\nexports.signIn = signIn;\nexports.signOut = signOut;\nexports.useSession = useSession;\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \"(sc_server)/./node_modules/@babel/runtime/regenerator/index.js\"));\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(sc_server)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \"(sc_server)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\"));\nvar _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"(sc_server)/./node_modules/@babel/runtime/helpers/slicedToArray.js\"));\nvar React = _interopRequireWildcard(__webpack_require__(/*! react */ \"(sc_server)/./node_modules/next/dist/compiled/react/react.shared-subset.js\"));\nvar _logger2 = _interopRequireWildcard(__webpack_require__(/*! ../utils/logger */ \"(sc_server)/./node_modules/next-auth/utils/logger.js\"));\nvar _parseUrl = _interopRequireDefault(__webpack_require__(/*! ../utils/parse-url */ \"(sc_server)/./node_modules/next-auth/utils/parse-url.js\"));\nvar _utils = __webpack_require__(/*! ../client/_utils */ \"(sc_server)/./node_modules/next-auth/client/_utils.js\");\nvar _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"react/jsx-runtime\");\nvar _types = __webpack_require__(/*! ./types */ \"(sc_server)/./node_modules/next-auth/react/types.js\");\nObject.keys(_types).forEach(function(key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === _types[key]) return;\n    Object.defineProperty(exports, key, {\n        enumerable: true,\n        get: function get() {\n            return _types[key];\n        }\n    });\n});\nvar _process$env$NEXTAUTH, _ref, _process$env$NEXTAUTH2, _process$env$NEXTAUTH3, _React$createContext;\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            (0, _defineProperty2.default)(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nvar __NEXTAUTH = {\n    baseUrl: (0, _parseUrl.default)((_process$env$NEXTAUTH = process.env.NEXTAUTH_URL) !== null && _process$env$NEXTAUTH !== void 0 ? _process$env$NEXTAUTH : process.env.VERCEL_URL).origin,\n    basePath: (0, _parseUrl.default)(process.env.NEXTAUTH_URL).path,\n    baseUrlServer: (0, _parseUrl.default)((_ref = (_process$env$NEXTAUTH2 = process.env.NEXTAUTH_URL_INTERNAL) !== null && _process$env$NEXTAUTH2 !== void 0 ? _process$env$NEXTAUTH2 : process.env.NEXTAUTH_URL) !== null && _ref !== void 0 ? _ref : process.env.VERCEL_URL).origin,\n    basePathServer: (0, _parseUrl.default)((_process$env$NEXTAUTH3 = process.env.NEXTAUTH_URL_INTERNAL) !== null && _process$env$NEXTAUTH3 !== void 0 ? _process$env$NEXTAUTH3 : process.env.NEXTAUTH_URL).path,\n    _lastSync: 0,\n    _session: undefined,\n    _getSession: function _getSession() {}\n};\nvar broadcast = (0, _utils.BroadcastChannel)();\nvar logger = (0, _logger2.proxyLogger)(_logger2.default, __NEXTAUTH.basePath);\nfunction useOnline() {\n    var _React$useState = React.useState(typeof navigator !== \"undefined\" ? navigator.onLine : false), _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2), isOnline = _React$useState2[0], setIsOnline = _React$useState2[1];\n    var setOnline = function setOnline() {\n        return setIsOnline(true);\n    };\n    var setOffline = function setOffline() {\n        return setIsOnline(false);\n    };\n    React.useEffect(function() {\n        window.addEventListener(\"online\", setOnline);\n        window.addEventListener(\"offline\", setOffline);\n        return function() {\n            window.removeEventListener(\"online\", setOnline);\n            window.removeEventListener(\"offline\", setOffline);\n        };\n    }, []);\n    return isOnline;\n}\nvar SessionContext = (_React$createContext = React.createContext) === null || _React$createContext === void 0 ? void 0 : _React$createContext.call(React, undefined);\nexports.SessionContext = SessionContext;\nfunction useSession(options) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    var value = React.useContext(SessionContext);\n    if (!value && \"development\" !== \"production\") {\n        throw new Error(\"[next-auth]: `useSession` must be wrapped in a <SessionProvider />\");\n    }\n    var _ref2 = options !== null && options !== void 0 ? options : {}, required = _ref2.required, onUnauthenticated = _ref2.onUnauthenticated;\n    var requiredAndNotLoading = required && value.status === \"unauthenticated\";\n    React.useEffect(function() {\n        if (requiredAndNotLoading) {\n            var url = \"/api/auth/signin?\".concat(new URLSearchParams({\n                error: \"SessionRequired\",\n                callbackUrl: window.location.href\n            }));\n            if (onUnauthenticated) onUnauthenticated();\n            else window.location.href = url;\n        }\n    }, [\n        requiredAndNotLoading,\n        onUnauthenticated\n    ]);\n    if (requiredAndNotLoading) {\n        return {\n            data: value.data,\n            update: value.update,\n            status: \"loading\"\n        };\n    }\n    return value;\n}\nfunction getSession(_x) {\n    return _getSession2.apply(this, arguments);\n}\nfunction _getSession2() {\n    _getSession2 = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee3(params) {\n        var _params$broadcast;\n        var session;\n        return _regenerator.default.wrap(function _callee3$(_context3) {\n            while(1){\n                switch(_context3.prev = _context3.next){\n                    case 0:\n                        _context3.next = 2;\n                        return (0, _utils.fetchData)(\"session\", __NEXTAUTH, logger, params);\n                    case 2:\n                        session = _context3.sent;\n                        if ((_params$broadcast = params === null || params === void 0 ? void 0 : params.broadcast) !== null && _params$broadcast !== void 0 ? _params$broadcast : true) {\n                            broadcast.post({\n                                event: \"session\",\n                                data: {\n                                    trigger: \"getSession\"\n                                }\n                            });\n                        }\n                        return _context3.abrupt(\"return\", session);\n                    case 5:\n                    case \"end\":\n                        return _context3.stop();\n                }\n            }\n        }, _callee3);\n    }));\n    return _getSession2.apply(this, arguments);\n}\nfunction getCsrfToken(_x2) {\n    return _getCsrfToken.apply(this, arguments);\n}\nfunction _getCsrfToken() {\n    _getCsrfToken = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee4(params) {\n        var response;\n        return _regenerator.default.wrap(function _callee4$(_context4) {\n            while(1){\n                switch(_context4.prev = _context4.next){\n                    case 0:\n                        _context4.next = 2;\n                        return (0, _utils.fetchData)(\"csrf\", __NEXTAUTH, logger, params);\n                    case 2:\n                        response = _context4.sent;\n                        return _context4.abrupt(\"return\", response === null || response === void 0 ? void 0 : response.csrfToken);\n                    case 4:\n                    case \"end\":\n                        return _context4.stop();\n                }\n            }\n        }, _callee4);\n    }));\n    return _getCsrfToken.apply(this, arguments);\n}\nfunction getProviders() {\n    return _getProviders.apply(this, arguments);\n}\nfunction _getProviders() {\n    _getProviders = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee5() {\n        return _regenerator.default.wrap(function _callee5$(_context5) {\n            while(1){\n                switch(_context5.prev = _context5.next){\n                    case 0:\n                        _context5.next = 2;\n                        return (0, _utils.fetchData)(\"providers\", __NEXTAUTH, logger);\n                    case 2:\n                        return _context5.abrupt(\"return\", _context5.sent);\n                    case 3:\n                    case \"end\":\n                        return _context5.stop();\n                }\n            }\n        }, _callee5);\n    }));\n    return _getProviders.apply(this, arguments);\n}\nfunction signIn(_x3, _x4, _x5) {\n    return _signIn.apply(this, arguments);\n}\nfunction _signIn() {\n    _signIn = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee6(provider, options, authorizationParams) {\n        var _ref5, _ref5$callbackUrl, callbackUrl, _ref5$redirect, redirect, baseUrl, providers, isCredentials, isEmail, isSupportingReturn, signInUrl, _signInUrl, res, data, _data$url, url, error;\n        return _regenerator.default.wrap(function _callee6$(_context6) {\n            while(1){\n                switch(_context6.prev = _context6.next){\n                    case 0:\n                        _ref5 = options !== null && options !== void 0 ? options : {}, _ref5$callbackUrl = _ref5.callbackUrl, callbackUrl = _ref5$callbackUrl === void 0 ? window.location.href : _ref5$callbackUrl, _ref5$redirect = _ref5.redirect, redirect = _ref5$redirect === void 0 ? true : _ref5$redirect;\n                        baseUrl = (0, _utils.apiBaseUrl)(__NEXTAUTH);\n                        _context6.next = 4;\n                        return getProviders();\n                    case 4:\n                        providers = _context6.sent;\n                        if (providers) {\n                            _context6.next = 8;\n                            break;\n                        }\n                        window.location.href = \"\".concat(baseUrl, \"/error\");\n                        return _context6.abrupt(\"return\");\n                    case 8:\n                        if (!(!provider || !(provider in providers))) {\n                            _context6.next = 11;\n                            break;\n                        }\n                        window.location.href = \"\".concat(baseUrl, \"/signin?\").concat(new URLSearchParams({\n                            callbackUrl: callbackUrl\n                        }));\n                        return _context6.abrupt(\"return\");\n                    case 11:\n                        isCredentials = providers[provider].type === \"credentials\";\n                        isEmail = providers[provider].type === \"email\";\n                        isSupportingReturn = isCredentials || isEmail;\n                        signInUrl = \"\".concat(baseUrl, \"/\").concat(isCredentials ? \"callback\" : \"signin\", \"/\").concat(provider);\n                        _signInUrl = \"\".concat(signInUrl, \"?\").concat(new URLSearchParams(authorizationParams));\n                        _context6.t0 = fetch;\n                        _context6.t1 = _signInUrl;\n                        _context6.t2 = {\n                            \"Content-Type\": \"application/x-www-form-urlencoded\"\n                        };\n                        _context6.t3 = URLSearchParams;\n                        _context6.t4 = _objectSpread;\n                        _context6.t5 = _objectSpread({}, options);\n                        _context6.t6 = {};\n                        _context6.next = 25;\n                        return getCsrfToken();\n                    case 25:\n                        _context6.t7 = _context6.sent;\n                        _context6.t8 = callbackUrl;\n                        _context6.t9 = {\n                            csrfToken: _context6.t7,\n                            callbackUrl: _context6.t8,\n                            json: true\n                        };\n                        _context6.t10 = (0, _context6.t4)(_context6.t5, _context6.t6, _context6.t9);\n                        _context6.t11 = new _context6.t3(_context6.t10);\n                        _context6.t12 = {\n                            method: \"post\",\n                            headers: _context6.t2,\n                            body: _context6.t11\n                        };\n                        _context6.next = 33;\n                        return (0, _context6.t0)(_context6.t1, _context6.t12);\n                    case 33:\n                        res = _context6.sent;\n                        _context6.next = 36;\n                        return res.json();\n                    case 36:\n                        data = _context6.sent;\n                        if (!(redirect || !isSupportingReturn)) {\n                            _context6.next = 42;\n                            break;\n                        }\n                        url = (_data$url = data.url) !== null && _data$url !== void 0 ? _data$url : callbackUrl;\n                        window.location.href = url;\n                        if (url.includes(\"#\")) window.location.reload();\n                        return _context6.abrupt(\"return\");\n                    case 42:\n                        error = new URL(data.url).searchParams.get(\"error\");\n                        if (!res.ok) {\n                            _context6.next = 46;\n                            break;\n                        }\n                        _context6.next = 46;\n                        return __NEXTAUTH._getSession({\n                            event: \"storage\"\n                        });\n                    case 46:\n                        return _context6.abrupt(\"return\", {\n                            error: error,\n                            status: res.status,\n                            ok: res.ok,\n                            url: error ? null : data.url\n                        });\n                    case 47:\n                    case \"end\":\n                        return _context6.stop();\n                }\n            }\n        }, _callee6);\n    }));\n    return _signIn.apply(this, arguments);\n}\nfunction signOut(_x6) {\n    return _signOut.apply(this, arguments);\n}\nfunction _signOut() {\n    _signOut = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee7(options) {\n        var _options$redirect;\n        var _ref6, _ref6$callbackUrl, callbackUrl, baseUrl, fetchOptions, res, data, _data$url2, url;\n        return _regenerator.default.wrap(function _callee7$(_context7) {\n            while(1){\n                switch(_context7.prev = _context7.next){\n                    case 0:\n                        _ref6 = options !== null && options !== void 0 ? options : {}, _ref6$callbackUrl = _ref6.callbackUrl, callbackUrl = _ref6$callbackUrl === void 0 ? window.location.href : _ref6$callbackUrl;\n                        baseUrl = (0, _utils.apiBaseUrl)(__NEXTAUTH);\n                        _context7.t0 = {\n                            \"Content-Type\": \"application/x-www-form-urlencoded\"\n                        };\n                        _context7.t1 = URLSearchParams;\n                        _context7.next = 6;\n                        return getCsrfToken();\n                    case 6:\n                        _context7.t2 = _context7.sent;\n                        _context7.t3 = callbackUrl;\n                        _context7.t4 = {\n                            csrfToken: _context7.t2,\n                            callbackUrl: _context7.t3,\n                            json: true\n                        };\n                        _context7.t5 = new _context7.t1(_context7.t4);\n                        fetchOptions = {\n                            method: \"post\",\n                            headers: _context7.t0,\n                            body: _context7.t5\n                        };\n                        _context7.next = 13;\n                        return fetch(\"\".concat(baseUrl, \"/signout\"), fetchOptions);\n                    case 13:\n                        res = _context7.sent;\n                        _context7.next = 16;\n                        return res.json();\n                    case 16:\n                        data = _context7.sent;\n                        broadcast.post({\n                            event: \"session\",\n                            data: {\n                                trigger: \"signout\"\n                            }\n                        });\n                        if (!((_options$redirect = options === null || options === void 0 ? void 0 : options.redirect) !== null && _options$redirect !== void 0 ? _options$redirect : true)) {\n                            _context7.next = 23;\n                            break;\n                        }\n                        url = (_data$url2 = data.url) !== null && _data$url2 !== void 0 ? _data$url2 : callbackUrl;\n                        window.location.href = url;\n                        if (url.includes(\"#\")) window.location.reload();\n                        return _context7.abrupt(\"return\");\n                    case 23:\n                        _context7.next = 25;\n                        return __NEXTAUTH._getSession({\n                            event: \"storage\"\n                        });\n                    case 25:\n                        return _context7.abrupt(\"return\", data);\n                    case 26:\n                    case \"end\":\n                        return _context7.stop();\n                }\n            }\n        }, _callee7);\n    }));\n    return _signOut.apply(this, arguments);\n}\nfunction SessionProvider(props) {\n    if (!SessionContext) {\n        throw new Error(\"React Context is unavailable in Server Components\");\n    }\n    var children = props.children, basePath = props.basePath, refetchInterval = props.refetchInterval, refetchWhenOffline = props.refetchWhenOffline;\n    if (basePath) __NEXTAUTH.basePath = basePath;\n    var hasInitialSession = props.session !== undefined;\n    __NEXTAUTH._lastSync = hasInitialSession ? (0, _utils.now)() : 0;\n    var _React$useState3 = React.useState(function() {\n        if (hasInitialSession) __NEXTAUTH._session = props.session;\n        return props.session;\n    }), _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2), session = _React$useState4[0], setSession = _React$useState4[1];\n    var _React$useState5 = React.useState(!hasInitialSession), _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2), loading = _React$useState6[0], setLoading = _React$useState6[1];\n    React.useEffect(function() {\n        __NEXTAUTH._getSession = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee() {\n            var _ref4, event, storageEvent, _args = arguments;\n            return _regenerator.default.wrap(function _callee$(_context) {\n                while(1){\n                    switch(_context.prev = _context.next){\n                        case 0:\n                            _ref4 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, event = _ref4.event;\n                            _context.prev = 1;\n                            storageEvent = event === \"storage\";\n                            if (!(storageEvent || __NEXTAUTH._session === undefined)) {\n                                _context.next = 10;\n                                break;\n                            }\n                            __NEXTAUTH._lastSync = (0, _utils.now)();\n                            _context.next = 7;\n                            return getSession({\n                                broadcast: !storageEvent\n                            });\n                        case 7:\n                            __NEXTAUTH._session = _context.sent;\n                            setSession(__NEXTAUTH._session);\n                            return _context.abrupt(\"return\");\n                        case 10:\n                            if (!(!event || __NEXTAUTH._session === null || (0, _utils.now)() < __NEXTAUTH._lastSync)) {\n                                _context.next = 12;\n                                break;\n                            }\n                            return _context.abrupt(\"return\");\n                        case 12:\n                            __NEXTAUTH._lastSync = (0, _utils.now)();\n                            _context.next = 15;\n                            return getSession();\n                        case 15:\n                            __NEXTAUTH._session = _context.sent;\n                            setSession(__NEXTAUTH._session);\n                            _context.next = 22;\n                            break;\n                        case 19:\n                            _context.prev = 19;\n                            _context.t0 = _context[\"catch\"](1);\n                            logger.error(\"CLIENT_SESSION_ERROR\", _context.t0);\n                        case 22:\n                            _context.prev = 22;\n                            setLoading(false);\n                            return _context.finish(22);\n                        case 25:\n                        case \"end\":\n                            return _context.stop();\n                    }\n                }\n            }, _callee, null, [\n                [\n                    1,\n                    19,\n                    22,\n                    25\n                ]\n            ]);\n        }));\n        __NEXTAUTH._getSession();\n        return function() {\n            __NEXTAUTH._lastSync = 0;\n            __NEXTAUTH._session = undefined;\n            __NEXTAUTH._getSession = function() {};\n        };\n    }, []);\n    React.useEffect(function() {\n        var unsubscribe = broadcast.receive(function() {\n            return __NEXTAUTH._getSession({\n                event: \"storage\"\n            });\n        });\n        return function() {\n            return unsubscribe();\n        };\n    }, []);\n    React.useEffect(function() {\n        var _props$refetchOnWindo = props.refetchOnWindowFocus, refetchOnWindowFocus = _props$refetchOnWindo === void 0 ? true : _props$refetchOnWindo;\n        var visibilityHandler = function visibilityHandler() {\n            if (refetchOnWindowFocus && document.visibilityState === \"visible\") __NEXTAUTH._getSession({\n                event: \"visibilitychange\"\n            });\n        };\n        document.addEventListener(\"visibilitychange\", visibilityHandler, false);\n        return function() {\n            return document.removeEventListener(\"visibilitychange\", visibilityHandler, false);\n        };\n    }, [\n        props.refetchOnWindowFocus\n    ]);\n    var isOnline = useOnline();\n    var shouldRefetch = refetchWhenOffline !== false || isOnline;\n    React.useEffect(function() {\n        if (refetchInterval && shouldRefetch) {\n            var refetchIntervalTimer = setInterval(function() {\n                if (__NEXTAUTH._session) {\n                    __NEXTAUTH._getSession({\n                        event: \"poll\"\n                    });\n                }\n            }, refetchInterval * 1000);\n            return function() {\n                return clearInterval(refetchIntervalTimer);\n            };\n        }\n    }, [\n        refetchInterval,\n        shouldRefetch\n    ]);\n    var value = React.useMemo(function() {\n        return {\n            data: session,\n            status: loading ? \"loading\" : session ? \"authenticated\" : \"unauthenticated\",\n            update: function update(data) {\n                return (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee2() {\n                    var newSession;\n                    return _regenerator.default.wrap(function _callee2$(_context2) {\n                        while(1){\n                            switch(_context2.prev = _context2.next){\n                                case 0:\n                                    if (!(loading || !session)) {\n                                        _context2.next = 2;\n                                        break;\n                                    }\n                                    return _context2.abrupt(\"return\");\n                                case 2:\n                                    setLoading(true);\n                                    _context2.t0 = _utils.fetchData;\n                                    _context2.t1 = __NEXTAUTH;\n                                    _context2.t2 = logger;\n                                    _context2.next = 8;\n                                    return getCsrfToken();\n                                case 8:\n                                    _context2.t3 = _context2.sent;\n                                    _context2.t4 = data;\n                                    _context2.t5 = {\n                                        csrfToken: _context2.t3,\n                                        data: _context2.t4\n                                    };\n                                    _context2.t6 = {\n                                        body: _context2.t5\n                                    };\n                                    _context2.t7 = {\n                                        req: _context2.t6\n                                    };\n                                    _context2.next = 15;\n                                    return (0, _context2.t0)(\"session\", _context2.t1, _context2.t2, _context2.t7);\n                                case 15:\n                                    newSession = _context2.sent;\n                                    setLoading(false);\n                                    if (newSession) {\n                                        setSession(newSession);\n                                        broadcast.post({\n                                            event: \"session\",\n                                            data: {\n                                                trigger: \"getSession\"\n                                            }\n                                        });\n                                    }\n                                    return _context2.abrupt(\"return\", newSession);\n                                case 19:\n                                case \"end\":\n                                    return _context2.stop();\n                            }\n                        }\n                    }, _callee2);\n                }))();\n            }\n        };\n    }, [\n        session,\n        loading\n    ]);\n    return (0, _jsxRuntime.jsx)(SessionContext.Provider, {\n        value: value,\n        children: children\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/react/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/react/types.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/react/types.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3JlYWN0L3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3JlYWN0L3R5cGVzLmpzPzFlNWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/react/types.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/utils/detect-origin.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-auth/utils/detect-origin.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.detectOrigin = detectOrigin;\nfunction detectOrigin(forwardedHost, protocol) {\n    var _process$env$VERCEL;\n    if ((_process$env$VERCEL = process.env.VERCEL) !== null && _process$env$VERCEL !== void 0 ? _process$env$VERCEL : process.env.AUTH_TRUST_HOST) return `${protocol === \"http\" ? \"http\" : \"https\"}://${forwardedHost}`;\n    return process.env.NEXTAUTH_URL;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL2RldGVjdC1vcmlnaW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYkEsOENBQTZDO0lBQzNDRyxPQUFPO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELG9CQUFvQkUsR0FBR0E7QUFFdkIsU0FBU0EsYUFBYUMsYUFBYSxFQUFFQyxRQUFRO0lBQzNDLElBQUlDO0lBRUosSUFBSSxDQUFDQSxzQkFBc0JDLFFBQVFDLElBQUlDLE1BQUssTUFBTyxRQUFRSCx3QkFBd0IsS0FBSyxJQUFJQSxzQkFBc0JDLFFBQVFDLElBQUlFLGlCQUFpQixPQUFPLENBQUMsRUFBRUwsYUFBYSxTQUFTLFNBQVMsUUFBUSxHQUFHLEVBQUVELGNBQWMsQ0FBQztJQUNwTixPQUFPRyxRQUFRQyxJQUFJRztBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL2RldGVjdC1vcmlnaW4uanM/MDUyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGV0ZWN0T3JpZ2luID0gZGV0ZWN0T3JpZ2luO1xuXG5mdW5jdGlvbiBkZXRlY3RPcmlnaW4oZm9yd2FyZGVkSG9zdCwgcHJvdG9jb2wpIHtcbiAgdmFyIF9wcm9jZXNzJGVudiRWRVJDRUw7XG5cbiAgaWYgKChfcHJvY2VzcyRlbnYkVkVSQ0VMID0gcHJvY2Vzcy5lbnYuVkVSQ0VMKSAhPT0gbnVsbCAmJiBfcHJvY2VzcyRlbnYkVkVSQ0VMICE9PSB2b2lkIDAgPyBfcHJvY2VzcyRlbnYkVkVSQ0VMIDogcHJvY2Vzcy5lbnYuQVVUSF9UUlVTVF9IT1NUKSByZXR1cm4gYCR7cHJvdG9jb2wgPT09IFwiaHR0cFwiID8gXCJodHRwXCIgOiBcImh0dHBzXCJ9Oi8vJHtmb3J3YXJkZWRIb3N0fWA7XG4gIHJldHVybiBwcm9jZXNzLmVudi5ORVhUQVVUSF9VUkw7XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGV0ZWN0T3JpZ2luIiwiZm9yd2FyZGVkSG9zdCIsInByb3RvY29sIiwiX3Byb2Nlc3MkZW52JFZFUkNFTCIsInByb2Nlc3MiLCJlbnYiLCJWRVJDRUwiLCJBVVRIX1RSVVNUX0hPU1QiLCJORVhUQVVUSF9VUkwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/utils/detect-origin.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/utils/logger.js":
/*!************************************************!*\
  !*** ./node_modules/next-auth/utils/logger.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nexports.proxyLogger = proxyLogger;\nexports.setLogger = setLogger;\nvar _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ \"(sc_server)/./node_modules/@babel/runtime/helpers/defineProperty.js\"));\nvar _errors = __webpack_require__(/*! ../core/errors */ \"(sc_server)/./node_modules/next-auth/core/errors.js\");\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        enumerableOnly && (symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = null != arguments[i] ? arguments[i] : {};\n        i % 2 ? ownKeys(Object(source), !0).forEach(function(key) {\n            (0, _defineProperty2.default)(target, key, source[key]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction formatError(o) {\n    if (o instanceof Error && !(o instanceof _errors.UnknownError)) {\n        return {\n            message: o.message,\n            stack: o.stack,\n            name: o.name\n        };\n    }\n    if (hasErrorProperty(o)) {\n        var _o$message;\n        o.error = formatError(o.error);\n        o.message = (_o$message = o.message) !== null && _o$message !== void 0 ? _o$message : o.error.message;\n    }\n    return o;\n}\nfunction hasErrorProperty(x) {\n    return !!(x !== null && x !== void 0 && x.error);\n}\nvar _logger = {\n    error: function error(code, metadata) {\n        metadata = formatError(metadata);\n        console.error(\"[next-auth][error][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/errors#\".concat(code.toLowerCase()), metadata.message, metadata);\n    },\n    warn: function warn(code) {\n        console.warn(\"[next-auth][warn][\".concat(code, \"]\"), \"\\nhttps://next-auth.js.org/warnings#\".concat(code.toLowerCase()));\n    },\n    debug: function debug(code, metadata) {\n        console.log(\"[next-auth][debug][\".concat(code, \"]\"), metadata);\n    }\n};\nfunction setLogger() {\n    var newLogger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var debug = arguments.length > 1 ? arguments[1] : undefined;\n    if (!debug) _logger.debug = function() {};\n    if (newLogger.error) _logger.error = newLogger.error;\n    if (newLogger.warn) _logger.warn = newLogger.warn;\n    if (newLogger.debug) _logger.debug = newLogger.debug;\n}\nvar _default = _logger;\nexports[\"default\"] = _default;\nfunction proxyLogger() {\n    var logger = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _logger;\n    var basePath = arguments.length > 1 ? arguments[1] : undefined;\n    try {\n        if (true) {\n            return logger;\n        }\n        var clientLogger = {};\n        var _loop = function _loop(level) {\n            clientLogger[level] = function(code, metadata) {\n                _logger[level](code, metadata);\n                if (level === \"error\") {\n                    metadata = formatError(metadata);\n                }\n                ;\n                metadata.client = true;\n                var url = \"\".concat(basePath, \"/_log\");\n                var body = new URLSearchParams(_objectSpread({\n                    level: level,\n                    code: code\n                }, metadata));\n                if (navigator.sendBeacon) {\n                    return navigator.sendBeacon(url, body);\n                }\n                return fetch(url, {\n                    method: \"POST\",\n                    body: body,\n                    keepalive: true\n                });\n            };\n        };\n        for(var level in logger){\n            _loop(level);\n        }\n        return clientLogger;\n    } catch (_unused) {\n        return _logger;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/utils/logger.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/utils/merge.js":
/*!***********************************************!*\
  !*** ./node_modules/next-auth/utils/merge.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.merge = merge;\nfunction isObject(item) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n}\nfunction merge(target, ...sources) {\n    if (!sources.length) return target;\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for(const key in source){\n            if (isObject(source[key])) {\n                if (!target[key]) Object.assign(target, {\n                    [key]: {}\n                });\n                merge(target[key], source[key]);\n            } else {\n                Object.assign(target, {\n                    [key]: source[key]\n                });\n            }\n        }\n    }\n    return merge(target, ...sources);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL21lcmdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBRWJBLDhDQUE2QztJQUMzQ0csT0FBTztBQUNULENBQUMsRUFBQztBQUNGRCxhQUFhRSxHQUFHQTtBQUVoQixTQUFTQyxTQUFTQyxJQUFJO0lBQ3BCLE9BQU9BLFFBQVEsT0FBT0EsU0FBUyxZQUFZLENBQUNDLE1BQU1DLFFBQVFGO0FBQzVEO0FBRUEsU0FBU0YsTUFBTUssTUFBTSxFQUFFLEdBQUdDLE9BQU87SUFDL0IsSUFBSSxDQUFDQSxRQUFRQyxRQUFRLE9BQU9GO0lBQzVCLE1BQU1HLFNBQVNGLFFBQVFHO0lBRXZCLElBQUlSLFNBQVNJLFdBQVdKLFNBQVNPLFNBQVM7UUFDeEMsSUFBSyxNQUFNRSxPQUFPRixPQUFRO1lBQ3hCLElBQUlQLFNBQVNPLE1BQU0sQ0FBQ0UsSUFBSSxHQUFHO2dCQUN6QixJQUFJLENBQUNMLE1BQU0sQ0FBQ0ssSUFBSSxFQUFFZCxPQUFPZSxPQUFPTixRQUFRO29CQUN0QyxDQUFDSyxJQUFJLEVBQUUsQ0FBQztnQkFDVjtnQkFDQVYsTUFBTUssTUFBTSxDQUFDSyxJQUFJLEVBQUVGLE1BQU0sQ0FBQ0UsSUFBSTtZQUNoQyxPQUFPO2dCQUNMZCxPQUFPZSxPQUFPTixRQUFRO29CQUNwQixDQUFDSyxJQUFJLEVBQUVGLE1BQU0sQ0FBQ0UsSUFBSTtnQkFDcEI7WUFDRjtRQUNGO0lBQ0Y7SUFFQSxPQUFPVixNQUFNSyxXQUFXQztBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL21lcmdlLmpzP2YzZTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLm1lcmdlID0gbWVyZ2U7XG5cbmZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgcmV0dXJuIGl0ZW0gJiYgdHlwZW9mIGl0ZW0gPT09IFwib2JqZWN0XCIgJiYgIUFycmF5LmlzQXJyYXkoaXRlbSk7XG59XG5cbmZ1bmN0aW9uIG1lcmdlKHRhcmdldCwgLi4uc291cmNlcykge1xuICBpZiAoIXNvdXJjZXMubGVuZ3RoKSByZXR1cm4gdGFyZ2V0O1xuICBjb25zdCBzb3VyY2UgPSBzb3VyY2VzLnNoaWZ0KCk7XG5cbiAgaWYgKGlzT2JqZWN0KHRhcmdldCkgJiYgaXNPYmplY3Qoc291cmNlKSkge1xuICAgIGZvciAoY29uc3Qga2V5IGluIHNvdXJjZSkge1xuICAgICAgaWYgKGlzT2JqZWN0KHNvdXJjZVtrZXldKSkge1xuICAgICAgICBpZiAoIXRhcmdldFtrZXldKSBPYmplY3QuYXNzaWduKHRhcmdldCwge1xuICAgICAgICAgIFtrZXldOiB7fVxuICAgICAgICB9KTtcbiAgICAgICAgbWVyZ2UodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGFyZ2V0LCB7XG4gICAgICAgICAgW2tleV06IHNvdXJjZVtrZXldXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtZXJnZSh0YXJnZXQsIC4uLnNvdXJjZXMpO1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1lcmdlIiwiaXNPYmplY3QiLCJpdGVtIiwiQXJyYXkiLCJpc0FycmF5IiwidGFyZ2V0Iiwic291cmNlcyIsImxlbmd0aCIsInNvdXJjZSIsInNoaWZ0Iiwia2V5IiwiYXNzaWduIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/utils/merge.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next-auth/utils/parse-url.js":
/*!***************************************************!*\
  !*** ./node_modules/next-auth/utils/parse-url.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = parseUrl;\nfunction parseUrl(url) {\n    var _url2;\n    const defaultUrl = new URL(\"http://localhost:3000/api/auth\");\n    if (url && !url.startsWith(\"http\")) {\n        url = `https://${url}`;\n    }\n    const _url = new URL((_url2 = url) !== null && _url2 !== void 0 ? _url2 : defaultUrl);\n    const path = (_url.pathname === \"/\" ? defaultUrl.pathname : _url.pathname).replace(/\\/$/, \"\");\n    const base = `${_url.origin}${path}`;\n    return {\n        origin: _url.origin,\n        host: _url.host,\n        path,\n        base,\n        toString: ()=>base\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC1hdXRoL3V0aWxzL3BhcnNlLXVybC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViQSw4Q0FBNkM7SUFDM0NHLE9BQU87QUFDVCxDQUFDLEVBQUM7QUFDRkQsa0JBQWVFLEdBQUdDO0FBRWxCLFNBQVNBLFNBQVNDLEdBQUc7SUFDbkIsSUFBSUM7SUFFSixNQUFNQyxhQUFhLElBQUlDLElBQUk7SUFFM0IsSUFBSUgsT0FBTyxDQUFDQSxJQUFJSSxXQUFXLFNBQVM7UUFDbENKLE1BQU0sQ0FBQyxRQUFRLEVBQUVBLElBQUksQ0FBQztJQUN4QjtJQUVBLE1BQU1LLE9BQU8sSUFBSUYsSUFBSSxDQUFDRixRQUFRRCxHQUFFLE1BQU8sUUFBUUMsVUFBVSxLQUFLLElBQUlBLFFBQVFDO0lBRTFFLE1BQU1JLE9BQU8sQ0FBQ0QsS0FBS0UsYUFBYSxNQUFNTCxXQUFXSyxXQUFXRixLQUFLRSxRQUFPLEVBQUdDLFFBQVEsT0FBTztJQUMxRixNQUFNQyxPQUFPLENBQUMsRUFBRUosS0FBS0ssT0FBTyxFQUFFSixLQUFLLENBQUM7SUFDcEMsT0FBTztRQUNMSSxRQUFRTCxLQUFLSztRQUNiQyxNQUFNTixLQUFLTTtRQUNYTDtRQUNBRztRQUNBRyxVQUFVLElBQU1IO0lBQ2xCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQtYXV0aC91dGlscy9wYXJzZS11cmwuanM/YzMzOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHBhcnNlVXJsO1xuXG5mdW5jdGlvbiBwYXJzZVVybCh1cmwpIHtcbiAgdmFyIF91cmwyO1xuXG4gIGNvbnN0IGRlZmF1bHRVcmwgPSBuZXcgVVJMKFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9hdXRoXCIpO1xuXG4gIGlmICh1cmwgJiYgIXVybC5zdGFydHNXaXRoKFwiaHR0cFwiKSkge1xuICAgIHVybCA9IGBodHRwczovLyR7dXJsfWA7XG4gIH1cblxuICBjb25zdCBfdXJsID0gbmV3IFVSTCgoX3VybDIgPSB1cmwpICE9PSBudWxsICYmIF91cmwyICE9PSB2b2lkIDAgPyBfdXJsMiA6IGRlZmF1bHRVcmwpO1xuXG4gIGNvbnN0IHBhdGggPSAoX3VybC5wYXRobmFtZSA9PT0gXCIvXCIgPyBkZWZhdWx0VXJsLnBhdGhuYW1lIDogX3VybC5wYXRobmFtZSkucmVwbGFjZSgvXFwvJC8sIFwiXCIpO1xuICBjb25zdCBiYXNlID0gYCR7X3VybC5vcmlnaW59JHtwYXRofWA7XG4gIHJldHVybiB7XG4gICAgb3JpZ2luOiBfdXJsLm9yaWdpbixcbiAgICBob3N0OiBfdXJsLmhvc3QsXG4gICAgcGF0aCxcbiAgICBiYXNlLFxuICAgIHRvU3RyaW5nOiAoKSA9PiBiYXNlXG4gIH07XG59Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsInBhcnNlVXJsIiwidXJsIiwiX3VybDIiLCJkZWZhdWx0VXJsIiwiVVJMIiwic3RhcnRzV2l0aCIsIl91cmwiLCJwYXRoIiwicGF0aG5hbWUiLCJyZXBsYWNlIiwiYmFzZSIsIm9yaWdpbiIsImhvc3QiLCJ0b1N0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next-auth/utils/parse-url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/build/output/log.js":
/*!****************************************************!*\
  !*** ./node_modules/next/dist/build/output/log.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    prefixes: function() {\n        return prefixes;\n    },\n    wait: function() {\n        return wait;\n    },\n    error: function() {\n        return error;\n    },\n    warn: function() {\n        return warn;\n    },\n    ready: function() {\n        return ready;\n    },\n    info: function() {\n        return info;\n    },\n    event: function() {\n        return event;\n    },\n    trace: function() {\n        return trace;\n    },\n    warnOnce: function() {\n        return warnOnce;\n    }\n});\nconst _chalk = /*#__PURE__*/ _interop_require_default(__webpack_require__(/*! ../../lib/chalk */ \"(sc_server)/./node_modules/next/dist/lib/chalk.js\"));\nfunction _interop_require_default(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nconst prefixes = {\n    wait: \"- \" + _chalk.default.cyan(\"wait\"),\n    error: \"- \" + _chalk.default.red(\"error\"),\n    warn: \"- \" + _chalk.default.yellow(\"warn\"),\n    ready: \"- \" + _chalk.default.green(\"ready\"),\n    info: \"- \" + _chalk.default.cyan(\"info\"),\n    event: \"- \" + _chalk.default.magenta(\"event\"),\n    trace: \"- \" + _chalk.default.magenta(\"trace\")\n};\nfunction wait(...message) {\n    console.log(prefixes.wait, ...message);\n}\nfunction error(...message) {\n    console.error(prefixes.error, ...message);\n}\nfunction warn(...message) {\n    console.warn(prefixes.warn, ...message);\n}\nfunction ready(...message) {\n    console.log(prefixes.ready, ...message);\n}\nfunction info(...message) {\n    console.log(prefixes.info, ...message);\n}\nfunction event(...message) {\n    console.log(prefixes.event, ...message);\n}\nfunction trace(...message) {\n    console.log(prefixes.trace, ...message);\n}\nconst warnOnceMessages = new Set();\nfunction warnOnce(...message) {\n    if (!warnOnceMessages.has(message[0])) {\n        warnOnceMessages.add(message.join(\" \"));\n        warn(...message);\n    }\n} //# sourceMappingURL=log.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL291dHB1dC9sb2cuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FVTjtBQUNBLFNBQVNVLFFBQVFDLE1BQU0sRUFBRUMsR0FBRztJQUN4QixJQUFJLElBQUlDLFFBQVFELElBQUloQixPQUFPQyxlQUFlYyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFaLFNBQVM7SUFDYkcsVUFBVTtRQUNOLE9BQU9BO0lBQ1g7SUFDQUMsTUFBTTtRQUNGLE9BQU9BO0lBQ1g7SUFDQUMsT0FBTztRQUNILE9BQU9BO0lBQ1g7SUFDQUMsTUFBTTtRQUNGLE9BQU9BO0lBQ1g7SUFDQUMsT0FBTztRQUNILE9BQU9BO0lBQ1g7SUFDQUMsTUFBTTtRQUNGLE9BQU9BO0lBQ1g7SUFDQUMsT0FBTztRQUNILE9BQU9BO0lBQ1g7SUFDQUMsT0FBTztRQUNILE9BQU9BO0lBQ1g7SUFDQUMsVUFBVTtRQUNOLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1PLFNBQVMsV0FBVyxHQUFHQyx5QkFBeUJDLG1CQUFPQSxDQUFDLDBFQUFpQjtBQUMvRSxTQUFTRCx5QkFBeUJFLEdBQUc7SUFDakMsT0FBT0EsT0FBT0EsSUFBSUMsYUFBYUQsTUFBTTtRQUNqQ0UsU0FBU0Y7SUFDYjtBQUNKO0FBQ0EsTUFBTWxCLFdBQVc7SUFDYkMsTUFBTSxPQUFPYyxPQUFPSyxRQUFRQyxLQUFLO0lBQ2pDbkIsT0FBTyxPQUFPYSxPQUFPSyxRQUFRRSxJQUFJO0lBQ2pDbkIsTUFBTSxPQUFPWSxPQUFPSyxRQUFRRyxPQUFPO0lBQ25DbkIsT0FBTyxPQUFPVyxPQUFPSyxRQUFRSSxNQUFNO0lBQ25DbkIsTUFBTSxPQUFPVSxPQUFPSyxRQUFRQyxLQUFLO0lBQ2pDZixPQUFPLE9BQU9TLE9BQU9LLFFBQVFLLFFBQVE7SUFDckNsQixPQUFPLE9BQU9RLE9BQU9LLFFBQVFLLFFBQVE7QUFDekM7QUFDQSxTQUFTeEIsS0FBSyxHQUFHeUIsT0FBTztJQUNwQkMsUUFBUUMsSUFBSTVCLFNBQVNDLFNBQVN5QjtBQUNsQztBQUNBLFNBQVN4QixNQUFNLEdBQUd3QixPQUFPO0lBQ3JCQyxRQUFRekIsTUFBTUYsU0FBU0UsVUFBVXdCO0FBQ3JDO0FBQ0EsU0FBU3ZCLEtBQUssR0FBR3VCLE9BQU87SUFDcEJDLFFBQVF4QixLQUFLSCxTQUFTRyxTQUFTdUI7QUFDbkM7QUFDQSxTQUFTdEIsTUFBTSxHQUFHc0IsT0FBTztJQUNyQkMsUUFBUUMsSUFBSTVCLFNBQVNJLFVBQVVzQjtBQUNuQztBQUNBLFNBQVNyQixLQUFLLEdBQUdxQixPQUFPO0lBQ3BCQyxRQUFRQyxJQUFJNUIsU0FBU0ssU0FBU3FCO0FBQ2xDO0FBQ0EsU0FBU3BCLE1BQU0sR0FBR29CLE9BQU87SUFDckJDLFFBQVFDLElBQUk1QixTQUFTTSxVQUFVb0I7QUFDbkM7QUFDQSxTQUFTbkIsTUFBTSxHQUFHbUIsT0FBTztJQUNyQkMsUUFBUUMsSUFBSTVCLFNBQVNPLFVBQVVtQjtBQUNuQztBQUNBLE1BQU1HLG1CQUFtQixJQUFJQztBQUM3QixTQUFTdEIsU0FBUyxHQUFHa0IsT0FBTztJQUN4QixJQUFJLENBQUNHLGlCQUFpQkUsSUFBSUwsT0FBTyxDQUFDLEVBQUUsR0FBRztRQUNuQ0csaUJBQWlCRyxJQUFJTixRQUFRTyxLQUFLO1FBQ2xDOUIsUUFBUXVCO0lBQ1o7QUFDSixFQUVBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL291dHB1dC9sb2cuanM/ZTk0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIHByZWZpeGVzOiBudWxsLFxuICAgIHdhaXQ6IG51bGwsXG4gICAgZXJyb3I6IG51bGwsXG4gICAgd2FybjogbnVsbCxcbiAgICByZWFkeTogbnVsbCxcbiAgICBpbmZvOiBudWxsLFxuICAgIGV2ZW50OiBudWxsLFxuICAgIHRyYWNlOiBudWxsLFxuICAgIHdhcm5PbmNlOiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIHByZWZpeGVzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHByZWZpeGVzO1xuICAgIH0sXG4gICAgd2FpdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB3YWl0O1xuICAgIH0sXG4gICAgZXJyb3I6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgfSxcbiAgICB3YXJuOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHdhcm47XG4gICAgfSxcbiAgICByZWFkeTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiByZWFkeTtcbiAgICB9LFxuICAgIGluZm86IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaW5mbztcbiAgICB9LFxuICAgIGV2ZW50OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGV2ZW50O1xuICAgIH0sXG4gICAgdHJhY2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdHJhY2U7XG4gICAgfSxcbiAgICB3YXJuT25jZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB3YXJuT25jZTtcbiAgICB9XG59KTtcbmNvbnN0IF9jaGFsayA9IC8qI19fUFVSRV9fKi8gX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0KHJlcXVpcmUoXCIuLi8uLi9saWIvY2hhbGtcIikpO1xuZnVuY3Rpb24gX2ludGVyb3BfcmVxdWlyZV9kZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG5jb25zdCBwcmVmaXhlcyA9IHtcbiAgICB3YWl0OiBcIi0gXCIgKyBfY2hhbGsuZGVmYXVsdC5jeWFuKFwid2FpdFwiKSxcbiAgICBlcnJvcjogXCItIFwiICsgX2NoYWxrLmRlZmF1bHQucmVkKFwiZXJyb3JcIiksXG4gICAgd2FybjogXCItIFwiICsgX2NoYWxrLmRlZmF1bHQueWVsbG93KFwid2FyblwiKSxcbiAgICByZWFkeTogXCItIFwiICsgX2NoYWxrLmRlZmF1bHQuZ3JlZW4oXCJyZWFkeVwiKSxcbiAgICBpbmZvOiBcIi0gXCIgKyBfY2hhbGsuZGVmYXVsdC5jeWFuKFwiaW5mb1wiKSxcbiAgICBldmVudDogXCItIFwiICsgX2NoYWxrLmRlZmF1bHQubWFnZW50YShcImV2ZW50XCIpLFxuICAgIHRyYWNlOiBcIi0gXCIgKyBfY2hhbGsuZGVmYXVsdC5tYWdlbnRhKFwidHJhY2VcIilcbn07XG5mdW5jdGlvbiB3YWl0KC4uLm1lc3NhZ2UpIHtcbiAgICBjb25zb2xlLmxvZyhwcmVmaXhlcy53YWl0LCAuLi5tZXNzYWdlKTtcbn1cbmZ1bmN0aW9uIGVycm9yKC4uLm1lc3NhZ2UpIHtcbiAgICBjb25zb2xlLmVycm9yKHByZWZpeGVzLmVycm9yLCAuLi5tZXNzYWdlKTtcbn1cbmZ1bmN0aW9uIHdhcm4oLi4ubWVzc2FnZSkge1xuICAgIGNvbnNvbGUud2FybihwcmVmaXhlcy53YXJuLCAuLi5tZXNzYWdlKTtcbn1cbmZ1bmN0aW9uIHJlYWR5KC4uLm1lc3NhZ2UpIHtcbiAgICBjb25zb2xlLmxvZyhwcmVmaXhlcy5yZWFkeSwgLi4ubWVzc2FnZSk7XG59XG5mdW5jdGlvbiBpbmZvKC4uLm1lc3NhZ2UpIHtcbiAgICBjb25zb2xlLmxvZyhwcmVmaXhlcy5pbmZvLCAuLi5tZXNzYWdlKTtcbn1cbmZ1bmN0aW9uIGV2ZW50KC4uLm1lc3NhZ2UpIHtcbiAgICBjb25zb2xlLmxvZyhwcmVmaXhlcy5ldmVudCwgLi4ubWVzc2FnZSk7XG59XG5mdW5jdGlvbiB0cmFjZSguLi5tZXNzYWdlKSB7XG4gICAgY29uc29sZS5sb2cocHJlZml4ZXMudHJhY2UsIC4uLm1lc3NhZ2UpO1xufVxuY29uc3Qgd2Fybk9uY2VNZXNzYWdlcyA9IG5ldyBTZXQoKTtcbmZ1bmN0aW9uIHdhcm5PbmNlKC4uLm1lc3NhZ2UpIHtcbiAgICBpZiAoIXdhcm5PbmNlTWVzc2FnZXMuaGFzKG1lc3NhZ2VbMF0pKSB7XG4gICAgICAgIHdhcm5PbmNlTWVzc2FnZXMuYWRkKG1lc3NhZ2Uuam9pbihcIiBcIikpO1xuICAgICAgICB3YXJuKC4uLm1lc3NhZ2UpO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1vZHVsZSIsInByZWZpeGVzIiwid2FpdCIsImVycm9yIiwid2FybiIsInJlYWR5IiwiaW5mbyIsImV2ZW50IiwidHJhY2UiLCJ3YXJuT25jZSIsIl9leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZW51bWVyYWJsZSIsImdldCIsIl9jaGFsayIsIl9pbnRlcm9wX3JlcXVpcmVfZGVmYXVsdCIsInJlcXVpcmUiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImN5YW4iLCJyZWQiLCJ5ZWxsb3ciLCJncmVlbiIsIm1hZ2VudGEiLCJtZXNzYWdlIiwiY29uc29sZSIsImxvZyIsIndhcm5PbmNlTWVzc2FnZXMiLCJTZXQiLCJoYXMiLCJhZGQiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/build/output/log.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/app-router-headers.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/app-router-headers.js ***!
  \************************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    RSC: function() {\n        return RSC;\n    },\n    ACTION: function() {\n        return ACTION;\n    },\n    NEXT_ROUTER_STATE_TREE: function() {\n        return NEXT_ROUTER_STATE_TREE;\n    },\n    NEXT_ROUTER_PREFETCH: function() {\n        return NEXT_ROUTER_PREFETCH;\n    },\n    NEXT_URL: function() {\n        return NEXT_URL;\n    },\n    FETCH_CACHE_HEADER: function() {\n        return FETCH_CACHE_HEADER;\n    },\n    RSC_CONTENT_TYPE_HEADER: function() {\n        return RSC_CONTENT_TYPE_HEADER;\n    },\n    RSC_VARY_HEADER: function() {\n        return RSC_VARY_HEADER;\n    },\n    FLIGHT_PARAMETERS: function() {\n        return FLIGHT_PARAMETERS;\n    },\n    NEXT_RSC_UNION_QUERY: function() {\n        return NEXT_RSC_UNION_QUERY;\n    }\n});\nconst RSC = \"RSC\";\nconst ACTION = \"Next-Action\";\nconst NEXT_ROUTER_STATE_TREE = \"Next-Router-State-Tree\";\nconst NEXT_ROUTER_PREFETCH = \"Next-Router-Prefetch\";\nconst NEXT_URL = \"Next-Url\";\nconst FETCH_CACHE_HEADER = \"x-vercel-sc-headers\";\nconst RSC_CONTENT_TYPE_HEADER = \"text/x-component\";\nconst RSC_VARY_HEADER = RSC + \", \" + NEXT_ROUTER_STATE_TREE + \", \" + NEXT_ROUTER_PREFETCH;\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ]\n];\nconst NEXT_RSC_UNION_QUERY = \"_rsc\";\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=app-router-headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQVdOO0FBQ0EsU0FBU1csUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSWpCLE9BQU9DLGVBQWVlLFFBQVFFLE1BQU07UUFDcERDLFlBQVk7UUFDWkMsS0FBS0gsR0FBRyxDQUFDQyxLQUFLO0lBQ2xCO0FBQ0o7QUFDQUgsUUFBUWIsU0FBUztJQUNiRyxLQUFLO1FBQ0QsT0FBT0E7SUFDWDtJQUNBQyxRQUFRO1FBQ0osT0FBT0E7SUFDWDtJQUNBQyx3QkFBd0I7UUFDcEIsT0FBT0E7SUFDWDtJQUNBQyxzQkFBc0I7UUFDbEIsT0FBT0E7SUFDWDtJQUNBQyxVQUFVO1FBQ04sT0FBT0E7SUFDWDtJQUNBQyxvQkFBb0I7UUFDaEIsT0FBT0E7SUFDWDtJQUNBQyx5QkFBeUI7UUFDckIsT0FBT0E7SUFDWDtJQUNBQyxpQkFBaUI7UUFDYixPQUFPQTtJQUNYO0lBQ0FDLG1CQUFtQjtRQUNmLE9BQU9BO0lBQ1g7SUFDQUMsc0JBQXNCO1FBQ2xCLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1ULE1BQU07QUFDWixNQUFNQyxTQUFTO0FBQ2YsTUFBTUMseUJBQXlCO0FBQy9CLE1BQU1DLHVCQUF1QjtBQUM3QixNQUFNQyxXQUFXO0FBQ2pCLE1BQU1DLHFCQUFxQjtBQUMzQixNQUFNQywwQkFBMEI7QUFDaEMsTUFBTUMsa0JBQWtCUCxNQUFNLE9BQU9FLHlCQUF5QixPQUFPQztBQUNyRSxNQUFNSyxvQkFBb0I7SUFDdEI7UUFDSVI7S0FDSDtJQUNEO1FBQ0lFO0tBQ0g7SUFDRDtRQUNJQztLQUNIO0NBQ0o7QUFDRCxNQUFNTSx1QkFBdUI7QUFFN0IsSUFBSSxDQUFDLE9BQU9aLFFBQVFtQixZQUFZLGNBQWUsT0FBT25CLFFBQVFtQixZQUFZLFlBQVluQixRQUFRbUIsWUFBWSxJQUFJLEtBQU0sT0FBT25CLFFBQVFtQixRQUFRQyxlQUFlLGFBQWE7SUFDckt0QixPQUFPQyxlQUFlQyxRQUFRbUIsU0FBUyxjQUFjO1FBQUVsQixPQUFPO0lBQUs7SUFDbkVILE9BQU91QixPQUFPckIsUUFBUW1CLFNBQVNuQjtJQUMvQkUsT0FBT0YsVUFBVUEsUUFBUW1CO0FBQzNCLEVBRUEsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzLmpzPzM1NmYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBSU0M6IG51bGwsXG4gICAgQUNUSU9OOiBudWxsLFxuICAgIE5FWFRfUk9VVEVSX1NUQVRFX1RSRUU6IG51bGwsXG4gICAgTkVYVF9ST1VURVJfUFJFRkVUQ0g6IG51bGwsXG4gICAgTkVYVF9VUkw6IG51bGwsXG4gICAgRkVUQ0hfQ0FDSEVfSEVBREVSOiBudWxsLFxuICAgIFJTQ19DT05URU5UX1RZUEVfSEVBREVSOiBudWxsLFxuICAgIFJTQ19WQVJZX0hFQURFUjogbnVsbCxcbiAgICBGTElHSFRfUEFSQU1FVEVSUzogbnVsbCxcbiAgICBORVhUX1JTQ19VTklPTl9RVUVSWTogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBSU0M6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUlNDO1xuICAgIH0sXG4gICAgQUNUSU9OOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIEFDVElPTjtcbiAgICB9LFxuICAgIE5FWFRfUk9VVEVSX1NUQVRFX1RSRUU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gTkVYVF9ST1VURVJfU1RBVEVfVFJFRTtcbiAgICB9LFxuICAgIE5FWFRfUk9VVEVSX1BSRUZFVENIOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIE5FWFRfUk9VVEVSX1BSRUZFVENIO1xuICAgIH0sXG4gICAgTkVYVF9VUkw6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gTkVYVF9VUkw7XG4gICAgfSxcbiAgICBGRVRDSF9DQUNIRV9IRUFERVI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gRkVUQ0hfQ0FDSEVfSEVBREVSO1xuICAgIH0sXG4gICAgUlNDX0NPTlRFTlRfVFlQRV9IRUFERVI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUlNDX0NPTlRFTlRfVFlQRV9IRUFERVI7XG4gICAgfSxcbiAgICBSU0NfVkFSWV9IRUFERVI6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gUlNDX1ZBUllfSEVBREVSO1xuICAgIH0sXG4gICAgRkxJR0hUX1BBUkFNRVRFUlM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gRkxJR0hUX1BBUkFNRVRFUlM7XG4gICAgfSxcbiAgICBORVhUX1JTQ19VTklPTl9RVUVSWTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBORVhUX1JTQ19VTklPTl9RVUVSWTtcbiAgICB9XG59KTtcbmNvbnN0IFJTQyA9IFwiUlNDXCI7XG5jb25zdCBBQ1RJT04gPSBcIk5leHQtQWN0aW9uXCI7XG5jb25zdCBORVhUX1JPVVRFUl9TVEFURV9UUkVFID0gXCJOZXh0LVJvdXRlci1TdGF0ZS1UcmVlXCI7XG5jb25zdCBORVhUX1JPVVRFUl9QUkVGRVRDSCA9IFwiTmV4dC1Sb3V0ZXItUHJlZmV0Y2hcIjtcbmNvbnN0IE5FWFRfVVJMID0gXCJOZXh0LVVybFwiO1xuY29uc3QgRkVUQ0hfQ0FDSEVfSEVBREVSID0gXCJ4LXZlcmNlbC1zYy1oZWFkZXJzXCI7XG5jb25zdCBSU0NfQ09OVEVOVF9UWVBFX0hFQURFUiA9IFwidGV4dC94LWNvbXBvbmVudFwiO1xuY29uc3QgUlNDX1ZBUllfSEVBREVSID0gUlNDICsgXCIsIFwiICsgTkVYVF9ST1VURVJfU1RBVEVfVFJFRSArIFwiLCBcIiArIE5FWFRfUk9VVEVSX1BSRUZFVENIO1xuY29uc3QgRkxJR0hUX1BBUkFNRVRFUlMgPSBbXG4gICAgW1xuICAgICAgICBSU0NcbiAgICBdLFxuICAgIFtcbiAgICAgICAgTkVYVF9ST1VURVJfU1RBVEVfVFJFRVxuICAgIF0sXG4gICAgW1xuICAgICAgICBORVhUX1JPVVRFUl9QUkVGRVRDSFxuICAgIF1cbl07XG5jb25zdCBORVhUX1JTQ19VTklPTl9RVUVSWSA9IFwiX3JzY1wiO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGVyLWhlYWRlcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwiUlNDIiwiQUNUSU9OIiwiTkVYVF9ST1VURVJfU1RBVEVfVFJFRSIsIk5FWFRfUk9VVEVSX1BSRUZFVENIIiwiTkVYVF9VUkwiLCJGRVRDSF9DQUNIRV9IRUFERVIiLCJSU0NfQ09OVEVOVF9UWVBFX0hFQURFUiIsIlJTQ19WQVJZX0hFQURFUiIsIkZMSUdIVF9QQVJBTUVURVJTIiwiTkVYVF9SU0NfVU5JT05fUVVFUlkiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/app-router-headers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/draft-mode.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/components/draft-mode.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"DraftMode\", ({\n    enumerable: true,\n    get: function() {\n        return DraftMode;\n    }\n}));\nconst _staticgenerationbailout = __webpack_require__(/*! ./static-generation-bailout */ \"(sc_server)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nclass DraftMode {\n    get isEnabled() {\n        return this._provider.isEnabled;\n    }\n    enable() {\n        if ((0, _staticgenerationbailout.staticGenerationBailout)(\"draftMode().enable()\")) {\n            return;\n        }\n        return this._provider.enable();\n    }\n    disable() {\n        if ((0, _staticgenerationbailout.staticGenerationBailout)(\"draftMode().disable()\")) {\n            return;\n        }\n        return this._provider.disable();\n    }\n    constructor(provider){\n        this._provider = provider;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=draft-mode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2RyYWZ0LW1vZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDZDQUE0QztJQUN4Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLDJCQUEyQkMsbUJBQU9BLENBQUMsd0hBQTZCO0FBQ3RFLE1BQU1GO0lBQ0YsSUFBSUcsWUFBWTtRQUNaLE9BQU8sSUFBSSxDQUFDQyxVQUFVRDtJQUMxQjtJQUNBRSxTQUFTO1FBQ0wsSUFBSSxDQUFDLEdBQUdKLHlCQUF5QkssdUJBQXNCLEVBQUcseUJBQXlCO1lBQy9FO1FBQ0o7UUFDQSxPQUFPLElBQUksQ0FBQ0YsVUFBVUM7SUFDMUI7SUFDQUUsVUFBVTtRQUNOLElBQUksQ0FBQyxHQUFHTix5QkFBeUJLLHVCQUFzQixFQUFHLDBCQUEwQjtZQUNoRjtRQUNKO1FBQ0EsT0FBTyxJQUFJLENBQUNGLFVBQVVHO0lBQzFCO0lBQ0FDLFlBQVlDLFFBQVEsQ0FBQztRQUNqQixJQUFJLENBQUNMLFlBQVlLO0lBQ3JCO0FBQ0o7QUFFQSxJQUFJLENBQUMsT0FBT2IsUUFBUWMsWUFBWSxjQUFlLE9BQU9kLFFBQVFjLFlBQVksWUFBWWQsUUFBUWMsWUFBWSxJQUFJLEtBQU0sT0FBT2QsUUFBUWMsUUFBUUMsZUFBZSxhQUFhO0lBQ3JLakIsT0FBT0MsZUFBZUMsUUFBUWMsU0FBUyxjQUFjO1FBQUViLE9BQU87SUFBSztJQUNuRUgsT0FBT2tCLE9BQU9oQixRQUFRYyxTQUFTZDtJQUMvQmlCLE9BQU9qQixVQUFVQSxRQUFRYztBQUMzQixFQUVBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2RyYWZ0LW1vZGUuanM/MzFhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkRyYWZ0TW9kZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gRHJhZnRNb2RlO1xuICAgIH1cbn0pO1xuY29uc3QgX3N0YXRpY2dlbmVyYXRpb25iYWlsb3V0ID0gcmVxdWlyZShcIi4vc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dFwiKTtcbmNsYXNzIERyYWZ0TW9kZSB7XG4gICAgZ2V0IGlzRW5hYmxlZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Byb3ZpZGVyLmlzRW5hYmxlZDtcbiAgICB9XG4gICAgZW5hYmxlKCkge1xuICAgICAgICBpZiAoKDAsIF9zdGF0aWNnZW5lcmF0aW9uYmFpbG91dC5zdGF0aWNHZW5lcmF0aW9uQmFpbG91dCkoXCJkcmFmdE1vZGUoKS5lbmFibGUoKVwiKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9wcm92aWRlci5lbmFibGUoKTtcbiAgICB9XG4gICAgZGlzYWJsZSgpIHtcbiAgICAgICAgaWYgKCgwLCBfc3RhdGljZ2VuZXJhdGlvbmJhaWxvdXQuc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQpKFwiZHJhZnRNb2RlKCkuZGlzYWJsZSgpXCIpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3Byb3ZpZGVyLmRpc2FibGUoKTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IocHJvdmlkZXIpe1xuICAgICAgICB0aGlzLl9wcm92aWRlciA9IHByb3ZpZGVyO1xuICAgIH1cbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHJhZnQtbW9kZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiRHJhZnRNb2RlIiwiX3N0YXRpY2dlbmVyYXRpb25iYWlsb3V0IiwicmVxdWlyZSIsImlzRW5hYmxlZCIsIl9wcm92aWRlciIsImVuYWJsZSIsInN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IiwiZGlzYWJsZSIsImNvbnN0cnVjdG9yIiwicHJvdmlkZXIiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/draft-mode.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/headers.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/client/components/headers.js ***!
  \*************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    headers: function() {\n        return headers;\n    },\n    cookies: function() {\n        return cookies;\n    },\n    draftMode: function() {\n        return draftMode;\n    }\n});\nconst _requestcookies = __webpack_require__(/*! ../../server/web/spec-extension/adapters/request-cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\");\nconst _headers = __webpack_require__(/*! ../../server/web/spec-extension/adapters/headers */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js\");\nconst _cookies = __webpack_require__(/*! ../../server/web/spec-extension/cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/cookies.js\");\nconst _requestasyncstorage = __webpack_require__(/*! ./request-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/request-async-storage.js\");\nconst _actionasyncstorage = __webpack_require__(/*! ./action-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/action-async-storage.js\");\nconst _staticgenerationbailout = __webpack_require__(/*! ./static-generation-bailout */ \"(sc_server)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst _draftmode = __webpack_require__(/*! ./draft-mode */ \"(sc_server)/./node_modules/next/dist/client/components/draft-mode.js\");\nfunction headers() {\n    if ((0, _staticgenerationbailout.staticGenerationBailout)(\"headers\")) {\n        return _headers.HeadersAdapter.seal(new Headers({}));\n    }\n    const requestStore = _requestasyncstorage.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: Method expects to have requestAsyncStorage, none available\");\n    }\n    return requestStore.headers;\n}\nfunction cookies() {\n    if ((0, _staticgenerationbailout.staticGenerationBailout)(\"cookies\")) {\n        return _requestcookies.RequestCookiesAdapter.seal(new _cookies.RequestCookies(new Headers({})));\n    }\n    const requestStore = _requestasyncstorage.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: Method expects to have requestAsyncStorage, none available\");\n    }\n    const asyncActionStore = _actionasyncstorage.actionAsyncStorage.getStore();\n    if (asyncActionStore && (asyncActionStore.isAction || asyncActionStore.isAppRoute)) {\n        // We can't conditionally return different types here based on the context.\n        // To avoid confusion, we always return the readonly type here.\n        return requestStore.mutableCookies;\n    }\n    return requestStore.cookies;\n}\nfunction draftMode() {\n    const requestStore = _requestasyncstorage.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: Method expects to have requestAsyncStorage, none available\");\n    }\n    return new _draftmode.DraftMode(requestStore.draftMode);\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2hlYWRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FJTjtBQUNBLFNBQVNJLFFBQVFDLE1BQU0sRUFBRUMsR0FBRztJQUN4QixJQUFJLElBQUlDLFFBQVFELElBQUlWLE9BQU9DLGVBQWVRLFFBQVFFLE1BQU07UUFDcERDLFlBQVk7UUFDWkMsS0FBS0gsR0FBRyxDQUFDQyxLQUFLO0lBQ2xCO0FBQ0o7QUFDQUgsUUFBUU4sU0FBUztJQUNiRyxTQUFTO1FBQ0wsT0FBT0E7SUFDWDtJQUNBQyxTQUFTO1FBQ0wsT0FBT0E7SUFDWDtJQUNBQyxXQUFXO1FBQ1AsT0FBT0E7SUFDWDtBQUNKO0FBQ0EsTUFBTU8sa0JBQWtCQyxtQkFBT0EsQ0FBQyw0SkFBMEQ7QUFDMUYsTUFBTUMsV0FBV0QsbUJBQU9BLENBQUMsNElBQWtEO0FBQzNFLE1BQU1FLFdBQVdGLG1CQUFPQSxDQUFDLDBIQUF5QztBQUNsRSxNQUFNRyx1QkFBdUJILG1CQUFPQSxDQUFDLGdIQUF5QjtBQUM5RCxNQUFNSSxzQkFBc0JKLG1CQUFPQSxDQUFDLDhHQUF3QjtBQUM1RCxNQUFNSywyQkFBMkJMLG1CQUFPQSxDQUFDLHdIQUE2QjtBQUN0RSxNQUFNTSxhQUFhTixtQkFBT0EsQ0FBQywwRkFBYztBQUN6QyxTQUFTVjtJQUNMLElBQUksQ0FBQyxHQUFHZSx5QkFBeUJFLHVCQUFzQixFQUFHLFlBQVk7UUFDbEUsT0FBT04sU0FBU08sZUFBZUMsS0FBSyxJQUFJQyxRQUFRLENBQUM7SUFDckQ7SUFDQSxNQUFNQyxlQUFlUixxQkFBcUJTLG9CQUFvQkM7SUFDOUQsSUFBSSxDQUFDRixjQUFjO1FBQ2YsTUFBTSxJQUFJRyxNQUFNO0lBQ3BCO0lBQ0EsT0FBT0gsYUFBYXJCO0FBQ3hCO0FBQ0EsU0FBU0M7SUFDTCxJQUFJLENBQUMsR0FBR2MseUJBQXlCRSx1QkFBc0IsRUFBRyxZQUFZO1FBQ2xFLE9BQU9SLGdCQUFnQmdCLHNCQUFzQk4sS0FBSyxJQUFJUCxTQUFTYyxlQUFlLElBQUlOLFFBQVEsQ0FBQztJQUMvRjtJQUNBLE1BQU1DLGVBQWVSLHFCQUFxQlMsb0JBQW9CQztJQUM5RCxJQUFJLENBQUNGLGNBQWM7UUFDZixNQUFNLElBQUlHLE1BQU07SUFDcEI7SUFDQSxNQUFNRyxtQkFBbUJiLG9CQUFvQmMsbUJBQW1CTDtJQUNoRSxJQUFJSSxvQkFBcUJBLENBQUFBLGlCQUFpQkUsWUFBWUYsaUJBQWlCRyxVQUFTLEdBQUk7UUFDaEYsMkVBQTJFO1FBQzNFLCtEQUErRDtRQUMvRCxPQUFPVCxhQUFhVTtJQUN4QjtJQUNBLE9BQU9WLGFBQWFwQjtBQUN4QjtBQUNBLFNBQVNDO0lBQ0wsTUFBTW1CLGVBQWVSLHFCQUFxQlMsb0JBQW9CQztJQUM5RCxJQUFJLENBQUNGLGNBQWM7UUFDZixNQUFNLElBQUlHLE1BQU07SUFDcEI7SUFDQSxPQUFPLElBQUlSLFdBQVdnQixVQUFVWCxhQUFhbkI7QUFDakQ7QUFFQSxJQUFJLENBQUMsT0FBT0wsUUFBUW9DLFlBQVksY0FBZSxPQUFPcEMsUUFBUW9DLFlBQVksWUFBWXBDLFFBQVFvQyxZQUFZLElBQUksS0FBTSxPQUFPcEMsUUFBUW9DLFFBQVFDLGVBQWUsYUFBYTtJQUNyS3ZDLE9BQU9DLGVBQWVDLFFBQVFvQyxTQUFTLGNBQWM7UUFBRW5DLE9BQU87SUFBSztJQUNuRUgsT0FBT3dDLE9BQU90QyxRQUFRb0MsU0FBU3BDO0lBQy9CRSxPQUFPRixVQUFVQSxRQUFRb0M7QUFDM0IsRUFFQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9oZWFkZXJzLmpzPzBiYWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBoZWFkZXJzOiBudWxsLFxuICAgIGNvb2tpZXM6IG51bGwsXG4gICAgZHJhZnRNb2RlOiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIGhlYWRlcnM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaGVhZGVycztcbiAgICB9LFxuICAgIGNvb2tpZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gY29va2llcztcbiAgICB9LFxuICAgIGRyYWZ0TW9kZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBkcmFmdE1vZGU7XG4gICAgfVxufSk7XG5jb25zdCBfcmVxdWVzdGNvb2tpZXMgPSByZXF1aXJlKFwiLi4vLi4vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZXF1ZXN0LWNvb2tpZXNcIik7XG5jb25zdCBfaGVhZGVycyA9IHJlcXVpcmUoXCIuLi8uLi9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL2hlYWRlcnNcIik7XG5jb25zdCBfY29va2llcyA9IHJlcXVpcmUoXCIuLi8uLi9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2Nvb2tpZXNcIik7XG5jb25zdCBfcmVxdWVzdGFzeW5jc3RvcmFnZSA9IHJlcXVpcmUoXCIuL3JlcXVlc3QtYXN5bmMtc3RvcmFnZVwiKTtcbmNvbnN0IF9hY3Rpb25hc3luY3N0b3JhZ2UgPSByZXF1aXJlKFwiLi9hY3Rpb24tYXN5bmMtc3RvcmFnZVwiKTtcbmNvbnN0IF9zdGF0aWNnZW5lcmF0aW9uYmFpbG91dCA9IHJlcXVpcmUoXCIuL3N0YXRpYy1nZW5lcmF0aW9uLWJhaWxvdXRcIik7XG5jb25zdCBfZHJhZnRtb2RlID0gcmVxdWlyZShcIi4vZHJhZnQtbW9kZVwiKTtcbmZ1bmN0aW9uIGhlYWRlcnMoKSB7XG4gICAgaWYgKCgwLCBfc3RhdGljZ2VuZXJhdGlvbmJhaWxvdXQuc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQpKFwiaGVhZGVyc1wiKSkge1xuICAgICAgICByZXR1cm4gX2hlYWRlcnMuSGVhZGVyc0FkYXB0ZXIuc2VhbChuZXcgSGVhZGVycyh7fSkpO1xuICAgIH1cbiAgICBjb25zdCByZXF1ZXN0U3RvcmUgPSBfcmVxdWVzdGFzeW5jc3RvcmFnZS5yZXF1ZXN0QXN5bmNTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKCFyZXF1ZXN0U3RvcmUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YXJpYW50OiBNZXRob2QgZXhwZWN0cyB0byBoYXZlIHJlcXVlc3RBc3luY1N0b3JhZ2UsIG5vbmUgYXZhaWxhYmxlXCIpO1xuICAgIH1cbiAgICByZXR1cm4gcmVxdWVzdFN0b3JlLmhlYWRlcnM7XG59XG5mdW5jdGlvbiBjb29raWVzKCkge1xuICAgIGlmICgoMCwgX3N0YXRpY2dlbmVyYXRpb25iYWlsb3V0LnN0YXRpY0dlbmVyYXRpb25CYWlsb3V0KShcImNvb2tpZXNcIikpIHtcbiAgICAgICAgcmV0dXJuIF9yZXF1ZXN0Y29va2llcy5SZXF1ZXN0Q29va2llc0FkYXB0ZXIuc2VhbChuZXcgX2Nvb2tpZXMuUmVxdWVzdENvb2tpZXMobmV3IEhlYWRlcnMoe30pKSk7XG4gICAgfVxuICAgIGNvbnN0IHJlcXVlc3RTdG9yZSA9IF9yZXF1ZXN0YXN5bmNzdG9yYWdlLnJlcXVlc3RBc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAoIXJlcXVlc3RTdG9yZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IE1ldGhvZCBleHBlY3RzIHRvIGhhdmUgcmVxdWVzdEFzeW5jU3RvcmFnZSwgbm9uZSBhdmFpbGFibGVcIik7XG4gICAgfVxuICAgIGNvbnN0IGFzeW5jQWN0aW9uU3RvcmUgPSBfYWN0aW9uYXN5bmNzdG9yYWdlLmFjdGlvbkFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgIGlmIChhc3luY0FjdGlvblN0b3JlICYmIChhc3luY0FjdGlvblN0b3JlLmlzQWN0aW9uIHx8IGFzeW5jQWN0aW9uU3RvcmUuaXNBcHBSb3V0ZSkpIHtcbiAgICAgICAgLy8gV2UgY2FuJ3QgY29uZGl0aW9uYWxseSByZXR1cm4gZGlmZmVyZW50IHR5cGVzIGhlcmUgYmFzZWQgb24gdGhlIGNvbnRleHQuXG4gICAgICAgIC8vIFRvIGF2b2lkIGNvbmZ1c2lvbiwgd2UgYWx3YXlzIHJldHVybiB0aGUgcmVhZG9ubHkgdHlwZSBoZXJlLlxuICAgICAgICByZXR1cm4gcmVxdWVzdFN0b3JlLm11dGFibGVDb29raWVzO1xuICAgIH1cbiAgICByZXR1cm4gcmVxdWVzdFN0b3JlLmNvb2tpZXM7XG59XG5mdW5jdGlvbiBkcmFmdE1vZGUoKSB7XG4gICAgY29uc3QgcmVxdWVzdFN0b3JlID0gX3JlcXVlc3Rhc3luY3N0b3JhZ2UucmVxdWVzdEFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgIGlmICghcmVxdWVzdFN0b3JlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogTWV0aG9kIGV4cGVjdHMgdG8gaGF2ZSByZXF1ZXN0QXN5bmNTdG9yYWdlLCBub25lIGF2YWlsYWJsZVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBfZHJhZnRtb2RlLkRyYWZ0TW9kZShyZXF1ZXN0U3RvcmUuZHJhZnRNb2RlKTtcbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGVhZGVycy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJoZWFkZXJzIiwiY29va2llcyIsImRyYWZ0TW9kZSIsIl9leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZW51bWVyYWJsZSIsImdldCIsIl9yZXF1ZXN0Y29va2llcyIsInJlcXVpcmUiLCJfaGVhZGVycyIsIl9jb29raWVzIiwiX3JlcXVlc3Rhc3luY3N0b3JhZ2UiLCJfYWN0aW9uYXN5bmNzdG9yYWdlIiwiX3N0YXRpY2dlbmVyYXRpb25iYWlsb3V0IiwiX2RyYWZ0bW9kZSIsInN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IiwiSGVhZGVyc0FkYXB0ZXIiLCJzZWFsIiwiSGVhZGVycyIsInJlcXVlc3RTdG9yZSIsInJlcXVlc3RBc3luY1N0b3JhZ2UiLCJnZXRTdG9yZSIsIkVycm9yIiwiUmVxdWVzdENvb2tpZXNBZGFwdGVyIiwiUmVxdWVzdENvb2tpZXMiLCJhc3luY0FjdGlvblN0b3JlIiwiYWN0aW9uQXN5bmNTdG9yYWdlIiwiaXNBY3Rpb24iLCJpc0FwcFJvdXRlIiwibXV0YWJsZUNvb2tpZXMiLCJEcmFmdE1vZGUiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/headers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/hooks-server-context.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/hooks-server-context.js ***!
  \**************************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    DYNAMIC_ERROR_CODE: function() {\n        return DYNAMIC_ERROR_CODE;\n    },\n    DynamicServerError: function() {\n        return DynamicServerError;\n    }\n});\nconst DYNAMIC_ERROR_CODE = \"DYNAMIC_SERVER_USAGE\";\nclass DynamicServerError extends Error {\n    constructor(type){\n        super(\"Dynamic server usage: \" + type);\n        this.digest = DYNAMIC_ERROR_CODE;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=hooks-server-context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2hvb2tzLXNlcnZlci1jb250ZXh0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGLEtBQU1DLENBQUFBLENBR047QUFDQSxTQUFTRyxRQUFRQyxNQUFNLEVBQUVDLEdBQUc7SUFDeEIsSUFBSSxJQUFJQyxRQUFRRCxJQUFJVCxPQUFPQyxlQUFlTyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFMLFNBQVM7SUFDYkcsb0JBQW9CO1FBQ2hCLE9BQU9BO0lBQ1g7SUFDQUMsb0JBQW9CO1FBQ2hCLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1ELHFCQUFxQjtBQUMzQixNQUFNQywyQkFBMkJPO0lBQzdCQyxZQUFZQyxJQUFJLENBQUM7UUFDYixLQUFLLENBQUMsMkJBQTJCQTtRQUNqQyxJQUFJLENBQUNDLFNBQVNYO0lBQ2xCO0FBQ0o7QUFFQSxJQUFJLENBQUMsT0FBT0gsUUFBUWUsWUFBWSxjQUFlLE9BQU9mLFFBQVFlLFlBQVksWUFBWWYsUUFBUWUsWUFBWSxJQUFJLEtBQU0sT0FBT2YsUUFBUWUsUUFBUUMsZUFBZSxhQUFhO0lBQ3JLbEIsT0FBT0MsZUFBZUMsUUFBUWUsU0FBUyxjQUFjO1FBQUVkLE9BQU87SUFBSztJQUNuRUgsT0FBT21CLE9BQU9qQixRQUFRZSxTQUFTZjtJQUMvQkUsT0FBT0YsVUFBVUEsUUFBUWU7QUFDM0IsRUFFQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ob29rcy1zZXJ2ZXItY29udGV4dC5qcz8wMDlhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgRFlOQU1JQ19FUlJPUl9DT0RFOiBudWxsLFxuICAgIER5bmFtaWNTZXJ2ZXJFcnJvcjogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBEWU5BTUlDX0VSUk9SX0NPREU6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gRFlOQU1JQ19FUlJPUl9DT0RFO1xuICAgIH0sXG4gICAgRHluYW1pY1NlcnZlckVycm9yOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIER5bmFtaWNTZXJ2ZXJFcnJvcjtcbiAgICB9XG59KTtcbmNvbnN0IERZTkFNSUNfRVJST1JfQ09ERSA9IFwiRFlOQU1JQ19TRVJWRVJfVVNBR0VcIjtcbmNsYXNzIER5bmFtaWNTZXJ2ZXJFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcih0eXBlKXtcbiAgICAgICAgc3VwZXIoXCJEeW5hbWljIHNlcnZlciB1c2FnZTogXCIgKyB0eXBlKTtcbiAgICAgICAgdGhpcy5kaWdlc3QgPSBEWU5BTUlDX0VSUk9SX0NPREU7XG4gICAgfVxufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ob29rcy1zZXJ2ZXItY29udGV4dC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJEWU5BTUlDX0VSUk9SX0NPREUiLCJEeW5hbWljU2VydmVyRXJyb3IiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwidHlwZSIsImRpZ2VzdCIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/hooks-server-context.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/not-found.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/client/components/not-found.js ***!
  \***************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    notFound: function() {\n        return notFound;\n    },\n    isNotFoundError: function() {\n        return isNotFoundError;\n    }\n});\nconst NOT_FOUND_ERROR_CODE = \"NEXT_NOT_FOUND\";\nfunction notFound() {\n    // eslint-disable-next-line no-throw-literal\n    const error = new Error(NOT_FOUND_ERROR_CODE);\n    error.digest = NOT_FOUND_ERROR_CODE;\n    throw error;\n}\nfunction isNotFoundError(error) {\n    return (error == null ? void 0 : error.digest) === NOT_FOUND_ERROR_CODE;\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=not-found.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQUdOO0FBQ0EsU0FBU0csUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVQsT0FBT0MsZUFBZU8sUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRTCxTQUFTO0lBQ2JHLFVBQVU7UUFDTixPQUFPQTtJQUNYO0lBQ0FDLGlCQUFpQjtRQUNiLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1PLHVCQUF1QjtBQUM3QixTQUFTUjtJQUNMLDRDQUE0QztJQUM1QyxNQUFNUyxRQUFRLElBQUlDLE1BQU1GO0lBQ3hCQyxNQUFNRSxTQUFTSDtJQUNmLE1BQU1DO0FBQ1Y7QUFDQSxTQUFTUixnQkFBZ0JRLEtBQUs7SUFDMUIsT0FBTyxDQUFDQSxTQUFTLE9BQU8sS0FBSyxJQUFJQSxNQUFNRSxNQUFLLE1BQU9IO0FBQ3ZEO0FBRUEsSUFBSSxDQUFDLE9BQU9YLFFBQVFlLFlBQVksY0FBZSxPQUFPZixRQUFRZSxZQUFZLFlBQVlmLFFBQVFlLFlBQVksSUFBSSxLQUFNLE9BQU9mLFFBQVFlLFFBQVFDLGVBQWUsYUFBYTtJQUNyS2xCLE9BQU9DLGVBQWVDLFFBQVFlLFNBQVMsY0FBYztRQUFFZCxPQUFPO0lBQUs7SUFDbkVILE9BQU9tQixPQUFPakIsUUFBUWUsU0FBU2Y7SUFDL0JFLE9BQU9GLFVBQVVBLFFBQVFlO0FBQzNCLEVBRUEscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLmpzPzQyMDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBub3RGb3VuZDogbnVsbCxcbiAgICBpc05vdEZvdW5kRXJyb3I6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgbm90Rm91bmQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gbm90Rm91bmQ7XG4gICAgfSxcbiAgICBpc05vdEZvdW5kRXJyb3I6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaXNOb3RGb3VuZEVycm9yO1xuICAgIH1cbn0pO1xuY29uc3QgTk9UX0ZPVU5EX0VSUk9SX0NPREUgPSBcIk5FWFRfTk9UX0ZPVU5EXCI7XG5mdW5jdGlvbiBub3RGb3VuZCgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdGhyb3ctbGl0ZXJhbFxuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKE5PVF9GT1VORF9FUlJPUl9DT0RFKTtcbiAgICBlcnJvci5kaWdlc3QgPSBOT1RfRk9VTkRfRVJST1JfQ09ERTtcbiAgICB0aHJvdyBlcnJvcjtcbn1cbmZ1bmN0aW9uIGlzTm90Rm91bmRFcnJvcihlcnJvcikge1xuICAgIHJldHVybiAoZXJyb3IgPT0gbnVsbCA/IHZvaWQgMCA6IGVycm9yLmRpZ2VzdCkgPT09IE5PVF9GT1VORF9FUlJPUl9DT0RFO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3QtZm91bmQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwibW9kdWxlIiwibm90Rm91bmQiLCJpc05vdEZvdW5kRXJyb3IiLCJfZXhwb3J0IiwidGFyZ2V0IiwiYWxsIiwibmFtZSIsImVudW1lcmFibGUiLCJnZXQiLCJOT1RfRk9VTkRfRVJST1JfQ09ERSIsImVycm9yIiwiRXJyb3IiLCJkaWdlc3QiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/not-found.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/redirect.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/client/components/redirect.js ***!
  \**************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    RedirectType: function() {\n        return RedirectType;\n    },\n    getRedirectError: function() {\n        return getRedirectError;\n    },\n    redirect: function() {\n        return redirect;\n    },\n    isRedirectError: function() {\n        return isRedirectError;\n    },\n    getURLFromRedirectError: function() {\n        return getURLFromRedirectError;\n    },\n    getRedirectTypeFromError: function() {\n        return getRedirectTypeFromError;\n    }\n});\nconst _requestasyncstorage = __webpack_require__(/*! ./request-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/request-async-storage.js\");\nconst REDIRECT_ERROR_CODE = \"NEXT_REDIRECT\";\nvar RedirectType;\n(function(RedirectType) {\n    RedirectType[\"push\"] = \"push\";\n    RedirectType[\"replace\"] = \"replace\";\n})(RedirectType || (RedirectType = {}));\nfunction getRedirectError(url, type) {\n    const error = new Error(REDIRECT_ERROR_CODE);\n    error.digest = REDIRECT_ERROR_CODE + \";\" + type + \";\" + url;\n    const requestStore = _requestasyncstorage.requestAsyncStorage.getStore();\n    if (requestStore) {\n        error.mutableCookies = requestStore.mutableCookies;\n    }\n    return error;\n}\nfunction redirect(url, type) {\n    if (type === void 0) type = \"replace\";\n    throw getRedirectError(url, type);\n}\nfunction isRedirectError(error) {\n    if (typeof (error == null ? void 0 : error.digest) !== \"string\") return false;\n    const [errorCode, type, destination] = error.digest.split(\";\", 3);\n    return errorCode === REDIRECT_ERROR_CODE && (type === \"replace\" || type === \"push\") && typeof destination === \"string\";\n}\nfunction getURLFromRedirectError(error) {\n    if (!isRedirectError(error)) return null;\n    // Slices off the beginning of the digest that contains the code and the\n    // separating ';'.\n    return error.digest.split(\";\", 3)[2];\n}\nfunction getRedirectTypeFromError(error) {\n    if (!isRedirectError(error)) {\n        throw new Error(\"Not a redirect error\");\n    }\n    return error.digest.split(\";\", 3)[1];\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=redirect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlZGlyZWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGLEtBQU1DLENBQUFBLENBT047QUFDQSxTQUFTTyxRQUFRQyxNQUFNLEVBQUVDLEdBQUc7SUFDeEIsSUFBSSxJQUFJQyxRQUFRRCxJQUFJYixPQUFPQyxlQUFlVyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFULFNBQVM7SUFDYkcsY0FBYztRQUNWLE9BQU9BO0lBQ1g7SUFDQUMsa0JBQWtCO1FBQ2QsT0FBT0E7SUFDWDtJQUNBQyxVQUFVO1FBQ04sT0FBT0E7SUFDWDtJQUNBQyxpQkFBaUI7UUFDYixPQUFPQTtJQUNYO0lBQ0FDLHlCQUF5QjtRQUNyQixPQUFPQTtJQUNYO0lBQ0FDLDBCQUEwQjtRQUN0QixPQUFPQTtJQUNYO0FBQ0o7QUFDQSxNQUFNTyx1QkFBdUJDLG1CQUFPQSxDQUFDLGdIQUF5QjtBQUM5RCxNQUFNQyxzQkFBc0I7QUFDNUIsSUFBSWQ7QUFDSCxVQUFTQSxZQUFZO0lBQ2xCQSxZQUFZLENBQUMsT0FBTyxHQUFHO0lBQ3ZCQSxZQUFZLENBQUMsVUFBVSxHQUFHO0FBQzlCLEdBQUdBLGdCQUFpQkEsQ0FBQUEsZUFBZSxDQUFDO0FBQ3BDLFNBQVNDLGlCQUFpQmMsR0FBRyxFQUFFQyxJQUFJO0lBQy9CLE1BQU1DLFFBQVEsSUFBSUMsTUFBTUo7SUFDeEJHLE1BQU1FLFNBQVNMLHNCQUFzQixNQUFNRSxPQUFPLE1BQU1EO0lBQ3hELE1BQU1LLGVBQWVSLHFCQUFxQlMsb0JBQW9CQztJQUM5RCxJQUFJRixjQUFjO1FBQ2RILE1BQU1NLGlCQUFpQkgsYUFBYUc7SUFDeEM7SUFDQSxPQUFPTjtBQUNYO0FBQ0EsU0FBU2YsU0FBU2EsR0FBRyxFQUFFQyxJQUFJO0lBQ3ZCLElBQUlBLFNBQVMsS0FBSyxHQUFHQSxPQUFPO0lBQzVCLE1BQU1mLGlCQUFpQmMsS0FBS0M7QUFDaEM7QUFDQSxTQUFTYixnQkFBZ0JjLEtBQUs7SUFDMUIsSUFBSSxPQUFRQSxDQUFBQSxTQUFTLE9BQU8sS0FBSyxJQUFJQSxNQUFNRSxNQUFLLE1BQU8sVUFBVSxPQUFPO0lBQ3hFLE1BQU0sQ0FBQ0ssV0FBV1IsTUFBTVMsWUFBWSxHQUFHUixNQUFNRSxPQUFPTyxNQUFNLEtBQUs7SUFDL0QsT0FBT0YsY0FBY1YsdUJBQXdCRSxDQUFBQSxTQUFTLGFBQWFBLFNBQVMsTUFBSyxLQUFNLE9BQU9TLGdCQUFnQjtBQUNsSDtBQUNBLFNBQVNyQix3QkFBd0JhLEtBQUs7SUFDbEMsSUFBSSxDQUFDZCxnQkFBZ0JjLFFBQVEsT0FBTztJQUNwQyx3RUFBd0U7SUFDeEUsa0JBQWtCO0lBQ2xCLE9BQU9BLE1BQU1FLE9BQU9PLE1BQU0sS0FBSyxFQUFFLENBQUMsRUFBRTtBQUN4QztBQUNBLFNBQVNyQix5QkFBeUJZLEtBQUs7SUFDbkMsSUFBSSxDQUFDZCxnQkFBZ0JjLFFBQVE7UUFDekIsTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0lBQ0EsT0FBT0QsTUFBTUUsT0FBT08sTUFBTSxLQUFLLEVBQUUsQ0FBQyxFQUFFO0FBQ3hDO0FBRUEsSUFBSSxDQUFDLE9BQU83QixRQUFROEIsWUFBWSxjQUFlLE9BQU85QixRQUFROEIsWUFBWSxZQUFZOUIsUUFBUThCLFlBQVksSUFBSSxLQUFNLE9BQU85QixRQUFROEIsUUFBUUMsZUFBZSxhQUFhO0lBQ3JLakMsT0FBT0MsZUFBZUMsUUFBUThCLFNBQVMsY0FBYztRQUFFN0IsT0FBTztJQUFLO0lBQ25FSCxPQUFPa0MsT0FBT2hDLFFBQVE4QixTQUFTOUI7SUFDL0JFLE9BQU9GLFVBQVVBLFFBQVE4QjtBQUMzQixFQUVBLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlZGlyZWN0LmpzP2IyNWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBSZWRpcmVjdFR5cGU6IG51bGwsXG4gICAgZ2V0UmVkaXJlY3RFcnJvcjogbnVsbCxcbiAgICByZWRpcmVjdDogbnVsbCxcbiAgICBpc1JlZGlyZWN0RXJyb3I6IG51bGwsXG4gICAgZ2V0VVJMRnJvbVJlZGlyZWN0RXJyb3I6IG51bGwsXG4gICAgZ2V0UmVkaXJlY3RUeXBlRnJvbUVycm9yOiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIFJlZGlyZWN0VHlwZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBSZWRpcmVjdFR5cGU7XG4gICAgfSxcbiAgICBnZXRSZWRpcmVjdEVycm9yOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGdldFJlZGlyZWN0RXJyb3I7XG4gICAgfSxcbiAgICByZWRpcmVjdDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiByZWRpcmVjdDtcbiAgICB9LFxuICAgIGlzUmVkaXJlY3RFcnJvcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBpc1JlZGlyZWN0RXJyb3I7XG4gICAgfSxcbiAgICBnZXRVUkxGcm9tUmVkaXJlY3RFcnJvcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRVUkxGcm9tUmVkaXJlY3RFcnJvcjtcbiAgICB9LFxuICAgIGdldFJlZGlyZWN0VHlwZUZyb21FcnJvcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRSZWRpcmVjdFR5cGVGcm9tRXJyb3I7XG4gICAgfVxufSk7XG5jb25zdCBfcmVxdWVzdGFzeW5jc3RvcmFnZSA9IHJlcXVpcmUoXCIuL3JlcXVlc3QtYXN5bmMtc3RvcmFnZVwiKTtcbmNvbnN0IFJFRElSRUNUX0VSUk9SX0NPREUgPSBcIk5FWFRfUkVESVJFQ1RcIjtcbnZhciBSZWRpcmVjdFR5cGU7XG4oZnVuY3Rpb24oUmVkaXJlY3RUeXBlKSB7XG4gICAgUmVkaXJlY3RUeXBlW1wicHVzaFwiXSA9IFwicHVzaFwiO1xuICAgIFJlZGlyZWN0VHlwZVtcInJlcGxhY2VcIl0gPSBcInJlcGxhY2VcIjtcbn0pKFJlZGlyZWN0VHlwZSB8fCAoUmVkaXJlY3RUeXBlID0ge30pKTtcbmZ1bmN0aW9uIGdldFJlZGlyZWN0RXJyb3IodXJsLCB0eXBlKSB7XG4gICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoUkVESVJFQ1RfRVJST1JfQ09ERSk7XG4gICAgZXJyb3IuZGlnZXN0ID0gUkVESVJFQ1RfRVJST1JfQ09ERSArIFwiO1wiICsgdHlwZSArIFwiO1wiICsgdXJsO1xuICAgIGNvbnN0IHJlcXVlc3RTdG9yZSA9IF9yZXF1ZXN0YXN5bmNzdG9yYWdlLnJlcXVlc3RBc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAocmVxdWVzdFN0b3JlKSB7XG4gICAgICAgIGVycm9yLm11dGFibGVDb29raWVzID0gcmVxdWVzdFN0b3JlLm11dGFibGVDb29raWVzO1xuICAgIH1cbiAgICByZXR1cm4gZXJyb3I7XG59XG5mdW5jdGlvbiByZWRpcmVjdCh1cmwsIHR5cGUpIHtcbiAgICBpZiAodHlwZSA9PT0gdm9pZCAwKSB0eXBlID0gXCJyZXBsYWNlXCI7XG4gICAgdGhyb3cgZ2V0UmVkaXJlY3RFcnJvcih1cmwsIHR5cGUpO1xufVxuZnVuY3Rpb24gaXNSZWRpcmVjdEVycm9yKGVycm9yKSB7XG4gICAgaWYgKHR5cGVvZiAoZXJyb3IgPT0gbnVsbCA/IHZvaWQgMCA6IGVycm9yLmRpZ2VzdCkgIT09IFwic3RyaW5nXCIpIHJldHVybiBmYWxzZTtcbiAgICBjb25zdCBbZXJyb3JDb2RlLCB0eXBlLCBkZXN0aW5hdGlvbl0gPSBlcnJvci5kaWdlc3Quc3BsaXQoXCI7XCIsIDMpO1xuICAgIHJldHVybiBlcnJvckNvZGUgPT09IFJFRElSRUNUX0VSUk9SX0NPREUgJiYgKHR5cGUgPT09IFwicmVwbGFjZVwiIHx8IHR5cGUgPT09IFwicHVzaFwiKSAmJiB0eXBlb2YgZGVzdGluYXRpb24gPT09IFwic3RyaW5nXCI7XG59XG5mdW5jdGlvbiBnZXRVUkxGcm9tUmVkaXJlY3RFcnJvcihlcnJvcikge1xuICAgIGlmICghaXNSZWRpcmVjdEVycm9yKGVycm9yKSkgcmV0dXJuIG51bGw7XG4gICAgLy8gU2xpY2VzIG9mZiB0aGUgYmVnaW5uaW5nIG9mIHRoZSBkaWdlc3QgdGhhdCBjb250YWlucyB0aGUgY29kZSBhbmQgdGhlXG4gICAgLy8gc2VwYXJhdGluZyAnOycuXG4gICAgcmV0dXJuIGVycm9yLmRpZ2VzdC5zcGxpdChcIjtcIiwgMylbMl07XG59XG5mdW5jdGlvbiBnZXRSZWRpcmVjdFR5cGVGcm9tRXJyb3IoZXJyb3IpIHtcbiAgICBpZiAoIWlzUmVkaXJlY3RFcnJvcihlcnJvcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGEgcmVkaXJlY3QgZXJyb3JcIik7XG4gICAgfVxuICAgIHJldHVybiBlcnJvci5kaWdlc3Quc3BsaXQoXCI7XCIsIDMpWzFdO1xufVxuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWRpcmVjdC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJSZWRpcmVjdFR5cGUiLCJnZXRSZWRpcmVjdEVycm9yIiwicmVkaXJlY3QiLCJpc1JlZGlyZWN0RXJyb3IiLCJnZXRVUkxGcm9tUmVkaXJlY3RFcnJvciIsImdldFJlZGlyZWN0VHlwZUZyb21FcnJvciIsIl9leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZW51bWVyYWJsZSIsImdldCIsIl9yZXF1ZXN0YXN5bmNzdG9yYWdlIiwicmVxdWlyZSIsIlJFRElSRUNUX0VSUk9SX0NPREUiLCJ1cmwiLCJ0eXBlIiwiZXJyb3IiLCJFcnJvciIsImRpZ2VzdCIsInJlcXVlc3RTdG9yZSIsInJlcXVlc3RBc3luY1N0b3JhZ2UiLCJnZXRTdG9yZSIsIm11dGFibGVDb29raWVzIiwiZXJyb3JDb2RlIiwiZGVzdGluYXRpb24iLCJzcGxpdCIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/redirect.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/client/components/static-generation-bailout.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/static-generation-bailout.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"staticGenerationBailout\", ({\n    enumerable: true,\n    get: function() {\n        return staticGenerationBailout;\n    }\n}));\nconst _hooksservercontext = __webpack_require__(/*! ./hooks-server-context */ \"(sc_server)/./node_modules/next/dist/client/components/hooks-server-context.js\");\nconst _staticgenerationasyncstorage = __webpack_require__(/*! ./static-generation-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/static-generation-async-storage.js\");\nclass StaticGenBailoutError extends Error {\n    constructor(...args){\n        super(...args);\n        this.code = \"NEXT_STATIC_GEN_BAILOUT\";\n    }\n}\nconst staticGenerationBailout = (reason, opts)=>{\n    const staticGenerationStore = _staticgenerationasyncstorage.staticGenerationAsyncStorage.getStore();\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.forceStatic) {\n        return true;\n    }\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.dynamicShouldError) {\n        const { dynamic = \"error\", link } = opts || {};\n        const suffix = link ? \" See more info here: \" + link : \"\";\n        throw new StaticGenBailoutError('Page with `dynamic = \"' + dynamic + \"\\\"` couldn't be rendered statically because it used `\" + reason + \"`.\" + suffix);\n    }\n    if (staticGenerationStore) {\n        staticGenerationStore.revalidate = 0;\n    }\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.isStaticGeneration) {\n        const err = new _hooksservercontext.DynamicServerError(reason);\n        staticGenerationStore.dynamicUsageDescription = reason;\n        staticGenerationStore.dynamicUsageStack = err.stack;\n        throw err;\n    }\n    return false;\n};\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=static-generation-bailout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3N0YXRpYy1nZW5lcmF0aW9uLWJhaWxvdXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDJEQUEwRDtJQUN0REksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLHNCQUFzQkMsbUJBQU9BLENBQUMsOEdBQXdCO0FBQzVELE1BQU1DLGdDQUFnQ0QsbUJBQU9BLENBQUMsb0lBQW1DO0FBQ2pGLE1BQU1FLDhCQUE4QkM7SUFDaENDLFlBQVksR0FBR0MsSUFBSSxDQUFDO1FBQ2hCLEtBQUssSUFBSUE7UUFDVCxJQUFJLENBQUNDLE9BQU87SUFDaEI7QUFDSjtBQUNBLE1BQU1SLDBCQUEwQixDQUFDUyxRQUFRQztJQUNyQyxNQUFNQyx3QkFBd0JSLDhCQUE4QlMsNkJBQTZCQztJQUN6RixJQUFJRix5QkFBeUIsT0FBTyxLQUFLLElBQUlBLHNCQUFzQkcsYUFBYTtRQUM1RSxPQUFPO0lBQ1g7SUFDQSxJQUFJSCx5QkFBeUIsT0FBTyxLQUFLLElBQUlBLHNCQUFzQkksb0JBQW9CO1FBQ25GLE1BQU0sRUFBRUMsVUFBUyxPQUFPLEVBQUdDLElBQUksRUFBRyxHQUFHUCxRQUFRLENBQUM7UUFDOUMsTUFBTVEsU0FBU0QsT0FBTywwQkFBMEJBLE9BQU87UUFDdkQsTUFBTSxJQUFJYixzQkFBc0IsMkJBQTJCWSxVQUFVLDBEQUEwRFAsU0FBUyxPQUFPUztJQUNuSjtJQUNBLElBQUlQLHVCQUF1QjtRQUN2QkEsc0JBQXNCUSxhQUFhO0lBQ3ZDO0lBQ0EsSUFBSVIseUJBQXlCLE9BQU8sS0FBSyxJQUFJQSxzQkFBc0JTLG9CQUFvQjtRQUNuRixNQUFNQyxNQUFNLElBQUlwQixvQkFBb0JxQixtQkFBbUJiO1FBQ3ZERSxzQkFBc0JZLDBCQUEwQmQ7UUFDaERFLHNCQUFzQmEsb0JBQW9CSCxJQUFJSTtRQUM5QyxNQUFNSjtJQUNWO0lBQ0EsT0FBTztBQUNYO0FBRUEsSUFBSSxDQUFDLE9BQU96QixRQUFROEIsWUFBWSxjQUFlLE9BQU85QixRQUFROEIsWUFBWSxZQUFZOUIsUUFBUThCLFlBQVksSUFBSSxLQUFNLE9BQU85QixRQUFROEIsUUFBUUMsZUFBZSxhQUFhO0lBQ3JLakMsT0FBT0MsZUFBZUMsUUFBUThCLFNBQVMsY0FBYztRQUFFN0IsT0FBTztJQUFLO0lBQ25FSCxPQUFPa0MsT0FBT2hDLFFBQVE4QixTQUFTOUI7SUFDL0JpQyxPQUFPakMsVUFBVUEsUUFBUThCO0FBQzNCLEVBRUEscURBQXFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcz8wNDZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic3RhdGljR2VuZXJhdGlvbkJhaWxvdXRcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0O1xuICAgIH1cbn0pO1xuY29uc3QgX2hvb2tzc2VydmVyY29udGV4dCA9IHJlcXVpcmUoXCIuL2hvb2tzLXNlcnZlci1jb250ZXh0XCIpO1xuY29uc3QgX3N0YXRpY2dlbmVyYXRpb25hc3luY3N0b3JhZ2UgPSByZXF1aXJlKFwiLi9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlXCIpO1xuY2xhc3MgU3RhdGljR2VuQmFpbG91dEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKC4uLmFyZ3Mpe1xuICAgICAgICBzdXBlciguLi5hcmdzKTtcbiAgICAgICAgdGhpcy5jb2RlID0gXCJORVhUX1NUQVRJQ19HRU5fQkFJTE9VVFwiO1xuICAgIH1cbn1cbmNvbnN0IHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0ID0gKHJlYXNvbiwgb3B0cyk9PntcbiAgICBjb25zdCBzdGF0aWNHZW5lcmF0aW9uU3RvcmUgPSBfc3RhdGljZ2VuZXJhdGlvbmFzeW5jc3RvcmFnZS5zdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKHN0YXRpY0dlbmVyYXRpb25TdG9yZSA9PSBudWxsID8gdm9pZCAwIDogc3RhdGljR2VuZXJhdGlvblN0b3JlLmZvcmNlU3RhdGljKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlID09IG51bGwgPyB2b2lkIDAgOiBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuZHluYW1pY1Nob3VsZEVycm9yKSB7XG4gICAgICAgIGNvbnN0IHsgZHluYW1pYyA9XCJlcnJvclwiICwgbGluayAgfSA9IG9wdHMgfHwge307XG4gICAgICAgIGNvbnN0IHN1ZmZpeCA9IGxpbmsgPyBcIiBTZWUgbW9yZSBpbmZvIGhlcmU6IFwiICsgbGluayA6IFwiXCI7XG4gICAgICAgIHRocm93IG5ldyBTdGF0aWNHZW5CYWlsb3V0RXJyb3IoJ1BhZ2Ugd2l0aCBgZHluYW1pYyA9IFwiJyArIGR5bmFtaWMgKyBcIlxcXCJgIGNvdWxkbid0IGJlIHJlbmRlcmVkIHN0YXRpY2FsbHkgYmVjYXVzZSBpdCB1c2VkIGBcIiArIHJlYXNvbiArIFwiYC5cIiArIHN1ZmZpeCk7XG4gICAgfVxuICAgIGlmIChzdGF0aWNHZW5lcmF0aW9uU3RvcmUpIHtcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvblN0b3JlLnJldmFsaWRhdGUgPSAwO1xuICAgIH1cbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlID09IG51bGwgPyB2b2lkIDAgOiBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuaXNTdGF0aWNHZW5lcmF0aW9uKSB7XG4gICAgICAgIGNvbnN0IGVyciA9IG5ldyBfaG9va3NzZXJ2ZXJjb250ZXh0LkR5bmFtaWNTZXJ2ZXJFcnJvcihyZWFzb24pO1xuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuZHluYW1pY1VzYWdlRGVzY3JpcHRpb24gPSByZWFzb247XG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25TdG9yZS5keW5hbWljVXNhZ2VTdGFjayA9IGVyci5zdGFjaztcbiAgICAgICAgdGhyb3cgZXJyO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59O1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdGF0aWMtZ2VuZXJhdGlvbi1iYWlsb3V0LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCIsIl9ob29rc3NlcnZlcmNvbnRleHQiLCJyZXF1aXJlIiwiX3N0YXRpY2dlbmVyYXRpb25hc3luY3N0b3JhZ2UiLCJTdGF0aWNHZW5CYWlsb3V0RXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiYXJncyIsImNvZGUiLCJyZWFzb24iLCJvcHRzIiwic3RhdGljR2VuZXJhdGlvblN0b3JlIiwic3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSIsImdldFN0b3JlIiwiZm9yY2VTdGF0aWMiLCJkeW5hbWljU2hvdWxkRXJyb3IiLCJkeW5hbWljIiwibGluayIsInN1ZmZpeCIsInJldmFsaWRhdGUiLCJpc1N0YXRpY0dlbmVyYXRpb24iLCJlcnIiLCJEeW5hbWljU2VydmVyRXJyb3IiLCJkeW5hbWljVXNhZ2VEZXNjcmlwdGlvbiIsImR5bmFtaWNVc2FnZVN0YWNrIiwic3RhY2siLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/client/components/static-generation-bailout.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@opentelemetry/api/index.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n(()=>{\n    \"use strict\";\n    var e = {\n        339: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ContextAPI = void 0;\n            const n = r(44);\n            const a = r(38);\n            const o = r(741);\n            const i = \"context\";\n            const c = new n.NoopContextManager;\n            class ContextAPI {\n                constructor(){}\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new ContextAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalContextManager(e) {\n                    return (0, a.registerGlobal)(i, e, o.DiagAPI.instance());\n                }\n                active() {\n                    return this._getContextManager().active();\n                }\n                with(e, t, r, ...n) {\n                    return this._getContextManager().with(e, t, r, ...n);\n                }\n                bind(e, t) {\n                    return this._getContextManager().bind(e, t);\n                }\n                _getContextManager() {\n                    return (0, a.getGlobal)(i) || c;\n                }\n                disable() {\n                    this._getContextManager().disable();\n                    (0, a.unregisterGlobal)(i, o.DiagAPI.instance());\n                }\n            }\n            t.ContextAPI = ContextAPI;\n        },\n        741: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagAPI = void 0;\n            const n = r(144);\n            const a = r(871);\n            const o = r(133);\n            const i = r(38);\n            const c = \"diag\";\n            class DiagAPI {\n                constructor(){\n                    function _logProxy(e) {\n                        return function(...t) {\n                            const r = (0, i.getGlobal)(\"diag\");\n                            if (!r) return;\n                            return r[e](...t);\n                        };\n                    }\n                    const e = this;\n                    const setLogger = (t, r = {\n                        logLevel: o.DiagLogLevel.INFO\n                    })=>{\n                        var n, c, s;\n                        if (t === e) {\n                            const t = new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");\n                            e.error((n = t.stack) !== null && n !== void 0 ? n : t.message);\n                            return false;\n                        }\n                        if (typeof r === \"number\") {\n                            r = {\n                                logLevel: r\n                            };\n                        }\n                        const u = (0, i.getGlobal)(\"diag\");\n                        const l = (0, a.createLogLevelDiagLogger)((c = r.logLevel) !== null && c !== void 0 ? c : o.DiagLogLevel.INFO, t);\n                        if (u && !r.suppressOverrideMessage) {\n                            const e = (s = (new Error).stack) !== null && s !== void 0 ? s : \"<failed to generate stacktrace>\";\n                            u.warn(`Current logger will be overwritten from ${e}`);\n                            l.warn(`Current logger will overwrite one already registered from ${e}`);\n                        }\n                        return (0, i.registerGlobal)(\"diag\", l, e, true);\n                    };\n                    e.setLogger = setLogger;\n                    e.disable = ()=>{\n                        (0, i.unregisterGlobal)(c, e);\n                    };\n                    e.createComponentLogger = (e)=>new n.DiagComponentLogger(e);\n                    e.verbose = _logProxy(\"verbose\");\n                    e.debug = _logProxy(\"debug\");\n                    e.info = _logProxy(\"info\");\n                    e.warn = _logProxy(\"warn\");\n                    e.error = _logProxy(\"error\");\n                }\n                static instance() {\n                    if (!this._instance) {\n                        this._instance = new DiagAPI;\n                    }\n                    return this._instance;\n                }\n            }\n            t.DiagAPI = DiagAPI;\n        },\n        128: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.MetricsAPI = void 0;\n            const n = r(333);\n            const a = r(38);\n            const o = r(741);\n            const i = \"metrics\";\n            class MetricsAPI {\n                constructor(){}\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new MetricsAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalMeterProvider(e) {\n                    return (0, a.registerGlobal)(i, e, o.DiagAPI.instance());\n                }\n                getMeterProvider() {\n                    return (0, a.getGlobal)(i) || n.NOOP_METER_PROVIDER;\n                }\n                getMeter(e, t, r) {\n                    return this.getMeterProvider().getMeter(e, t, r);\n                }\n                disable() {\n                    (0, a.unregisterGlobal)(i, o.DiagAPI.instance());\n                }\n            }\n            t.MetricsAPI = MetricsAPI;\n        },\n        930: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.PropagationAPI = void 0;\n            const n = r(38);\n            const a = r(600);\n            const o = r(625);\n            const i = r(377);\n            const c = r(701);\n            const s = r(741);\n            const u = \"propagation\";\n            const l = new a.NoopTextMapPropagator;\n            class PropagationAPI {\n                constructor(){\n                    this.createBaggage = c.createBaggage;\n                    this.getBaggage = i.getBaggage;\n                    this.getActiveBaggage = i.getActiveBaggage;\n                    this.setBaggage = i.setBaggage;\n                    this.deleteBaggage = i.deleteBaggage;\n                }\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new PropagationAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalPropagator(e) {\n                    return (0, n.registerGlobal)(u, e, s.DiagAPI.instance());\n                }\n                inject(e, t, r = o.defaultTextMapSetter) {\n                    return this._getGlobalPropagator().inject(e, t, r);\n                }\n                extract(e, t, r = o.defaultTextMapGetter) {\n                    return this._getGlobalPropagator().extract(e, t, r);\n                }\n                fields() {\n                    return this._getGlobalPropagator().fields();\n                }\n                disable() {\n                    (0, n.unregisterGlobal)(u, s.DiagAPI.instance());\n                }\n                _getGlobalPropagator() {\n                    return (0, n.getGlobal)(u) || l;\n                }\n            }\n            t.PropagationAPI = PropagationAPI;\n        },\n        967: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.TraceAPI = void 0;\n            const n = r(38);\n            const a = r(414);\n            const o = r(994);\n            const i = r(542);\n            const c = r(741);\n            const s = \"trace\";\n            class TraceAPI {\n                constructor(){\n                    this._proxyTracerProvider = new a.ProxyTracerProvider;\n                    this.wrapSpanContext = o.wrapSpanContext;\n                    this.isSpanContextValid = o.isSpanContextValid;\n                    this.deleteSpan = i.deleteSpan;\n                    this.getSpan = i.getSpan;\n                    this.getActiveSpan = i.getActiveSpan;\n                    this.getSpanContext = i.getSpanContext;\n                    this.setSpan = i.setSpan;\n                    this.setSpanContext = i.setSpanContext;\n                }\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new TraceAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalTracerProvider(e) {\n                    const t = (0, n.registerGlobal)(s, this._proxyTracerProvider, c.DiagAPI.instance());\n                    if (t) {\n                        this._proxyTracerProvider.setDelegate(e);\n                    }\n                    return t;\n                }\n                getTracerProvider() {\n                    return (0, n.getGlobal)(s) || this._proxyTracerProvider;\n                }\n                getTracer(e, t) {\n                    return this.getTracerProvider().getTracer(e, t);\n                }\n                disable() {\n                    (0, n.unregisterGlobal)(s, c.DiagAPI.instance());\n                    this._proxyTracerProvider = new a.ProxyTracerProvider;\n                }\n            }\n            t.TraceAPI = TraceAPI;\n        },\n        377: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.deleteBaggage = t.setBaggage = t.getActiveBaggage = t.getBaggage = void 0;\n            const n = r(339);\n            const a = r(421);\n            const o = (0, a.createContextKey)(\"OpenTelemetry Baggage Key\");\n            function getBaggage(e) {\n                return e.getValue(o) || undefined;\n            }\n            t.getBaggage = getBaggage;\n            function getActiveBaggage() {\n                return getBaggage(n.ContextAPI.getInstance().active());\n            }\n            t.getActiveBaggage = getActiveBaggage;\n            function setBaggage(e, t) {\n                return e.setValue(o, t);\n            }\n            t.setBaggage = setBaggage;\n            function deleteBaggage(e) {\n                return e.deleteValue(o);\n            }\n            t.deleteBaggage = deleteBaggage;\n        },\n        496: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.BaggageImpl = void 0;\n            class BaggageImpl {\n                constructor(e){\n                    this._entries = e ? new Map(e) : new Map;\n                }\n                getEntry(e) {\n                    const t = this._entries.get(e);\n                    if (!t) {\n                        return undefined;\n                    }\n                    return Object.assign({}, t);\n                }\n                getAllEntries() {\n                    return Array.from(this._entries.entries()).map(([e, t])=>[\n                            e,\n                            t\n                        ]);\n                }\n                setEntry(e, t) {\n                    const r = new BaggageImpl(this._entries);\n                    r._entries.set(e, t);\n                    return r;\n                }\n                removeEntry(e) {\n                    const t = new BaggageImpl(this._entries);\n                    t._entries.delete(e);\n                    return t;\n                }\n                removeEntries(...e) {\n                    const t = new BaggageImpl(this._entries);\n                    for (const r of e){\n                        t._entries.delete(r);\n                    }\n                    return t;\n                }\n                clear() {\n                    return new BaggageImpl;\n                }\n            }\n            t.BaggageImpl = BaggageImpl;\n        },\n        817: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.baggageEntryMetadataSymbol = void 0;\n            t.baggageEntryMetadataSymbol = Symbol(\"BaggageEntryMetadata\");\n        },\n        701: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.baggageEntryMetadataFromString = t.createBaggage = void 0;\n            const n = r(741);\n            const a = r(496);\n            const o = r(817);\n            const i = n.DiagAPI.instance();\n            function createBaggage(e = {}) {\n                return new a.BaggageImpl(new Map(Object.entries(e)));\n            }\n            t.createBaggage = createBaggage;\n            function baggageEntryMetadataFromString(e) {\n                if (typeof e !== \"string\") {\n                    i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);\n                    e = \"\";\n                }\n                return {\n                    __TYPE__: o.baggageEntryMetadataSymbol,\n                    toString () {\n                        return e;\n                    }\n                };\n            }\n            t.baggageEntryMetadataFromString = baggageEntryMetadataFromString;\n        },\n        388: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.context = void 0;\n            const n = r(339);\n            t.context = n.ContextAPI.getInstance();\n        },\n        44: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopContextManager = void 0;\n            const n = r(421);\n            class NoopContextManager {\n                active() {\n                    return n.ROOT_CONTEXT;\n                }\n                with(e, t, r, ...n) {\n                    return t.call(r, ...n);\n                }\n                bind(e, t) {\n                    return t;\n                }\n                enable() {\n                    return this;\n                }\n                disable() {\n                    return this;\n                }\n            }\n            t.NoopContextManager = NoopContextManager;\n        },\n        421: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ROOT_CONTEXT = t.createContextKey = void 0;\n            function createContextKey(e) {\n                return Symbol.for(e);\n            }\n            t.createContextKey = createContextKey;\n            class BaseContext {\n                constructor(e){\n                    const t = this;\n                    t._currentContext = e ? new Map(e) : new Map;\n                    t.getValue = (e)=>t._currentContext.get(e);\n                    t.setValue = (e, r)=>{\n                        const n = new BaseContext(t._currentContext);\n                        n._currentContext.set(e, r);\n                        return n;\n                    };\n                    t.deleteValue = (e)=>{\n                        const r = new BaseContext(t._currentContext);\n                        r._currentContext.delete(e);\n                        return r;\n                    };\n                }\n            }\n            t.ROOT_CONTEXT = new BaseContext;\n        },\n        920: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.diag = void 0;\n            const n = r(741);\n            t.diag = n.DiagAPI.instance();\n        },\n        144: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagComponentLogger = void 0;\n            const n = r(38);\n            class DiagComponentLogger {\n                constructor(e){\n                    this._namespace = e.namespace || \"DiagComponentLogger\";\n                }\n                debug(...e) {\n                    return logProxy(\"debug\", this._namespace, e);\n                }\n                error(...e) {\n                    return logProxy(\"error\", this._namespace, e);\n                }\n                info(...e) {\n                    return logProxy(\"info\", this._namespace, e);\n                }\n                warn(...e) {\n                    return logProxy(\"warn\", this._namespace, e);\n                }\n                verbose(...e) {\n                    return logProxy(\"verbose\", this._namespace, e);\n                }\n            }\n            t.DiagComponentLogger = DiagComponentLogger;\n            function logProxy(e, t, r) {\n                const a = (0, n.getGlobal)(\"diag\");\n                if (!a) {\n                    return;\n                }\n                r.unshift(t);\n                return a[e](...r);\n            }\n        },\n        689: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagConsoleLogger = void 0;\n            const r = [\n                {\n                    n: \"error\",\n                    c: \"error\"\n                },\n                {\n                    n: \"warn\",\n                    c: \"warn\"\n                },\n                {\n                    n: \"info\",\n                    c: \"info\"\n                },\n                {\n                    n: \"debug\",\n                    c: \"debug\"\n                },\n                {\n                    n: \"verbose\",\n                    c: \"trace\"\n                }\n            ];\n            class DiagConsoleLogger {\n                constructor(){\n                    function _consoleFunc(e) {\n                        return function(...t) {\n                            if (console) {\n                                let r = console[e];\n                                if (typeof r !== \"function\") {\n                                    r = console.log;\n                                }\n                                if (typeof r === \"function\") {\n                                    return r.apply(console, t);\n                                }\n                            }\n                        };\n                    }\n                    for(let e = 0; e < r.length; e++){\n                        this[r[e].n] = _consoleFunc(r[e].c);\n                    }\n                }\n            }\n            t.DiagConsoleLogger = DiagConsoleLogger;\n        },\n        871: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.createLogLevelDiagLogger = void 0;\n            const n = r(133);\n            function createLogLevelDiagLogger(e, t) {\n                if (e < n.DiagLogLevel.NONE) {\n                    e = n.DiagLogLevel.NONE;\n                } else if (e > n.DiagLogLevel.ALL) {\n                    e = n.DiagLogLevel.ALL;\n                }\n                t = t || {};\n                function _filterFunc(r, n) {\n                    const a = t[r];\n                    if (typeof a === \"function\" && e >= n) {\n                        return a.bind(t);\n                    }\n                    return function() {};\n                }\n                return {\n                    error: _filterFunc(\"error\", n.DiagLogLevel.ERROR),\n                    warn: _filterFunc(\"warn\", n.DiagLogLevel.WARN),\n                    info: _filterFunc(\"info\", n.DiagLogLevel.INFO),\n                    debug: _filterFunc(\"debug\", n.DiagLogLevel.DEBUG),\n                    verbose: _filterFunc(\"verbose\", n.DiagLogLevel.VERBOSE)\n                };\n            }\n            t.createLogLevelDiagLogger = createLogLevelDiagLogger;\n        },\n        133: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagLogLevel = void 0;\n            var r;\n            (function(e) {\n                e[e[\"NONE\"] = 0] = \"NONE\";\n                e[e[\"ERROR\"] = 30] = \"ERROR\";\n                e[e[\"WARN\"] = 50] = \"WARN\";\n                e[e[\"INFO\"] = 60] = \"INFO\";\n                e[e[\"DEBUG\"] = 70] = \"DEBUG\";\n                e[e[\"VERBOSE\"] = 80] = \"VERBOSE\";\n                e[e[\"ALL\"] = 9999] = \"ALL\";\n            })(r = t.DiagLogLevel || (t.DiagLogLevel = {}));\n        },\n        38: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.unregisterGlobal = t.getGlobal = t.registerGlobal = void 0;\n            const n = r(966);\n            const a = r(520);\n            const o = r(565);\n            const i = a.VERSION.split(\".\")[0];\n            const c = Symbol.for(`opentelemetry.js.api.${i}`);\n            const s = n._globalThis;\n            function registerGlobal(e, t, r, n = false) {\n                var o;\n                const i = s[c] = (o = s[c]) !== null && o !== void 0 ? o : {\n                    version: a.VERSION\n                };\n                if (!n && i[e]) {\n                    const t = new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);\n                    r.error(t.stack || t.message);\n                    return false;\n                }\n                if (i.version !== a.VERSION) {\n                    const t = new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);\n                    r.error(t.stack || t.message);\n                    return false;\n                }\n                i[e] = t;\n                r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);\n                return true;\n            }\n            t.registerGlobal = registerGlobal;\n            function getGlobal(e) {\n                var t, r;\n                const n = (t = s[c]) === null || t === void 0 ? void 0 : t.version;\n                if (!n || !(0, o.isCompatible)(n)) {\n                    return;\n                }\n                return (r = s[c]) === null || r === void 0 ? void 0 : r[e];\n            }\n            t.getGlobal = getGlobal;\n            function unregisterGlobal(e, t) {\n                t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);\n                const r = s[c];\n                if (r) {\n                    delete r[e];\n                }\n            }\n            t.unregisterGlobal = unregisterGlobal;\n        },\n        565: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.isCompatible = t._makeCompatibilityCheck = void 0;\n            const n = r(520);\n            const a = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n            function _makeCompatibilityCheck(e) {\n                const t = new Set([\n                    e\n                ]);\n                const r = new Set;\n                const n = e.match(a);\n                if (!n) {\n                    return ()=>false;\n                }\n                const o = {\n                    major: +n[1],\n                    minor: +n[2],\n                    patch: +n[3],\n                    prerelease: n[4]\n                };\n                if (o.prerelease != null) {\n                    return function isExactmatch(t) {\n                        return t === e;\n                    };\n                }\n                function _reject(e) {\n                    r.add(e);\n                    return false;\n                }\n                function _accept(e) {\n                    t.add(e);\n                    return true;\n                }\n                return function isCompatible(e) {\n                    if (t.has(e)) {\n                        return true;\n                    }\n                    if (r.has(e)) {\n                        return false;\n                    }\n                    const n = e.match(a);\n                    if (!n) {\n                        return _reject(e);\n                    }\n                    const i = {\n                        major: +n[1],\n                        minor: +n[2],\n                        patch: +n[3],\n                        prerelease: n[4]\n                    };\n                    if (i.prerelease != null) {\n                        return _reject(e);\n                    }\n                    if (o.major !== i.major) {\n                        return _reject(e);\n                    }\n                    if (o.major === 0) {\n                        if (o.minor === i.minor && o.patch <= i.patch) {\n                            return _accept(e);\n                        }\n                        return _reject(e);\n                    }\n                    if (o.minor <= i.minor) {\n                        return _accept(e);\n                    }\n                    return _reject(e);\n                };\n            }\n            t._makeCompatibilityCheck = _makeCompatibilityCheck;\n            t.isCompatible = _makeCompatibilityCheck(n.VERSION);\n        },\n        934: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.metrics = void 0;\n            const n = r(128);\n            t.metrics = n.MetricsAPI.getInstance();\n        },\n        28: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ValueType = void 0;\n            var r;\n            (function(e) {\n                e[e[\"INT\"] = 0] = \"INT\";\n                e[e[\"DOUBLE\"] = 1] = \"DOUBLE\";\n            })(r = t.ValueType || (t.ValueType = {}));\n        },\n        962: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.createNoopMeter = t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = t.NOOP_OBSERVABLE_GAUGE_METRIC = t.NOOP_OBSERVABLE_COUNTER_METRIC = t.NOOP_UP_DOWN_COUNTER_METRIC = t.NOOP_HISTOGRAM_METRIC = t.NOOP_COUNTER_METRIC = t.NOOP_METER = t.NoopObservableUpDownCounterMetric = t.NoopObservableGaugeMetric = t.NoopObservableCounterMetric = t.NoopObservableMetric = t.NoopHistogramMetric = t.NoopUpDownCounterMetric = t.NoopCounterMetric = t.NoopMetric = t.NoopMeter = void 0;\n            class NoopMeter {\n                constructor(){}\n                createHistogram(e, r) {\n                    return t.NOOP_HISTOGRAM_METRIC;\n                }\n                createCounter(e, r) {\n                    return t.NOOP_COUNTER_METRIC;\n                }\n                createUpDownCounter(e, r) {\n                    return t.NOOP_UP_DOWN_COUNTER_METRIC;\n                }\n                createObservableGauge(e, r) {\n                    return t.NOOP_OBSERVABLE_GAUGE_METRIC;\n                }\n                createObservableCounter(e, r) {\n                    return t.NOOP_OBSERVABLE_COUNTER_METRIC;\n                }\n                createObservableUpDownCounter(e, r) {\n                    return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n                }\n                addBatchObservableCallback(e, t) {}\n                removeBatchObservableCallback(e) {}\n            }\n            t.NoopMeter = NoopMeter;\n            class NoopMetric {\n            }\n            t.NoopMetric = NoopMetric;\n            class NoopCounterMetric extends NoopMetric {\n                add(e, t) {}\n            }\n            t.NoopCounterMetric = NoopCounterMetric;\n            class NoopUpDownCounterMetric extends NoopMetric {\n                add(e, t) {}\n            }\n            t.NoopUpDownCounterMetric = NoopUpDownCounterMetric;\n            class NoopHistogramMetric extends NoopMetric {\n                record(e, t) {}\n            }\n            t.NoopHistogramMetric = NoopHistogramMetric;\n            class NoopObservableMetric {\n                addCallback(e) {}\n                removeCallback(e) {}\n            }\n            t.NoopObservableMetric = NoopObservableMetric;\n            class NoopObservableCounterMetric extends NoopObservableMetric {\n            }\n            t.NoopObservableCounterMetric = NoopObservableCounterMetric;\n            class NoopObservableGaugeMetric extends NoopObservableMetric {\n            }\n            t.NoopObservableGaugeMetric = NoopObservableGaugeMetric;\n            class NoopObservableUpDownCounterMetric extends NoopObservableMetric {\n            }\n            t.NoopObservableUpDownCounterMetric = NoopObservableUpDownCounterMetric;\n            t.NOOP_METER = new NoopMeter;\n            t.NOOP_COUNTER_METRIC = new NoopCounterMetric;\n            t.NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric;\n            t.NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric;\n            t.NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric;\n            t.NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric;\n            t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric;\n            function createNoopMeter() {\n                return t.NOOP_METER;\n            }\n            t.createNoopMeter = createNoopMeter;\n        },\n        333: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NOOP_METER_PROVIDER = t.NoopMeterProvider = void 0;\n            const n = r(962);\n            class NoopMeterProvider {\n                getMeter(e, t, r) {\n                    return n.NOOP_METER;\n                }\n            }\n            t.NoopMeterProvider = NoopMeterProvider;\n            t.NOOP_METER_PROVIDER = new NoopMeterProvider;\n        },\n        966: function(e, t, r) {\n            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {\n                if (n === undefined) n = r;\n                Object.defineProperty(e, n, {\n                    enumerable: true,\n                    get: function() {\n                        return t[r];\n                    }\n                });\n            } : function(e, t, r, n) {\n                if (n === undefined) n = r;\n                e[n] = t[r];\n            });\n            var a = this && this.__exportStar || function(e, t) {\n                for(var r in e)if (r !== \"default\" && !Object.prototype.hasOwnProperty.call(t, r)) n(t, e, r);\n            };\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            a(r(652), t);\n        },\n        385: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t._globalThis = void 0;\n            t._globalThis = typeof globalThis === \"object\" ? globalThis : global;\n        },\n        652: function(e, t, r) {\n            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {\n                if (n === undefined) n = r;\n                Object.defineProperty(e, n, {\n                    enumerable: true,\n                    get: function() {\n                        return t[r];\n                    }\n                });\n            } : function(e, t, r, n) {\n                if (n === undefined) n = r;\n                e[n] = t[r];\n            });\n            var a = this && this.__exportStar || function(e, t) {\n                for(var r in e)if (r !== \"default\" && !Object.prototype.hasOwnProperty.call(t, r)) n(t, e, r);\n            };\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            a(r(385), t);\n        },\n        251: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.propagation = void 0;\n            const n = r(930);\n            t.propagation = n.PropagationAPI.getInstance();\n        },\n        600: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopTextMapPropagator = void 0;\n            class NoopTextMapPropagator {\n                inject(e, t) {}\n                extract(e, t) {\n                    return e;\n                }\n                fields() {\n                    return [];\n                }\n            }\n            t.NoopTextMapPropagator = NoopTextMapPropagator;\n        },\n        625: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.defaultTextMapSetter = t.defaultTextMapGetter = void 0;\n            t.defaultTextMapGetter = {\n                get (e, t) {\n                    if (e == null) {\n                        return undefined;\n                    }\n                    return e[t];\n                },\n                keys (e) {\n                    if (e == null) {\n                        return [];\n                    }\n                    return Object.keys(e);\n                }\n            };\n            t.defaultTextMapSetter = {\n                set (e, t, r) {\n                    if (e == null) {\n                        return;\n                    }\n                    e[t] = r;\n                }\n            };\n        },\n        978: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.trace = void 0;\n            const n = r(967);\n            t.trace = n.TraceAPI.getInstance();\n        },\n        76: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NonRecordingSpan = void 0;\n            const n = r(304);\n            class NonRecordingSpan {\n                constructor(e = n.INVALID_SPAN_CONTEXT){\n                    this._spanContext = e;\n                }\n                spanContext() {\n                    return this._spanContext;\n                }\n                setAttribute(e, t) {\n                    return this;\n                }\n                setAttributes(e) {\n                    return this;\n                }\n                addEvent(e, t) {\n                    return this;\n                }\n                setStatus(e) {\n                    return this;\n                }\n                updateName(e) {\n                    return this;\n                }\n                end(e) {}\n                isRecording() {\n                    return false;\n                }\n                recordException(e, t) {}\n            }\n            t.NonRecordingSpan = NonRecordingSpan;\n        },\n        527: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopTracer = void 0;\n            const n = r(339);\n            const a = r(542);\n            const o = r(76);\n            const i = r(994);\n            const c = n.ContextAPI.getInstance();\n            class NoopTracer {\n                startSpan(e, t, r = c.active()) {\n                    const n = Boolean(t === null || t === void 0 ? void 0 : t.root);\n                    if (n) {\n                        return new o.NonRecordingSpan;\n                    }\n                    const s = r && (0, a.getSpanContext)(r);\n                    if (isSpanContext(s) && (0, i.isSpanContextValid)(s)) {\n                        return new o.NonRecordingSpan(s);\n                    } else {\n                        return new o.NonRecordingSpan;\n                    }\n                }\n                startActiveSpan(e, t, r, n) {\n                    let o;\n                    let i;\n                    let s;\n                    if (arguments.length < 2) {\n                        return;\n                    } else if (arguments.length === 2) {\n                        s = t;\n                    } else if (arguments.length === 3) {\n                        o = t;\n                        s = r;\n                    } else {\n                        o = t;\n                        i = r;\n                        s = n;\n                    }\n                    const u = i !== null && i !== void 0 ? i : c.active();\n                    const l = this.startSpan(e, o, u);\n                    const g = (0, a.setSpan)(u, l);\n                    return c.with(g, s, undefined, l);\n                }\n            }\n            t.NoopTracer = NoopTracer;\n            function isSpanContext(e) {\n                return typeof e === \"object\" && typeof e[\"spanId\"] === \"string\" && typeof e[\"traceId\"] === \"string\" && typeof e[\"traceFlags\"] === \"number\";\n            }\n        },\n        228: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopTracerProvider = void 0;\n            const n = r(527);\n            class NoopTracerProvider {\n                getTracer(e, t, r) {\n                    return new n.NoopTracer;\n                }\n            }\n            t.NoopTracerProvider = NoopTracerProvider;\n        },\n        387: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ProxyTracer = void 0;\n            const n = r(527);\n            const a = new n.NoopTracer;\n            class ProxyTracer {\n                constructor(e, t, r, n){\n                    this._provider = e;\n                    this.name = t;\n                    this.version = r;\n                    this.options = n;\n                }\n                startSpan(e, t, r) {\n                    return this._getTracer().startSpan(e, t, r);\n                }\n                startActiveSpan(e, t, r, n) {\n                    const a = this._getTracer();\n                    return Reflect.apply(a.startActiveSpan, a, arguments);\n                }\n                _getTracer() {\n                    if (this._delegate) {\n                        return this._delegate;\n                    }\n                    const e = this._provider.getDelegateTracer(this.name, this.version, this.options);\n                    if (!e) {\n                        return a;\n                    }\n                    this._delegate = e;\n                    return this._delegate;\n                }\n            }\n            t.ProxyTracer = ProxyTracer;\n        },\n        414: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ProxyTracerProvider = void 0;\n            const n = r(387);\n            const a = r(228);\n            const o = new a.NoopTracerProvider;\n            class ProxyTracerProvider {\n                getTracer(e, t, r) {\n                    var a;\n                    return (a = this.getDelegateTracer(e, t, r)) !== null && a !== void 0 ? a : new n.ProxyTracer(this, e, t, r);\n                }\n                getDelegate() {\n                    var e;\n                    return (e = this._delegate) !== null && e !== void 0 ? e : o;\n                }\n                setDelegate(e) {\n                    this._delegate = e;\n                }\n                getDelegateTracer(e, t, r) {\n                    var n;\n                    return (n = this._delegate) === null || n === void 0 ? void 0 : n.getTracer(e, t, r);\n                }\n            }\n            t.ProxyTracerProvider = ProxyTracerProvider;\n        },\n        505: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.SamplingDecision = void 0;\n            var r;\n            (function(e) {\n                e[e[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n                e[e[\"RECORD\"] = 1] = \"RECORD\";\n                e[e[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n            })(r = t.SamplingDecision || (t.SamplingDecision = {}));\n        },\n        542: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.getSpanContext = t.setSpanContext = t.deleteSpan = t.setSpan = t.getActiveSpan = t.getSpan = void 0;\n            const n = r(421);\n            const a = r(76);\n            const o = r(339);\n            const i = (0, n.createContextKey)(\"OpenTelemetry Context Key SPAN\");\n            function getSpan(e) {\n                return e.getValue(i) || undefined;\n            }\n            t.getSpan = getSpan;\n            function getActiveSpan() {\n                return getSpan(o.ContextAPI.getInstance().active());\n            }\n            t.getActiveSpan = getActiveSpan;\n            function setSpan(e, t) {\n                return e.setValue(i, t);\n            }\n            t.setSpan = setSpan;\n            function deleteSpan(e) {\n                return e.deleteValue(i);\n            }\n            t.deleteSpan = deleteSpan;\n            function setSpanContext(e, t) {\n                return setSpan(e, new a.NonRecordingSpan(t));\n            }\n            t.setSpanContext = setSpanContext;\n            function getSpanContext(e) {\n                var t;\n                return (t = getSpan(e)) === null || t === void 0 ? void 0 : t.spanContext();\n            }\n            t.getSpanContext = getSpanContext;\n        },\n        430: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.TraceStateImpl = void 0;\n            const n = r(450);\n            const a = 32;\n            const o = 512;\n            const i = \",\";\n            const c = \"=\";\n            class TraceStateImpl {\n                constructor(e){\n                    this._internalState = new Map;\n                    if (e) this._parse(e);\n                }\n                set(e, t) {\n                    const r = this._clone();\n                    if (r._internalState.has(e)) {\n                        r._internalState.delete(e);\n                    }\n                    r._internalState.set(e, t);\n                    return r;\n                }\n                unset(e) {\n                    const t = this._clone();\n                    t._internalState.delete(e);\n                    return t;\n                }\n                get(e) {\n                    return this._internalState.get(e);\n                }\n                serialize() {\n                    return this._keys().reduce((e, t)=>{\n                        e.push(t + c + this.get(t));\n                        return e;\n                    }, []).join(i);\n                }\n                _parse(e) {\n                    if (e.length > o) return;\n                    this._internalState = e.split(i).reverse().reduce((e, t)=>{\n                        const r = t.trim();\n                        const a = r.indexOf(c);\n                        if (a !== -1) {\n                            const o = r.slice(0, a);\n                            const i = r.slice(a + 1, t.length);\n                            if ((0, n.validateKey)(o) && (0, n.validateValue)(i)) {\n                                e.set(o, i);\n                            } else {}\n                        }\n                        return e;\n                    }, new Map);\n                    if (this._internalState.size > a) {\n                        this._internalState = new Map(Array.from(this._internalState.entries()).reverse().slice(0, a));\n                    }\n                }\n                _keys() {\n                    return Array.from(this._internalState.keys()).reverse();\n                }\n                _clone() {\n                    const e = new TraceStateImpl;\n                    e._internalState = new Map(this._internalState);\n                    return e;\n                }\n            }\n            t.TraceStateImpl = TraceStateImpl;\n        },\n        450: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.validateValue = t.validateKey = void 0;\n            const r = \"[_0-9a-z-*/]\";\n            const n = `[a-z]${r}{0,255}`;\n            const a = `[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;\n            const o = new RegExp(`^(?:${n}|${a})$`);\n            const i = /^[ -~]{0,255}[!-~]$/;\n            const c = /,|=/;\n            function validateKey(e) {\n                return o.test(e);\n            }\n            t.validateKey = validateKey;\n            function validateValue(e) {\n                return i.test(e) && !c.test(e);\n            }\n            t.validateValue = validateValue;\n        },\n        757: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.createTraceState = void 0;\n            const n = r(430);\n            function createTraceState(e) {\n                return new n.TraceStateImpl(e);\n            }\n            t.createTraceState = createTraceState;\n        },\n        304: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.INVALID_SPAN_CONTEXT = t.INVALID_TRACEID = t.INVALID_SPANID = void 0;\n            const n = r(762);\n            t.INVALID_SPANID = \"0000000000000000\";\n            t.INVALID_TRACEID = \"00000000000000000000000000000000\";\n            t.INVALID_SPAN_CONTEXT = {\n                traceId: t.INVALID_TRACEID,\n                spanId: t.INVALID_SPANID,\n                traceFlags: n.TraceFlags.NONE\n            };\n        },\n        902: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.SpanKind = void 0;\n            var r;\n            (function(e) {\n                e[e[\"INTERNAL\"] = 0] = \"INTERNAL\";\n                e[e[\"SERVER\"] = 1] = \"SERVER\";\n                e[e[\"CLIENT\"] = 2] = \"CLIENT\";\n                e[e[\"PRODUCER\"] = 3] = \"PRODUCER\";\n                e[e[\"CONSUMER\"] = 4] = \"CONSUMER\";\n            })(r = t.SpanKind || (t.SpanKind = {}));\n        },\n        994: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.wrapSpanContext = t.isSpanContextValid = t.isValidSpanId = t.isValidTraceId = void 0;\n            const n = r(304);\n            const a = r(76);\n            const o = /^([0-9a-f]{32})$/i;\n            const i = /^[0-9a-f]{16}$/i;\n            function isValidTraceId(e) {\n                return o.test(e) && e !== n.INVALID_TRACEID;\n            }\n            t.isValidTraceId = isValidTraceId;\n            function isValidSpanId(e) {\n                return i.test(e) && e !== n.INVALID_SPANID;\n            }\n            t.isValidSpanId = isValidSpanId;\n            function isSpanContextValid(e) {\n                return isValidTraceId(e.traceId) && isValidSpanId(e.spanId);\n            }\n            t.isSpanContextValid = isSpanContextValid;\n            function wrapSpanContext(e) {\n                return new a.NonRecordingSpan(e);\n            }\n            t.wrapSpanContext = wrapSpanContext;\n        },\n        832: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.SpanStatusCode = void 0;\n            var r;\n            (function(e) {\n                e[e[\"UNSET\"] = 0] = \"UNSET\";\n                e[e[\"OK\"] = 1] = \"OK\";\n                e[e[\"ERROR\"] = 2] = \"ERROR\";\n            })(r = t.SpanStatusCode || (t.SpanStatusCode = {}));\n        },\n        762: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.TraceFlags = void 0;\n            var r;\n            (function(e) {\n                e[e[\"NONE\"] = 0] = \"NONE\";\n                e[e[\"SAMPLED\"] = 1] = \"SAMPLED\";\n            })(r = t.TraceFlags || (t.TraceFlags = {}));\n        },\n        520: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.VERSION = void 0;\n            t.VERSION = \"1.4.1\";\n        }\n    };\n    var t = {};\n    function __nccwpck_require__(r) {\n        var n = t[r];\n        if (n !== undefined) {\n            return n.exports;\n        }\n        var a = t[r] = {\n            exports: {}\n        };\n        var o = true;\n        try {\n            e[r].call(a.exports, a, a.exports, __nccwpck_require__);\n            o = false;\n        } finally{\n            if (o) delete t[r];\n        }\n        return a.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var r = {};\n    (()=>{\n        var e = r;\n        Object.defineProperty(e, \"__esModule\", {\n            value: true\n        });\n        e.trace = e.propagation = e.metrics = e.diag = e.context = e.INVALID_SPAN_CONTEXT = e.INVALID_TRACEID = e.INVALID_SPANID = e.isValidSpanId = e.isValidTraceId = e.isSpanContextValid = e.createTraceState = e.TraceFlags = e.SpanStatusCode = e.SpanKind = e.SamplingDecision = e.ProxyTracerProvider = e.ProxyTracer = e.defaultTextMapSetter = e.defaultTextMapGetter = e.ValueType = e.createNoopMeter = e.DiagLogLevel = e.DiagConsoleLogger = e.ROOT_CONTEXT = e.createContextKey = e.baggageEntryMetadataFromString = void 0;\n        var t = __nccwpck_require__(701);\n        Object.defineProperty(e, \"baggageEntryMetadataFromString\", {\n            enumerable: true,\n            get: function() {\n                return t.baggageEntryMetadataFromString;\n            }\n        });\n        var n = __nccwpck_require__(421);\n        Object.defineProperty(e, \"createContextKey\", {\n            enumerable: true,\n            get: function() {\n                return n.createContextKey;\n            }\n        });\n        Object.defineProperty(e, \"ROOT_CONTEXT\", {\n            enumerable: true,\n            get: function() {\n                return n.ROOT_CONTEXT;\n            }\n        });\n        var a = __nccwpck_require__(689);\n        Object.defineProperty(e, \"DiagConsoleLogger\", {\n            enumerable: true,\n            get: function() {\n                return a.DiagConsoleLogger;\n            }\n        });\n        var o = __nccwpck_require__(133);\n        Object.defineProperty(e, \"DiagLogLevel\", {\n            enumerable: true,\n            get: function() {\n                return o.DiagLogLevel;\n            }\n        });\n        var i = __nccwpck_require__(962);\n        Object.defineProperty(e, \"createNoopMeter\", {\n            enumerable: true,\n            get: function() {\n                return i.createNoopMeter;\n            }\n        });\n        var c = __nccwpck_require__(28);\n        Object.defineProperty(e, \"ValueType\", {\n            enumerable: true,\n            get: function() {\n                return c.ValueType;\n            }\n        });\n        var s = __nccwpck_require__(625);\n        Object.defineProperty(e, \"defaultTextMapGetter\", {\n            enumerable: true,\n            get: function() {\n                return s.defaultTextMapGetter;\n            }\n        });\n        Object.defineProperty(e, \"defaultTextMapSetter\", {\n            enumerable: true,\n            get: function() {\n                return s.defaultTextMapSetter;\n            }\n        });\n        var u = __nccwpck_require__(387);\n        Object.defineProperty(e, \"ProxyTracer\", {\n            enumerable: true,\n            get: function() {\n                return u.ProxyTracer;\n            }\n        });\n        var l = __nccwpck_require__(414);\n        Object.defineProperty(e, \"ProxyTracerProvider\", {\n            enumerable: true,\n            get: function() {\n                return l.ProxyTracerProvider;\n            }\n        });\n        var g = __nccwpck_require__(505);\n        Object.defineProperty(e, \"SamplingDecision\", {\n            enumerable: true,\n            get: function() {\n                return g.SamplingDecision;\n            }\n        });\n        var p = __nccwpck_require__(902);\n        Object.defineProperty(e, \"SpanKind\", {\n            enumerable: true,\n            get: function() {\n                return p.SpanKind;\n            }\n        });\n        var d = __nccwpck_require__(832);\n        Object.defineProperty(e, \"SpanStatusCode\", {\n            enumerable: true,\n            get: function() {\n                return d.SpanStatusCode;\n            }\n        });\n        var _ = __nccwpck_require__(762);\n        Object.defineProperty(e, \"TraceFlags\", {\n            enumerable: true,\n            get: function() {\n                return _.TraceFlags;\n            }\n        });\n        var f = __nccwpck_require__(757);\n        Object.defineProperty(e, \"createTraceState\", {\n            enumerable: true,\n            get: function() {\n                return f.createTraceState;\n            }\n        });\n        var b = __nccwpck_require__(994);\n        Object.defineProperty(e, \"isSpanContextValid\", {\n            enumerable: true,\n            get: function() {\n                return b.isSpanContextValid;\n            }\n        });\n        Object.defineProperty(e, \"isValidTraceId\", {\n            enumerable: true,\n            get: function() {\n                return b.isValidTraceId;\n            }\n        });\n        Object.defineProperty(e, \"isValidSpanId\", {\n            enumerable: true,\n            get: function() {\n                return b.isValidSpanId;\n            }\n        });\n        var v = __nccwpck_require__(304);\n        Object.defineProperty(e, \"INVALID_SPANID\", {\n            enumerable: true,\n            get: function() {\n                return v.INVALID_SPANID;\n            }\n        });\n        Object.defineProperty(e, \"INVALID_TRACEID\", {\n            enumerable: true,\n            get: function() {\n                return v.INVALID_TRACEID;\n            }\n        });\n        Object.defineProperty(e, \"INVALID_SPAN_CONTEXT\", {\n            enumerable: true,\n            get: function() {\n                return v.INVALID_SPAN_CONTEXT;\n            }\n        });\n        const O = __nccwpck_require__(388);\n        Object.defineProperty(e, \"context\", {\n            enumerable: true,\n            get: function() {\n                return O.context;\n            }\n        });\n        const P = __nccwpck_require__(920);\n        Object.defineProperty(e, \"diag\", {\n            enumerable: true,\n            get: function() {\n                return P.diag;\n            }\n        });\n        const N = __nccwpck_require__(934);\n        Object.defineProperty(e, \"metrics\", {\n            enumerable: true,\n            get: function() {\n                return N.metrics;\n            }\n        });\n        const S = __nccwpck_require__(251);\n        Object.defineProperty(e, \"propagation\", {\n            enumerable: true,\n            get: function() {\n                return S.propagation;\n            }\n        });\n        const C = __nccwpck_require__(978);\n        Object.defineProperty(e, \"trace\", {\n            enumerable: true,\n            get: function() {\n                return C.trace;\n            }\n        });\n        e[\"default\"] = {\n            context: O.context,\n            diag: P.diag,\n            metrics: N.metrics,\n            propagation: S.propagation,\n            trace: C.trace\n        };\n    })();\n    module.exports = r;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/compiled/react/cjs/react.shared-subset.development.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react.shared-subset.development.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * @license React\n * react.shared-subset.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        /**\n * Keeps track of the current dispatcher.\n */ var ReactCurrentDispatcher$1 = {\n            current: null\n        };\n        /**\n * Keeps track of the current Cache dispatcher.\n */ var ReactCurrentCache = {\n            current: null\n        };\n        /**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */ var ReactCurrentBatchConfig = {\n            transition: null\n        };\n        var ReactCurrentActQueue = {\n            current: null,\n            // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n            isBatchingLegacy: false,\n            didScheduleLegacyUpdate: false,\n            // Tracks whether something called `use` during the current batch of work.\n            // Determines whether we should yield to microtasks to unwrap already resolved\n            // promises without suspending.\n            didUsePromise: false\n        };\n        /**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */ var ReactCurrentOwner = {\n            /**\n   * @internal\n   * @type {ReactComponent}\n   */ current: null\n        };\n        var ReactDebugCurrentFrame$1 = {};\n        var currentExtraStackFrame = null;\n        function setExtraStackFrame(stack) {\n            {\n                currentExtraStackFrame = stack;\n            }\n        }\n        {\n            ReactDebugCurrentFrame$1.setExtraStackFrame = function(stack) {\n                {\n                    currentExtraStackFrame = stack;\n                }\n            }; // Stack implementation injected by the current renderer.\n            ReactDebugCurrentFrame$1.getCurrentStack = null;\n            ReactDebugCurrentFrame$1.getStackAddendum = function() {\n                var stack = \"\"; // Add an extra top frame while an element is being validated\n                if (currentExtraStackFrame) {\n                    stack += currentExtraStackFrame;\n                } // Delegate to the injected renderer-specific implementation\n                var impl = ReactDebugCurrentFrame$1.getCurrentStack;\n                if (impl) {\n                    stack += impl() || \"\";\n                }\n                return stack;\n            };\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n        var ContextRegistry$1 = {};\n        var ReactSharedInternals = {\n            ReactCurrentDispatcher: ReactCurrentDispatcher$1,\n            ReactCurrentCache: ReactCurrentCache,\n            ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n            ReactCurrentOwner: ReactCurrentOwner\n        };\n        {\n            ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame$1;\n            ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n        }\n        {\n            ReactSharedInternals.ContextRegistry = ContextRegistry$1;\n        }\n        // by calls to these methods by a Babel plugin.\n        //\n        // In PROD (or in packages without access to React internals),\n        // they are left as they are instead.\n        function warn(format) {\n            {\n                {\n                    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n                        args[_key - 1] = arguments[_key];\n                    }\n                    printWarning(\"warn\", format, args);\n                }\n            }\n        }\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        var assign = Object.assign;\n        function createFetchCache() {\n            return new Map();\n        }\n        var simpleCacheKey = '[\"GET\",[],null,\"follow\",null,null,null,null]'; // generateCacheKey(new Request('https://blank'));\n        function generateCacheKey(request) {\n            // We pick the fields that goes into the key used to dedupe requests.\n            // We don't include the `cache` field, because we end up using whatever\n            // caching resulted from the first request.\n            // Notably we currently don't consider non-standard (or future) options.\n            // This might not be safe. TODO: warn for non-standard extensions differing.\n            // IF YOU CHANGE THIS UPDATE THE simpleCacheKey ABOVE.\n            return JSON.stringify([\n                request.method,\n                Array.from(request.headers.entries()),\n                request.mode,\n                request.redirect,\n                request.credentials,\n                request.referrer,\n                request.referrerPolicy,\n                request.integrity\n            ]);\n        }\n        {\n            if (typeof fetch === \"function\") {\n                var originalFetch = fetch;\n                var cachedFetch = function fetch1(resource, options) {\n                    var dispatcher = ReactCurrentCache.current;\n                    if (!dispatcher) {\n                        // We're outside a cached scope.\n                        return originalFetch(resource, options);\n                    }\n                    if (options && options.signal && options.signal !== dispatcher.getCacheSignal()) {\n                        // If we're passed a signal that is not ours, then we assume that\n                        // someone else controls the lifetime of this object and opts out of\n                        // caching. It's effectively the opt-out mechanism.\n                        // Ideally we should be able to check this on the Request but\n                        // it always gets initialized with its own signal so we don't\n                        // know if it's supposed to override - unless we also override the\n                        // Request constructor.\n                        return originalFetch(resource, options);\n                    } // Normalize the Request\n                    var url;\n                    var cacheKey;\n                    if (typeof resource === \"string\" && !options) {\n                        // Fast path.\n                        cacheKey = simpleCacheKey;\n                        url = resource;\n                    } else {\n                        // Normalize the request.\n                        // if resource is not a string or a URL (its an instance of Request)\n                        // then do not instantiate a new Request but instead\n                        // reuse the request as to not disturb the body in the event it's a ReadableStream.\n                        var request = typeof resource === \"string\" || resource instanceof URL ? new Request(resource, options) : resource;\n                        if (request.method !== \"GET\" && request.method !== \"HEAD\" || // $FlowFixMe[prop-missing]: keepalive is real\n                        request.keepalive) {\n                            // We currently don't dedupe requests that might have side-effects. Those\n                            // have to be explicitly cached. We assume that the request doesn't have a\n                            // body if it's GET or HEAD.\n                            // keepalive gets treated the same as if you passed a custom cache signal.\n                            return originalFetch(resource, options);\n                        }\n                        cacheKey = generateCacheKey(request);\n                        url = request.url;\n                    }\n                    var cache = dispatcher.getCacheForType(createFetchCache);\n                    var cacheEntries = cache.get(url);\n                    var match;\n                    if (cacheEntries === undefined) {\n                        // We pass the original arguments here in case normalizing the Request\n                        // doesn't include all the options in this environment.\n                        match = originalFetch(resource, options);\n                        cache.set(url, [\n                            cacheKey,\n                            match\n                        ]);\n                    } else {\n                        // We use an array as the inner data structure since it's lighter and\n                        // we typically only expect to see one or two entries here.\n                        for(var i = 0, l = cacheEntries.length; i < l; i += 2){\n                            var key = cacheEntries[i];\n                            var value = cacheEntries[i + 1];\n                            if (key === cacheKey) {\n                                match = value; // I would've preferred a labelled break but lint says no.\n                                return match.then(function(response) {\n                                    return response.clone();\n                                });\n                            }\n                        }\n                        match = originalFetch(resource, options);\n                        cacheEntries.push(cacheKey, match);\n                    } // We clone the response so that each time you call this you get a new read\n                    // of the body so that it can be read multiple times.\n                    return match.then(function(response) {\n                        return response.clone();\n                    });\n                }; // We don't expect to see any extra properties on fetch but if there are any,\n                // copy them over. Useful for extended fetch environments or mocks.\n                assign(cachedFetch, originalFetch);\n                try {\n                    // eslint-disable-next-line no-native-reassign\n                    fetch = cachedFetch;\n                } catch (error1) {\n                    try {\n                        // In case assigning it globally fails, try globalThis instead just in case it exists.\n                        globalThis.fetch = cachedFetch;\n                    } catch (error2) {\n                        // Log even in production just to make sure this is seen if only prod is frozen.\n                        // eslint-disable-next-line react-internal/no-production-logging\n                        warn(\"React was unable to patch the fetch() function in this environment. \" + \"Suspensey APIs might not work correctly as a result.\");\n                    }\n                }\n            }\n        }\n        var ReactVersion = \"18.3.0-canary-1cea38448-20230530\";\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_SERVER_CONTEXT_TYPE = Symbol.for(\"react.server_context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var REACT_CACHE_TYPE = Symbol.for(\"react.cache\");\n        var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for(\"react.default_value\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        var didWarnStateUpdateForUnmountedComponent = {};\n        function warnNoop(publicInstance, callerName) {\n            {\n                var _constructor = publicInstance.constructor;\n                var componentName = _constructor && (_constructor.displayName || _constructor.name) || \"ReactClass\";\n                var warningKey = componentName + \".\" + callerName;\n                if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n                    return;\n                }\n                error(\"Can't call %s on a component that is not yet mounted. \" + \"This is a no-op, but it might indicate a bug in your application. \" + \"Instead, assign to `this.state` directly or define a `state = {};` \" + \"class property with the desired state in the %s component.\", callerName, componentName);\n                didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n            }\n        }\n        /**\n * This is the abstract API for an update queue.\n */ var ReactNoopUpdateQueue = {\n            /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */ isMounted: function(publicInstance) {\n                return false;\n            },\n            /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */ enqueueForceUpdate: function(publicInstance, callback, callerName) {\n                warnNoop(publicInstance, \"forceUpdate\");\n            },\n            /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */ enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {\n                warnNoop(publicInstance, \"replaceState\");\n            },\n            /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */ enqueueSetState: function(publicInstance, partialState, callback, callerName) {\n                warnNoop(publicInstance, \"setState\");\n            }\n        };\n        var emptyObject = {};\n        {\n            Object.freeze(emptyObject);\n        }\n        /**\n * Base class helpers for the updating state of a component.\n */ function Component(props, context, updater) {\n            this.props = props;\n            this.context = context; // If a component has string refs, we will assign a different object later.\n            this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n            // renderer.\n            this.updater = updater || ReactNoopUpdateQueue;\n        }\n        Component.prototype.isReactComponent = {};\n        /**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */ Component.prototype.setState = function(partialState, callback) {\n            if (typeof partialState !== \"object\" && typeof partialState !== \"function\" && partialState != null) {\n                throw new Error(\"setState(...): takes an object of state variables to update or a \" + \"function which returns an object of state variables.\");\n            }\n            this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n        };\n        /**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */ Component.prototype.forceUpdate = function(callback) {\n            this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n        };\n        /**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */ {\n            var deprecatedAPIs = {\n                isMounted: [\n                    \"isMounted\",\n                    \"Instead, make sure to clean up subscriptions and pending requests in \" + \"componentWillUnmount to prevent memory leaks.\"\n                ],\n                replaceState: [\n                    \"replaceState\",\n                    \"Refactor your code to use setState instead (see \" + \"https://github.com/facebook/react/issues/3236).\"\n                ]\n            };\n            var defineDeprecationWarning = function(methodName, info) {\n                Object.defineProperty(Component.prototype, methodName, {\n                    get: function() {\n                        warn(\"%s(...) is deprecated in plain JavaScript React classes. %s\", info[0], info[1]);\n                        return undefined;\n                    }\n                });\n            };\n            for(var fnName in deprecatedAPIs){\n                if (deprecatedAPIs.hasOwnProperty(fnName)) {\n                    defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n                }\n            }\n        }\n        function ComponentDummy() {}\n        ComponentDummy.prototype = Component.prototype;\n        /**\n * Convenience component with default shallow equality check for sCU.\n */ function PureComponent(props, context, updater) {\n            this.props = props;\n            this.context = context; // If a component has string refs, we will assign a different object later.\n            this.refs = emptyObject;\n            this.updater = updater || ReactNoopUpdateQueue;\n        }\n        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\n        pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n        assign(pureComponentPrototype, Component.prototype);\n        pureComponentPrototype.isPureReactComponent = true;\n        // an immutable object with a single mutable value\n        function createRef() {\n            var refObject = {\n                current: null\n            };\n            {\n                Object.seal(refObject);\n            }\n            return refObject;\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\"; // $FlowFixMe[incompatible-return]\n                return type;\n            }\n        } // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            {\n                if (typeof type.tag === \"number\") {\n                    error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                }\n            }\n            if (typeof type === \"function\") {\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n                case REACT_CACHE_TYPE:\n                    {\n                        return \"Cache\";\n                    }\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                    case REACT_SERVER_CONTEXT_TYPE:\n                        {\n                            var context2 = type;\n                            return (context2.displayName || context2._globalName) + \".Provider\";\n                        }\n                }\n            }\n            return null;\n        }\n        // $FlowFixMe[method-unbinding]\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            var warnAboutAccessingKey = function() {\n                {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                }\n            };\n            warnAboutAccessingKey.isReactWarning = true;\n            Object.defineProperty(props, \"key\", {\n                get: warnAboutAccessingKey,\n                configurable: true\n            });\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            var warnAboutAccessingRef = function() {\n                {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                }\n            };\n            warnAboutAccessingRef.isReactWarning = true;\n            Object.defineProperty(props, \"ref\", {\n                get: warnAboutAccessingRef,\n                configurable: true\n            });\n        }\n        function warnIfStringRefCannotBeAutoConverted(config) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", componentName, config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ function ReactElement(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        }\n        /**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */ function createElement$1(type, config, children) {\n            var propName; // Reserved names are extracted\n            var props = {};\n            var key = null;\n            var ref = null;\n            var self = null;\n            var source = null;\n            if (config != null) {\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    {\n                        warnIfStringRefCannotBeAutoConverted(config);\n                    }\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                self = config.__self === undefined ? null : config.__self;\n                source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                }\n            } // Children can be more than one argument, and those are transferred onto\n            // the newly allocated props object.\n            var childrenLength = arguments.length - 2;\n            if (childrenLength === 1) {\n                props.children = children;\n            } else if (childrenLength > 1) {\n                var childArray = Array(childrenLength);\n                for(var i = 0; i < childrenLength; i++){\n                    childArray[i] = arguments[i + 2];\n                }\n                {\n                    if (Object.freeze) {\n                        Object.freeze(childArray);\n                    }\n                }\n                props.children = childArray;\n            } // Resolve default props\n            if (type && type.defaultProps) {\n                var defaultProps = type.defaultProps;\n                for(propName in defaultProps){\n                    if (props[propName] === undefined) {\n                        props[propName] = defaultProps[propName];\n                    }\n                }\n            }\n            {\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n            }\n            return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n        }\n        function cloneAndReplaceKey(oldElement, newKey) {\n            var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n            return newElement;\n        }\n        /**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */ function cloneElement$1(element, config, children) {\n            if (element === null || element === undefined) {\n                throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n            }\n            var propName; // Original props are copied\n            var props = assign({}, element.props); // Reserved names are extracted\n            var key = element.key;\n            var ref = element.ref; // Self is preserved since the owner is preserved.\n            var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n            // transpiler, and the original source is probably a better indicator of the\n            // true owner.\n            var source = element._source; // Owner will be preserved, unless ref is overridden\n            var owner = element._owner;\n            if (config != null) {\n                if (hasValidRef(config)) {\n                    // Silently steal the ref from the parent.\n                    ref = config.ref;\n                    owner = ReactCurrentOwner.current;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                } // Remaining properties override existing props\n                var defaultProps;\n                if (element.type && element.type.defaultProps) {\n                    defaultProps = element.type.defaultProps;\n                }\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        if (config[propName] === undefined && defaultProps !== undefined) {\n                            // Resolve default props\n                            props[propName] = defaultProps[propName];\n                        } else {\n                            props[propName] = config[propName];\n                        }\n                    }\n                }\n            } // Children can be more than one argument, and those are transferred onto\n            // the newly allocated props object.\n            var childrenLength = arguments.length - 2;\n            if (childrenLength === 1) {\n                props.children = children;\n            } else if (childrenLength > 1) {\n                var childArray = Array(childrenLength);\n                for(var i = 0; i < childrenLength; i++){\n                    childArray[i] = arguments[i + 2];\n                }\n                props.children = childArray;\n            }\n            return ReactElement(element.type, key, ref, self, source, owner, props);\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n        var SEPARATOR = \".\";\n        var SUBSEPARATOR = \":\";\n        /**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */ function escape(key) {\n            var escapeRegex = /[=:]/g;\n            var escaperLookup = {\n                \"=\": \"=0\",\n                \":\": \"=2\"\n            };\n            var escapedString = key.replace(escapeRegex, function(match) {\n                return escaperLookup[match];\n            });\n            return \"$\" + escapedString;\n        }\n        /**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */ var didWarnAboutMaps = false;\n        var userProvidedKeyEscapeRegex = /\\/+/g;\n        function escapeUserProvidedKey(text) {\n            return text.replace(userProvidedKeyEscapeRegex, \"$&/\");\n        }\n        /**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */ function getElementKey(element, index) {\n            // Do some typechecking here since we call this blindly. We want to ensure\n            // that we don't block potential future ES APIs.\n            if (typeof element === \"object\" && element !== null && element.key != null) {\n                // Explicit key\n                {\n                    checkKeyStringCoercion(element.key);\n                }\n                return escape(\"\" + element.key);\n            } // Implicit key determined by the index in the set\n            return index.toString(36);\n        }\n        function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n            var type = typeof children;\n            if (type === \"undefined\" || type === \"boolean\") {\n                // All of the above are perceived as null.\n                children = null;\n            }\n            var invokeCallback = false;\n            if (children === null) {\n                invokeCallback = true;\n            } else {\n                switch(type){\n                    case \"string\":\n                    case \"number\":\n                        invokeCallback = true;\n                        break;\n                    case \"object\":\n                        switch(children.$$typeof){\n                            case REACT_ELEMENT_TYPE:\n                            case REACT_PORTAL_TYPE:\n                                invokeCallback = true;\n                        }\n                }\n            }\n            if (invokeCallback) {\n                var _child = children;\n                var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n                // so that it's consistent if the number of children grows:\n                var childKey = nameSoFar === \"\" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n                if (isArray(mappedChild)) {\n                    var escapedChildKey = \"\";\n                    if (childKey != null) {\n                        escapedChildKey = escapeUserProvidedKey(childKey) + \"/\";\n                    }\n                    mapIntoArray(mappedChild, array, escapedChildKey, \"\", function(c) {\n                        return c;\n                    });\n                } else if (mappedChild != null) {\n                    if (isValidElement(mappedChild)) {\n                        {\n                            // The `if` statement here prevents auto-disabling of the safe\n                            // coercion ESLint rule, so we must manually disable it below.\n                            // $FlowFixMe[incompatible-type] Flow incorrectly thinks React.Portal doesn't have a key\n                            if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n                                checkKeyStringCoercion(mappedChild.key);\n                            }\n                        }\n                        mappedChild = cloneAndReplaceKey(mappedChild, // traverseAllChildren used to do for objects as children\n                        escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? escapeUserProvidedKey(\"\" + mappedChild.key // eslint-disable-line react-internal/safe-string-coercion\n                        ) + \"/\" : \"\") + childKey);\n                    }\n                    array.push(mappedChild);\n                }\n                return 1;\n            }\n            var child;\n            var nextName;\n            var subtreeCount = 0; // Count of children found in the current subtree.\n            var nextNamePrefix = nameSoFar === \"\" ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n            if (isArray(children)) {\n                for(var i = 0; i < children.length; i++){\n                    child = children[i];\n                    nextName = nextNamePrefix + getElementKey(child, i);\n                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n                }\n            } else {\n                var iteratorFn = getIteratorFn(children);\n                if (typeof iteratorFn === \"function\") {\n                    var iterableChildren = children;\n                    {\n                        // Warn about using Maps as children\n                        if (iteratorFn === iterableChildren.entries) {\n                            if (!didWarnAboutMaps) {\n                                warn(\"Using Maps as children is not supported. \" + \"Use an array of keyed ReactElements instead.\");\n                            }\n                            didWarnAboutMaps = true;\n                        }\n                    }\n                    var iterator = iteratorFn.call(iterableChildren);\n                    var step;\n                    var ii = 0; // $FlowFixMe[incompatible-use] `iteratorFn` might return null according to typing.\n                    while(!(step = iterator.next()).done){\n                        child = step.value;\n                        nextName = nextNamePrefix + getElementKey(child, ii++);\n                        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n                    }\n                } else if (type === \"object\") {\n                    // eslint-disable-next-line react-internal/safe-string-coercion\n                    var childrenString = String(children);\n                    throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === \"[object Object]\" ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\" : childrenString) + \"). \" + \"If you meant to render a collection of children, use an array \" + \"instead.\");\n                }\n            }\n            return subtreeCount;\n        }\n        /**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */ function mapChildren(children, func, context) {\n            if (children == null) {\n                return children;\n            }\n            var result = [];\n            var count = 0;\n            mapIntoArray(children, result, \"\", \"\", function(child) {\n                return func.call(context, child, count++);\n            });\n            return result;\n        }\n        /**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */ function countChildren(children) {\n            var n = 0;\n            mapChildren(children, function() {\n                n++; // Don't return anything\n            });\n            return n;\n        }\n        /**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */ function forEachChildren(children, forEachFunc, forEachContext) {\n            mapChildren(children, function() {\n                forEachFunc.apply(this, arguments); // Don't return anything.\n            }, forEachContext);\n        }\n        /**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */ function toArray(children) {\n            return mapChildren(children, function(child) {\n                return child;\n            }) || [];\n        }\n        /**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */ function onlyChild(children) {\n            if (!isValidElement(children)) {\n                throw new Error(\"React.Children.only expected to receive a single React element child.\");\n            }\n            return children;\n        }\n        var Uninitialized = -1;\n        var Pending = 0;\n        var Resolved = 1;\n        var Rejected = 2;\n        function lazyInitializer(payload) {\n            if (payload._status === Uninitialized) {\n                var ctor = payload._result;\n                var thenable = ctor(); // Transition to the next state.\n                // This might throw either because it's missing or throws. If so, we treat it\n                // as still uninitialized and try again next time. Which is the same as what\n                // happens if the ctor or any wrappers processing the ctor throws. This might\n                // end up fixing it if the resolution was a concurrency bug.\n                thenable.then(function(moduleObject) {\n                    if (payload._status === Pending || payload._status === Uninitialized) {\n                        // Transition to the next state.\n                        var resolved = payload;\n                        resolved._status = Resolved;\n                        resolved._result = moduleObject;\n                    }\n                }, function(error) {\n                    if (payload._status === Pending || payload._status === Uninitialized) {\n                        // Transition to the next state.\n                        var rejected = payload;\n                        rejected._status = Rejected;\n                        rejected._result = error;\n                    }\n                });\n                if (payload._status === Uninitialized) {\n                    // In case, we're still uninitialized, then we're waiting for the thenable\n                    // to resolve. Set it as pending in the meantime.\n                    var pending = payload;\n                    pending._status = Pending;\n                    pending._result = thenable;\n                }\n            }\n            if (payload._status === Resolved) {\n                var moduleObject = payload._result;\n                {\n                    if (moduleObject === undefined) {\n                        error(\"lazy: Expected the result of a dynamic imp\" + \"ort() call. \" + \"Instead received: %s\\n\\nYour code should look like: \\n  \" + // Break up imports to avoid accidentally parsing them as dependencies.\n                        \"const MyComponent = lazy(() => imp\" + \"ort('./MyComponent'))\\n\\n\" + \"Did you accidentally put curly braces around the import?\", moduleObject);\n                    }\n                }\n                {\n                    if (!(\"default\" in moduleObject)) {\n                        error(\"lazy: Expected the result of a dynamic imp\" + \"ort() call. \" + \"Instead received: %s\\n\\nYour code should look like: \\n  \" + // Break up imports to avoid accidentally parsing them as dependencies.\n                        \"const MyComponent = lazy(() => imp\" + \"ort('./MyComponent'))\", moduleObject);\n                    }\n                }\n                return moduleObject.default;\n            } else {\n                throw payload._result;\n            }\n        }\n        function lazy(ctor) {\n            var payload = {\n                // We use these fields to store the result.\n                _status: Uninitialized,\n                _result: ctor\n            };\n            var lazyType = {\n                $$typeof: REACT_LAZY_TYPE,\n                _payload: payload,\n                _init: lazyInitializer\n            };\n            {\n                // In production, this would just set it on the object.\n                var defaultProps;\n                var propTypes; // $FlowFixMe[prop-missing]\n                Object.defineProperties(lazyType, {\n                    defaultProps: {\n                        configurable: true,\n                        get: function() {\n                            return defaultProps;\n                        },\n                        // $FlowFixMe[missing-local-annot]\n                        set: function(newDefaultProps) {\n                            error(\"React.lazy(...): It is not supported to assign `defaultProps` to \" + \"a lazy component import. Either specify them where the component \" + \"is defined, or create a wrapping component around it.\");\n                            defaultProps = newDefaultProps; // Match production behavior more closely:\n                            // $FlowFixMe[prop-missing]\n                            Object.defineProperty(lazyType, \"defaultProps\", {\n                                enumerable: true\n                            });\n                        }\n                    },\n                    propTypes: {\n                        configurable: true,\n                        get: function() {\n                            return propTypes;\n                        },\n                        // $FlowFixMe[missing-local-annot]\n                        set: function(newPropTypes) {\n                            error(\"React.lazy(...): It is not supported to assign `propTypes` to \" + \"a lazy component import. Either specify them where the component \" + \"is defined, or create a wrapping component around it.\");\n                            propTypes = newPropTypes; // Match production behavior more closely:\n                            // $FlowFixMe[prop-missing]\n                            Object.defineProperty(lazyType, \"propTypes\", {\n                                enumerable: true\n                            });\n                        }\n                    }\n                });\n            }\n            return lazyType;\n        }\n        function forwardRef(render) {\n            {\n                if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n                    error(\"forwardRef requires a render function but received a `memo` \" + \"component. Instead of forwardRef(memo(...)), use \" + \"memo(forwardRef(...)).\");\n                } else if (typeof render !== \"function\") {\n                    error(\"forwardRef requires a render function but was given %s.\", render === null ? \"null\" : typeof render);\n                } else {\n                    if (render.length !== 0 && render.length !== 2) {\n                        error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\", render.length === 1 ? \"Did you forget to use the ref parameter?\" : \"Any additional parameter will be undefined.\");\n                    }\n                }\n                if (render != null) {\n                    if (render.defaultProps != null || render.propTypes != null) {\n                        error(\"forwardRef render functions do not support propTypes or defaultProps. \" + \"Did you accidentally pass a React component?\");\n                    }\n                }\n            }\n            var elementType = {\n                $$typeof: REACT_FORWARD_REF_TYPE,\n                render: render\n            };\n            {\n                var ownName;\n                Object.defineProperty(elementType, \"displayName\", {\n                    enumerable: false,\n                    configurable: true,\n                    get: function() {\n                        return ownName;\n                    },\n                    set: function(name) {\n                        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n                        // because the component may be used elsewhere.\n                        // But it's nice for anonymous functions to inherit the name,\n                        // so that our component-stack generation logic will display their frames.\n                        // An anonymous function generally suggests a pattern like:\n                        //   React.forwardRef((props, ref) => {...});\n                        // This kind of inner function is not used elsewhere so the side effect is okay.\n                        if (!render.name && !render.displayName) {\n                            render.displayName = name;\n                        }\n                    }\n                });\n            }\n            return elementType;\n        }\n        var REACT_CLIENT_REFERENCE$1 = Symbol.for(\"react.client.reference\");\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function memo(type, compare) {\n            {\n                if (!isValidElementType(type)) {\n                    error(\"memo: The first argument must be a component. Instead \" + \"received: %s\", type === null ? \"null\" : typeof type);\n                }\n            }\n            var elementType = {\n                $$typeof: REACT_MEMO_TYPE,\n                type: type,\n                compare: compare === undefined ? null : compare\n            };\n            {\n                var ownName;\n                Object.defineProperty(elementType, \"displayName\", {\n                    enumerable: false,\n                    configurable: true,\n                    get: function() {\n                        return ownName;\n                    },\n                    set: function(name) {\n                        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n                        // because the component may be used elsewhere.\n                        // But it's nice for anonymous functions to inherit the name,\n                        // so that our component-stack generation logic will display their frames.\n                        // An anonymous function generally suggests a pattern like:\n                        //   React.memo((props) => {...});\n                        // This kind of inner function is not used elsewhere so the side effect is okay.\n                        if (!type.name && !type.displayName) {\n                            type.displayName = name;\n                        }\n                    }\n                });\n            }\n            return elementType;\n        }\n        var UNTERMINATED = 0;\n        var TERMINATED = 1;\n        var ERRORED = 2;\n        function createCacheRoot() {\n            return new WeakMap();\n        }\n        function createCacheNode() {\n            return {\n                s: UNTERMINATED,\n                // status, represents whether the cached computation returned a value or threw an error\n                v: undefined,\n                // value, either the cached result or an error, depending on s\n                o: null,\n                // object cache, a WeakMap where non-primitive arguments are stored\n                p: null // primitive cache, a regular Map where primitive arguments are stored.\n            };\n        }\n        function cache(fn) {\n            return function() {\n                var dispatcher = ReactCurrentCache.current;\n                if (!dispatcher) {\n                    // If there is no dispatcher, then we treat this as not being cached.\n                    // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n                    return fn.apply(null, arguments);\n                }\n                var fnMap = dispatcher.getCacheForType(createCacheRoot);\n                var fnNode = fnMap.get(fn);\n                var cacheNode;\n                if (fnNode === undefined) {\n                    cacheNode = createCacheNode();\n                    fnMap.set(fn, cacheNode);\n                } else {\n                    cacheNode = fnNode;\n                }\n                for(var i = 0, l = arguments.length; i < l; i++){\n                    var arg = arguments[i];\n                    if (typeof arg === \"function\" || typeof arg === \"object\" && arg !== null) {\n                        // Objects go into a WeakMap\n                        var objectCache = cacheNode.o;\n                        if (objectCache === null) {\n                            cacheNode.o = objectCache = new WeakMap();\n                        }\n                        var objectNode = objectCache.get(arg);\n                        if (objectNode === undefined) {\n                            cacheNode = createCacheNode();\n                            objectCache.set(arg, cacheNode);\n                        } else {\n                            cacheNode = objectNode;\n                        }\n                    } else {\n                        // Primitives go into a regular Map\n                        var primitiveCache = cacheNode.p;\n                        if (primitiveCache === null) {\n                            cacheNode.p = primitiveCache = new Map();\n                        }\n                        var primitiveNode = primitiveCache.get(arg);\n                        if (primitiveNode === undefined) {\n                            cacheNode = createCacheNode();\n                            primitiveCache.set(arg, cacheNode);\n                        } else {\n                            cacheNode = primitiveNode;\n                        }\n                    }\n                }\n                if (cacheNode.s === TERMINATED) {\n                    return cacheNode.v;\n                }\n                if (cacheNode.s === ERRORED) {\n                    throw cacheNode.v;\n                }\n                try {\n                    // $FlowFixMe[incompatible-call]: We don't want to use rest arguments since we transpile the code.\n                    var result = fn.apply(null, arguments);\n                    var terminatedNode = cacheNode;\n                    terminatedNode.s = TERMINATED;\n                    terminatedNode.v = result;\n                    return result;\n                } catch (error) {\n                    // We store the first error that's thrown and rethrow it.\n                    var erroredNode = cacheNode;\n                    erroredNode.s = ERRORED;\n                    erroredNode.v = error;\n                    throw error;\n                }\n            };\n        }\n        function resolveDispatcher() {\n            var dispatcher = ReactCurrentDispatcher$1.current;\n            {\n                if (dispatcher === null) {\n                    error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for\" + \" one of the following reasons:\\n\" + \"1. You might have mismatching versions of React and the renderer (such as React DOM)\\n\" + \"2. You might be breaking the Rules of Hooks\\n\" + \"3. You might have more than one copy of React in the same app\\n\" + \"See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\");\n                }\n            }\n            // intentionally don't throw our own error because this is in a hot path.\n            // Also helps ensure this is inlined.\n            return dispatcher;\n        }\n        function useContext(Context) {\n            var dispatcher = resolveDispatcher();\n            {\n                // TODO: add a more generic warning for invalid values.\n                if (Context._context !== undefined) {\n                    var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n                    // and nobody should be using this in existing code.\n                    if (realContext.Consumer === Context) {\n                        error(\"Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be \" + \"removed in a future major release. Did you mean to call useContext(Context) instead?\");\n                    } else if (realContext.Provider === Context) {\n                        error(\"Calling useContext(Context.Provider) is not supported. \" + \"Did you mean to call useContext(Context) instead?\");\n                    }\n                }\n            }\n            return dispatcher.useContext(Context);\n        }\n        function useCallback(callback, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useCallback(callback, deps);\n        }\n        function useMemo(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useMemo(create, deps);\n        }\n        function useDebugValue(value, formatterFn) {\n            {\n                var dispatcher = resolveDispatcher();\n                return dispatcher.useDebugValue(value, formatterFn);\n            }\n        }\n        function useId() {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useId();\n        }\n        function use(usable) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.use(usable);\n        }\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            var control;\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher.current = null;\n                disableLogs();\n            }\n            try {\n                // This should throw.\n                if (construct) {\n                    // Something should be setting the props in the constructor.\n                    var Fake = function() {\n                        throw Error();\n                    }; // $FlowFixMe[prop-missing]\n                    Object.defineProperty(Fake.prototype, \"props\", {\n                        set: function() {\n                            // We use a throwing setter instead of frozen or non-writable props\n                            // because that won't throw in a non-strict mode function.\n                            throw Error();\n                        }\n                    });\n                    if (typeof Reflect === \"object\" && Reflect.construct) {\n                        // We construct a different control for this case to include any extra\n                        // frames added by the construct call.\n                        try {\n                            Reflect.construct(Fake, []);\n                        } catch (x) {\n                            control = x;\n                        }\n                        Reflect.construct(fn, [], Fake);\n                    } else {\n                        try {\n                            Fake.call();\n                        } catch (x) {\n                            control = x;\n                        } // $FlowFixMe[prop-missing] found when upgrading Flow\n                        fn.call(Fake.prototype);\n                    }\n                } else {\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        control = x;\n                    } // TODO(luna): This will currently only throw if the function component\n                    // tries to access React/ReactDOM/props. We should probably make this throw\n                    // in simple components too\n                    fn();\n                }\n            } catch (sample) {\n                // This is inlined manually because closure doesn't do it for us.\n                if (sample && control && typeof sample.stack === \"string\") {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sample.stack.split(\"\\n\");\n                    var controlLines = control.stack.split(\"\\n\");\n                    var s = sampleLines.length - 1;\n                    var c = controlLines.length - 1;\n                    while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                        // We expect at least one stack frame to be shared.\n                        // Typically this will be the root most one. However, stack frames may be\n                        // cut off due to maximum stack limits. In this case, one maybe cut off\n                        // earlier than the other. We assume that the sample is longer or the same\n                        // and there for cut off earlier. So we should find the root most frame in\n                        // the sample somewhere in the control.\n                        c--;\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        }\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe[incompatible-use] This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement$1(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement$1(null);\n                        }\n                    }\n                }\n            }\n        }\n        var REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\");\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    setExtraStackFrame(stack);\n                } else {\n                    setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        function getDeclarationErrorAddendum() {\n            if (ReactCurrentOwner.current) {\n                var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                if (name) {\n                    return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                }\n            }\n            return \"\";\n        }\n        function getSourceInfoErrorAddendum(source) {\n            if (source !== undefined) {\n                var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                var lineNumber = source.lineNumber;\n                return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n            }\n            return \"\";\n        }\n        function getSourceInfoErrorAddendumForProps(elementProps) {\n            if (elementProps !== null && elementProps !== undefined) {\n                return getSourceInfoErrorAddendum(elementProps.__source);\n            }\n            return \"\";\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            var info = getDeclarationErrorAddendum();\n            if (!info) {\n                var parentName = typeof parentType === \"string\" ? parentType : parentType.displayName || parentType.name;\n                if (parentName) {\n                    info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                }\n            }\n            return info;\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            if (!element._store || element._store.validated || element.key != null) {\n                return;\n            }\n            element._store.validated = true;\n            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                return;\n            }\n            ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n            // property, it may be the creator of the child that's responsible for\n            // assigning it a key.\n            var childOwner = \"\";\n            if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                // Give the component that originally created this child.\n                childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n            }\n            {\n                setCurrentlyValidatingElement(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            if (typeof node !== \"object\" || !node) {\n                return;\n            }\n            if (node.$$typeof === REACT_CLIENT_REFERENCE) ;\n            else if (isArray(node)) {\n                for(var i = 0; i < node.length; i++){\n                    var child = node[i];\n                    if (isValidElement(child)) {\n                        validateExplicitKey(child, parentType);\n                    }\n                }\n            } else if (isValidElement(node)) {\n                // This element was passed in a valid location.\n                if (node._store) {\n                    node._store.validated = true;\n                }\n            } else {\n                var iteratorFn = getIteratorFn(node);\n                if (typeof iteratorFn === \"function\") {\n                    // Entry iterators used to provide implicit keys,\n                    // but now we print a separate warning for them later.\n                    if (iteratorFn !== node.entries) {\n                        var iterator = iteratorFn.call(node);\n                        var step;\n                        while(!(step = iterator.next()).done){\n                            if (isValidElement(step.value)) {\n                                validateExplicitKey(step.value, parentType);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                if (type.$$typeof === REACT_CLIENT_REFERENCE) {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement(null);\n                }\n            }\n        }\n        function createElementWithValidation(type, props, children) {\n            var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n            // succeed and there will likely be errors in render.\n            if (!validType) {\n                var info = \"\";\n                if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                    info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                }\n                var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n                if (sourceInfo) {\n                    info += sourceInfo;\n                } else {\n                    info += getDeclarationErrorAddendum();\n                }\n                var typeString;\n                if (type === null) {\n                    typeString = \"null\";\n                } else if (isArray(type)) {\n                    typeString = \"array\";\n                } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                    typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                    info = \" Did you accidentally export a JSX literal instead of a component?\";\n                } else {\n                    typeString = typeof type;\n                }\n                {\n                    error(\"React.createElement: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n            }\n            var element = createElement$1.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n            // TODO: Drop this when these are no longer allowed as the type argument.\n            if (element == null) {\n                return element;\n            } // Skip key warning if the type isn't valid since our key validation logic\n            // doesn't expect a non-string/function type and can throw confusing errors.\n            // We don't want exception behavior to differ between dev and prod.\n            // (Rendering will throw with a helpful message and as soon as the type is\n            // fixed, the key warnings will appear.)\n            if (validType) {\n                for(var i = 2; i < arguments.length; i++){\n                    validateChildKeys(arguments[i], type);\n                }\n            }\n            if (type === REACT_FRAGMENT_TYPE) {\n                validateFragmentProps(element);\n            } else {\n                validatePropTypes(element);\n            }\n            return element;\n        }\n        function cloneElementWithValidation(element, props, children) {\n            var newElement = cloneElement$1.apply(this, arguments);\n            for(var i = 2; i < arguments.length; i++){\n                validateChildKeys(arguments[i], newElement.type);\n            }\n            validatePropTypes(newElement);\n            return newElement;\n        }\n        var ContextRegistry = ReactSharedInternals.ContextRegistry;\n        function createServerContext(globalName, defaultValue) {\n            var wasDefined = true;\n            if (!ContextRegistry[globalName]) {\n                wasDefined = false;\n                var _context = {\n                    $$typeof: REACT_SERVER_CONTEXT_TYPE,\n                    // As a workaround to support multiple concurrent renderers, we categorize\n                    // some renderers as primary and others as secondary. We only expect\n                    // there to be two concurrent renderers at most: React Native (primary) and\n                    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n                    // Secondary renderers store their context values on separate fields.\n                    _currentValue: defaultValue,\n                    _currentValue2: defaultValue,\n                    _defaultValue: defaultValue,\n                    // Used to track how many concurrent renderers this context currently\n                    // supports within in a single renderer. Such as parallel server rendering.\n                    _threadCount: 0,\n                    // These are circular\n                    Provider: null,\n                    Consumer: null,\n                    _globalName: globalName\n                };\n                _context.Provider = {\n                    $$typeof: REACT_PROVIDER_TYPE,\n                    _context: _context\n                };\n                {\n                    var hasWarnedAboutUsingConsumer;\n                    _context._currentRenderer = null;\n                    _context._currentRenderer2 = null;\n                    Object.defineProperties(_context, {\n                        Consumer: {\n                            get: function() {\n                                if (!hasWarnedAboutUsingConsumer) {\n                                    error(\"Consumer pattern is not supported by ReactServerContext\");\n                                    hasWarnedAboutUsingConsumer = true;\n                                }\n                                return null;\n                            }\n                        }\n                    });\n                }\n                ContextRegistry[globalName] = _context;\n            }\n            var context = ContextRegistry[globalName];\n            if (context._defaultValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n                context._defaultValue = defaultValue;\n                if (context._currentValue === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n                    context._currentValue = defaultValue;\n                }\n                if (context._currentValue2 === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {\n                    context._currentValue2 = defaultValue;\n                }\n            } else if (wasDefined) {\n                throw new Error(\"ServerContext: \" + globalName + \" already defined\");\n            }\n            return context;\n        }\n        function startTransition(scope, options) {\n            var prevTransition = ReactCurrentBatchConfig.transition;\n            ReactCurrentBatchConfig.transition = {};\n            var currentTransition = ReactCurrentBatchConfig.transition;\n            {\n                ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n            }\n            try {\n                scope();\n            } finally{\n                ReactCurrentBatchConfig.transition = prevTransition;\n                {\n                    if (prevTransition === null && currentTransition._updatedFibers) {\n                        var updatedFibersCount = currentTransition._updatedFibers.size;\n                        currentTransition._updatedFibers.clear();\n                        if (updatedFibersCount > 10) {\n                            warn(\"Detected a large number of updates inside startTransition. \" + \"If this is due to a subscription please re-write it to use React provided hooks. \" + \"Otherwise concurrent mode guarantees are off the table.\");\n                        }\n                    }\n                }\n            }\n        }\n        var createElement = createElementWithValidation;\n        var cloneElement = cloneElementWithValidation;\n        var Children = {\n            map: mapChildren,\n            forEach: forEachChildren,\n            count: countChildren,\n            toArray: toArray,\n            only: onlyChild\n        };\n        exports.Children = Children;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.Profiler = REACT_PROFILER_TYPE;\n        exports.StrictMode = REACT_STRICT_MODE_TYPE;\n        exports.Suspense = REACT_SUSPENSE_TYPE;\n        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\n        exports.cache = cache;\n        exports.cloneElement = cloneElement;\n        exports.createElement = createElement;\n        exports.createRef = createRef;\n        exports.createServerContext = createServerContext;\n        exports.forwardRef = forwardRef;\n        exports.isValidElement = isValidElement;\n        exports.lazy = lazy;\n        exports.memo = memo;\n        exports.startTransition = startTransition;\n        exports.use = use;\n        exports.useCallback = useCallback;\n        exports.useContext = useContext;\n        exports.useDebugValue = useDebugValue;\n        exports.useId = useId;\n        exports.useMemo = useMemo;\n        exports.version = ReactVersion;\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/compiled/react/cjs/react.shared-subset.development.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/compiled/react/react.shared-subset.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/react.shared-subset.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react.shared-subset.development.js */ \"(sc_server)/./node_modules/next/dist/compiled/react/cjs/react.shared-subset.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3JlYWN0L3JlYWN0LnNoYXJlZC1zdWJzZXQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxLQUF5QixFQUFjLEVBRTFDLE1BQU07SUFDTEMsa0xBQXlCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvcmVhY3Quc2hhcmVkLXN1YnNldC5qcz9jNjIyIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5zaGFyZWQtc3Vic2V0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnNoYXJlZC1zdWJzZXQuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6WyJwcm9jZXNzIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/compiled/react/react.shared-subset.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/lib/chalk.js":
/*!*********************************************!*\
  !*** ./node_modules/next/dist/lib/chalk.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"default\", ({\n    enumerable: true,\n    get: function() {\n        return _default;\n    }\n}));\nlet chalk;\nif (false) {} else {\n    chalk = __webpack_require__(/*! next/dist/compiled/chalk */ \"next/dist/compiled/chalk\");\n}\nconst _default = chalk; //# sourceMappingURL=chalk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9jaGFsay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsMkNBQTBDO0lBQ3RDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsSUFBSUM7QUFDSixJQUFJQyxLQUFtQyxFQUFFLEVBRXhDLE1BQU07SUFDSEQsUUFBUUksbUJBQU9BLENBQUMsMERBQTBCO0FBQzlDO0FBQ0EsTUFBTUwsV0FBV0MsT0FFakIsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvbGliL2NoYWxrLmpzPzU0OTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWZhdWx0XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBfZGVmYXVsdDtcbiAgICB9XG59KTtcbmxldCBjaGFsaztcbmlmIChwcm9jZXNzLmVudi5ORVhUX1JVTlRJTUUgPT09IFwiZWRnZVwiKSB7XG4gICAgY2hhbGsgPSByZXF1aXJlKFwiLi93ZWIvY2hhbGtcIikuZGVmYXVsdDtcbn0gZWxzZSB7XG4gICAgY2hhbGsgPSByZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL2NoYWxrXCIpO1xufVxuY29uc3QgX2RlZmF1bHQgPSBjaGFsaztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2hhbGsuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIl9kZWZhdWx0IiwiY2hhbGsiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9SVU5USU1FIiwicmVxdWlyZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/lib/chalk.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/lib/constants.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/lib/constants.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    NEXT_QUERY_PARAM_PREFIX: function() {\n        return NEXT_QUERY_PARAM_PREFIX;\n    },\n    PRERENDER_REVALIDATE_HEADER: function() {\n        return PRERENDER_REVALIDATE_HEADER;\n    },\n    PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: function() {\n        return PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER;\n    },\n    CACHE_ONE_YEAR: function() {\n        return CACHE_ONE_YEAR;\n    },\n    MIDDLEWARE_FILENAME: function() {\n        return MIDDLEWARE_FILENAME;\n    },\n    MIDDLEWARE_LOCATION_REGEXP: function() {\n        return MIDDLEWARE_LOCATION_REGEXP;\n    },\n    INSTRUMENTATION_HOOK_FILENAME: function() {\n        return INSTRUMENTATION_HOOK_FILENAME;\n    },\n    INSTRUMENTATION_HOOKS_LOCATION_REGEXP: function() {\n        return INSTRUMENTATION_HOOKS_LOCATION_REGEXP;\n    },\n    PAGES_DIR_ALIAS: function() {\n        return PAGES_DIR_ALIAS;\n    },\n    DOT_NEXT_ALIAS: function() {\n        return DOT_NEXT_ALIAS;\n    },\n    ROOT_DIR_ALIAS: function() {\n        return ROOT_DIR_ALIAS;\n    },\n    APP_DIR_ALIAS: function() {\n        return APP_DIR_ALIAS;\n    },\n    RSC_MOD_REF_PROXY_ALIAS: function() {\n        return RSC_MOD_REF_PROXY_ALIAS;\n    },\n    RSC_ACTION_VALIDATE_ALIAS: function() {\n        return RSC_ACTION_VALIDATE_ALIAS;\n    },\n    RSC_ACTION_PROXY_ALIAS: function() {\n        return RSC_ACTION_PROXY_ALIAS;\n    },\n    RSC_ACTION_CLIENT_WRAPPER_ALIAS: function() {\n        return RSC_ACTION_CLIENT_WRAPPER_ALIAS;\n    },\n    PUBLIC_DIR_MIDDLEWARE_CONFLICT: function() {\n        return PUBLIC_DIR_MIDDLEWARE_CONFLICT;\n    },\n    SSG_GET_INITIAL_PROPS_CONFLICT: function() {\n        return SSG_GET_INITIAL_PROPS_CONFLICT;\n    },\n    SERVER_PROPS_GET_INIT_PROPS_CONFLICT: function() {\n        return SERVER_PROPS_GET_INIT_PROPS_CONFLICT;\n    },\n    SERVER_PROPS_SSG_CONFLICT: function() {\n        return SERVER_PROPS_SSG_CONFLICT;\n    },\n    STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: function() {\n        return STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR;\n    },\n    SERVER_PROPS_EXPORT_ERROR: function() {\n        return SERVER_PROPS_EXPORT_ERROR;\n    },\n    GSP_NO_RETURNED_VALUE: function() {\n        return GSP_NO_RETURNED_VALUE;\n    },\n    GSSP_NO_RETURNED_VALUE: function() {\n        return GSSP_NO_RETURNED_VALUE;\n    },\n    UNSTABLE_REVALIDATE_RENAME_ERROR: function() {\n        return UNSTABLE_REVALIDATE_RENAME_ERROR;\n    },\n    GSSP_COMPONENT_MEMBER_ERROR: function() {\n        return GSSP_COMPONENT_MEMBER_ERROR;\n    },\n    NON_STANDARD_NODE_ENV: function() {\n        return NON_STANDARD_NODE_ENV;\n    },\n    SSG_FALLBACK_EXPORT_ERROR: function() {\n        return SSG_FALLBACK_EXPORT_ERROR;\n    },\n    ESLINT_DEFAULT_DIRS: function() {\n        return ESLINT_DEFAULT_DIRS;\n    },\n    ESLINT_DEFAULT_DIRS_WITH_APP: function() {\n        return ESLINT_DEFAULT_DIRS_WITH_APP;\n    },\n    ESLINT_PROMPT_VALUES: function() {\n        return ESLINT_PROMPT_VALUES;\n    },\n    SERVER_RUNTIME: function() {\n        return SERVER_RUNTIME;\n    },\n    WEBPACK_LAYERS: function() {\n        return WEBPACK_LAYERS;\n    },\n    WEBPACK_RESOURCE_QUERIES: function() {\n        return WEBPACK_RESOURCE_QUERIES;\n    }\n});\nconst NEXT_QUERY_PARAM_PREFIX = \"nxtP\";\nconst PRERENDER_REVALIDATE_HEADER = \"x-prerender-revalidate\";\nconst PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = \"x-prerender-revalidate-if-generated\";\nconst CACHE_ONE_YEAR = 31536000;\nconst MIDDLEWARE_FILENAME = \"middleware\";\nconst MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\nconst INSTRUMENTATION_HOOK_FILENAME = \"instrumentation\";\nconst INSTRUMENTATION_HOOKS_LOCATION_REGEXP = `(?:src/)?${INSTRUMENTATION_HOOK_FILENAME}`;\nconst PAGES_DIR_ALIAS = \"private-next-pages\";\nconst DOT_NEXT_ALIAS = \"private-dot-next\";\nconst ROOT_DIR_ALIAS = \"private-next-root-dir\";\nconst APP_DIR_ALIAS = \"private-next-app-dir\";\nconst RSC_MOD_REF_PROXY_ALIAS = \"next/dist/build/webpack/loaders/next-flight-loader/module-proxy\";\nconst RSC_ACTION_VALIDATE_ALIAS = \"private-next-rsc-action-validate\";\nconst RSC_ACTION_PROXY_ALIAS = \"private-next-rsc-action-proxy\";\nconst RSC_ACTION_CLIENT_WRAPPER_ALIAS = \"private-next-rsc-action-client-wrapper\";\nconst PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nconst SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nconst SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nconst SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nconst STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nconst SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nconst GSP_NO_RETURNED_VALUE = \"Your `getStaticProps` function did not return an object. Did you forget to add a `return`?\";\nconst GSSP_NO_RETURNED_VALUE = \"Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?\";\nconst UNSTABLE_REVALIDATE_RENAME_ERROR = \"The `unstable_revalidate` property is available for general use.\\n\" + \"Please use `revalidate` instead.\";\nconst GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nconst NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nconst SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nconst ESLINT_DEFAULT_DIRS = [\n    \"pages\",\n    \"components\",\n    \"lib\",\n    \"src\"\n];\nconst ESLINT_DEFAULT_DIRS_WITH_APP = [\n    \"app\",\n    ...ESLINT_DEFAULT_DIRS\n];\nconst ESLINT_PROMPT_VALUES = [\n    {\n        title: \"Strict\",\n        recommended: true,\n        config: {\n            extends: \"next/core-web-vitals\"\n        }\n    },\n    {\n        title: \"Base\",\n        config: {\n            extends: \"next\"\n        }\n    },\n    {\n        title: \"Cancel\",\n        config: null\n    }\n];\nconst SERVER_RUNTIME = {\n    edge: \"edge\",\n    experimentalEdge: \"experimental-edge\",\n    nodejs: \"nodejs\"\n};\nconst WEBPACK_LAYERS = {\n    shared: \"sc_shared\",\n    server: \"sc_server\",\n    client: \"sc_client\",\n    action: \"sc_action\",\n    api: \"api\",\n    middleware: \"middleware\",\n    edgeAsset: \"edge-asset\",\n    appClient: \"app-client\"\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: \"__next_edge_ssr_entry__\",\n    metadata: \"__next_metadata__\"\n}; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/lib/constants.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/api-utils/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/server/api-utils/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getCookieParser: function() {\n        return getCookieParser;\n    },\n    sendStatusCode: function() {\n        return sendStatusCode;\n    },\n    redirect: function() {\n        return redirect;\n    },\n    checkIsOnDemandRevalidate: function() {\n        return checkIsOnDemandRevalidate;\n    },\n    COOKIE_NAME_PRERENDER_BYPASS: function() {\n        return COOKIE_NAME_PRERENDER_BYPASS;\n    },\n    COOKIE_NAME_PRERENDER_DATA: function() {\n        return COOKIE_NAME_PRERENDER_DATA;\n    },\n    RESPONSE_LIMIT_DEFAULT: function() {\n        return RESPONSE_LIMIT_DEFAULT;\n    },\n    SYMBOL_PREVIEW_DATA: function() {\n        return SYMBOL_PREVIEW_DATA;\n    },\n    SYMBOL_CLEARED_COOKIES: function() {\n        return SYMBOL_CLEARED_COOKIES;\n    },\n    clearPreviewData: function() {\n        return clearPreviewData;\n    },\n    ApiError: function() {\n        return ApiError;\n    },\n    sendError: function() {\n        return sendError;\n    },\n    setLazyProp: function() {\n        return setLazyProp;\n    }\n});\nconst _headers = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js\");\nconst _constants = __webpack_require__(/*! ../../lib/constants */ \"(sc_server)/./node_modules/next/dist/lib/constants.js\");\nfunction getCookieParser(headers) {\n    return function parseCookie() {\n        const { cookie } = headers;\n        if (!cookie) {\n            return {};\n        }\n        const { parse: parseCookieFn } = __webpack_require__(/*! next/dist/compiled/cookie */ \"next/dist/compiled/cookie\");\n        return parseCookieFn(Array.isArray(cookie) ? cookie.join(\"; \") : cookie);\n    };\n}\nfunction sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\nfunction redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === \"string\") {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== \"number\" || typeof url !== \"string\") {\n        throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nfunction checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = _headers.HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(_constants.PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(_constants.PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nconst COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nconst COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nconst RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nconst SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nconst SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nfunction clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = __webpack_require__(/*! next/dist/compiled/cookie */ \"next/dist/compiled/cookie\");\n    const previous = res.getHeader(\"Set-Cookie\");\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === \"string\" ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\nclass ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\nfunction sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\nfunction setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/api-utils/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/async-storage/draft-mode-provider.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/server/async-storage/draft-mode-provider.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"DraftModeProvider\", ({\n    enumerable: true,\n    get: function() {\n        return DraftModeProvider;\n    }\n}));\nconst _apiutils = __webpack_require__(/*! ../api-utils */ \"(sc_server)/./node_modules/next/dist/server/api-utils/index.js\");\nclass DraftModeProvider {\n    constructor(previewProps, req, cookies, mutableCookies){\n        var _cookies_get;\n        // The logic for draftMode() is very similar to tryGetPreviewData()\n        // but Draft Mode does not have any data associated with it.\n        const isOnDemandRevalidate = previewProps && (0, _apiutils.checkIsOnDemandRevalidate)(req, previewProps).isOnDemandRevalidate;\n        const cookieValue = (_cookies_get = cookies.get(_apiutils.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n        this.isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && cookieValue === previewProps.previewModeId);\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n        this._mutableCookies = mutableCookies;\n    }\n    enable() {\n        if (!this._previewModeId) {\n            throw new Error(\"Invariant: previewProps missing previewModeId this should never happen\");\n        }\n        this._mutableCookies.set({\n            name: _apiutils.COOKIE_NAME_PRERENDER_BYPASS,\n            value: this._previewModeId,\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\"\n        });\n    }\n    disable() {\n        // To delete a cookie, set `expires` to a date in the past:\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n        this._mutableCookies.set({\n            name: _apiutils.COOKIE_NAME_PRERENDER_BYPASS,\n            value: \"\",\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            expires: new Date(0)\n        });\n    }\n} //# sourceMappingURL=draft-mode-provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hc3luYy1zdG9yYWdlL2RyYWZ0LW1vZGUtcHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILHFEQUFvRDtJQUNoREksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLG9GQUFjO0FBQ3hDLE1BQU1GO0lBQ0ZHLFlBQVlDLFlBQVksRUFBRUMsR0FBRyxFQUFFQyxPQUFPLEVBQUVDLGNBQWMsQ0FBQztRQUNuRCxJQUFJQztRQUNKLG1FQUFtRTtRQUNuRSw0REFBNEQ7UUFDNUQsTUFBTUMsdUJBQXVCTCxnQkFBZ0IsQ0FBQyxHQUFHSCxVQUFVUyx5QkFBd0IsRUFBR0wsS0FBS0QsY0FBY0s7UUFDekcsTUFBTUUsY0FBYyxDQUFDSCxlQUFlRixRQUFRUCxJQUFJRSxVQUFVVyw2QkFBNEIsS0FBTSxPQUFPLEtBQUssSUFBSUosYUFBYVg7UUFDekgsSUFBSSxDQUFDZ0IsWUFBWUMsUUFBUSxDQUFDTCx3QkFBd0JFLGVBQWVQLGdCQUFnQk8sZ0JBQWdCUCxhQUFhVztRQUM5RyxJQUFJLENBQUNDLGlCQUFpQlosZ0JBQWdCLE9BQU8sS0FBSyxJQUFJQSxhQUFhVztRQUNuRSxJQUFJLENBQUNFLGtCQUFrQlY7SUFDM0I7SUFDQVcsU0FBUztRQUNMLElBQUksQ0FBQyxJQUFJLENBQUNGLGdCQUFnQjtZQUN0QixNQUFNLElBQUlHLE1BQU07UUFDcEI7UUFDQSxJQUFJLENBQUNGLGdCQUFnQkcsSUFBSTtZQUNyQkMsTUFBTXBCLFVBQVVXO1lBQ2hCZixPQUFPLElBQUksQ0FBQ21CO1lBQ1pNLFVBQVU7WUFDVkMsVUFBVUMsTUFBc0MsR0FBRyxDQUFNLEdBQUc7WUFDNURDLFFBQVFELGtCQUF5QjtZQUNqQ0UsTUFBTTtRQUNWO0lBQ0o7SUFDQUMsVUFBVTtRQUNOLDJEQUEyRDtRQUMzRCxvREFBb0Q7UUFDcEQsd0VBQXdFO1FBQ3hFLElBQUksQ0FBQ1YsZ0JBQWdCRyxJQUFJO1lBQ3JCQyxNQUFNcEIsVUFBVVc7WUFDaEJmLE9BQU87WUFDUHlCLFVBQVU7WUFDVkMsVUFBVUMsTUFBc0MsR0FBRyxDQUFNLEdBQUc7WUFDNURDLFFBQVFELGtCQUF5QjtZQUNqQ0UsTUFBTTtZQUNORSxTQUFTLElBQUlDLEtBQUs7UUFDdEI7SUFDSjtBQUNKLEVBRUEsK0NBQStDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2FzeW5jLXN0b3JhZ2UvZHJhZnQtbW9kZS1wcm92aWRlci5qcz84N2RjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRHJhZnRNb2RlUHJvdmlkZXJcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIERyYWZ0TW9kZVByb3ZpZGVyO1xuICAgIH1cbn0pO1xuY29uc3QgX2FwaXV0aWxzID0gcmVxdWlyZShcIi4uL2FwaS11dGlsc1wiKTtcbmNsYXNzIERyYWZ0TW9kZVByb3ZpZGVyIHtcbiAgICBjb25zdHJ1Y3RvcihwcmV2aWV3UHJvcHMsIHJlcSwgY29va2llcywgbXV0YWJsZUNvb2tpZXMpe1xuICAgICAgICB2YXIgX2Nvb2tpZXNfZ2V0O1xuICAgICAgICAvLyBUaGUgbG9naWMgZm9yIGRyYWZ0TW9kZSgpIGlzIHZlcnkgc2ltaWxhciB0byB0cnlHZXRQcmV2aWV3RGF0YSgpXG4gICAgICAgIC8vIGJ1dCBEcmFmdCBNb2RlIGRvZXMgbm90IGhhdmUgYW55IGRhdGEgYXNzb2NpYXRlZCB3aXRoIGl0LlxuICAgICAgICBjb25zdCBpc09uRGVtYW5kUmV2YWxpZGF0ZSA9IHByZXZpZXdQcm9wcyAmJiAoMCwgX2FwaXV0aWxzLmNoZWNrSXNPbkRlbWFuZFJldmFsaWRhdGUpKHJlcSwgcHJldmlld1Byb3BzKS5pc09uRGVtYW5kUmV2YWxpZGF0ZTtcbiAgICAgICAgY29uc3QgY29va2llVmFsdWUgPSAoX2Nvb2tpZXNfZ2V0ID0gY29va2llcy5nZXQoX2FwaXV0aWxzLkNPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MpKSA9PSBudWxsID8gdm9pZCAwIDogX2Nvb2tpZXNfZ2V0LnZhbHVlO1xuICAgICAgICB0aGlzLmlzRW5hYmxlZCA9IEJvb2xlYW4oIWlzT25EZW1hbmRSZXZhbGlkYXRlICYmIGNvb2tpZVZhbHVlICYmIHByZXZpZXdQcm9wcyAmJiBjb29raWVWYWx1ZSA9PT0gcHJldmlld1Byb3BzLnByZXZpZXdNb2RlSWQpO1xuICAgICAgICB0aGlzLl9wcmV2aWV3TW9kZUlkID0gcHJldmlld1Byb3BzID09IG51bGwgPyB2b2lkIDAgOiBwcmV2aWV3UHJvcHMucHJldmlld01vZGVJZDtcbiAgICAgICAgdGhpcy5fbXV0YWJsZUNvb2tpZXMgPSBtdXRhYmxlQ29va2llcztcbiAgICB9XG4gICAgZW5hYmxlKCkge1xuICAgICAgICBpZiAoIXRoaXMuX3ByZXZpZXdNb2RlSWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogcHJldmlld1Byb3BzIG1pc3NpbmcgcHJldmlld01vZGVJZCB0aGlzIHNob3VsZCBuZXZlciBoYXBwZW5cIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fbXV0YWJsZUNvb2tpZXMuc2V0KHtcbiAgICAgICAgICAgIG5hbWU6IF9hcGl1dGlscy5DT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTLFxuICAgICAgICAgICAgdmFsdWU6IHRoaXMuX3ByZXZpZXdNb2RlSWQsXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiID8gXCJub25lXCIgOiBcImxheFwiLFxuICAgICAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiLFxuICAgICAgICAgICAgcGF0aDogXCIvXCJcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIC8vIFRvIGRlbGV0ZSBhIGNvb2tpZSwgc2V0IGBleHBpcmVzYCB0byBhIGRhdGUgaW4gdGhlIHBhc3Q6XG4gICAgICAgIC8vIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2MjY1I3NlY3Rpb24tNC4xLjFcbiAgICAgICAgLy8gYE1heC1BZ2U6IDBgIGlzIG5vdCB2YWxpZCwgdGh1cyBpZ25vcmVkLCBhbmQgdGhlIGNvb2tpZSBpcyBwZXJzaXN0ZWQuXG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzLnNldCh7XG4gICAgICAgICAgICBuYW1lOiBfYXBpdXRpbHMuQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUyxcbiAgICAgICAgICAgIHZhbHVlOiBcIlwiLFxuICAgICAgICAgICAgaHR0cE9ubHk6IHRydWUsXG4gICAgICAgICAgICBzYW1lU2l0ZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwiZGV2ZWxvcG1lbnRcIiA/IFwibm9uZVwiIDogXCJsYXhcIixcbiAgICAgICAgICAgIHNlY3VyZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwiZGV2ZWxvcG1lbnRcIixcbiAgICAgICAgICAgIHBhdGg6IFwiL1wiLFxuICAgICAgICAgICAgZXhwaXJlczogbmV3IERhdGUoMClcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kcmFmdC1tb2RlLXByb3ZpZGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJEcmFmdE1vZGVQcm92aWRlciIsIl9hcGl1dGlscyIsInJlcXVpcmUiLCJjb25zdHJ1Y3RvciIsInByZXZpZXdQcm9wcyIsInJlcSIsImNvb2tpZXMiLCJtdXRhYmxlQ29va2llcyIsIl9jb29raWVzX2dldCIsImlzT25EZW1hbmRSZXZhbGlkYXRlIiwiY2hlY2tJc09uRGVtYW5kUmV2YWxpZGF0ZSIsImNvb2tpZVZhbHVlIiwiQ09PS0lFX05BTUVfUFJFUkVOREVSX0JZUEFTUyIsImlzRW5hYmxlZCIsIkJvb2xlYW4iLCJwcmV2aWV3TW9kZUlkIiwiX3ByZXZpZXdNb2RlSWQiLCJfbXV0YWJsZUNvb2tpZXMiLCJlbmFibGUiLCJFcnJvciIsInNldCIsIm5hbWUiLCJodHRwT25seSIsInNhbWVTaXRlIiwicHJvY2VzcyIsInNlY3VyZSIsInBhdGgiLCJkaXNhYmxlIiwiZXhwaXJlcyIsIkRhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/async-storage/draft-mode-provider.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/async-storage/request-async-storage-wrapper.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/server/async-storage/request-async-storage-wrapper.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RequestAsyncStorageWrapper\", ({\n    enumerable: true,\n    get: function() {\n        return RequestAsyncStorageWrapper;\n    }\n}));\nconst _approuterheaders = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(sc_server)/./node_modules/next/dist/client/components/app-router-headers.js\");\nconst _headers = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js\");\nconst _requestcookies = __webpack_require__(/*! ../web/spec-extension/adapters/request-cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\");\nconst _cookies = __webpack_require__(/*! ../web/spec-extension/cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/cookies.js\");\nconst _draftmodeprovider = __webpack_require__(/*! ./draft-mode-provider */ \"(sc_server)/./node_modules/next/dist/server/async-storage/draft-mode-provider.js\");\nfunction getHeaders(headers) {\n    const cleaned = _headers.HeadersAdapter.from(headers);\n    for (const param of _approuterheaders.FLIGHT_PARAMETERS){\n        cleaned.delete(param.toString().toLowerCase());\n    }\n    return _headers.HeadersAdapter.seal(cleaned);\n}\nfunction getCookies(headers) {\n    const cookies = new _cookies.RequestCookies(_headers.HeadersAdapter.from(headers));\n    return _requestcookies.RequestCookiesAdapter.seal(cookies);\n}\nfunction getMutableCookies(headers, res) {\n    const cookies = new _cookies.RequestCookies(_headers.HeadersAdapter.from(headers));\n    return _requestcookies.MutableRequestCookiesAdapter.wrap(cookies, res);\n}\nconst RequestAsyncStorageWrapper = {\n    /**\n   * Wrap the callback with the given store so it can access the underlying\n   * store using hooks.\n   *\n   * @param storage underlying storage object returned by the module\n   * @param context context to seed the store\n   * @param callback function to call within the scope of the context\n   * @returns the result returned by the callback\n   */ wrap (storage, { req, res, renderOpts }, callback) {\n        let previewProps = undefined;\n        if (renderOpts && \"previewProps\" in renderOpts) {\n            // TODO: investigate why previewProps isn't on RenderOpts\n            previewProps = renderOpts.previewProps;\n        }\n        const cache = {};\n        const store = {\n            get headers () {\n                if (!cache.headers) {\n                    // Seal the headers object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.headers = getHeaders(req.headers);\n                }\n                return cache.headers;\n            },\n            get cookies () {\n                if (!cache.cookies) {\n                    // Seal the cookies object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.cookies = getCookies(req.headers);\n                }\n                return cache.cookies;\n            },\n            get mutableCookies () {\n                if (!cache.mutableCookies) {\n                    cache.mutableCookies = getMutableCookies(req.headers, res);\n                }\n                return cache.mutableCookies;\n            },\n            get draftMode () {\n                if (!cache.draftMode) {\n                    cache.draftMode = new _draftmodeprovider.DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n                }\n                return cache.draftMode;\n            }\n        };\n        return storage.run(store, callback, store);\n    }\n}; //# sourceMappingURL=request-async-storage-wrapper.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hc3luYy1zdG9yYWdlL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS13cmFwcGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCw4REFBNkQ7SUFDekRJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQyxvQkFBb0JDLG1CQUFPQSxDQUFDLGdJQUE0QztBQUM5RSxNQUFNQyxXQUFXRCxtQkFBT0EsQ0FBQyxrSUFBd0M7QUFDakUsTUFBTUUsa0JBQWtCRixtQkFBT0EsQ0FBQyxrSkFBZ0Q7QUFDaEYsTUFBTUcsV0FBV0gsbUJBQU9BLENBQUMsZ0hBQStCO0FBQ3hELE1BQU1JLHFCQUFxQkosbUJBQU9BLENBQUMsK0dBQXVCO0FBQzFELFNBQVNLLFdBQVdDLE9BQU87SUFDdkIsTUFBTUMsVUFBVU4sU0FBU08sZUFBZUMsS0FBS0g7SUFDN0MsS0FBSyxNQUFNSSxTQUFTWCxrQkFBa0JZLGtCQUFrQjtRQUNwREosUUFBUUssT0FBT0YsTUFBTUcsV0FBV0M7SUFDcEM7SUFDQSxPQUFPYixTQUFTTyxlQUFlTyxLQUFLUjtBQUN4QztBQUNBLFNBQVNTLFdBQVdWLE9BQU87SUFDdkIsTUFBTVcsVUFBVSxJQUFJZCxTQUFTZSxlQUFlakIsU0FBU08sZUFBZUMsS0FBS0g7SUFDekUsT0FBT0osZ0JBQWdCaUIsc0JBQXNCSixLQUFLRTtBQUN0RDtBQUNBLFNBQVNHLGtCQUFrQmQsT0FBTyxFQUFFZSxHQUFHO0lBQ25DLE1BQU1KLFVBQVUsSUFBSWQsU0FBU2UsZUFBZWpCLFNBQVNPLGVBQWVDLEtBQUtIO0lBQ3pFLE9BQU9KLGdCQUFnQm9CLDZCQUE2QkMsS0FBS04sU0FBU0k7QUFDdEU7QUFDQSxNQUFNdkIsNkJBQTZCO0lBQy9COzs7Ozs7OztHQVFELEdBQUd5QixNQUFNQyxPQUFPLEVBQUUsRUFBRUMsR0FBRyxFQUFHSixHQUFHLEVBQUdLLFVBQVUsRUFBRyxFQUFFQyxRQUFRO1FBQ2xELElBQUlDLGVBQWVDO1FBQ25CLElBQUlILGNBQWMsa0JBQWtCQSxZQUFZO1lBQzVDLHlEQUF5RDtZQUN6REUsZUFBZUYsV0FBV0U7UUFDOUI7UUFDQSxNQUFNRSxRQUFRLENBQUM7UUFDZixNQUFNQyxRQUFRO1lBQ1YsSUFBSXpCLFdBQVc7Z0JBQ1gsSUFBSSxDQUFDd0IsTUFBTXhCLFNBQVM7b0JBQ2hCLG9FQUFvRTtvQkFDcEUsOEJBQThCO29CQUM5QndCLE1BQU14QixVQUFVRCxXQUFXb0IsSUFBSW5CO2dCQUNuQztnQkFDQSxPQUFPd0IsTUFBTXhCO1lBQ2pCO1lBQ0EsSUFBSVcsV0FBVztnQkFDWCxJQUFJLENBQUNhLE1BQU1iLFNBQVM7b0JBQ2hCLG9FQUFvRTtvQkFDcEUsOEJBQThCO29CQUM5QmEsTUFBTWIsVUFBVUQsV0FBV1MsSUFBSW5CO2dCQUNuQztnQkFDQSxPQUFPd0IsTUFBTWI7WUFDakI7WUFDQSxJQUFJZSxrQkFBa0I7Z0JBQ2xCLElBQUksQ0FBQ0YsTUFBTUUsZ0JBQWdCO29CQUN2QkYsTUFBTUUsaUJBQWlCWixrQkFBa0JLLElBQUluQixTQUFTZTtnQkFDMUQ7Z0JBQ0EsT0FBT1MsTUFBTUU7WUFDakI7WUFDQSxJQUFJQyxhQUFhO2dCQUNiLElBQUksQ0FBQ0gsTUFBTUcsV0FBVztvQkFDbEJILE1BQU1HLFlBQVksSUFBSTdCLG1CQUFtQjhCLGtCQUFrQk4sY0FBY0gsS0FBSyxJQUFJLENBQUNSLFNBQVMsSUFBSSxDQUFDZTtnQkFDckc7Z0JBQ0EsT0FBT0YsTUFBTUc7WUFDakI7UUFDSjtRQUNBLE9BQU9ULFFBQVFXLElBQUlKLE9BQU9KLFVBQVVJO0lBQ3hDO0FBQ0osR0FFQSx5REFBeUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvYXN5bmMtc3RvcmFnZS9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcz83MDg3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVxdWVzdEFzeW5jU3RvcmFnZVdyYXBwZXJcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFJlcXVlc3RBc3luY1N0b3JhZ2VXcmFwcGVyO1xuICAgIH1cbn0pO1xuY29uc3QgX2FwcHJvdXRlcmhlYWRlcnMgPSByZXF1aXJlKFwiLi4vLi4vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzXCIpO1xuY29uc3QgX2hlYWRlcnMgPSByZXF1aXJlKFwiLi4vd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL2hlYWRlcnNcIik7XG5jb25zdCBfcmVxdWVzdGNvb2tpZXMgPSByZXF1aXJlKFwiLi4vd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL3JlcXVlc3QtY29va2llc1wiKTtcbmNvbnN0IF9jb29raWVzID0gcmVxdWlyZShcIi4uL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzXCIpO1xuY29uc3QgX2RyYWZ0bW9kZXByb3ZpZGVyID0gcmVxdWlyZShcIi4vZHJhZnQtbW9kZS1wcm92aWRlclwiKTtcbmZ1bmN0aW9uIGdldEhlYWRlcnMoaGVhZGVycykge1xuICAgIGNvbnN0IGNsZWFuZWQgPSBfaGVhZGVycy5IZWFkZXJzQWRhcHRlci5mcm9tKGhlYWRlcnMpO1xuICAgIGZvciAoY29uc3QgcGFyYW0gb2YgX2FwcHJvdXRlcmhlYWRlcnMuRkxJR0hUX1BBUkFNRVRFUlMpe1xuICAgICAgICBjbGVhbmVkLmRlbGV0ZShwYXJhbS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkpO1xuICAgIH1cbiAgICByZXR1cm4gX2hlYWRlcnMuSGVhZGVyc0FkYXB0ZXIuc2VhbChjbGVhbmVkKTtcbn1cbmZ1bmN0aW9uIGdldENvb2tpZXMoaGVhZGVycykge1xuICAgIGNvbnN0IGNvb2tpZXMgPSBuZXcgX2Nvb2tpZXMuUmVxdWVzdENvb2tpZXMoX2hlYWRlcnMuSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKSk7XG4gICAgcmV0dXJuIF9yZXF1ZXN0Y29va2llcy5SZXF1ZXN0Q29va2llc0FkYXB0ZXIuc2VhbChjb29raWVzKTtcbn1cbmZ1bmN0aW9uIGdldE11dGFibGVDb29raWVzKGhlYWRlcnMsIHJlcykge1xuICAgIGNvbnN0IGNvb2tpZXMgPSBuZXcgX2Nvb2tpZXMuUmVxdWVzdENvb2tpZXMoX2hlYWRlcnMuSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKSk7XG4gICAgcmV0dXJuIF9yZXF1ZXN0Y29va2llcy5NdXRhYmxlUmVxdWVzdENvb2tpZXNBZGFwdGVyLndyYXAoY29va2llcywgcmVzKTtcbn1cbmNvbnN0IFJlcXVlc3RBc3luY1N0b3JhZ2VXcmFwcGVyID0ge1xuICAgIC8qKlxuICAgKiBXcmFwIHRoZSBjYWxsYmFjayB3aXRoIHRoZSBnaXZlbiBzdG9yZSBzbyBpdCBjYW4gYWNjZXNzIHRoZSB1bmRlcmx5aW5nXG4gICAqIHN0b3JlIHVzaW5nIGhvb2tzLlxuICAgKlxuICAgKiBAcGFyYW0gc3RvcmFnZSB1bmRlcmx5aW5nIHN0b3JhZ2Ugb2JqZWN0IHJldHVybmVkIGJ5IHRoZSBtb2R1bGVcbiAgICogQHBhcmFtIGNvbnRleHQgY29udGV4dCB0byBzZWVkIHRoZSBzdG9yZVxuICAgKiBAcGFyYW0gY2FsbGJhY2sgZnVuY3Rpb24gdG8gY2FsbCB3aXRoaW4gdGhlIHNjb3BlIG9mIHRoZSBjb250ZXh0XG4gICAqIEByZXR1cm5zIHRoZSByZXN1bHQgcmV0dXJuZWQgYnkgdGhlIGNhbGxiYWNrXG4gICAqLyB3cmFwIChzdG9yYWdlLCB7IHJlcSAsIHJlcyAsIHJlbmRlck9wdHMgIH0sIGNhbGxiYWNrKSB7XG4gICAgICAgIGxldCBwcmV2aWV3UHJvcHMgPSB1bmRlZmluZWQ7XG4gICAgICAgIGlmIChyZW5kZXJPcHRzICYmIFwicHJldmlld1Byb3BzXCIgaW4gcmVuZGVyT3B0cykge1xuICAgICAgICAgICAgLy8gVE9ETzogaW52ZXN0aWdhdGUgd2h5IHByZXZpZXdQcm9wcyBpc24ndCBvbiBSZW5kZXJPcHRzXG4gICAgICAgICAgICBwcmV2aWV3UHJvcHMgPSByZW5kZXJPcHRzLnByZXZpZXdQcm9wcztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjYWNoZSA9IHt9O1xuICAgICAgICBjb25zdCBzdG9yZSA9IHtcbiAgICAgICAgICAgIGdldCBoZWFkZXJzICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNhY2hlLmhlYWRlcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2VhbCB0aGUgaGVhZGVycyBvYmplY3QgdGhhdCdsbCBmcmVlemUgb3V0IGFueSBtZXRob2RzIHRoYXQgY291bGRcbiAgICAgICAgICAgICAgICAgICAgLy8gbXV0YXRlIHRoZSB1bmRlcmx5aW5nIGRhdGEuXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLmhlYWRlcnMgPSBnZXRIZWFkZXJzKHJlcS5oZWFkZXJzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlLmhlYWRlcnM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNvb2tpZXMgKCkge1xuICAgICAgICAgICAgICAgIGlmICghY2FjaGUuY29va2llcykge1xuICAgICAgICAgICAgICAgICAgICAvLyBTZWFsIHRoZSBjb29raWVzIG9iamVjdCB0aGF0J2xsIGZyZWV6ZSBvdXQgYW55IG1ldGhvZHMgdGhhdCBjb3VsZFxuICAgICAgICAgICAgICAgICAgICAvLyBtdXRhdGUgdGhlIHVuZGVybHlpbmcgZGF0YS5cbiAgICAgICAgICAgICAgICAgICAgY2FjaGUuY29va2llcyA9IGdldENvb2tpZXMocmVxLmhlYWRlcnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuY29va2llcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgbXV0YWJsZUNvb2tpZXMgKCkge1xuICAgICAgICAgICAgICAgIGlmICghY2FjaGUubXV0YWJsZUNvb2tpZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGUubXV0YWJsZUNvb2tpZXMgPSBnZXRNdXRhYmxlQ29va2llcyhyZXEuaGVhZGVycywgcmVzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlLm11dGFibGVDb29raWVzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBkcmFmdE1vZGUgKCkge1xuICAgICAgICAgICAgICAgIGlmICghY2FjaGUuZHJhZnRNb2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLmRyYWZ0TW9kZSA9IG5ldyBfZHJhZnRtb2RlcHJvdmlkZXIuRHJhZnRNb2RlUHJvdmlkZXIocHJldmlld1Byb3BzLCByZXEsIHRoaXMuY29va2llcywgdGhpcy5tdXRhYmxlQ29va2llcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZS5kcmFmdE1vZGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBzdG9yYWdlLnJ1bihzdG9yZSwgY2FsbGJhY2ssIHN0b3JlKTtcbiAgICB9XG59O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiUmVxdWVzdEFzeW5jU3RvcmFnZVdyYXBwZXIiLCJfYXBwcm91dGVyaGVhZGVycyIsInJlcXVpcmUiLCJfaGVhZGVycyIsIl9yZXF1ZXN0Y29va2llcyIsIl9jb29raWVzIiwiX2RyYWZ0bW9kZXByb3ZpZGVyIiwiZ2V0SGVhZGVycyIsImhlYWRlcnMiLCJjbGVhbmVkIiwiSGVhZGVyc0FkYXB0ZXIiLCJmcm9tIiwicGFyYW0iLCJGTElHSFRfUEFSQU1FVEVSUyIsImRlbGV0ZSIsInRvU3RyaW5nIiwidG9Mb3dlckNhc2UiLCJzZWFsIiwiZ2V0Q29va2llcyIsImNvb2tpZXMiLCJSZXF1ZXN0Q29va2llcyIsIlJlcXVlc3RDb29raWVzQWRhcHRlciIsImdldE11dGFibGVDb29raWVzIiwicmVzIiwiTXV0YWJsZVJlcXVlc3RDb29raWVzQWRhcHRlciIsIndyYXAiLCJzdG9yYWdlIiwicmVxIiwicmVuZGVyT3B0cyIsImNhbGxiYWNrIiwicHJldmlld1Byb3BzIiwidW5kZWZpbmVkIiwiY2FjaGUiLCJzdG9yZSIsIm11dGFibGVDb29raWVzIiwiZHJhZnRNb2RlIiwiRHJhZnRNb2RlUHJvdmlkZXIiLCJydW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/async-storage/request-async-storage-wrapper.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/async-storage/static-generation-async-storage-wrapper.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/next/dist/server/async-storage/static-generation-async-storage-wrapper.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"StaticGenerationAsyncStorageWrapper\", ({\n    enumerable: true,\n    get: function() {\n        return StaticGenerationAsyncStorageWrapper;\n    }\n}));\nconst StaticGenerationAsyncStorageWrapper = {\n    wrap (storage, { pathname, renderOpts }, callback) {\n        /**\n     * Rules of Static & Dynamic HTML:\n     *\n     *    1.) We must generate static HTML unless the caller explicitly opts\n     *        in to dynamic HTML support.\n     *\n     *    2.) If dynamic HTML support is requested, we must honor that request\n     *        or throw an error. It is the sole responsibility of the caller to\n     *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n     *\n     *    3.) If the request is in draft mode, we must generate dynamic HTML.\n     *\n     * These rules help ensure that other existing features like request caching,\n     * coalescing, and ISR continue working as intended.\n     */ const isStaticGeneration = !renderOpts.supportsDynamicHTML && !renderOpts.isBot && !renderOpts.isDraftMode;\n        const store = {\n            isStaticGeneration,\n            pathname,\n            originalPathname: renderOpts.originalPathname,\n            incrementalCache: // so that it can access the fs cache without mocks\n            renderOpts.incrementalCache || globalThis.__incrementalCache,\n            isRevalidate: renderOpts.isRevalidate,\n            isPrerendering: renderOpts.nextExport,\n            fetchCache: renderOpts.fetchCache,\n            isOnDemandRevalidate: renderOpts.isOnDemandRevalidate\n        };\n        // TODO: remove this when we resolve accessing the store outside the execution context\n        renderOpts.store = store;\n        return storage.run(store, callback, store);\n    }\n}; //# sourceMappingURL=static-generation-async-storage-wrapper.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hc3luYy1zdG9yYWdlL3N0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsdUVBQXNFO0lBQ2xFSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUEsc0NBQXNDO0lBQ3hDQyxNQUFNQyxPQUFPLEVBQUUsRUFBRUMsUUFBUSxFQUFHQyxVQUFVLEVBQUcsRUFBRUMsUUFBUTtRQUMvQzs7Ozs7Ozs7Ozs7Ozs7S0FjSCxHQUFHLE1BQU1DLHFCQUFxQixDQUFDRixXQUFXRyx1QkFBdUIsQ0FBQ0gsV0FBV0ksU0FBUyxDQUFDSixXQUFXSztRQUMvRixNQUFNQyxRQUFRO1lBQ1ZKO1lBQ0FIO1lBQ0FRLGtCQUFrQlAsV0FBV087WUFDN0JDLGtCQUNBLG1EQUFtRDtZQUNuRFIsV0FBV1Esb0JBQW9CQyxXQUFXQztZQUMxQ0MsY0FBY1gsV0FBV1c7WUFDekJDLGdCQUFnQlosV0FBV2E7WUFDM0JDLFlBQVlkLFdBQVdjO1lBQ3ZCQyxzQkFBc0JmLFdBQVdlO1FBQ3JDO1FBQ0Esc0ZBQXNGO1FBQ3RGZixXQUFXTSxRQUFRQTtRQUNuQixPQUFPUixRQUFRa0IsSUFBSVYsT0FBT0wsVUFBVUs7SUFDeEM7QUFDSixHQUVBLG1FQUFtRSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9hc3luYy1zdG9yYWdlL3N0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcz9hODgxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVdyYXBwZXJcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VXcmFwcGVyO1xuICAgIH1cbn0pO1xuY29uc3QgU3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVdyYXBwZXIgPSB7XG4gICAgd3JhcCAoc3RvcmFnZSwgeyBwYXRobmFtZSAsIHJlbmRlck9wdHMgIH0sIGNhbGxiYWNrKSB7XG4gICAgICAgIC8qKlxuICAgICAqIFJ1bGVzIG9mIFN0YXRpYyAmIER5bmFtaWMgSFRNTDpcbiAgICAgKlxuICAgICAqICAgIDEuKSBXZSBtdXN0IGdlbmVyYXRlIHN0YXRpYyBIVE1MIHVubGVzcyB0aGUgY2FsbGVyIGV4cGxpY2l0bHkgb3B0c1xuICAgICAqICAgICAgICBpbiB0byBkeW5hbWljIEhUTUwgc3VwcG9ydC5cbiAgICAgKlxuICAgICAqICAgIDIuKSBJZiBkeW5hbWljIEhUTUwgc3VwcG9ydCBpcyByZXF1ZXN0ZWQsIHdlIG11c3QgaG9ub3IgdGhhdCByZXF1ZXN0XG4gICAgICogICAgICAgIG9yIHRocm93IGFuIGVycm9yLiBJdCBpcyB0aGUgc29sZSByZXNwb25zaWJpbGl0eSBvZiB0aGUgY2FsbGVyIHRvXG4gICAgICogICAgICAgIGVuc3VyZSB0aGV5IGFyZW4ndCBlLmcuIHJlcXVlc3RpbmcgZHluYW1pYyBIVE1MIGZvciBhbiBBTVAgcGFnZS5cbiAgICAgKlxuICAgICAqICAgIDMuKSBJZiB0aGUgcmVxdWVzdCBpcyBpbiBkcmFmdCBtb2RlLCB3ZSBtdXN0IGdlbmVyYXRlIGR5bmFtaWMgSFRNTC5cbiAgICAgKlxuICAgICAqIFRoZXNlIHJ1bGVzIGhlbHAgZW5zdXJlIHRoYXQgb3RoZXIgZXhpc3RpbmcgZmVhdHVyZXMgbGlrZSByZXF1ZXN0IGNhY2hpbmcsXG4gICAgICogY29hbGVzY2luZywgYW5kIElTUiBjb250aW51ZSB3b3JraW5nIGFzIGludGVuZGVkLlxuICAgICAqLyBjb25zdCBpc1N0YXRpY0dlbmVyYXRpb24gPSAhcmVuZGVyT3B0cy5zdXBwb3J0c0R5bmFtaWNIVE1MICYmICFyZW5kZXJPcHRzLmlzQm90ICYmICFyZW5kZXJPcHRzLmlzRHJhZnRNb2RlO1xuICAgICAgICBjb25zdCBzdG9yZSA9IHtcbiAgICAgICAgICAgIGlzU3RhdGljR2VuZXJhdGlvbixcbiAgICAgICAgICAgIHBhdGhuYW1lLFxuICAgICAgICAgICAgb3JpZ2luYWxQYXRobmFtZTogcmVuZGVyT3B0cy5vcmlnaW5hbFBhdGhuYW1lLFxuICAgICAgICAgICAgaW5jcmVtZW50YWxDYWNoZTogLy8gd2UgZmFsbGJhY2sgdG8gYSBnbG9iYWwgaW5jcmVtZW50YWwgY2FjaGUgZm9yIGVkZ2UtcnVudGltZSBsb2NhbGx5XG4gICAgICAgICAgICAvLyBzbyB0aGF0IGl0IGNhbiBhY2Nlc3MgdGhlIGZzIGNhY2hlIHdpdGhvdXQgbW9ja3NcbiAgICAgICAgICAgIHJlbmRlck9wdHMuaW5jcmVtZW50YWxDYWNoZSB8fCBnbG9iYWxUaGlzLl9faW5jcmVtZW50YWxDYWNoZSxcbiAgICAgICAgICAgIGlzUmV2YWxpZGF0ZTogcmVuZGVyT3B0cy5pc1JldmFsaWRhdGUsXG4gICAgICAgICAgICBpc1ByZXJlbmRlcmluZzogcmVuZGVyT3B0cy5uZXh0RXhwb3J0LFxuICAgICAgICAgICAgZmV0Y2hDYWNoZTogcmVuZGVyT3B0cy5mZXRjaENhY2hlLFxuICAgICAgICAgICAgaXNPbkRlbWFuZFJldmFsaWRhdGU6IHJlbmRlck9wdHMuaXNPbkRlbWFuZFJldmFsaWRhdGVcbiAgICAgICAgfTtcbiAgICAgICAgLy8gVE9ETzogcmVtb3ZlIHRoaXMgd2hlbiB3ZSByZXNvbHZlIGFjY2Vzc2luZyB0aGUgc3RvcmUgb3V0c2lkZSB0aGUgZXhlY3V0aW9uIGNvbnRleHRcbiAgICAgICAgcmVuZGVyT3B0cy5zdG9yZSA9IHN0b3JlO1xuICAgICAgICByZXR1cm4gc3RvcmFnZS5ydW4oc3RvcmUsIGNhbGxiYWNrLCBzdG9yZSk7XG4gICAgfVxufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS13cmFwcGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJTdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlV3JhcHBlciIsIndyYXAiLCJzdG9yYWdlIiwicGF0aG5hbWUiLCJyZW5kZXJPcHRzIiwiY2FsbGJhY2siLCJpc1N0YXRpY0dlbmVyYXRpb24iLCJzdXBwb3J0c0R5bmFtaWNIVE1MIiwiaXNCb3QiLCJpc0RyYWZ0TW9kZSIsInN0b3JlIiwib3JpZ2luYWxQYXRobmFtZSIsImluY3JlbWVudGFsQ2FjaGUiLCJnbG9iYWxUaGlzIiwiX19pbmNyZW1lbnRhbENhY2hlIiwiaXNSZXZhbGlkYXRlIiwiaXNQcmVyZW5kZXJpbmciLCJuZXh0RXhwb3J0IiwiZmV0Y2hDYWNoZSIsImlzT25EZW1hbmRSZXZhbGlkYXRlIiwicnVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/async-storage/static-generation-async-storage-wrapper.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/auto-implement-methods.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/helpers/auto-implement-methods.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"autoImplementMethods\", ({\n    enumerable: true,\n    get: function() {\n        return autoImplementMethods;\n    }\n}));\nconst _http = __webpack_require__(/*! ../../../../web/http */ \"(sc_server)/./node_modules/next/dist/server/web/http.js\");\nconst _responsehandlers = __webpack_require__(/*! ../../helpers/response-handlers */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/helpers/response-handlers.js\");\nconst AUTOMATIC_ROUTE_METHODS = [\n    \"HEAD\",\n    \"OPTIONS\"\n];\nfunction autoImplementMethods(handlers) {\n    // Loop through all the HTTP methods to create the initial methods object.\n    // Each of the methods will be set to the the 405 response handler.\n    const methods = _http.HTTP_METHODS.reduce((acc, method)=>({\n            ...acc,\n            // If the userland module implements the method, then use it. Otherwise,\n            // use the 405 response handler.\n            [method]: handlers[method] ?? _responsehandlers.handleMethodNotAllowedResponse\n        }), {});\n    // Get all the methods that could be automatically implemented that were not\n    // implemented by the userland module.\n    const implemented = new Set(_http.HTTP_METHODS.filter((method)=>handlers[method]));\n    const missing = AUTOMATIC_ROUTE_METHODS.filter((method)=>!implemented.has(method));\n    // Loop over the missing methods to automatically implement them if we can.\n    for (const method of missing){\n        // If the userland module doesn't implement the HEAD method, then\n        // we'll automatically implement it by calling the GET method (if it\n        // exists).\n        if (method === \"HEAD\") {\n            // If the userland module doesn't implement the GET method, then\n            // we're done.\n            if (!handlers.GET) break;\n            // Implement the HEAD method by calling the GET method.\n            methods.HEAD = handlers.GET;\n            // Mark it as implemented.\n            implemented.add(\"HEAD\");\n            continue;\n        }\n        // If OPTIONS is not provided then implement it.\n        if (method === \"OPTIONS\") {\n            // TODO: check if HEAD is implemented, if so, use it to add more headers\n            // Get all the methods that were implemented by the userland module.\n            const allow = [\n                \"OPTIONS\",\n                ...implemented\n            ];\n            // If the list of methods doesn't include HEAD, but it includes GET, then\n            // add HEAD as it's automatically implemented.\n            if (!implemented.has(\"HEAD\") && implemented.has(\"GET\")) {\n                allow.push(\"HEAD\");\n            }\n            // Sort and join the list with commas to create the `Allow` header. See:\n            // https://httpwg.org/specs/rfc9110.html#field.allow\n            const headers = {\n                Allow: allow.sort().join(\", \")\n            };\n            // Implement the OPTIONS method by returning a 204 response with the\n            // `Allow` header.\n            methods.OPTIONS = ()=>new Response(null, {\n                    status: 204,\n                    headers\n                });\n            // Mark this method as implemented.\n            implemented.add(\"OPTIONS\");\n            continue;\n        }\n        throw new Error(`Invariant: should handle all automatic implementable methods, got method: ${method}`);\n    }\n    return methods;\n} //# sourceMappingURL=auto-implement-methods.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9hdXRvLWltcGxlbWVudC1tZXRob2RzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCx3REFBdUQ7SUFDbkRJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQyxRQUFRQyxtQkFBT0EsQ0FBQyxxRkFBc0I7QUFDNUMsTUFBTUMsb0JBQW9CRCxtQkFBT0EsQ0FBQyxzSUFBaUM7QUFDbkUsTUFBTUUsMEJBQTBCO0lBQzVCO0lBQ0E7Q0FDSDtBQUNELFNBQVNKLHFCQUFxQkssUUFBUTtJQUNsQywwRUFBMEU7SUFDMUUsbUVBQW1FO0lBQ25FLE1BQU1DLFVBQVVMLE1BQU1NLGFBQWFDLE9BQU8sQ0FBQ0MsS0FBS0MsU0FBVTtZQUNsRCxHQUFHRCxHQUFHO1lBQ04sd0VBQXdFO1lBQ3hFLGdDQUFnQztZQUNoQyxDQUFDQyxPQUFPLEVBQUVMLFFBQVEsQ0FBQ0ssT0FBTyxJQUFJUCxrQkFBa0JRO1FBQ3BELElBQUksQ0FBQztJQUNULDRFQUE0RTtJQUM1RSxzQ0FBc0M7SUFDdEMsTUFBTUMsY0FBYyxJQUFJQyxJQUFJWixNQUFNTSxhQUFhTyxPQUFPLENBQUNKLFNBQVNMLFFBQVEsQ0FBQ0ssT0FBTztJQUNoRixNQUFNSyxVQUFVWCx3QkFBd0JVLE9BQU8sQ0FBQ0osU0FBUyxDQUFDRSxZQUFZSSxJQUFJTjtJQUMxRSwyRUFBMkU7SUFDM0UsS0FBSyxNQUFNQSxVQUFVSyxRQUFRO1FBQ3pCLGlFQUFpRTtRQUNqRSxvRUFBb0U7UUFDcEUsV0FBVztRQUNYLElBQUlMLFdBQVcsUUFBUTtZQUNuQixnRUFBZ0U7WUFDaEUsY0FBYztZQUNkLElBQUksQ0FBQ0wsU0FBU1ksS0FBSztZQUNuQix1REFBdUQ7WUFDdkRYLFFBQVFZLE9BQU9iLFNBQVNZO1lBQ3hCLDBCQUEwQjtZQUMxQkwsWUFBWU8sSUFBSTtZQUNoQjtRQUNKO1FBQ0EsZ0RBQWdEO1FBQ2hELElBQUlULFdBQVcsV0FBVztZQUN0Qix3RUFBd0U7WUFDeEUsb0VBQW9FO1lBQ3BFLE1BQU1VLFFBQVE7Z0JBQ1Y7bUJBQ0dSO2FBQ047WUFDRCx5RUFBeUU7WUFDekUsOENBQThDO1lBQzlDLElBQUksQ0FBQ0EsWUFBWUksSUFBSSxXQUFXSixZQUFZSSxJQUFJLFFBQVE7Z0JBQ3BESSxNQUFNQyxLQUFLO1lBQ2Y7WUFDQSx3RUFBd0U7WUFDeEUsb0RBQW9EO1lBQ3BELE1BQU1DLFVBQVU7Z0JBQ1pDLE9BQU9ILE1BQU1JLE9BQU9DLEtBQUs7WUFDN0I7WUFDQSxvRUFBb0U7WUFDcEUsa0JBQWtCO1lBQ2xCbkIsUUFBUW9CLFVBQVUsSUFBSSxJQUFJQyxTQUFTLE1BQU07b0JBQ2pDQyxRQUFRO29CQUNSTjtnQkFDSjtZQUNKLG1DQUFtQztZQUNuQ1YsWUFBWU8sSUFBSTtZQUNoQjtRQUNKO1FBQ0EsTUFBTSxJQUFJVSxNQUFNLENBQUMsMEVBQTBFLEVBQUVuQixPQUFPLENBQUM7SUFDekc7SUFDQSxPQUFPSjtBQUNYLEVBRUEsa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9oZWxwZXJzL2F1dG8taW1wbGVtZW50LW1ldGhvZHMuanM/YjFhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImF1dG9JbXBsZW1lbnRNZXRob2RzXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBhdXRvSW1wbGVtZW50TWV0aG9kcztcbiAgICB9XG59KTtcbmNvbnN0IF9odHRwID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uL3dlYi9odHRwXCIpO1xuY29uc3QgX3Jlc3BvbnNlaGFuZGxlcnMgPSByZXF1aXJlKFwiLi4vLi4vaGVscGVycy9yZXNwb25zZS1oYW5kbGVyc1wiKTtcbmNvbnN0IEFVVE9NQVRJQ19ST1VURV9NRVRIT0RTID0gW1xuICAgIFwiSEVBRFwiLFxuICAgIFwiT1BUSU9OU1wiXG5dO1xuZnVuY3Rpb24gYXV0b0ltcGxlbWVudE1ldGhvZHMoaGFuZGxlcnMpIHtcbiAgICAvLyBMb29wIHRocm91Z2ggYWxsIHRoZSBIVFRQIG1ldGhvZHMgdG8gY3JlYXRlIHRoZSBpbml0aWFsIG1ldGhvZHMgb2JqZWN0LlxuICAgIC8vIEVhY2ggb2YgdGhlIG1ldGhvZHMgd2lsbCBiZSBzZXQgdG8gdGhlIHRoZSA0MDUgcmVzcG9uc2UgaGFuZGxlci5cbiAgICBjb25zdCBtZXRob2RzID0gX2h0dHAuSFRUUF9NRVRIT0RTLnJlZHVjZSgoYWNjLCBtZXRob2QpPT4oe1xuICAgICAgICAgICAgLi4uYWNjLFxuICAgICAgICAgICAgLy8gSWYgdGhlIHVzZXJsYW5kIG1vZHVsZSBpbXBsZW1lbnRzIHRoZSBtZXRob2QsIHRoZW4gdXNlIGl0LiBPdGhlcndpc2UsXG4gICAgICAgICAgICAvLyB1c2UgdGhlIDQwNSByZXNwb25zZSBoYW5kbGVyLlxuICAgICAgICAgICAgW21ldGhvZF06IGhhbmRsZXJzW21ldGhvZF0gPz8gX3Jlc3BvbnNlaGFuZGxlcnMuaGFuZGxlTWV0aG9kTm90QWxsb3dlZFJlc3BvbnNlXG4gICAgICAgIH0pLCB7fSk7XG4gICAgLy8gR2V0IGFsbCB0aGUgbWV0aG9kcyB0aGF0IGNvdWxkIGJlIGF1dG9tYXRpY2FsbHkgaW1wbGVtZW50ZWQgdGhhdCB3ZXJlIG5vdFxuICAgIC8vIGltcGxlbWVudGVkIGJ5IHRoZSB1c2VybGFuZCBtb2R1bGUuXG4gICAgY29uc3QgaW1wbGVtZW50ZWQgPSBuZXcgU2V0KF9odHRwLkhUVFBfTUVUSE9EUy5maWx0ZXIoKG1ldGhvZCk9PmhhbmRsZXJzW21ldGhvZF0pKTtcbiAgICBjb25zdCBtaXNzaW5nID0gQVVUT01BVElDX1JPVVRFX01FVEhPRFMuZmlsdGVyKChtZXRob2QpPT4haW1wbGVtZW50ZWQuaGFzKG1ldGhvZCkpO1xuICAgIC8vIExvb3Agb3ZlciB0aGUgbWlzc2luZyBtZXRob2RzIHRvIGF1dG9tYXRpY2FsbHkgaW1wbGVtZW50IHRoZW0gaWYgd2UgY2FuLlxuICAgIGZvciAoY29uc3QgbWV0aG9kIG9mIG1pc3Npbmcpe1xuICAgICAgICAvLyBJZiB0aGUgdXNlcmxhbmQgbW9kdWxlIGRvZXNuJ3QgaW1wbGVtZW50IHRoZSBIRUFEIG1ldGhvZCwgdGhlblxuICAgICAgICAvLyB3ZSdsbCBhdXRvbWF0aWNhbGx5IGltcGxlbWVudCBpdCBieSBjYWxsaW5nIHRoZSBHRVQgbWV0aG9kIChpZiBpdFxuICAgICAgICAvLyBleGlzdHMpLlxuICAgICAgICBpZiAobWV0aG9kID09PSBcIkhFQURcIikge1xuICAgICAgICAgICAgLy8gSWYgdGhlIHVzZXJsYW5kIG1vZHVsZSBkb2Vzbid0IGltcGxlbWVudCB0aGUgR0VUIG1ldGhvZCwgdGhlblxuICAgICAgICAgICAgLy8gd2UncmUgZG9uZS5cbiAgICAgICAgICAgIGlmICghaGFuZGxlcnMuR0VUKSBicmVhaztcbiAgICAgICAgICAgIC8vIEltcGxlbWVudCB0aGUgSEVBRCBtZXRob2QgYnkgY2FsbGluZyB0aGUgR0VUIG1ldGhvZC5cbiAgICAgICAgICAgIG1ldGhvZHMuSEVBRCA9IGhhbmRsZXJzLkdFVDtcbiAgICAgICAgICAgIC8vIE1hcmsgaXQgYXMgaW1wbGVtZW50ZWQuXG4gICAgICAgICAgICBpbXBsZW1lbnRlZC5hZGQoXCJIRUFEXCIpO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgT1BUSU9OUyBpcyBub3QgcHJvdmlkZWQgdGhlbiBpbXBsZW1lbnQgaXQuXG4gICAgICAgIGlmIChtZXRob2QgPT09IFwiT1BUSU9OU1wiKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiBjaGVjayBpZiBIRUFEIGlzIGltcGxlbWVudGVkLCBpZiBzbywgdXNlIGl0IHRvIGFkZCBtb3JlIGhlYWRlcnNcbiAgICAgICAgICAgIC8vIEdldCBhbGwgdGhlIG1ldGhvZHMgdGhhdCB3ZXJlIGltcGxlbWVudGVkIGJ5IHRoZSB1c2VybGFuZCBtb2R1bGUuXG4gICAgICAgICAgICBjb25zdCBhbGxvdyA9IFtcbiAgICAgICAgICAgICAgICBcIk9QVElPTlNcIixcbiAgICAgICAgICAgICAgICAuLi5pbXBsZW1lbnRlZFxuICAgICAgICAgICAgXTtcbiAgICAgICAgICAgIC8vIElmIHRoZSBsaXN0IG9mIG1ldGhvZHMgZG9lc24ndCBpbmNsdWRlIEhFQUQsIGJ1dCBpdCBpbmNsdWRlcyBHRVQsIHRoZW5cbiAgICAgICAgICAgIC8vIGFkZCBIRUFEIGFzIGl0J3MgYXV0b21hdGljYWxseSBpbXBsZW1lbnRlZC5cbiAgICAgICAgICAgIGlmICghaW1wbGVtZW50ZWQuaGFzKFwiSEVBRFwiKSAmJiBpbXBsZW1lbnRlZC5oYXMoXCJHRVRcIikpIHtcbiAgICAgICAgICAgICAgICBhbGxvdy5wdXNoKFwiSEVBRFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFNvcnQgYW5kIGpvaW4gdGhlIGxpc3Qgd2l0aCBjb21tYXMgdG8gY3JlYXRlIHRoZSBgQWxsb3dgIGhlYWRlci4gU2VlOlxuICAgICAgICAgICAgLy8gaHR0cHM6Ly9odHRwd2cub3JnL3NwZWNzL3JmYzkxMTAuaHRtbCNmaWVsZC5hbGxvd1xuICAgICAgICAgICAgY29uc3QgaGVhZGVycyA9IHtcbiAgICAgICAgICAgICAgICBBbGxvdzogYWxsb3cuc29ydCgpLmpvaW4oXCIsIFwiKVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIC8vIEltcGxlbWVudCB0aGUgT1BUSU9OUyBtZXRob2QgYnkgcmV0dXJuaW5nIGEgMjA0IHJlc3BvbnNlIHdpdGggdGhlXG4gICAgICAgICAgICAvLyBgQWxsb3dgIGhlYWRlci5cbiAgICAgICAgICAgIG1ldGhvZHMuT1BUSU9OUyA9ICgpPT5uZXcgUmVzcG9uc2UobnVsbCwge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDIwNCxcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyc1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgLy8gTWFyayB0aGlzIG1ldGhvZCBhcyBpbXBsZW1lbnRlZC5cbiAgICAgICAgICAgIGltcGxlbWVudGVkLmFkZChcIk9QVElPTlNcIik7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFyaWFudDogc2hvdWxkIGhhbmRsZSBhbGwgYXV0b21hdGljIGltcGxlbWVudGFibGUgbWV0aG9kcywgZ290IG1ldGhvZDogJHttZXRob2R9YCk7XG4gICAgfVxuICAgIHJldHVybiBtZXRob2RzO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRvLWltcGxlbWVudC1tZXRob2RzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJhdXRvSW1wbGVtZW50TWV0aG9kcyIsIl9odHRwIiwicmVxdWlyZSIsIl9yZXNwb25zZWhhbmRsZXJzIiwiQVVUT01BVElDX1JPVVRFX01FVEhPRFMiLCJoYW5kbGVycyIsIm1ldGhvZHMiLCJIVFRQX01FVEhPRFMiLCJyZWR1Y2UiLCJhY2MiLCJtZXRob2QiLCJoYW5kbGVNZXRob2ROb3RBbGxvd2VkUmVzcG9uc2UiLCJpbXBsZW1lbnRlZCIsIlNldCIsImZpbHRlciIsIm1pc3NpbmciLCJoYXMiLCJHRVQiLCJIRUFEIiwiYWRkIiwiYWxsb3ciLCJwdXNoIiwiaGVhZGVycyIsIkFsbG93Iiwic29ydCIsImpvaW4iLCJPUFRJT05TIiwiUmVzcG9uc2UiLCJzdGF0dXMiLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/auto-implement-methods.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/clean-url.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/helpers/clean-url.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * Cleans a URL by stripping the protocol, host, and search params.\n *\n * @param urlString the url to clean\n * @returns the cleaned url\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"cleanURL\", ({\n    enumerable: true,\n    get: function() {\n        return cleanURL;\n    }\n}));\nfunction cleanURL(urlString) {\n    const url = new URL(urlString);\n    url.host = \"localhost:3000\";\n    url.search = \"\";\n    url.protocol = \"http\";\n    return url.toString();\n} //# sourceMappingURL=clean-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9jbGVhbi11cmwuanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0NBS0MsR0FBZ0I7QUFDakJBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCw0Q0FBMkM7SUFDdkNJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixTQUFTQSxTQUFTQyxTQUFTO0lBQ3ZCLE1BQU1DLE1BQU0sSUFBSUMsSUFBSUY7SUFDcEJDLElBQUlFLE9BQU87SUFDWEYsSUFBSUcsU0FBUztJQUNiSCxJQUFJSSxXQUFXO0lBQ2YsT0FBT0osSUFBSUs7QUFDZixFQUVBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9jbGVhbi11cmwuanM/OTQxMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENsZWFucyBhIFVSTCBieSBzdHJpcHBpbmcgdGhlIHByb3RvY29sLCBob3N0LCBhbmQgc2VhcmNoIHBhcmFtcy5cbiAqXG4gKiBAcGFyYW0gdXJsU3RyaW5nIHRoZSB1cmwgdG8gY2xlYW5cbiAqIEByZXR1cm5zIHRoZSBjbGVhbmVkIHVybFxuICovIFwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY2xlYW5VUkxcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGNsZWFuVVJMO1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gY2xlYW5VUkwodXJsU3RyaW5nKSB7XG4gICAgY29uc3QgdXJsID0gbmV3IFVSTCh1cmxTdHJpbmcpO1xuICAgIHVybC5ob3N0ID0gXCJsb2NhbGhvc3Q6MzAwMFwiO1xuICAgIHVybC5zZWFyY2ggPSBcIlwiO1xuICAgIHVybC5wcm90b2NvbCA9IFwiaHR0cFwiO1xuICAgIHJldHVybiB1cmwudG9TdHJpbmcoKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2xlYW4tdXJsLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJjbGVhblVSTCIsInVybFN0cmluZyIsInVybCIsIlVSTCIsImhvc3QiLCJzZWFyY2giLCJwcm90b2NvbCIsInRvU3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/clean-url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-non-static-methods.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-non-static-methods.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getNonStaticMethods\", ({\n    enumerable: true,\n    get: function() {\n        return getNonStaticMethods;\n    }\n}));\nconst NON_STATIC_METHODS = [\n    \"OPTIONS\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"PATCH\"\n];\nfunction getNonStaticMethods(handlers) {\n    // We can currently only statically optimize if only GET/HEAD are used as\n    // prerender can't be used conditionally based on the method currently.\n    const methods = NON_STATIC_METHODS.filter((method)=>handlers[method]);\n    if (methods.length === 0) return false;\n    return methods;\n} //# sourceMappingURL=get-non-static-methods.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9nZXQtbm9uLXN0YXRpYy1tZXRob2RzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCx1REFBc0Q7SUFDbERJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQyxxQkFBcUI7SUFDdkI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNIO0FBQ0QsU0FBU0Qsb0JBQW9CRSxRQUFRO0lBQ2pDLHlFQUF5RTtJQUN6RSx1RUFBdUU7SUFDdkUsTUFBTUMsVUFBVUYsbUJBQW1CRyxPQUFPLENBQUNDLFNBQVNILFFBQVEsQ0FBQ0csT0FBTztJQUNwRSxJQUFJRixRQUFRRyxXQUFXLEdBQUcsT0FBTztJQUNqQyxPQUFPSDtBQUNYLEVBRUEsa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9oZWxwZXJzL2dldC1ub24tc3RhdGljLW1ldGhvZHMuanM/ZTgwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImdldE5vblN0YXRpY01ldGhvZHNcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGdldE5vblN0YXRpY01ldGhvZHM7XG4gICAgfVxufSk7XG5jb25zdCBOT05fU1RBVElDX01FVEhPRFMgPSBbXG4gICAgXCJPUFRJT05TXCIsXG4gICAgXCJQT1NUXCIsXG4gICAgXCJQVVRcIixcbiAgICBcIkRFTEVURVwiLFxuICAgIFwiUEFUQ0hcIlxuXTtcbmZ1bmN0aW9uIGdldE5vblN0YXRpY01ldGhvZHMoaGFuZGxlcnMpIHtcbiAgICAvLyBXZSBjYW4gY3VycmVudGx5IG9ubHkgc3RhdGljYWxseSBvcHRpbWl6ZSBpZiBvbmx5IEdFVC9IRUFEIGFyZSB1c2VkIGFzXG4gICAgLy8gcHJlcmVuZGVyIGNhbid0IGJlIHVzZWQgY29uZGl0aW9uYWxseSBiYXNlZCBvbiB0aGUgbWV0aG9kIGN1cnJlbnRseS5cbiAgICBjb25zdCBtZXRob2RzID0gTk9OX1NUQVRJQ19NRVRIT0RTLmZpbHRlcigobWV0aG9kKT0+aGFuZGxlcnNbbWV0aG9kXSk7XG4gICAgaWYgKG1ldGhvZHMubGVuZ3RoID09PSAwKSByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIG1ldGhvZHM7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1ub24tc3RhdGljLW1ldGhvZHMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImdldE5vblN0YXRpY01ldGhvZHMiLCJOT05fU1RBVElDX01FVEhPRFMiLCJoYW5kbGVycyIsIm1ldGhvZHMiLCJmaWx0ZXIiLCJtZXRob2QiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-non-static-methods.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-pathname-from-absolute-path.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-pathname-from-absolute-path.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * Get pathname from absolute path.\n *\n * @param absolutePath the absolute path\n * @returns the pathname\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getPathnameFromAbsolutePath\", ({\n    enumerable: true,\n    get: function() {\n        return getPathnameFromAbsolutePath;\n    }\n}));\nfunction getPathnameFromAbsolutePath(absolutePath) {\n    // Remove prefix including app dir\n    let appDir = \"/app/\";\n    if (!absolutePath.includes(appDir)) {\n        appDir = \"\\\\app\\\\\";\n    }\n    const [, ...parts] = absolutePath.split(appDir);\n    const relativePath = appDir[0] + parts.join(appDir);\n    // remove extension\n    const pathname = relativePath.split(\".\").slice(0, -1).join(\".\");\n    return pathname;\n} //# sourceMappingURL=get-pathname-from-absolute-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9nZXQtcGF0aG5hbWUtZnJvbS1hYnNvbHV0ZS1wYXRoLmpzIiwibWFwcGluZ3MiOiJBQUFBOzs7OztDQUtDLEdBQWdCO0FBQ2pCQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsK0RBQThEO0lBQzFESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsU0FBU0EsNEJBQTRCQyxZQUFZO0lBQzdDLGtDQUFrQztJQUNsQyxJQUFJQyxTQUFTO0lBQ2IsSUFBSSxDQUFDRCxhQUFhRSxTQUFTRCxTQUFTO1FBQ2hDQSxTQUFTO0lBQ2I7SUFDQSxNQUFNLEdBQUcsR0FBR0UsTUFBTSxHQUFHSCxhQUFhSSxNQUFNSDtJQUN4QyxNQUFNSSxlQUFlSixNQUFNLENBQUMsRUFBRSxHQUFHRSxNQUFNRyxLQUFLTDtJQUM1QyxtQkFBbUI7SUFDbkIsTUFBTU0sV0FBV0YsYUFBYUQsTUFBTSxLQUFLSSxNQUFNLEdBQUcsQ0FBQyxHQUFHRixLQUFLO0lBQzNELE9BQU9DO0FBQ1gsRUFFQSwyREFBMkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL2hlbHBlcnMvZ2V0LXBhdGhuYW1lLWZyb20tYWJzb2x1dGUtcGF0aC5qcz8xYmEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0IHBhdGhuYW1lIGZyb20gYWJzb2x1dGUgcGF0aC5cbiAqXG4gKiBAcGFyYW0gYWJzb2x1dGVQYXRoIHRoZSBhYnNvbHV0ZSBwYXRoXG4gKiBAcmV0dXJucyB0aGUgcGF0aG5hbWVcbiAqLyBcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImdldFBhdGhuYW1lRnJvbUFic29sdXRlUGF0aFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZ2V0UGF0aG5hbWVGcm9tQWJzb2x1dGVQYXRoO1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gZ2V0UGF0aG5hbWVGcm9tQWJzb2x1dGVQYXRoKGFic29sdXRlUGF0aCkge1xuICAgIC8vIFJlbW92ZSBwcmVmaXggaW5jbHVkaW5nIGFwcCBkaXJcbiAgICBsZXQgYXBwRGlyID0gXCIvYXBwL1wiO1xuICAgIGlmICghYWJzb2x1dGVQYXRoLmluY2x1ZGVzKGFwcERpcikpIHtcbiAgICAgICAgYXBwRGlyID0gXCJcXFxcYXBwXFxcXFwiO1xuICAgIH1cbiAgICBjb25zdCBbLCAuLi5wYXJ0c10gPSBhYnNvbHV0ZVBhdGguc3BsaXQoYXBwRGlyKTtcbiAgICBjb25zdCByZWxhdGl2ZVBhdGggPSBhcHBEaXJbMF0gKyBwYXJ0cy5qb2luKGFwcERpcik7XG4gICAgLy8gcmVtb3ZlIGV4dGVuc2lvblxuICAgIGNvbnN0IHBhdGhuYW1lID0gcmVsYXRpdmVQYXRoLnNwbGl0KFwiLlwiKS5zbGljZSgwLCAtMSkuam9pbihcIi5cIik7XG4gICAgcmV0dXJuIHBhdGhuYW1lO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtcGF0aG5hbWUtZnJvbS1hYnNvbHV0ZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJnZXRQYXRobmFtZUZyb21BYnNvbHV0ZVBhdGgiLCJhYnNvbHV0ZVBhdGgiLCJhcHBEaXIiLCJpbmNsdWRlcyIsInBhcnRzIiwic3BsaXQiLCJyZWxhdGl2ZVBhdGgiLCJqb2luIiwicGF0aG5hbWUiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-pathname-from-absolute-path.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/proxy-request.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/helpers/proxy-request.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"proxyRequest\", ({\n    enumerable: true,\n    get: function() {\n        return proxyRequest;\n    }\n}));\nconst _cookies = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ \"next/dist/compiled/@edge-runtime/cookies\");\nconst _nexturl = __webpack_require__(/*! ../../../../web/next-url */ \"(sc_server)/./node_modules/next/dist/server/web/next-url.js\");\nconst _cleanurl = __webpack_require__(/*! ./clean-url */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/clean-url.js\");\nfunction proxyRequest(request, { dynamic }, hooks) {\n    function handleNextUrlBailout(prop) {\n        switch(prop){\n            case \"search\":\n            case \"searchParams\":\n            case \"toString\":\n            case \"href\":\n            case \"origin\":\n                hooks.staticGenerationBailout(`nextUrl.${prop}`);\n                return;\n            default:\n                return;\n        }\n    }\n    const cache = {};\n    const handleForceStatic = (url, prop)=>{\n        switch(prop){\n            case \"search\":\n                return \"\";\n            case \"searchParams\":\n                if (!cache.searchParams) cache.searchParams = new URLSearchParams();\n                return cache.searchParams;\n            case \"url\":\n            case \"href\":\n                if (!cache.url) cache.url = (0, _cleanurl.cleanURL)(url);\n                return cache.url;\n            case \"toJSON\":\n            case \"toString\":\n                if (!cache.url) cache.url = (0, _cleanurl.cleanURL)(url);\n                if (!cache.toString) cache.toString = ()=>cache.url;\n                return cache.toString;\n            case \"headers\":\n                if (!cache.headers) cache.headers = new Headers();\n                return cache.headers;\n            case \"cookies\":\n                if (!cache.headers) cache.headers = new Headers();\n                if (!cache.cookies) cache.cookies = new _cookies.RequestCookies(cache.headers);\n                return cache.cookies;\n            case \"clone\":\n                if (!cache.url) cache.url = (0, _cleanurl.cleanURL)(url);\n                return ()=>new _nexturl.NextURL(cache.url);\n            default:\n                break;\n        }\n    };\n    const wrappedNextUrl = new Proxy(request.nextUrl, {\n        get (target, prop) {\n            handleNextUrlBailout(prop);\n            if (dynamic === \"force-static\" && typeof prop === \"string\") {\n                const result = handleForceStatic(target.href, prop);\n                if (result !== undefined) return result;\n            }\n            const value = target[prop];\n            if (typeof value === \"function\") {\n                return value.bind(target);\n            }\n            return value;\n        },\n        set (target, prop, value) {\n            handleNextUrlBailout(prop);\n            target[prop] = value;\n            return true;\n        }\n    });\n    const handleReqBailout = (prop)=>{\n        switch(prop){\n            case \"headers\":\n                hooks.headerHooks.headers();\n                return;\n            // if request.url is accessed directly instead of\n            // request.nextUrl we bail since it includes query\n            // values that can be relied on dynamically\n            case \"url\":\n            case \"body\":\n            case \"blob\":\n            case \"json\":\n            case \"text\":\n            case \"arrayBuffer\":\n            case \"formData\":\n                hooks.staticGenerationBailout(`request.${prop}`);\n                return;\n            default:\n                return;\n        }\n    };\n    return new Proxy(request, {\n        get (target, prop) {\n            handleReqBailout(prop);\n            if (prop === \"nextUrl\") {\n                return wrappedNextUrl;\n            }\n            if (dynamic === \"force-static\" && typeof prop === \"string\") {\n                const result = handleForceStatic(target.url, prop);\n                if (result !== undefined) return result;\n            }\n            const value = target[prop];\n            if (typeof value === \"function\") {\n                return value.bind(target);\n            }\n            return value;\n        },\n        set (target, prop, value) {\n            handleReqBailout(prop);\n            target[prop] = value;\n            return true;\n        }\n    });\n} //# sourceMappingURL=proxy-request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/proxy-request.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/resolve-handler-error.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/helpers/resolve-handler-error.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"resolveHandlerError\", ({\n    enumerable: true,\n    get: function() {\n        return resolveHandlerError;\n    }\n}));\nconst _notfound = __webpack_require__(/*! ../../../../../client/components/not-found */ \"(sc_server)/./node_modules/next/dist/client/components/not-found.js\");\nconst _redirect = __webpack_require__(/*! ../../../../../client/components/redirect */ \"(sc_server)/./node_modules/next/dist/client/components/redirect.js\");\nconst _responsehandlers = __webpack_require__(/*! ../../helpers/response-handlers */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/helpers/response-handlers.js\");\nfunction resolveHandlerError(err) {\n    if ((0, _redirect.isRedirectError)(err)) {\n        const redirect = (0, _redirect.getURLFromRedirectError)(err);\n        if (!redirect) {\n            throw new Error(\"Invariant: Unexpected redirect url format\");\n        }\n        // This is a redirect error! Send the redirect response.\n        return (0, _responsehandlers.handleTemporaryRedirectResponse)(redirect, err.mutableCookies);\n    }\n    if ((0, _notfound.isNotFoundError)(err)) {\n        // This is a not found error! Send the not found response.\n        return (0, _responsehandlers.handleNotFoundResponse)();\n    }\n    // Return false to indicate that this is not a handled error.\n    return false;\n} //# sourceMappingURL=resolve-handler-error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9yZXNvbHZlLWhhbmRsZXItZXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILHVEQUFzRDtJQUNsREksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLHVIQUE0QztBQUN0RSxNQUFNQyxZQUFZRCxtQkFBT0EsQ0FBQyxxSEFBMkM7QUFDckUsTUFBTUUsb0JBQW9CRixtQkFBT0EsQ0FBQyxzSUFBaUM7QUFDbkUsU0FBU0Ysb0JBQW9CSyxHQUFHO0lBQzVCLElBQUksQ0FBQyxHQUFHRixVQUFVRyxlQUFjLEVBQUdELE1BQU07UUFDckMsTUFBTUUsV0FBVyxDQUFDLEdBQUdKLFVBQVVLLHVCQUFzQixFQUFHSDtRQUN4RCxJQUFJLENBQUNFLFVBQVU7WUFDWCxNQUFNLElBQUlFLE1BQU07UUFDcEI7UUFDQSx3REFBd0Q7UUFDeEQsT0FBTyxDQUFDLEdBQUdMLGtCQUFrQk0sK0JBQThCLEVBQUdILFVBQVVGLElBQUlNO0lBQ2hGO0lBQ0EsSUFBSSxDQUFDLEdBQUdWLFVBQVVXLGVBQWMsRUFBR1AsTUFBTTtRQUNyQywwREFBMEQ7UUFDMUQsT0FBTyxDQUFDLEdBQUdELGtCQUFrQlMsc0JBQXFCO0lBQ3REO0lBQ0EsNkRBQTZEO0lBQzdELE9BQU87QUFDWCxFQUVBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvaGVscGVycy9yZXNvbHZlLWhhbmRsZXItZXJyb3IuanM/ZjYxMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInJlc29sdmVIYW5kbGVyRXJyb3JcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVIYW5kbGVyRXJyb3I7XG4gICAgfVxufSk7XG5jb25zdCBfbm90Zm91bmQgPSByZXF1aXJlKFwiLi4vLi4vLi4vLi4vLi4vY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kXCIpO1xuY29uc3QgX3JlZGlyZWN0ID0gcmVxdWlyZShcIi4uLy4uLy4uLy4uLy4uL2NsaWVudC9jb21wb25lbnRzL3JlZGlyZWN0XCIpO1xuY29uc3QgX3Jlc3BvbnNlaGFuZGxlcnMgPSByZXF1aXJlKFwiLi4vLi4vaGVscGVycy9yZXNwb25zZS1oYW5kbGVyc1wiKTtcbmZ1bmN0aW9uIHJlc29sdmVIYW5kbGVyRXJyb3IoZXJyKSB7XG4gICAgaWYgKCgwLCBfcmVkaXJlY3QuaXNSZWRpcmVjdEVycm9yKShlcnIpKSB7XG4gICAgICAgIGNvbnN0IHJlZGlyZWN0ID0gKDAsIF9yZWRpcmVjdC5nZXRVUkxGcm9tUmVkaXJlY3RFcnJvcikoZXJyKTtcbiAgICAgICAgaWYgKCFyZWRpcmVjdCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YXJpYW50OiBVbmV4cGVjdGVkIHJlZGlyZWN0IHVybCBmb3JtYXRcIik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVGhpcyBpcyBhIHJlZGlyZWN0IGVycm9yISBTZW5kIHRoZSByZWRpcmVjdCByZXNwb25zZS5cbiAgICAgICAgcmV0dXJuICgwLCBfcmVzcG9uc2VoYW5kbGVycy5oYW5kbGVUZW1wb3JhcnlSZWRpcmVjdFJlc3BvbnNlKShyZWRpcmVjdCwgZXJyLm11dGFibGVDb29raWVzKTtcbiAgICB9XG4gICAgaWYgKCgwLCBfbm90Zm91bmQuaXNOb3RGb3VuZEVycm9yKShlcnIpKSB7XG4gICAgICAgIC8vIFRoaXMgaXMgYSBub3QgZm91bmQgZXJyb3IhIFNlbmQgdGhlIG5vdCBmb3VuZCByZXNwb25zZS5cbiAgICAgICAgcmV0dXJuICgwLCBfcmVzcG9uc2VoYW5kbGVycy5oYW5kbGVOb3RGb3VuZFJlc3BvbnNlKSgpO1xuICAgIH1cbiAgICAvLyBSZXR1cm4gZmFsc2UgdG8gaW5kaWNhdGUgdGhhdCB0aGlzIGlzIG5vdCBhIGhhbmRsZWQgZXJyb3IuXG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNvbHZlLWhhbmRsZXItZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsInJlc29sdmVIYW5kbGVyRXJyb3IiLCJfbm90Zm91bmQiLCJyZXF1aXJlIiwiX3JlZGlyZWN0IiwiX3Jlc3BvbnNlaGFuZGxlcnMiLCJlcnIiLCJpc1JlZGlyZWN0RXJyb3IiLCJyZWRpcmVjdCIsImdldFVSTEZyb21SZWRpcmVjdEVycm9yIiwiRXJyb3IiLCJoYW5kbGVUZW1wb3JhcnlSZWRpcmVjdFJlc3BvbnNlIiwibXV0YWJsZUNvb2tpZXMiLCJpc05vdEZvdW5kRXJyb3IiLCJoYW5kbGVOb3RGb3VuZFJlc3BvbnNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/resolve-handler-error.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/module.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/app-route/module.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    AppRouteRouteModule: function() {\n        return AppRouteRouteModule;\n    },\n    default: function() {\n        return _default;\n    }\n});\nconst _routemodule = __webpack_require__(/*! ../route-module */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/route-module.js\");\nconst _requestasyncstoragewrapper = __webpack_require__(/*! ../../../async-storage/request-async-storage-wrapper */ \"(sc_server)/./node_modules/next/dist/server/async-storage/request-async-storage-wrapper.js\");\nconst _staticgenerationasyncstoragewrapper = __webpack_require__(/*! ../../../async-storage/static-generation-async-storage-wrapper */ \"(sc_server)/./node_modules/next/dist/server/async-storage/static-generation-async-storage-wrapper.js\");\nconst _responsehandlers = __webpack_require__(/*! ../helpers/response-handlers */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/helpers/response-handlers.js\");\nconst _http = __webpack_require__(/*! ../../../web/http */ \"(sc_server)/./node_modules/next/dist/server/web/http.js\");\nconst _patchfetch = __webpack_require__(/*! ../../../lib/patch-fetch */ \"(sc_server)/./node_modules/next/dist/server/lib/patch-fetch.js\");\nconst _tracer = __webpack_require__(/*! ../../../lib/trace/tracer */ \"(sc_server)/./node_modules/next/dist/server/lib/trace/tracer.js\");\nconst _constants = __webpack_require__(/*! ../../../lib/trace/constants */ \"(sc_server)/./node_modules/next/dist/server/lib/trace/constants.js\");\nconst _getpathnamefromabsolutepath = __webpack_require__(/*! ./helpers/get-pathname-from-absolute-path */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-pathname-from-absolute-path.js\");\nconst _proxyrequest = __webpack_require__(/*! ./helpers/proxy-request */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/proxy-request.js\");\nconst _resolvehandlererror = __webpack_require__(/*! ./helpers/resolve-handler-error */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/resolve-handler-error.js\");\nconst _log = /*#__PURE__*/ _interop_require_wildcard(__webpack_require__(/*! ../../../../build/output/log */ \"(sc_server)/./node_modules/next/dist/build/output/log.js\"));\nconst _autoimplementmethods = __webpack_require__(/*! ./helpers/auto-implement-methods */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/auto-implement-methods.js\");\nconst _getnonstaticmethods = __webpack_require__(/*! ./helpers/get-non-static-methods */ \"(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/helpers/get-non-static-methods.js\");\nconst _requestcookies = __webpack_require__(/*! ../../../web/spec-extension/adapters/request-cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\");\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\n// These are imported weirdly like this because of the way that the bundling\n// works. We need to import the built files from the dist directory, but we\n// can't do that directly because we need types from the source files. So we\n// import the types from the source files and then import the built files.\nconst { requestAsyncStorage } = __webpack_require__(/*! next/dist/client/components/request-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/request-async-storage.js\");\nconst { staticGenerationAsyncStorage } = __webpack_require__(/*! next/dist/client/components/static-generation-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/static-generation-async-storage.js\");\nconst serverHooks = __webpack_require__(/*! next/dist/client/components/hooks-server-context */ \"(sc_server)/./node_modules/next/dist/client/components/hooks-server-context.js\");\nconst headerHooks = __webpack_require__(/*! next/dist/client/components/headers */ \"(sc_server)/./node_modules/next/dist/client/components/headers.js\");\nconst { staticGenerationBailout } = __webpack_require__(/*! next/dist/client/components/static-generation-bailout */ \"(sc_server)/./node_modules/next/dist/client/components/static-generation-bailout.js\");\nconst { actionAsyncStorage } = __webpack_require__(/*! next/dist/client/components/action-async-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/action-async-storage.js\");\nclass AppRouteRouteModule extends _routemodule.RouteModule {\n    constructor({ userland, definition, resolvedPagePath, nextConfigOutput }){\n        super({\n            userland,\n            definition\n        });\n        /**\n   * A reference to the request async storage.\n   */ this.requestAsyncStorage = requestAsyncStorage;\n        /**\n   * A reference to the static generation async storage.\n   */ this.staticGenerationAsyncStorage = staticGenerationAsyncStorage;\n        /**\n   * An interface to call server hooks which interact with the underlying\n   * storage.\n   */ this.serverHooks = serverHooks;\n        /**\n   * An interface to call header hooks which interact with the underlying\n   * request storage.\n   */ this.headerHooks = headerHooks;\n        /**\n   * An interface to call static generation bailout hooks which interact with\n   * the underlying static generation storage.\n   */ this.staticGenerationBailout = staticGenerationBailout;\n        /**\n   * A reference to the mutation related async storage, such as mutations of\n   * cookies.\n   */ this.actionAsyncStorage = actionAsyncStorage;\n        /**\n   * When true, indicates that the global interfaces have been patched via the\n   * `patch()` method.\n   */ this.hasSetup = false;\n        this.resolvedPagePath = resolvedPagePath;\n        this.nextConfigOutput = nextConfigOutput;\n        // Automatically implement some methods if they aren't implemented by the\n        // userland module.\n        this.methods = (0, _autoimplementmethods.autoImplementMethods)(userland);\n        // Get the non-static methods for this route.\n        this.nonStaticMethods = (0, _getnonstaticmethods.getNonStaticMethods)(userland);\n        // Get the dynamic property from the userland module.\n        this.dynamic = this.userland.dynamic;\n        if (this.nextConfigOutput === \"export\") {\n            if (!this.dynamic || this.dynamic === \"auto\") {\n                this.dynamic = \"error\";\n            } else if (this.dynamic === \"force-dynamic\") {\n                throw new Error(`export const dynamic = \"force-dynamic\" on page \"${definition.pathname}\" cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export`);\n            }\n        }\n    }\n    /**\n   * Validates the userland module to ensure the exported methods and properties\n   * are valid.\n   */ async setup() {\n        // If we've already setup, then return.\n        if (this.hasSetup) return;\n        // Mark the module as setup. The following warnings about the userland\n        // module will run if we're in development. If the module files are modified\n        // when in development, then the require cache will be busted for it and\n        // this method will be called again (resetting the `hasSetup` flag).\n        this.hasSetup = true;\n        // We only warn in development after here, so return if we're not in\n        // development.\n        if (true) {\n            // Print error in development if the exported handlers are in lowercase, only\n            // uppercase handlers are supported.\n            const lowercased = _http.HTTP_METHODS.map((method)=>method.toLowerCase());\n            for (const method of lowercased){\n                if (method in this.userland) {\n                    _log.error(`Detected lowercase method '${method}' in '${this.resolvedPagePath}'. Export the uppercase '${method.toUpperCase()}' method name to fix this error.`);\n                }\n            }\n            // Print error if the module exports a default handler, they must use named\n            // exports for each HTTP method.\n            if (\"default\" in this.userland) {\n                _log.error(`Detected default export in '${this.resolvedPagePath}'. Export a named export for each HTTP method instead.`);\n            }\n            // If there is no methods exported by this module, then return a not found\n            // response.\n            if (!_http.HTTP_METHODS.some((method)=>method in this.userland)) {\n                _log.error(`No HTTP methods exported in '${this.resolvedPagePath}'. Export a named export for each HTTP method.`);\n            }\n        }\n    }\n    /**\n   * Resolves the handler function for the given method.\n   *\n   * @param method the requested method\n   * @returns the handler function for the given method\n   */ resolve(method) {\n        // Ensure that the requested method is a valid method (to prevent RCE's).\n        if (!(0, _http.isHTTPMethod)(method)) return _responsehandlers.handleBadRequestResponse;\n        // Return the handler.\n        return this.methods[method];\n    }\n    /**\n   * Executes the route handler.\n   */ async execute(request, context) {\n        // Get the handler function for the given method.\n        const handler = this.resolve(request.method);\n        // Get the context for the request.\n        const requestContext = {\n            req: request\n        };\n        requestContext.renderOpts = {\n            previewProps: context.prerenderManifest.preview\n        };\n        // Get the context for the static generation.\n        const staticGenerationContext = {\n            pathname: this.definition.pathname,\n            renderOpts: // the default values.\n            context.staticGenerationContext ?? {\n                supportsDynamicHTML: false\n            }\n        };\n        // Add the fetchCache option to the renderOpts.\n        staticGenerationContext.renderOpts.fetchCache = this.userland.fetchCache;\n        // Run the handler with the request AsyncLocalStorage to inject the helper\n        // support. We set this to `unknown` because the type is not known until\n        // runtime when we do a instanceof check below.\n        const response = await this.actionAsyncStorage.run({\n            isAppRoute: true\n        }, ()=>{\n            return _requestasyncstoragewrapper.RequestAsyncStorageWrapper.wrap(this.requestAsyncStorage, requestContext, ()=>{\n                return _staticgenerationasyncstoragewrapper.StaticGenerationAsyncStorageWrapper.wrap(this.staticGenerationAsyncStorage, staticGenerationContext, (staticGenerationStore)=>{\n                    var _getTracer_getRootSpanAttributes;\n                    // Check to see if we should bail out of static generation based on\n                    // having non-static methods.\n                    if (this.nonStaticMethods) {\n                        this.staticGenerationBailout(`non-static methods used ${this.nonStaticMethods.join(\", \")}`);\n                    }\n                    // Update the static generation store based on the dynamic property.\n                    switch(this.dynamic){\n                        case \"force-dynamic\":\n                            // The dynamic property is set to force-dynamic, so we should\n                            // force the page to be dynamic.\n                            staticGenerationStore.forceDynamic = true;\n                            this.staticGenerationBailout(`force-dynamic`, {\n                                dynamic: this.dynamic\n                            });\n                            break;\n                        case \"force-static\":\n                            // The dynamic property is set to force-static, so we should\n                            // force the page to be static.\n                            staticGenerationStore.forceStatic = true;\n                            break;\n                        case \"error\":\n                            // The dynamic property is set to error, so we should throw an\n                            // error if the page is being statically generated.\n                            staticGenerationStore.dynamicShouldError = true;\n                            break;\n                        default:\n                            break;\n                    }\n                    // If the static generation store does not have a revalidate value\n                    // set, then we should set it the revalidate value from the userland\n                    // module or default to false.\n                    staticGenerationStore.revalidate ??= this.userland.revalidate ?? false;\n                    // Wrap the request so we can add additional functionality to cases\n                    // that might change it's output or affect the rendering.\n                    const wrappedRequest = (0, _proxyrequest.proxyRequest)(request, {\n                        dynamic: this.dynamic\n                    }, {\n                        headerHooks: this.headerHooks,\n                        serverHooks: this.serverHooks,\n                        staticGenerationBailout: this.staticGenerationBailout\n                    });\n                    // TODO: propagate this pathname from route matcher\n                    const route = (0, _getpathnamefromabsolutepath.getPathnameFromAbsolutePath)(this.resolvedPagePath);\n                    (_getTracer_getRootSpanAttributes = (0, _tracer.getTracer)().getRootSpanAttributes()) == null ? void 0 : _getTracer_getRootSpanAttributes.set(\"next.route\", route);\n                    return (0, _tracer.getTracer)().trace(_constants.AppRouteRouteHandlersSpan.runHandler, {\n                        spanName: `executing api route (app) ${route}`,\n                        attributes: {\n                            \"next.route\": route\n                        }\n                    }, async ()=>{\n                        var _staticGenerationStore_tags;\n                        // Patch the global fetch.\n                        (0, _patchfetch.patchFetch)({\n                            serverHooks: this.serverHooks,\n                            staticGenerationAsyncStorage: this.staticGenerationAsyncStorage\n                        });\n                        const res = await handler(wrappedRequest, {\n                            params: context.params\n                        });\n                        context.staticGenerationContext.fetchMetrics = staticGenerationStore.fetchMetrics;\n                        await Promise.all(staticGenerationStore.pendingRevalidates || []);\n                        (0, _patchfetch.addImplicitTags)(staticGenerationStore);\n                        context.staticGenerationContext.fetchTags = (_staticGenerationStore_tags = staticGenerationStore.tags) == null ? void 0 : _staticGenerationStore_tags.join(\",\");\n                        // It's possible cookies were set in the handler, so we need\n                        // to merge the modified cookies and the returned response\n                        // here.\n                        const requestStore = this.requestAsyncStorage.getStore();\n                        if (requestStore && requestStore.mutableCookies) {\n                            const headers = new Headers(res.headers);\n                            if ((0, _requestcookies.appendMutableCookies)(headers, requestStore.mutableCookies)) {\n                                return new Response(res.body, {\n                                    status: res.status,\n                                    statusText: res.statusText,\n                                    headers\n                                });\n                            }\n                        }\n                        return res;\n                    });\n                });\n            });\n        });\n        // If the handler did't return a valid response, then return the internal\n        // error response.\n        if (!(response instanceof Response)) {\n            // TODO: validate the correct handling behavior, maybe log something?\n            return (0, _responsehandlers.handleInternalServerErrorResponse)();\n        }\n        if (response.headers.has(\"x-middleware-rewrite\")) {\n            // TODO: move this error into the `NextResponse.rewrite()` function.\n            // TODO-APP: re-enable support below when we can proxy these type of requests\n            throw new Error(\"NextResponse.rewrite() was used in a app route handler, this is not currently supported. Please remove the invocation to continue.\");\n        // // This is a rewrite created via `NextResponse.rewrite()`. We need to send\n        // // the response up so it can be handled by the backing server.\n        // // If the server is running in minimal mode, we just want to forward the\n        // // response (including the rewrite headers) upstream so it can perform the\n        // // redirect for us, otherwise return with the special condition so this\n        // // server can perform a rewrite.\n        // if (!minimalMode) {\n        //   return { response, condition: 'rewrite' }\n        // }\n        // // Relativize the url so it's relative to the base url. This is so the\n        // // outgoing headers upstream can be relative.\n        // const rewritePath = response.headers.get('x-middleware-rewrite')!\n        // const initUrl = getRequestMeta(req, '__NEXT_INIT_URL')!\n        // const { pathname } = parseUrl(relativizeURL(rewritePath, initUrl))\n        // response.headers.set('x-middleware-rewrite', pathname)\n        }\n        if (response.headers.get(\"x-middleware-next\") === \"1\") {\n            // TODO: move this error into the `NextResponse.next()` function.\n            throw new Error(\"NextResponse.next() was used in a app route handler, this is not supported. See here for more info: https://nextjs.org/docs/messages/next-response-next-in-app-route-handler\");\n        }\n        return response;\n    }\n    async handle(request, context) {\n        try {\n            // Execute the route to get the response.\n            const response = await this.execute(request, context);\n            // The response was handled, return it.\n            return response;\n        } catch (err) {\n            // Try to resolve the error to a response, else throw it again.\n            const response = (0, _resolvehandlererror.resolveHandlerError)(err);\n            if (!response) throw err;\n            // The response was resolved, return it.\n            return response;\n        }\n    }\n}\nconst _default = AppRouteRouteModule; //# sourceMappingURL=module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/app-route/module.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/helpers/response-handlers.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/helpers/response-handlers.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    handleTemporaryRedirectResponse: function() {\n        return handleTemporaryRedirectResponse;\n    },\n    handleBadRequestResponse: function() {\n        return handleBadRequestResponse;\n    },\n    handleNotFoundResponse: function() {\n        return handleNotFoundResponse;\n    },\n    handleMethodNotAllowedResponse: function() {\n        return handleMethodNotAllowedResponse;\n    },\n    handleInternalServerErrorResponse: function() {\n        return handleInternalServerErrorResponse;\n    }\n});\nconst _requestcookies = __webpack_require__(/*! ../../../web/spec-extension/adapters/request-cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\");\nfunction handleTemporaryRedirectResponse(url, mutableCookies) {\n    const headers = new Headers({\n        location: url\n    });\n    (0, _requestcookies.appendMutableCookies)(headers, mutableCookies);\n    return new Response(null, {\n        status: 307,\n        headers\n    });\n}\nfunction handleBadRequestResponse() {\n    return new Response(null, {\n        status: 400\n    });\n}\nfunction handleNotFoundResponse() {\n    return new Response(null, {\n        status: 404\n    });\n}\nfunction handleMethodNotAllowedResponse() {\n    return new Response(null, {\n        status: 405\n    });\n}\nfunction handleInternalServerErrorResponse() {\n    return new Response(null, {\n        status: 500\n    });\n} //# sourceMappingURL=response-handlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9oZWxwZXJzL3Jlc3BvbnNlLWhhbmRsZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGLEtBQU1DLENBQUFBLENBTU47QUFDQSxTQUFTTSxRQUFRQyxNQUFNLEVBQUVDLEdBQUc7SUFDeEIsSUFBSSxJQUFJQyxRQUFRRCxJQUFJWixPQUFPQyxlQUFlVSxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFSLFNBQVM7SUFDYkcsaUNBQWlDO1FBQzdCLE9BQU9BO0lBQ1g7SUFDQUMsMEJBQTBCO1FBQ3RCLE9BQU9BO0lBQ1g7SUFDQUMsd0JBQXdCO1FBQ3BCLE9BQU9BO0lBQ1g7SUFDQUMsZ0NBQWdDO1FBQzVCLE9BQU9BO0lBQ1g7SUFDQUMsbUNBQW1DO1FBQy9CLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1PLGtCQUFrQkMsbUJBQU9BLENBQUMsd0pBQXNEO0FBQ3RGLFNBQVNaLGdDQUFnQ2EsR0FBRyxFQUFFQyxjQUFjO0lBQ3hELE1BQU1DLFVBQVUsSUFBSUMsUUFBUTtRQUN4QkMsVUFBVUo7SUFDZDtJQUNDLElBQUdGLGdCQUFnQk8sb0JBQW1CLEVBQUdILFNBQVNEO0lBQ25ELE9BQU8sSUFBSUssU0FBUyxNQUFNO1FBQ3RCQyxRQUFRO1FBQ1JMO0lBQ0o7QUFDSjtBQUNBLFNBQVNkO0lBQ0wsT0FBTyxJQUFJa0IsU0FBUyxNQUFNO1FBQ3RCQyxRQUFRO0lBQ1o7QUFDSjtBQUNBLFNBQVNsQjtJQUNMLE9BQU8sSUFBSWlCLFNBQVMsTUFBTTtRQUN0QkMsUUFBUTtJQUNaO0FBQ0o7QUFDQSxTQUFTakI7SUFDTCxPQUFPLElBQUlnQixTQUFTLE1BQU07UUFDdEJDLFFBQVE7SUFDWjtBQUNKO0FBQ0EsU0FBU2hCO0lBQ0wsT0FBTyxJQUFJZSxTQUFTLE1BQU07UUFDdEJDLFFBQVE7SUFDWjtBQUNKLEVBRUEsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2hlbHBlcnMvcmVzcG9uc2UtaGFuZGxlcnMuanM/OGRkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGhhbmRsZVRlbXBvcmFyeVJlZGlyZWN0UmVzcG9uc2U6IG51bGwsXG4gICAgaGFuZGxlQmFkUmVxdWVzdFJlc3BvbnNlOiBudWxsLFxuICAgIGhhbmRsZU5vdEZvdW5kUmVzcG9uc2U6IG51bGwsXG4gICAgaGFuZGxlTWV0aG9kTm90QWxsb3dlZFJlc3BvbnNlOiBudWxsLFxuICAgIGhhbmRsZUludGVybmFsU2VydmVyRXJyb3JSZXNwb25zZTogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBoYW5kbGVUZW1wb3JhcnlSZWRpcmVjdFJlc3BvbnNlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZVRlbXBvcmFyeVJlZGlyZWN0UmVzcG9uc2U7XG4gICAgfSxcbiAgICBoYW5kbGVCYWRSZXF1ZXN0UmVzcG9uc2U6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaGFuZGxlQmFkUmVxdWVzdFJlc3BvbnNlO1xuICAgIH0sXG4gICAgaGFuZGxlTm90Rm91bmRSZXNwb25zZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBoYW5kbGVOb3RGb3VuZFJlc3BvbnNlO1xuICAgIH0sXG4gICAgaGFuZGxlTWV0aG9kTm90QWxsb3dlZFJlc3BvbnNlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGhhbmRsZU1ldGhvZE5vdEFsbG93ZWRSZXNwb25zZTtcbiAgICB9LFxuICAgIGhhbmRsZUludGVybmFsU2VydmVyRXJyb3JSZXNwb25zZTogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBoYW5kbGVJbnRlcm5hbFNlcnZlckVycm9yUmVzcG9uc2U7XG4gICAgfVxufSk7XG5jb25zdCBfcmVxdWVzdGNvb2tpZXMgPSByZXF1aXJlKFwiLi4vLi4vLi4vd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL3JlcXVlc3QtY29va2llc1wiKTtcbmZ1bmN0aW9uIGhhbmRsZVRlbXBvcmFyeVJlZGlyZWN0UmVzcG9uc2UodXJsLCBtdXRhYmxlQ29va2llcykge1xuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgSGVhZGVycyh7XG4gICAgICAgIGxvY2F0aW9uOiB1cmxcbiAgICB9KTtcbiAgICAoMCwgX3JlcXVlc3Rjb29raWVzLmFwcGVuZE11dGFibGVDb29raWVzKShoZWFkZXJzLCBtdXRhYmxlQ29va2llcyk7XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShudWxsLCB7XG4gICAgICAgIHN0YXR1czogMzA3LFxuICAgICAgICBoZWFkZXJzXG4gICAgfSk7XG59XG5mdW5jdGlvbiBoYW5kbGVCYWRSZXF1ZXN0UmVzcG9uc2UoKSB7XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShudWxsLCB7XG4gICAgICAgIHN0YXR1czogNDAwXG4gICAgfSk7XG59XG5mdW5jdGlvbiBoYW5kbGVOb3RGb3VuZFJlc3BvbnNlKCkge1xuICAgIHJldHVybiBuZXcgUmVzcG9uc2UobnVsbCwge1xuICAgICAgICBzdGF0dXM6IDQwNFxuICAgIH0pO1xufVxuZnVuY3Rpb24gaGFuZGxlTWV0aG9kTm90QWxsb3dlZFJlc3BvbnNlKCkge1xuICAgIHJldHVybiBuZXcgUmVzcG9uc2UobnVsbCwge1xuICAgICAgICBzdGF0dXM6IDQwNVxuICAgIH0pO1xufVxuZnVuY3Rpb24gaGFuZGxlSW50ZXJuYWxTZXJ2ZXJFcnJvclJlc3BvbnNlKCkge1xuICAgIHJldHVybiBuZXcgUmVzcG9uc2UobnVsbCwge1xuICAgICAgICBzdGF0dXM6IDUwMFxuICAgIH0pO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNwb25zZS1oYW5kbGVycy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJoYW5kbGVUZW1wb3JhcnlSZWRpcmVjdFJlc3BvbnNlIiwiaGFuZGxlQmFkUmVxdWVzdFJlc3BvbnNlIiwiaGFuZGxlTm90Rm91bmRSZXNwb25zZSIsImhhbmRsZU1ldGhvZE5vdEFsbG93ZWRSZXNwb25zZSIsImhhbmRsZUludGVybmFsU2VydmVyRXJyb3JSZXNwb25zZSIsIl9leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZW51bWVyYWJsZSIsImdldCIsIl9yZXF1ZXN0Y29va2llcyIsInJlcXVpcmUiLCJ1cmwiLCJtdXRhYmxlQ29va2llcyIsImhlYWRlcnMiLCJIZWFkZXJzIiwibG9jYXRpb24iLCJhcHBlbmRNdXRhYmxlQ29va2llcyIsIlJlc3BvbnNlIiwic3RhdHVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/helpers/response-handlers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/future/route-modules/route-module.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/server/future/route-modules/route-module.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"RouteModule\", ({\n    enumerable: true,\n    get: function() {\n        return RouteModule;\n    }\n}));\nclass RouteModule {\n    constructor({ userland, definition }){\n        this.userland = userland;\n        this.definition = definition;\n    }\n} //# sourceMappingURL=route-module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9yb3V0ZS1tb2R1bGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILCtDQUE4QztJQUMxQ0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1BO0lBQ0ZDLFlBQVksRUFBRUMsUUFBUSxFQUFHQyxVQUFVLEVBQUcsQ0FBQztRQUNuQyxJQUFJLENBQUNELFdBQVdBO1FBQ2hCLElBQUksQ0FBQ0MsYUFBYUE7SUFDdEI7QUFDSixFQUVBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9yb3V0ZS1tb2R1bGUuanM/OWFhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJvdXRlTW9kdWxlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBSb3V0ZU1vZHVsZTtcbiAgICB9XG59KTtcbmNsYXNzIFJvdXRlTW9kdWxlIHtcbiAgICBjb25zdHJ1Y3Rvcih7IHVzZXJsYW5kICwgZGVmaW5pdGlvbiAgfSl7XG4gICAgICAgIHRoaXMudXNlcmxhbmQgPSB1c2VybGFuZDtcbiAgICAgICAgdGhpcy5kZWZpbml0aW9uID0gZGVmaW5pdGlvbjtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlLW1vZHVsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiUm91dGVNb2R1bGUiLCJjb25zdHJ1Y3RvciIsInVzZXJsYW5kIiwiZGVmaW5pdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/future/route-modules/route-module.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/lib/patch-fetch.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/server/lib/patch-fetch.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    addImplicitTags: function() {\n        return addImplicitTags;\n    },\n    patchFetch: function() {\n        return patchFetch;\n    }\n});\nconst _constants = __webpack_require__(/*! ./trace/constants */ \"(sc_server)/./node_modules/next/dist/server/lib/trace/constants.js\");\nconst _tracer = __webpack_require__(/*! ./trace/tracer */ \"(sc_server)/./node_modules/next/dist/server/lib/trace/tracer.js\");\nconst _constants1 = __webpack_require__(/*! ../../lib/constants */ \"(sc_server)/./node_modules/next/dist/lib/constants.js\");\nconst isEdgeRuntime = \"nodejs\" === \"edge\";\nfunction addImplicitTags(staticGenerationStore) {\n    const newTags = [];\n    const pathname = staticGenerationStore == null ? void 0 : staticGenerationStore.originalPathname;\n    if (!pathname) {\n        return newTags;\n    }\n    if (!Array.isArray(staticGenerationStore.tags)) {\n        staticGenerationStore.tags = [];\n    }\n    if (!staticGenerationStore.tags.includes(pathname)) {\n        staticGenerationStore.tags.push(pathname);\n    }\n    newTags.push(pathname);\n    return newTags;\n}\nfunction trackFetchMetric(staticGenerationStore, ctx) {\n    if (!staticGenerationStore) return;\n    if (!staticGenerationStore.fetchMetrics) {\n        staticGenerationStore.fetchMetrics = [];\n    }\n    const dedupeFields = [\n        \"url\",\n        \"status\",\n        \"method\"\n    ];\n    // don't add metric if one already exists for the fetch\n    if (staticGenerationStore.fetchMetrics.some((metric)=>{\n        return dedupeFields.every((field)=>metric[field] === ctx[field]);\n    })) {\n        return;\n    }\n    staticGenerationStore.fetchMetrics.push({\n        url: ctx.url,\n        cacheStatus: ctx.cacheStatus,\n        status: ctx.status,\n        method: ctx.method,\n        start: ctx.start,\n        end: Date.now(),\n        idx: staticGenerationStore.nextFetchId || 0\n    });\n}\nfunction patchFetch({ serverHooks, staticGenerationAsyncStorage }) {\n    if (!globalThis._nextOriginalFetch) {\n        globalThis._nextOriginalFetch = globalThis.fetch;\n    }\n    if (globalThis.fetch.__nextPatched) return;\n    const { DynamicServerError } = serverHooks;\n    const originFetch = globalThis._nextOriginalFetch;\n    globalThis.fetch = async (input, init)=>{\n        var _init_method;\n        let url;\n        try {\n            url = new URL(input instanceof Request ? input.url : input);\n            url.username = \"\";\n            url.password = \"\";\n        } catch  {\n            // Error caused by malformed URL should be handled by native fetch\n            url = undefined;\n        }\n        const fetchUrl = (url == null ? void 0 : url.href) ?? \"\";\n        const fetchStart = Date.now();\n        const method = (init == null ? void 0 : (_init_method = init.method) == null ? void 0 : _init_method.toUpperCase()) || \"GET\";\n        return await (0, _tracer.getTracer)().trace(_constants.AppRenderSpan.fetch, {\n            kind: _tracer.SpanKind.CLIENT,\n            spanName: [\n                \"fetch\",\n                method,\n                fetchUrl\n            ].filter(Boolean).join(\" \"),\n            attributes: {\n                \"http.url\": fetchUrl,\n                \"http.method\": method,\n                \"net.peer.name\": url == null ? void 0 : url.hostname,\n                \"net.peer.port\": (url == null ? void 0 : url.port) || undefined\n            }\n        }, async ()=>{\n            var _ref, _getRequestMeta;\n            const staticGenerationStore = staticGenerationAsyncStorage.getStore();\n            const isRequestInput = input && typeof input === \"object\" && typeof input.method === \"string\";\n            const getRequestMeta = (field)=>{\n                let value = isRequestInput ? input[field] : null;\n                return value || (init == null ? void 0 : init[field]);\n            };\n            // If the staticGenerationStore is not available, we can't do any\n            // special treatment of fetch, therefore fallback to the original\n            // fetch implementation.\n            if (!staticGenerationStore || ((_ref = init == null ? void 0 : init.next) == null ? void 0 : _ref.internal)) {\n                return originFetch(input, init);\n            }\n            let revalidate = undefined;\n            const getNextField = (field)=>{\n                var _init_next, _init_next1, _input_next;\n                return typeof (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next[field]) !== \"undefined\" ? init == null ? void 0 : (_init_next1 = init.next) == null ? void 0 : _init_next1[field] : isRequestInput ? (_input_next = input.next) == null ? void 0 : _input_next[field] : undefined;\n            };\n            // RequestInit doesn't keep extra fields e.g. next so it's\n            // only available if init is used separate\n            let curRevalidate = getNextField(\"revalidate\");\n            const tags = getNextField(\"tags\") || [];\n            if (Array.isArray(tags)) {\n                if (!staticGenerationStore.tags) {\n                    staticGenerationStore.tags = [];\n                }\n                for (const tag of tags){\n                    if (!staticGenerationStore.tags.includes(tag)) {\n                        staticGenerationStore.tags.push(tag);\n                    }\n                }\n            }\n            const implicitTags = addImplicitTags(staticGenerationStore);\n            for (const tag of implicitTags || []){\n                if (!tags.includes(tag)) {\n                    tags.push(tag);\n                }\n            }\n            const isOnlyCache = staticGenerationStore.fetchCache === \"only-cache\";\n            const isForceCache = staticGenerationStore.fetchCache === \"force-cache\";\n            const isDefaultCache = staticGenerationStore.fetchCache === \"default-cache\";\n            const isDefaultNoStore = staticGenerationStore.fetchCache === \"default-no-store\";\n            const isOnlyNoStore = staticGenerationStore.fetchCache === \"only-no-store\";\n            const isForceNoStore = staticGenerationStore.fetchCache === \"force-no-store\";\n            let _cache = getRequestMeta(\"cache\");\n            if (typeof _cache === \"string\" && typeof curRevalidate !== \"undefined\") {\n                console.warn(`Warning: fetch for ${fetchUrl} on ${staticGenerationStore.pathname} specified \"cache: ${_cache}\" and \"revalidate: ${curRevalidate}\", only one should be specified.`);\n                _cache = undefined;\n            }\n            if (_cache === \"force-cache\") {\n                curRevalidate = false;\n            }\n            if ([\n                \"no-cache\",\n                \"no-store\"\n            ].includes(_cache || \"\")) {\n                curRevalidate = 0;\n            }\n            if (typeof curRevalidate === \"number\" || curRevalidate === false) {\n                revalidate = curRevalidate;\n            }\n            let cacheReason = \"\";\n            const _headers = getRequestMeta(\"headers\");\n            const initHeaders = typeof (_headers == null ? void 0 : _headers.get) === \"function\" ? _headers : new Headers(_headers || {});\n            const hasUnCacheableHeader = initHeaders.get(\"authorization\") || initHeaders.get(\"cookie\");\n            const isUnCacheableMethod = ![\n                \"get\",\n                \"head\"\n            ].includes(((_getRequestMeta = getRequestMeta(\"method\")) == null ? void 0 : _getRequestMeta.toLowerCase()) || \"get\");\n            // if there are authorized headers or a POST method and\n            // dynamic data usage was present above the tree we bail\n            // e.g. if cookies() is used before an authed/POST fetch\n            const autoNoCache = (hasUnCacheableHeader || isUnCacheableMethod) && staticGenerationStore.revalidate === 0;\n            if (isForceNoStore) {\n                revalidate = 0;\n                cacheReason = \"fetchCache = force-no-store\";\n            }\n            if (isOnlyNoStore) {\n                if (_cache === \"force-cache\" || revalidate === 0) {\n                    throw new Error(`cache: 'force-cache' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-no-store'`);\n                }\n                revalidate = 0;\n                cacheReason = \"fetchCache = only-no-store\";\n            }\n            if (isOnlyCache && _cache === \"no-store\") {\n                throw new Error(`cache: 'no-store' used on fetch for ${fetchUrl} with 'export const fetchCache = 'only-cache'`);\n            }\n            if (isForceCache && (typeof curRevalidate === \"undefined\" || curRevalidate === 0)) {\n                cacheReason = \"fetchCache = force-cache\";\n                revalidate = false;\n            }\n            if (typeof revalidate === \"undefined\") {\n                if (isDefaultCache) {\n                    revalidate = false;\n                    cacheReason = \"fetchCache = default-cache\";\n                } else if (autoNoCache) {\n                    revalidate = 0;\n                    cacheReason = \"auto no cache\";\n                } else if (isDefaultNoStore) {\n                    revalidate = 0;\n                    cacheReason = \"fetchCache = default-no-store\";\n                } else {\n                    cacheReason = \"auto cache\";\n                    revalidate = typeof staticGenerationStore.revalidate === \"boolean\" || typeof staticGenerationStore.revalidate === \"undefined\" ? false : staticGenerationStore.revalidate;\n                }\n            } else if (!cacheReason) {\n                cacheReason = `revalidate: ${revalidate}`;\n            }\n            if (// revalidate although if it occurs during build we do\n            !autoNoCache && (typeof staticGenerationStore.revalidate === \"undefined\" || typeof revalidate === \"number\" && (staticGenerationStore.revalidate === false || typeof staticGenerationStore.revalidate === \"number\" && revalidate < staticGenerationStore.revalidate))) {\n                staticGenerationStore.revalidate = revalidate;\n            }\n            const isCacheableRevalidate = typeof revalidate === \"number\" && revalidate > 0 || revalidate === false;\n            let cacheKey;\n            if (staticGenerationStore.incrementalCache && isCacheableRevalidate) {\n                try {\n                    cacheKey = await staticGenerationStore.incrementalCache.fetchCacheKey(fetchUrl, isRequestInput ? input : init);\n                } catch (err) {\n                    console.error(`Failed to generate cache key for`, input);\n                }\n            }\n            const requestInputFields = [\n                \"cache\",\n                \"credentials\",\n                \"headers\",\n                \"integrity\",\n                \"keepalive\",\n                \"method\",\n                \"mode\",\n                \"redirect\",\n                \"referrer\",\n                \"referrerPolicy\",\n                \"signal\",\n                \"window\",\n                \"duplex\"\n            ];\n            if (isRequestInput) {\n                const reqInput = input;\n                const reqOptions = {\n                    body: reqInput._ogBody || reqInput.body\n                };\n                for (const field of requestInputFields){\n                    // @ts-expect-error custom fields\n                    reqOptions[field] = reqInput[field];\n                }\n                input = new Request(reqInput.url, reqOptions);\n            } else if (init) {\n                const initialInit = init;\n                init = {\n                    body: init._ogBody || init.body\n                };\n                for (const field of requestInputFields){\n                    // @ts-expect-error custom fields\n                    init[field] = initialInit[field];\n                }\n            }\n            const fetchIdx = staticGenerationStore.nextFetchId ?? 1;\n            staticGenerationStore.nextFetchId = fetchIdx + 1;\n            const normalizedRevalidate = typeof revalidate !== \"number\" ? _constants1.CACHE_ONE_YEAR : revalidate;\n            const doOriginalFetch = async (isStale)=>{\n                // add metadata to init without editing the original\n                const clonedInit = {\n                    ...init,\n                    next: {\n                        ...init == null ? void 0 : init.next,\n                        fetchType: \"origin\",\n                        fetchIdx\n                    }\n                };\n                return originFetch(input, clonedInit).then(async (res)=>{\n                    if (!isStale) {\n                        trackFetchMetric(staticGenerationStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: \"miss\",\n                            status: res.status,\n                            method: clonedInit.method || \"GET\"\n                        });\n                    }\n                    if (res.status === 200 && staticGenerationStore.incrementalCache && cacheKey && isCacheableRevalidate) {\n                        const bodyBuffer = Buffer.from(await res.arrayBuffer());\n                        try {\n                            await staticGenerationStore.incrementalCache.set(cacheKey, {\n                                kind: \"FETCH\",\n                                data: {\n                                    headers: Object.fromEntries(res.headers.entries()),\n                                    body: bodyBuffer.toString(\"base64\"),\n                                    status: res.status,\n                                    tags\n                                },\n                                revalidate: normalizedRevalidate\n                            }, revalidate, true, fetchUrl, fetchIdx);\n                        } catch (err) {\n                            console.warn(`Failed to set fetch cache`, input, err);\n                        }\n                        return new Response(bodyBuffer, {\n                            headers: new Headers(res.headers),\n                            status: res.status\n                        });\n                    }\n                    return res;\n                });\n            };\n            if (cacheKey && (staticGenerationStore == null ? void 0 : staticGenerationStore.incrementalCache)) {\n                const entry = staticGenerationStore.isOnDemandRevalidate ? null : await staticGenerationStore.incrementalCache.get(cacheKey, true, revalidate, fetchUrl, fetchIdx);\n                if ((entry == null ? void 0 : entry.value) && entry.value.kind === \"FETCH\") {\n                    const currentTags = entry.value.data.tags;\n                    // when stale and is revalidating we wait for fresh data\n                    // so the revalidated entry has the updated data\n                    if (!(staticGenerationStore.isRevalidate && entry.isStale)) {\n                        if (entry.isStale) {\n                            if (!staticGenerationStore.pendingRevalidates) {\n                                staticGenerationStore.pendingRevalidates = [];\n                            }\n                            staticGenerationStore.pendingRevalidates.push(doOriginalFetch(true).catch(console.error));\n                        } else if (tags && !tags.every((tag)=>{\n                            return currentTags == null ? void 0 : currentTags.includes(tag);\n                        })) {\n                            var _staticGenerationStore_incrementalCache;\n                            // if new tags are being added we need to set even if\n                            // the data isn't stale\n                            if (!entry.value.data.tags) {\n                                entry.value.data.tags = [];\n                            }\n                            for (const tag of tags){\n                                if (!entry.value.data.tags.includes(tag)) {\n                                    entry.value.data.tags.push(tag);\n                                }\n                            }\n                            (_staticGenerationStore_incrementalCache = staticGenerationStore.incrementalCache) == null ? void 0 : _staticGenerationStore_incrementalCache.set(cacheKey, entry.value, revalidate, true, fetchUrl, fetchIdx);\n                        }\n                        const resData = entry.value.data;\n                        let decodedBody;\n                        if (false) {} else {\n                            decodedBody = Buffer.from(resData.body, \"base64\").subarray();\n                        }\n                        trackFetchMetric(staticGenerationStore, {\n                            start: fetchStart,\n                            url: fetchUrl,\n                            cacheReason,\n                            cacheStatus: \"hit\",\n                            status: resData.status || 200,\n                            method: (init == null ? void 0 : init.method) || \"GET\"\n                        });\n                        return new Response(decodedBody, {\n                            headers: resData.headers,\n                            status: resData.status\n                        });\n                    }\n                }\n            }\n            if (staticGenerationStore.isStaticGeneration) {\n                if (init && typeof init === \"object\") {\n                    const cache = init.cache;\n                    // Delete `cache` property as Cloudflare Workers will throw an error\n                    if (isEdgeRuntime) {\n                        delete init.cache;\n                    }\n                    if (cache === \"no-store\") {\n                        staticGenerationStore.revalidate = 0;\n                        const dynamicUsageReason = `no-store fetch ${input}${staticGenerationStore.pathname ? ` ${staticGenerationStore.pathname}` : \"\"}`;\n                        const err = new DynamicServerError(dynamicUsageReason);\n                        staticGenerationStore.dynamicUsageErr = err;\n                        staticGenerationStore.dynamicUsageStack = err.stack;\n                        staticGenerationStore.dynamicUsageDescription = dynamicUsageReason;\n                    }\n                    const hasNextConfig = \"next\" in init;\n                    const next = init.next || {};\n                    if (typeof next.revalidate === \"number\" && (typeof staticGenerationStore.revalidate === \"undefined\" || typeof staticGenerationStore.revalidate === \"number\" && next.revalidate < staticGenerationStore.revalidate)) {\n                        const forceDynamic = staticGenerationStore.forceDynamic;\n                        if (!forceDynamic || next.revalidate !== 0) {\n                            staticGenerationStore.revalidate = next.revalidate;\n                        }\n                        if (!forceDynamic && next.revalidate === 0) {\n                            const dynamicUsageReason = `revalidate: ${next.revalidate} fetch ${input}${staticGenerationStore.pathname ? ` ${staticGenerationStore.pathname}` : \"\"}`;\n                            const err = new DynamicServerError(dynamicUsageReason);\n                            staticGenerationStore.dynamicUsageErr = err;\n                            staticGenerationStore.dynamicUsageStack = err.stack;\n                            staticGenerationStore.dynamicUsageDescription = dynamicUsageReason;\n                        }\n                    }\n                    if (hasNextConfig) delete init.next;\n                }\n            }\n            return doOriginalFetch();\n        });\n    };\n    globalThis.fetch.__nextGetStaticStore = ()=>{\n        return staticGenerationAsyncStorage;\n    };\n    globalThis.fetch.__nextPatched = true;\n} //# sourceMappingURL=patch-fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/lib/patch-fetch.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/lib/trace/constants.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/server/lib/trace/constants.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    NextVanillaSpanAllowlist: function() {\n        return NextVanillaSpanAllowlist;\n    },\n    BaseServerSpan: function() {\n        return BaseServerSpan;\n    },\n    LoadComponentsSpan: function() {\n        return LoadComponentsSpan;\n    },\n    NextServerSpan: function() {\n        return NextServerSpan;\n    },\n    NextNodeServerSpan: function() {\n        return NextNodeServerSpan;\n    },\n    StartServerSpan: function() {\n        return StartServerSpan;\n    },\n    RenderSpan: function() {\n        return RenderSpan;\n    },\n    RouterSpan: function() {\n        return RouterSpan;\n    },\n    AppRenderSpan: function() {\n        return AppRenderSpan;\n    },\n    NodeSpan: function() {\n        return NodeSpan;\n    },\n    AppRouteRouteHandlersSpan: function() {\n        return AppRouteRouteHandlersSpan;\n    },\n    ResolveMetadataSpan: function() {\n        return ResolveMetadataSpan;\n    }\n});\nvar BaseServerSpan;\n(function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n})(BaseServerSpan || (BaseServerSpan = {}));\nvar LoadComponentsSpan;\n(function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n})(LoadComponentsSpan || (LoadComponentsSpan = {}));\nvar NextServerSpan;\n(function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n})(NextServerSpan || (NextServerSpan = {}));\nvar NextNodeServerSpan;\n(function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"sendStatic\"] = \"NextNodeServer.sendStatic\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n})(NextNodeServerSpan || (NextNodeServerSpan = {}));\nvar StartServerSpan;\n(function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n})(StartServerSpan || (StartServerSpan = {}));\nvar RenderSpan;\n(function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n})(RenderSpan || (RenderSpan = {}));\nvar AppRenderSpan;\n(function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n})(AppRenderSpan || (AppRenderSpan = {}));\nvar RouterSpan;\n(function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n})(RouterSpan || (RouterSpan = {}));\nvar NodeSpan;\n(function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n})(NodeSpan || (NodeSpan = {}));\nvar AppRouteRouteHandlersSpan;\n(function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n})(AppRouteRouteHandlersSpan || (AppRouteRouteHandlersSpan = {}));\nvar ResolveMetadataSpan;\n(function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n})(ResolveMetadataSpan || (ResolveMetadataSpan = {}));\nconst NextVanillaSpanAllowlist = [\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\"\n]; //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/lib/trace/constants.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/lib/trace/tracer.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/server/lib/trace/tracer.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    getTracer: function() {\n        return getTracer;\n    },\n    SpanStatusCode: function() {\n        return SpanStatusCode;\n    },\n    SpanKind: function() {\n        return SpanKind;\n    }\n});\nconst _constants = __webpack_require__(/*! ./constants */ \"(sc_server)/./node_modules/next/dist/server/lib/trace/constants.js\");\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (false) {} else {\n    try {\n        api = __webpack_require__(/*! @opentelemetry/api */ \"(sc_server)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\");\n    } catch (err) {\n        api = __webpack_require__(/*! next/dist/compiled/@opentelemetry/api */ \"next/dist/compiled/@opentelemetry/api\");\n    }\n}\nconst { context, trace, SpanStatusCode, SpanKind } = api;\nconst isPromise = (p)=>{\n    return p !== null && typeof p === \"object\" && typeof p.then === \"function\";\n};\nconst closeSpanWithError = (span, error)=>{\n    if (error) {\n        span.recordException(error);\n    }\n    span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: error == null ? void 0 : error.message\n    });\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey(\"next.rootSpanId\");\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer(\"next.js\", \"0.0.1\");\n    }\n    getContext() {\n        return context;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    trace(...args) {\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn, options } = typeof fnOrOptions === \"function\" ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        if (!_constants.NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== \"1\" || options.hideSpan) {\n            return fn();\n        }\n        const spanName = options.spanName ?? type;\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = api.ROOT_CONTEXT;\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            \"next.span_name\": spanName,\n            \"next.span_type\": type,\n            ...options.attributes\n        };\n        return api.context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isPromise(result)) {\n                        result.then(()=>span.end(), (err)=>closeSpanWithError(span, err)).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!_constants.NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== \"1\") {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === \"function\" && typeof fn === \"function\") {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === \"function\") {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})(); //# sourceMappingURL=tracer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/lib/trace/tracer.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/node-polyfill-headers.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/server/node-polyfill-headers.js ***!
  \****************************************************************/
/***/ (() => {

"use strict";
eval("/**\n * Polyfills the `Headers.getAll(name)` method so it'll work in the edge\n * runtime.\n */ \nif (!(\"getAll\" in Headers.prototype)) {\n    // @ts-expect-error - this is polyfilling this method so it doesn't exist yet\n    Headers.prototype.getAll = function(name) {\n        name = name.toLowerCase();\n        if (name !== \"set-cookie\") throw new Error(\"Headers.getAll is only supported for Set-Cookie header\");\n        const headers = [\n            ...this.entries()\n        ].filter(([key])=>key === name);\n        return headers.map(([, value])=>value);\n    };\n} //# sourceMappingURL=node-polyfill-headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci9ub2RlLXBvbHlmaWxsLWhlYWRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQUE7OztDQUdDLEdBQWdCO0FBQ2pCLElBQUksQ0FBRSxhQUFZQSxRQUFRQyxTQUFRLEdBQUk7SUFDbEMsNkVBQTZFO0lBQzdFRCxRQUFRQyxVQUFVQyxTQUFTLFNBQVNDLElBQUk7UUFDcENBLE9BQU9BLEtBQUtDO1FBQ1osSUFBSUQsU0FBUyxjQUFjLE1BQU0sSUFBSUUsTUFBTTtRQUMzQyxNQUFNQyxVQUFVO2VBQ1QsSUFBSSxDQUFDQztTQUNYLENBQUNDLE9BQU8sQ0FBQyxDQUFDQyxJQUFJLEdBQUdBLFFBQVFOO1FBQzFCLE9BQU9HLFFBQVFJLElBQUksQ0FBQyxHQUFHQyxNQUFNLEdBQUdBO0lBQ3BDO0FBQ0osRUFFQSxpREFBaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvbm9kZS1wb2x5ZmlsbC1oZWFkZXJzLmpzPzk1YjgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQb2x5ZmlsbHMgdGhlIGBIZWFkZXJzLmdldEFsbChuYW1lKWAgbWV0aG9kIHNvIGl0J2xsIHdvcmsgaW4gdGhlIGVkZ2VcbiAqIHJ1bnRpbWUuXG4gKi8gXCJ1c2Ugc3RyaWN0XCI7XG5pZiAoIShcImdldEFsbFwiIGluIEhlYWRlcnMucHJvdG90eXBlKSkge1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLSB0aGlzIGlzIHBvbHlmaWxsaW5nIHRoaXMgbWV0aG9kIHNvIGl0IGRvZXNuJ3QgZXhpc3QgeWV0XG4gICAgSGVhZGVycy5wcm90b3R5cGUuZ2V0QWxsID0gZnVuY3Rpb24obmFtZSkge1xuICAgICAgICBuYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAobmFtZSAhPT0gXCJzZXQtY29va2llXCIpIHRocm93IG5ldyBFcnJvcihcIkhlYWRlcnMuZ2V0QWxsIGlzIG9ubHkgc3VwcG9ydGVkIGZvciBTZXQtQ29va2llIGhlYWRlclwiKTtcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IFtcbiAgICAgICAgICAgIC4uLnRoaXMuZW50cmllcygpXG4gICAgICAgIF0uZmlsdGVyKChba2V5XSk9PmtleSA9PT0gbmFtZSk7XG4gICAgICAgIHJldHVybiBoZWFkZXJzLm1hcCgoWywgdmFsdWVdKT0+dmFsdWUpO1xuICAgIH07XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vZGUtcG9seWZpbGwtaGVhZGVycy5qcy5tYXAiXSwibmFtZXMiOlsiSGVhZGVycyIsInByb3RvdHlwZSIsImdldEFsbCIsIm5hbWUiLCJ0b0xvd2VyQ2FzZSIsIkVycm9yIiwiaGVhZGVycyIsImVudHJpZXMiLCJmaWx0ZXIiLCJrZXkiLCJtYXAiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/node-polyfill-headers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/web/http.js":
/*!***************************************************!*\
  !*** ./node_modules/next/dist/server/web/http.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * List of valid HTTP methods that can be implemented by Next.js's Custom App\n * Routes.\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    HTTP_METHODS: function() {\n        return HTTP_METHODS;\n    },\n    isHTTPMethod: function() {\n        return isHTTPMethod;\n    }\n});\nconst HTTP_METHODS = [\n    \"GET\",\n    \"HEAD\",\n    \"OPTIONS\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"PATCH\"\n];\nfunction isHTTPMethod(maybeMethod) {\n    return HTTP_METHODS.includes(maybeMethod);\n} //# sourceMappingURL=http.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvaHR0cC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7O0NBR0MsR0FBZ0I7QUFDakJBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGLEtBQU1DLENBQUFBLENBR047QUFDQSxTQUFTRyxRQUFRQyxNQUFNLEVBQUVDLEdBQUc7SUFDeEIsSUFBSSxJQUFJQyxRQUFRRCxJQUFJVCxPQUFPQyxlQUFlTyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFMLFNBQVM7SUFDYkcsY0FBYztRQUNWLE9BQU9BO0lBQ1g7SUFDQUMsY0FBYztRQUNWLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1ELGVBQWU7SUFDakI7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDSDtBQUNELFNBQVNDLGFBQWFPLFdBQVc7SUFDN0IsT0FBT1IsYUFBYVMsU0FBU0Q7QUFDakMsRUFFQSxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zZXJ2ZXIvd2ViL2h0dHAuanM/ZTBjYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIExpc3Qgb2YgdmFsaWQgSFRUUCBtZXRob2RzIHRoYXQgY2FuIGJlIGltcGxlbWVudGVkIGJ5IE5leHQuanMncyBDdXN0b20gQXBwXG4gKiBSb3V0ZXMuXG4gKi8gXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBIVFRQX01FVEhPRFM6IG51bGwsXG4gICAgaXNIVFRQTWV0aG9kOiBudWxsXG59KTtcbmZ1bmN0aW9uIF9leHBvcnQodGFyZ2V0LCBhbGwpIHtcbiAgICBmb3IodmFyIG5hbWUgaW4gYWxsKU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIG5hbWUsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiBhbGxbbmFtZV1cbiAgICB9KTtcbn1cbl9leHBvcnQoZXhwb3J0cywge1xuICAgIEhUVFBfTUVUSE9EUzogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBIVFRQX01FVEhPRFM7XG4gICAgfSxcbiAgICBpc0hUVFBNZXRob2Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gaXNIVFRQTWV0aG9kO1xuICAgIH1cbn0pO1xuY29uc3QgSFRUUF9NRVRIT0RTID0gW1xuICAgIFwiR0VUXCIsXG4gICAgXCJIRUFEXCIsXG4gICAgXCJPUFRJT05TXCIsXG4gICAgXCJQT1NUXCIsXG4gICAgXCJQVVRcIixcbiAgICBcIkRFTEVURVwiLFxuICAgIFwiUEFUQ0hcIlxuXTtcbmZ1bmN0aW9uIGlzSFRUUE1ldGhvZChtYXliZU1ldGhvZCkge1xuICAgIHJldHVybiBIVFRQX01FVEhPRFMuaW5jbHVkZXMobWF5YmVNZXRob2QpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm1vZHVsZSIsIkhUVFBfTUVUSE9EUyIsImlzSFRUUE1ldGhvZCIsIl9leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZW51bWVyYWJsZSIsImdldCIsIm1heWJlTWV0aG9kIiwiaW5jbHVkZXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/web/http.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/web/next-url.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/server/web/next-url.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"NextURL\", ({\n    enumerable: true,\n    get: function() {\n        return NextURL;\n    }\n}));\nconst _detectdomainlocale = __webpack_require__(/*! ../../shared/lib/i18n/detect-domain-locale */ \"(sc_server)/./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js\");\nconst _formatnextpathnameinfo = __webpack_require__(/*! ../../shared/lib/router/utils/format-next-pathname-info */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js\");\nconst _gethostname = __webpack_require__(/*! ../../shared/lib/get-hostname */ \"(sc_server)/./node_modules/next/dist/shared/lib/get-hostname.js\");\nconst _getnextpathnameinfo = __webpack_require__(/*! ../../shared/lib/router/utils/get-next-pathname-info */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js\");\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nclass NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig, _this_Internal_options_nextConfig_i18n, _this_Internal_domainLocale, _this_Internal_options_nextConfig1, _this_Internal_options_nextConfig_i18n1;\n        const info = (0, _getnextpathnameinfo.getNextPathnameInfo)(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !undefined,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = (0, _gethostname.getHostname)(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : (0, _detectdomainlocale.detectDomainLocale)((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? \"\";\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return (0, _formatnextpathnameinfo.formatNextPathnameInfo)({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig, _this_Internal_options_nextConfig_i18n;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n} //# sourceMappingURL=next-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/web/next-url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/adapters/headers.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    ReadonlyHeadersError: function() {\n        return ReadonlyHeadersError;\n    },\n    HeadersAdapter: function() {\n        return HeadersAdapter;\n    }\n});\nconst _reflect = __webpack_require__(/*! ./reflect */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\");\nclass ReadonlyHeadersError extends Error {\n    constructor(){\n        super(\"Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers\");\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nclass HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === \"symbol\") {\n                    return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === \"undefined\") return;\n                // If the original casing exists, return the value.\n                return _reflect.ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === \"symbol\") {\n                    return _reflect.ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return _reflect.ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect.ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === \"undefined\") return false;\n                // If the original casing exists, return true.\n                return _reflect.ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect.ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === \"undefined\") return true;\n                // If the original casing exists, delete the property.\n                return _reflect.ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"append\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(\", \");\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === \"string\") {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== \"undefined\") return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== \"undefined\";\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n} //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/headers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"ReflectAdapter\", ({\n    enumerable: true,\n    get: function() {\n        return ReflectAdapter;\n    }\n}));\nclass ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === \"function\") {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n} //# sourceMappingURL=reflect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVmbGVjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsa0RBQWlEO0lBQzdDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUE7SUFDRixPQUFPRCxJQUFJRSxNQUFNLEVBQUVDLElBQUksRUFBRUMsUUFBUSxFQUFFO1FBQy9CLE1BQU1OLFFBQVFPLFFBQVFMLElBQUlFLFFBQVFDLE1BQU1DO1FBQ3hDLElBQUksT0FBT04sVUFBVSxZQUFZO1lBQzdCLE9BQU9BLE1BQU1RLEtBQUtKO1FBQ3RCO1FBQ0EsT0FBT0o7SUFDWDtJQUNBLE9BQU9TLElBQUlMLE1BQU0sRUFBRUMsSUFBSSxFQUFFTCxLQUFLLEVBQUVNLFFBQVEsRUFBRTtRQUN0QyxPQUFPQyxRQUFRRSxJQUFJTCxRQUFRQyxNQUFNTCxPQUFPTTtJQUM1QztJQUNBLE9BQU9JLElBQUlOLE1BQU0sRUFBRUMsSUFBSSxFQUFFO1FBQ3JCLE9BQU9FLFFBQVFHLElBQUlOLFFBQVFDO0lBQy9CO0lBQ0EsT0FBT00sZUFBZVAsTUFBTSxFQUFFQyxJQUFJLEVBQUU7UUFDaEMsT0FBT0UsUUFBUUksZUFBZVAsUUFBUUM7SUFDMUM7QUFDSixFQUVBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVmbGVjdC5qcz80Y2MxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVmbGVjdEFkYXB0ZXJcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIFJlZmxlY3RBZGFwdGVyO1xuICAgIH1cbn0pO1xuY2xhc3MgUmVmbGVjdEFkYXB0ZXIge1xuICAgIHN0YXRpYyBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS5iaW5kKHRhcmdldCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBzdGF0aWMgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUsIHJlY2VpdmVyKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0LnNldCh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcik7XG4gICAgfVxuICAgIHN0YXRpYyBoYXModGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0Lmhhcyh0YXJnZXQsIHByb3ApO1xuICAgIH1cbiAgICBzdGF0aWMgZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0LmRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcCk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWZsZWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJSZWZsZWN0QWRhcHRlciIsInRhcmdldCIsInByb3AiLCJyZWNlaXZlciIsIlJlZmxlY3QiLCJiaW5kIiwic2V0IiwiaGFzIiwiZGVsZXRlUHJvcGVydHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    ReadonlyRequestCookiesError: function() {\n        return ReadonlyRequestCookiesError;\n    },\n    RequestCookiesAdapter: function() {\n        return RequestCookiesAdapter;\n    },\n    getModifiedCookieValues: function() {\n        return getModifiedCookieValues;\n    },\n    appendMutableCookies: function() {\n        return appendMutableCookies;\n    },\n    MutableRequestCookiesAdapter: function() {\n        return MutableRequestCookiesAdapter;\n    }\n});\nconst _cookies = __webpack_require__(/*! ../cookies */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/cookies.js\");\nconst _reflect = __webpack_require__(/*! ./reflect */ \"(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/reflect.js\");\nclass ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super(\"Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options\");\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nclass RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"clear\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for(\"next.mutated.cookies\");\nfunction getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nfunction appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res`' cookies\n    // will still take precedence.\n    const resCookies = new _cookies.ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nclass MutableRequestCookiesAdapter {\n    static wrap(cookies, res) {\n        const responseCookes = new _cookies.ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookes.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            var _fetch___nextGetStaticStore;\n            // TODO-APP: change method of getting staticGenerationAsyncStore\n            const staticGenerationAsyncStore = fetch.__nextGetStaticStore == null ? void 0 : (_fetch___nextGetStaticStore = fetch.__nextGetStaticStore()) == null ? void 0 : _fetch___nextGetStaticStore.getStore();\n            if (staticGenerationAsyncStore) {\n                staticGenerationAsyncStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookes.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (res) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new _cookies.ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                res.setHeader(\"Set-Cookie\", serializedCookies);\n            }\n        };\n        return new Proxy(responseCookes, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case \"delete\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case \"set\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                return target.set(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return _reflect.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n} //# sourceMappingURL=request-cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/web/spec-extension/adapters/request-cookies.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/server/web/spec-extension/cookies.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/server/web/spec-extension/cookies.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    RequestCookies: function() {\n        return _cookies.RequestCookies;\n    },\n    ResponseCookies: function() {\n        return _cookies.ResponseCookies;\n    }\n});\nconst _cookies = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ \"next/dist/compiled/@edge-runtime/cookies\"); //# sourceMappingURL=cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQUdOO0FBQ0EsU0FBU0csUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVQsT0FBT0MsZUFBZU8sUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRTCxTQUFTO0lBQ2JHLGdCQUFnQjtRQUNaLE9BQU9RLFNBQVNSO0lBQ3BCO0lBQ0FDLGlCQUFpQjtRQUNiLE9BQU9PLFNBQVNQO0lBQ3BCO0FBQ0o7QUFDQSxNQUFNTyxXQUFXQyxtQkFBT0EsQ0FBQywwRkFBMEMsR0FFbkUsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzLmpzPzE0MjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4wICYmIChtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBSZXF1ZXN0Q29va2llczogbnVsbCxcbiAgICBSZXNwb25zZUNvb2tpZXM6IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgUmVxdWVzdENvb2tpZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2Nvb2tpZXMuUmVxdWVzdENvb2tpZXM7XG4gICAgfSxcbiAgICBSZXNwb25zZUNvb2tpZXM6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX2Nvb2tpZXMuUmVzcG9uc2VDb29raWVzO1xuICAgIH1cbn0pO1xuY29uc3QgX2Nvb2tpZXMgPSByZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL0BlZGdlLXJ1bnRpbWUvY29va2llc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29va2llcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJSZXF1ZXN0Q29va2llcyIsIlJlc3BvbnNlQ29va2llcyIsIl9leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZW51bWVyYWJsZSIsImdldCIsIl9jb29raWVzIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/server/web/spec-extension/cookies.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/get-hostname.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/get-hostname.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getHostname\", ({\n    enumerable: true,\n    get: function() {\n        return getHostname;\n    }\n}));\nfunction getHostname(parsed, headers) {\n    // Get the hostname from the headers if it exists, otherwise use the parsed\n    // hostname.\n    let hostname;\n    if ((headers == null ? void 0 : headers.host) && !Array.isArray(headers.host)) {\n        hostname = headers.host.toString().split(\":\")[0];\n    } else if (parsed.hostname) {\n        hostname = parsed.hostname;\n    } else return;\n    return hostname.toLowerCase();\n} //# sourceMappingURL=get-hostname.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvZ2V0LWhvc3RuYW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCwrQ0FBOEM7SUFDMUNJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixTQUFTQSxZQUFZQyxNQUFNLEVBQUVDLE9BQU87SUFDaEMsMkVBQTJFO0lBQzNFLFlBQVk7SUFDWixJQUFJQztJQUNKLElBQUksQ0FBQ0QsV0FBVyxPQUFPLEtBQUssSUFBSUEsUUFBUUUsSUFBRyxLQUFNLENBQUNDLE1BQU1DLFFBQVFKLFFBQVFFLE9BQU87UUFDM0VELFdBQVdELFFBQVFFLEtBQUtHLFdBQVdDLE1BQU0sSUFBSSxDQUFDLEVBQUU7SUFDcEQsT0FBTyxJQUFJUCxPQUFPRSxVQUFVO1FBQ3hCQSxXQUFXRixPQUFPRTtJQUN0QixPQUFPO0lBQ1AsT0FBT0EsU0FBU007QUFDcEIsRUFFQSx3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL2dldC1ob3N0bmFtZS5qcz80Y2Y5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ2V0SG9zdG5hbWVcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGdldEhvc3RuYW1lO1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gZ2V0SG9zdG5hbWUocGFyc2VkLCBoZWFkZXJzKSB7XG4gICAgLy8gR2V0IHRoZSBob3N0bmFtZSBmcm9tIHRoZSBoZWFkZXJzIGlmIGl0IGV4aXN0cywgb3RoZXJ3aXNlIHVzZSB0aGUgcGFyc2VkXG4gICAgLy8gaG9zdG5hbWUuXG4gICAgbGV0IGhvc3RuYW1lO1xuICAgIGlmICgoaGVhZGVycyA9PSBudWxsID8gdm9pZCAwIDogaGVhZGVycy5ob3N0KSAmJiAhQXJyYXkuaXNBcnJheShoZWFkZXJzLmhvc3QpKSB7XG4gICAgICAgIGhvc3RuYW1lID0gaGVhZGVycy5ob3N0LnRvU3RyaW5nKCkuc3BsaXQoXCI6XCIpWzBdO1xuICAgIH0gZWxzZSBpZiAocGFyc2VkLmhvc3RuYW1lKSB7XG4gICAgICAgIGhvc3RuYW1lID0gcGFyc2VkLmhvc3RuYW1lO1xuICAgIH0gZWxzZSByZXR1cm47XG4gICAgcmV0dXJuIGhvc3RuYW1lLnRvTG93ZXJDYXNlKCk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1ob3N0bmFtZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZ2V0SG9zdG5hbWUiLCJwYXJzZWQiLCJoZWFkZXJzIiwiaG9zdG5hbWUiLCJob3N0IiwiQXJyYXkiLCJpc0FycmF5IiwidG9TdHJpbmciLCJzcGxpdCIsInRvTG93ZXJDYXNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/get-hostname.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"detectDomainLocale\", ({\n    enumerable: true,\n    get: function() {\n        return detectDomainLocale;\n    }\n}));\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    if (!domainItems) return;\n    if (detectedLocale) {\n        detectedLocale = detectedLocale.toLowerCase();\n    }\n    for (const item of domainItems){\n        var _item_domain, _item_locales;\n        // remove port if present\n        const domainHostname = (_item_domain = item.domain) == null ? void 0 : _item_domain.split(\":\")[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((_item_locales = item.locales) == null ? void 0 : _item_locales.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n            return item;\n        }\n    }\n} //# sourceMappingURL=detect-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvaTE4bi9kZXRlY3QtZG9tYWluLWxvY2FsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsc0RBQXFEO0lBQ2pESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsU0FBU0EsbUJBQW1CQyxXQUFXLEVBQUVDLFFBQVEsRUFBRUMsY0FBYztJQUM3RCxJQUFJLENBQUNGLGFBQWE7SUFDbEIsSUFBSUUsZ0JBQWdCO1FBQ2hCQSxpQkFBaUJBLGVBQWVDO0lBQ3BDO0lBQ0EsS0FBSyxNQUFNQyxRQUFRSixZQUFZO1FBQzNCLElBQUlLLGNBQWNDO1FBQ2xCLHlCQUF5QjtRQUN6QixNQUFNQyxpQkFBaUIsQ0FBQ0YsZUFBZUQsS0FBS0ksTUFBSyxLQUFNLE9BQU8sS0FBSyxJQUFJSCxhQUFhSSxNQUFNLElBQUksQ0FBQyxFQUFFLENBQUNOO1FBQ2xHLElBQUlGLGFBQWFNLGtCQUFrQkwsbUJBQW1CRSxLQUFLTSxjQUFjUCxpQkFBa0IsRUFBQ0csZ0JBQWdCRixLQUFLTyxPQUFNLEtBQU0sT0FBTyxLQUFLLElBQUlMLGNBQWNNLEtBQUssQ0FBQ0MsU0FBU0EsT0FBT1Ysa0JBQWtCRCxlQUFjLEdBQUk7WUFDak4sT0FBT0U7UUFDWDtJQUNKO0FBQ0osRUFFQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL2kxOG4vZGV0ZWN0LWRvbWFpbi1sb2NhbGUuanM/NzhkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImRldGVjdERvbWFpbkxvY2FsZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZGV0ZWN0RG9tYWluTG9jYWxlO1xuICAgIH1cbn0pO1xuZnVuY3Rpb24gZGV0ZWN0RG9tYWluTG9jYWxlKGRvbWFpbkl0ZW1zLCBob3N0bmFtZSwgZGV0ZWN0ZWRMb2NhbGUpIHtcbiAgICBpZiAoIWRvbWFpbkl0ZW1zKSByZXR1cm47XG4gICAgaWYgKGRldGVjdGVkTG9jYWxlKSB7XG4gICAgICAgIGRldGVjdGVkTG9jYWxlID0gZGV0ZWN0ZWRMb2NhbGUudG9Mb3dlckNhc2UoKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGRvbWFpbkl0ZW1zKXtcbiAgICAgICAgdmFyIF9pdGVtX2RvbWFpbiwgX2l0ZW1fbG9jYWxlcztcbiAgICAgICAgLy8gcmVtb3ZlIHBvcnQgaWYgcHJlc2VudFxuICAgICAgICBjb25zdCBkb21haW5Ib3N0bmFtZSA9IChfaXRlbV9kb21haW4gPSBpdGVtLmRvbWFpbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9pdGVtX2RvbWFpbi5zcGxpdChcIjpcIilbMF0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKGhvc3RuYW1lID09PSBkb21haW5Ib3N0bmFtZSB8fCBkZXRlY3RlZExvY2FsZSA9PT0gaXRlbS5kZWZhdWx0TG9jYWxlLnRvTG93ZXJDYXNlKCkgfHwgKChfaXRlbV9sb2NhbGVzID0gaXRlbS5sb2NhbGVzKSA9PSBudWxsID8gdm9pZCAwIDogX2l0ZW1fbG9jYWxlcy5zb21lKChsb2NhbGUpPT5sb2NhbGUudG9Mb3dlckNhc2UoKSA9PT0gZGV0ZWN0ZWRMb2NhbGUpKSkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRldGVjdC1kb21haW4tbG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJkZXRlY3REb21haW5Mb2NhbGUiLCJkb21haW5JdGVtcyIsImhvc3RuYW1lIiwiZGV0ZWN0ZWRMb2NhbGUiLCJ0b0xvd2VyQ2FzZSIsIml0ZW0iLCJfaXRlbV9kb21haW4iLCJfaXRlbV9sb2NhbGVzIiwiZG9tYWluSG9zdG5hbWUiLCJkb21haW4iLCJzcGxpdCIsImRlZmF1bHRMb2NhbGUiLCJsb2NhbGVzIiwic29tZSIsImxvY2FsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/i18n/detect-domain-locale.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"normalizeLocalePath\", ({\n    enumerable: true,\n    get: function() {\n        return normalizeLocalePath;\n    }\n}));\nfunction normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split(\"/\");\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join(\"/\") || \"/\";\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n} //# sourceMappingURL=normalize-locale-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvaTE4bi9ub3JtYWxpemUtbG9jYWxlLXBhdGguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILHVEQUFzRDtJQUNsREksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLFNBQVNBLG9CQUFvQkMsUUFBUSxFQUFFQyxPQUFPO0lBQzFDLElBQUlDO0lBQ0osK0RBQStEO0lBQy9ELE1BQU1DLGdCQUFnQkgsU0FBU0ksTUFBTTtJQUNwQ0gsQ0FBQUEsV0FBVyxFQUFFLEVBQUVJLEtBQUssQ0FBQ0M7UUFDbEIsSUFBSUgsYUFBYSxDQUFDLEVBQUUsSUFBSUEsYUFBYSxDQUFDLEVBQUUsQ0FBQ0ksa0JBQWtCRCxPQUFPQyxlQUFlO1lBQzdFTCxpQkFBaUJJO1lBQ2pCSCxjQUFjSyxPQUFPLEdBQUc7WUFDeEJSLFdBQVdHLGNBQWNNLEtBQUssUUFBUTtZQUN0QyxPQUFPO1FBQ1g7UUFDQSxPQUFPO0lBQ1g7SUFDQSxPQUFPO1FBQ0hUO1FBQ0FFO0lBQ0o7QUFDSixFQUVBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvaTE4bi9ub3JtYWxpemUtbG9jYWxlLXBhdGguanM/MDQzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIm5vcm1hbGl6ZUxvY2FsZVBhdGhcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIG5vcm1hbGl6ZUxvY2FsZVBhdGg7XG4gICAgfVxufSk7XG5mdW5jdGlvbiBub3JtYWxpemVMb2NhbGVQYXRoKHBhdGhuYW1lLCBsb2NhbGVzKSB7XG4gICAgbGV0IGRldGVjdGVkTG9jYWxlO1xuICAgIC8vIGZpcnN0IGl0ZW0gd2lsbCBiZSBlbXB0eSBzdHJpbmcgZnJvbSBzcGxpdHRpbmcgYXQgZmlyc3QgY2hhclxuICAgIGNvbnN0IHBhdGhuYW1lUGFydHMgPSBwYXRobmFtZS5zcGxpdChcIi9cIik7XG4gICAgKGxvY2FsZXMgfHwgW10pLnNvbWUoKGxvY2FsZSk9PntcbiAgICAgICAgaWYgKHBhdGhuYW1lUGFydHNbMV0gJiYgcGF0aG5hbWVQYXJ0c1sxXS50b0xvd2VyQ2FzZSgpID09PSBsb2NhbGUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgICAgICAgZGV0ZWN0ZWRMb2NhbGUgPSBsb2NhbGU7XG4gICAgICAgICAgICBwYXRobmFtZVBhcnRzLnNwbGljZSgxLCAxKTtcbiAgICAgICAgICAgIHBhdGhuYW1lID0gcGF0aG5hbWVQYXJ0cy5qb2luKFwiL1wiKSB8fCBcIi9cIjtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgZGV0ZWN0ZWRMb2NhbGVcbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3JtYWxpemUtbG9jYWxlLXBhdGguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsIm5vcm1hbGl6ZUxvY2FsZVBhdGgiLCJwYXRobmFtZSIsImxvY2FsZXMiLCJkZXRlY3RlZExvY2FsZSIsInBhdGhuYW1lUGFydHMiLCJzcGxpdCIsInNvbWUiLCJsb2NhbGUiLCJ0b0xvd2VyQ2FzZSIsInNwbGljZSIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-locale.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/add-locale.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"addLocale\", ({\n    enumerable: true,\n    get: function() {\n        return addLocale;\n    }\n}));\nconst _addpathprefix = __webpack_require__(/*! ./add-path-prefix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js\");\nconst _pathhasprefix = __webpack_require__(/*! ./path-has-prefix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js\");\nfunction addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if ((0, _pathhasprefix.pathHasPrefix)(lower, \"/api\")) return path;\n        if ((0, _pathhasprefix.pathHasPrefix)(lower, \"/\" + locale.toLowerCase())) return path;\n    }\n    // Add the locale prefix to the path.\n    return (0, _addpathprefix.addPathPrefix)(path, \"/\" + locale);\n} //# sourceMappingURL=add-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1sb2NhbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDZDQUE0QztJQUN4Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLGlCQUFpQkMsbUJBQU9BLENBQUMsMEdBQW1CO0FBQ2xELE1BQU1DLGlCQUFpQkQsbUJBQU9BLENBQUMsMEdBQW1CO0FBQ2xELFNBQVNGLFVBQVVJLElBQUksRUFBRUMsTUFBTSxFQUFFQyxhQUFhLEVBQUVDLFlBQVk7SUFDeEQsNEVBQTRFO0lBQzVFLHNCQUFzQjtJQUN0QixJQUFJLENBQUNGLFVBQVVBLFdBQVdDLGVBQWUsT0FBT0Y7SUFDaEQsTUFBTUksUUFBUUosS0FBS0s7SUFDbkIsMkVBQTJFO0lBQzNFLGlDQUFpQztJQUNqQyxJQUFJLENBQUNGLGNBQWM7UUFDZixJQUFJLENBQUMsR0FBR0osZUFBZU8sYUFBWSxFQUFHRixPQUFPLFNBQVMsT0FBT0o7UUFDN0QsSUFBSSxDQUFDLEdBQUdELGVBQWVPLGFBQVksRUFBR0YsT0FBTyxNQUFNSCxPQUFPSSxnQkFBZ0IsT0FBT0w7SUFDckY7SUFDQSxxQ0FBcUM7SUFDckMsT0FBTyxDQUFDLEdBQUdILGVBQWVVLGFBQVksRUFBR1AsTUFBTSxNQUFNQztBQUN6RCxFQUVBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1sb2NhbGUuanM/MDIzMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFkZExvY2FsZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gYWRkTG9jYWxlO1xuICAgIH1cbn0pO1xuY29uc3QgX2FkZHBhdGhwcmVmaXggPSByZXF1aXJlKFwiLi9hZGQtcGF0aC1wcmVmaXhcIik7XG5jb25zdCBfcGF0aGhhc3ByZWZpeCA9IHJlcXVpcmUoXCIuL3BhdGgtaGFzLXByZWZpeFwiKTtcbmZ1bmN0aW9uIGFkZExvY2FsZShwYXRoLCBsb2NhbGUsIGRlZmF1bHRMb2NhbGUsIGlnbm9yZVByZWZpeCkge1xuICAgIC8vIElmIG5vIGxvY2FsZSB3YXMgZ2l2ZW4gb3IgdGhlIGxvY2FsZSBpcyB0aGUgZGVmYXVsdCBsb2NhbGUsIHdlIGRvbid0IG5lZWRcbiAgICAvLyB0byBwcmVmaXggdGhlIHBhdGguXG4gICAgaWYgKCFsb2NhbGUgfHwgbG9jYWxlID09PSBkZWZhdWx0TG9jYWxlKSByZXR1cm4gcGF0aDtcbiAgICBjb25zdCBsb3dlciA9IHBhdGgudG9Mb3dlckNhc2UoKTtcbiAgICAvLyBJZiB0aGUgcGF0aCBpcyBhbiBBUEkgcGF0aCBvciB0aGUgcGF0aCBhbHJlYWR5IGhhcyB0aGUgbG9jYWxlIHByZWZpeCwgd2VcbiAgICAvLyBkb24ndCBuZWVkIHRvIHByZWZpeCB0aGUgcGF0aC5cbiAgICBpZiAoIWlnbm9yZVByZWZpeCkge1xuICAgICAgICBpZiAoKDAsIF9wYXRoaGFzcHJlZml4LnBhdGhIYXNQcmVmaXgpKGxvd2VyLCBcIi9hcGlcIikpIHJldHVybiBwYXRoO1xuICAgICAgICBpZiAoKDAsIF9wYXRoaGFzcHJlZml4LnBhdGhIYXNQcmVmaXgpKGxvd2VyLCBcIi9cIiArIGxvY2FsZS50b0xvd2VyQ2FzZSgpKSkgcmV0dXJuIHBhdGg7XG4gICAgfVxuICAgIC8vIEFkZCB0aGUgbG9jYWxlIHByZWZpeCB0byB0aGUgcGF0aC5cbiAgICByZXR1cm4gKDAsIF9hZGRwYXRocHJlZml4LmFkZFBhdGhQcmVmaXgpKHBhdGgsIFwiL1wiICsgbG9jYWxlKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiYWRkTG9jYWxlIiwiX2FkZHBhdGhwcmVmaXgiLCJyZXF1aXJlIiwiX3BhdGhoYXNwcmVmaXgiLCJwYXRoIiwibG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsImlnbm9yZVByZWZpeCIsImxvd2VyIiwidG9Mb3dlckNhc2UiLCJwYXRoSGFzUHJlZml4IiwiYWRkUGF0aFByZWZpeCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-locale.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"addPathPrefix\", ({\n    enumerable: true,\n    get: function() {\n        return addPathPrefix;\n    }\n}));\nconst _parsepath = __webpack_require__(/*! ./parse-path */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/parse-path.js\");\nfunction addPathPrefix(path, prefix) {\n    if (!path.startsWith(\"/\") || !prefix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0, _parsepath.parsePath)(path);\n    return \"\" + prefix + pathname + query + hash;\n} //# sourceMappingURL=add-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXByZWZpeC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsaURBQWdEO0lBQzVDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsYUFBYUMsbUJBQU9BLENBQUMsZ0dBQWM7QUFDekMsU0FBU0YsY0FBY0csSUFBSSxFQUFFQyxNQUFNO0lBQy9CLElBQUksQ0FBQ0QsS0FBS0UsV0FBVyxRQUFRLENBQUNELFFBQVE7UUFDbEMsT0FBT0Q7SUFDWDtJQUNBLE1BQU0sRUFBRUcsUUFBUSxFQUFHQyxLQUFLLEVBQUdDLElBQUksRUFBRyxHQUFHLENBQUMsR0FBR1AsV0FBV1EsU0FBUSxFQUFHTjtJQUMvRCxPQUFPLEtBQUtDLFNBQVNFLFdBQVdDLFFBQVFDO0FBQzVDLEVBRUEsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtcHJlZml4LmpzP2MxMjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJhZGRQYXRoUHJlZml4XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBhZGRQYXRoUHJlZml4O1xuICAgIH1cbn0pO1xuY29uc3QgX3BhcnNlcGF0aCA9IHJlcXVpcmUoXCIuL3BhcnNlLXBhdGhcIik7XG5mdW5jdGlvbiBhZGRQYXRoUHJlZml4KHBhdGgsIHByZWZpeCkge1xuICAgIGlmICghcGF0aC5zdGFydHNXaXRoKFwiL1wiKSB8fCAhcHJlZml4KSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lICwgcXVlcnkgLCBoYXNoICB9ID0gKDAsIF9wYXJzZXBhdGgucGFyc2VQYXRoKShwYXRoKTtcbiAgICByZXR1cm4gXCJcIiArIHByZWZpeCArIHBhdGhuYW1lICsgcXVlcnkgKyBoYXNoO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGQtcGF0aC1wcmVmaXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImFkZFBhdGhQcmVmaXgiLCJfcGFyc2VwYXRoIiwicmVxdWlyZSIsInBhdGgiLCJwcmVmaXgiLCJzdGFydHNXaXRoIiwicGF0aG5hbWUiLCJxdWVyeSIsImhhc2giLCJwYXJzZVBhdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"addPathSuffix\", ({\n    enumerable: true,\n    get: function() {\n        return addPathSuffix;\n    }\n}));\nconst _parsepath = __webpack_require__(/*! ./parse-path */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/parse-path.js\");\nfunction addPathSuffix(path, suffix) {\n    if (!path.startsWith(\"/\") || !suffix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0, _parsepath.parsePath)(path);\n    return \"\" + pathname + suffix + query + hash;\n} //# sourceMappingURL=add-path-suffix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2FkZC1wYXRoLXN1ZmZpeC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsaURBQWdEO0lBQzVDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsYUFBYUMsbUJBQU9BLENBQUMsZ0dBQWM7QUFDekMsU0FBU0YsY0FBY0csSUFBSSxFQUFFQyxNQUFNO0lBQy9CLElBQUksQ0FBQ0QsS0FBS0UsV0FBVyxRQUFRLENBQUNELFFBQVE7UUFDbEMsT0FBT0Q7SUFDWDtJQUNBLE1BQU0sRUFBRUcsUUFBUSxFQUFHQyxLQUFLLEVBQUdDLElBQUksRUFBRyxHQUFHLENBQUMsR0FBR1AsV0FBV1EsU0FBUSxFQUFHTjtJQUMvRCxPQUFPLEtBQUtHLFdBQVdGLFNBQVNHLFFBQVFDO0FBQzVDLEVBRUEsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtc3VmZml4LmpzPzdiMzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJhZGRQYXRoU3VmZml4XCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBhZGRQYXRoU3VmZml4O1xuICAgIH1cbn0pO1xuY29uc3QgX3BhcnNlcGF0aCA9IHJlcXVpcmUoXCIuL3BhcnNlLXBhdGhcIik7XG5mdW5jdGlvbiBhZGRQYXRoU3VmZml4KHBhdGgsIHN1ZmZpeCkge1xuICAgIGlmICghcGF0aC5zdGFydHNXaXRoKFwiL1wiKSB8fCAhc3VmZml4KSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lICwgcXVlcnkgLCBoYXNoICB9ID0gKDAsIF9wYXJzZXBhdGgucGFyc2VQYXRoKShwYXRoKTtcbiAgICByZXR1cm4gXCJcIiArIHBhdGhuYW1lICsgc3VmZml4ICsgcXVlcnkgKyBoYXNoO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGQtcGF0aC1zdWZmaXguanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImFkZFBhdGhTdWZmaXgiLCJfcGFyc2VwYXRoIiwicmVxdWlyZSIsInBhdGgiLCJzdWZmaXgiLCJzdGFydHNXaXRoIiwicGF0aG5hbWUiLCJxdWVyeSIsImhhc2giLCJwYXJzZVBhdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"formatNextPathnameInfo\", ({\n    enumerable: true,\n    get: function() {\n        return formatNextPathnameInfo;\n    }\n}));\nconst _removetrailingslash = __webpack_require__(/*! ./remove-trailing-slash */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js\");\nconst _addpathprefix = __webpack_require__(/*! ./add-path-prefix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-prefix.js\");\nconst _addpathsuffix = __webpack_require__(/*! ./add-path-suffix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-path-suffix.js\");\nconst _addlocale = __webpack_require__(/*! ./add-locale */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/add-locale.js\");\nfunction formatNextPathnameInfo(info) {\n    let pathname = (0, _addlocale.addLocale)(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = (0, _removetrailingslash.removeTrailingSlash)(pathname);\n    }\n    if (info.buildId) {\n        pathname = (0, _addpathsuffix.addPathSuffix)((0, _addpathprefix.addPathPrefix)(pathname, \"/_next/data/\" + info.buildId), info.pathname === \"/\" ? \"index.json\" : \".json\");\n    }\n    pathname = (0, _addpathprefix.addPathPrefix)(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith(\"/\") ? (0, _addpathsuffix.addPathSuffix)(pathname, \"/\") : pathname : (0, _removetrailingslash.removeTrailingSlash)(pathname);\n} //# sourceMappingURL=format-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC1uZXh0LXBhdGhuYW1lLWluZm8uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDBEQUF5RDtJQUNyREksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLHVCQUF1QkMsbUJBQU9BLENBQUMsc0hBQXlCO0FBQzlELE1BQU1DLGlCQUFpQkQsbUJBQU9BLENBQUMsMEdBQW1CO0FBQ2xELE1BQU1FLGlCQUFpQkYsbUJBQU9BLENBQUMsMEdBQW1CO0FBQ2xELE1BQU1HLGFBQWFILG1CQUFPQSxDQUFDLGdHQUFjO0FBQ3pDLFNBQVNGLHVCQUF1Qk0sSUFBSTtJQUNoQyxJQUFJQyxXQUFXLENBQUMsR0FBR0YsV0FBV0csU0FBUSxFQUFHRixLQUFLQyxVQUFVRCxLQUFLRyxRQUFRSCxLQUFLSSxVQUFVQyxZQUFZTCxLQUFLTSxlQUFlTixLQUFLTztJQUN6SCxJQUFJUCxLQUFLSSxXQUFXLENBQUNKLEtBQUtRLGVBQWU7UUFDckNQLFdBQVcsQ0FBQyxHQUFHTixxQkFBcUJjLG1CQUFrQixFQUFHUjtJQUM3RDtJQUNBLElBQUlELEtBQUtJLFNBQVM7UUFDZEgsV0FBVyxDQUFDLEdBQUdILGVBQWVZLGFBQVksRUFBRyxDQUFDLEdBQUdiLGVBQWVjLGFBQVksRUFBR1YsVUFBVSxpQkFBaUJELEtBQUtJLFVBQVVKLEtBQUtDLGFBQWEsTUFBTSxlQUFlO0lBQ3BLO0lBQ0FBLFdBQVcsQ0FBQyxHQUFHSixlQUFlYyxhQUFZLEVBQUdWLFVBQVVELEtBQUtZO0lBQzVELE9BQU8sQ0FBQ1osS0FBS0ksV0FBV0osS0FBS1EsZ0JBQWdCLENBQUNQLFNBQVNZLFNBQVMsT0FBTyxDQUFDLEdBQUdmLGVBQWVZLGFBQVksRUFBR1QsVUFBVSxPQUFPQSxXQUFXLENBQUMsR0FBR04scUJBQXFCYyxtQkFBa0IsRUFBR1I7QUFDdkwsRUFFQSxxREFBcUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9mb3JtYXQtbmV4dC1wYXRobmFtZS1pbmZvLmpzP2IxNDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmb3JtYXROZXh0UGF0aG5hbWVJbmZvXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBmb3JtYXROZXh0UGF0aG5hbWVJbmZvO1xuICAgIH1cbn0pO1xuY29uc3QgX3JlbW92ZXRyYWlsaW5nc2xhc2ggPSByZXF1aXJlKFwiLi9yZW1vdmUtdHJhaWxpbmctc2xhc2hcIik7XG5jb25zdCBfYWRkcGF0aHByZWZpeCA9IHJlcXVpcmUoXCIuL2FkZC1wYXRoLXByZWZpeFwiKTtcbmNvbnN0IF9hZGRwYXRoc3VmZml4ID0gcmVxdWlyZShcIi4vYWRkLXBhdGgtc3VmZml4XCIpO1xuY29uc3QgX2FkZGxvY2FsZSA9IHJlcXVpcmUoXCIuL2FkZC1sb2NhbGVcIik7XG5mdW5jdGlvbiBmb3JtYXROZXh0UGF0aG5hbWVJbmZvKGluZm8pIHtcbiAgICBsZXQgcGF0aG5hbWUgPSAoMCwgX2FkZGxvY2FsZS5hZGRMb2NhbGUpKGluZm8ucGF0aG5hbWUsIGluZm8ubG9jYWxlLCBpbmZvLmJ1aWxkSWQgPyB1bmRlZmluZWQgOiBpbmZvLmRlZmF1bHRMb2NhbGUsIGluZm8uaWdub3JlUHJlZml4KTtcbiAgICBpZiAoaW5mby5idWlsZElkIHx8ICFpbmZvLnRyYWlsaW5nU2xhc2gpIHtcbiAgICAgICAgcGF0aG5hbWUgPSAoMCwgX3JlbW92ZXRyYWlsaW5nc2xhc2gucmVtb3ZlVHJhaWxpbmdTbGFzaCkocGF0aG5hbWUpO1xuICAgIH1cbiAgICBpZiAoaW5mby5idWlsZElkKSB7XG4gICAgICAgIHBhdGhuYW1lID0gKDAsIF9hZGRwYXRoc3VmZml4LmFkZFBhdGhTdWZmaXgpKCgwLCBfYWRkcGF0aHByZWZpeC5hZGRQYXRoUHJlZml4KShwYXRobmFtZSwgXCIvX25leHQvZGF0YS9cIiArIGluZm8uYnVpbGRJZCksIGluZm8ucGF0aG5hbWUgPT09IFwiL1wiID8gXCJpbmRleC5qc29uXCIgOiBcIi5qc29uXCIpO1xuICAgIH1cbiAgICBwYXRobmFtZSA9ICgwLCBfYWRkcGF0aHByZWZpeC5hZGRQYXRoUHJlZml4KShwYXRobmFtZSwgaW5mby5iYXNlUGF0aCk7XG4gICAgcmV0dXJuICFpbmZvLmJ1aWxkSWQgJiYgaW5mby50cmFpbGluZ1NsYXNoID8gIXBhdGhuYW1lLmVuZHNXaXRoKFwiL1wiKSA/ICgwLCBfYWRkcGF0aHN1ZmZpeC5hZGRQYXRoU3VmZml4KShwYXRobmFtZSwgXCIvXCIpIDogcGF0aG5hbWUgOiAoMCwgX3JlbW92ZXRyYWlsaW5nc2xhc2gucmVtb3ZlVHJhaWxpbmdTbGFzaCkocGF0aG5hbWUpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtYXQtbmV4dC1wYXRobmFtZS1pbmZvLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJmb3JtYXROZXh0UGF0aG5hbWVJbmZvIiwiX3JlbW92ZXRyYWlsaW5nc2xhc2giLCJyZXF1aXJlIiwiX2FkZHBhdGhwcmVmaXgiLCJfYWRkcGF0aHN1ZmZpeCIsIl9hZGRsb2NhbGUiLCJpbmZvIiwicGF0aG5hbWUiLCJhZGRMb2NhbGUiLCJsb2NhbGUiLCJidWlsZElkIiwidW5kZWZpbmVkIiwiZGVmYXVsdExvY2FsZSIsImlnbm9yZVByZWZpeCIsInRyYWlsaW5nU2xhc2giLCJyZW1vdmVUcmFpbGluZ1NsYXNoIiwiYWRkUGF0aFN1ZmZpeCIsImFkZFBhdGhQcmVmaXgiLCJiYXNlUGF0aCIsImVuZHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/format-next-pathname-info.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"getNextPathnameInfo\", ({\n    enumerable: true,\n    get: function() {\n        return getNextPathnameInfo;\n    }\n}));\nconst _normalizelocalepath = __webpack_require__(/*! ../../i18n/normalize-locale-path */ \"(sc_server)/./node_modules/next/dist/shared/lib/i18n/normalize-locale-path.js\");\nconst _removepathprefix = __webpack_require__(/*! ./remove-path-prefix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js\");\nconst _pathhasprefix = __webpack_require__(/*! ./path-has-prefix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js\");\nfunction getNextPathnameInfo(pathname, options) {\n    var _options_nextConfig;\n    const { basePath, i18n, trailingSlash } = (_options_nextConfig = options.nextConfig) != null ? _options_nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== \"/\" ? pathname.endsWith(\"/\") : trailingSlash\n    };\n    if (basePath && (0, _pathhasprefix.pathHasPrefix)(info.pathname, basePath)) {\n        info.pathname = (0, _removepathprefix.removePathPrefix)(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith(\"/_next/data/\") && info.pathname.endsWith(\".json\")) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, \"\").replace(/\\.json$/, \"\").split(\"/\");\n        const buildId = paths[0];\n        info.pathname = paths[1] !== \"index\" ? \"/\" + paths.slice(1).join(\"/\") : \"/\";\n        info.buildId = buildId;\n    }\n    // If provided, use the locale route normalizer to detect the locale instead\n    // of the function below.\n    if (options.i18nProvider) {\n        const result = options.i18nProvider.analyze(info.pathname);\n        info.locale = result.detectedLocale;\n        var _result_pathname;\n        info.pathname = (_result_pathname = result.pathname) != null ? _result_pathname : info.pathname;\n    } else if (i18n) {\n        const pathLocale = (0, _normalizelocalepath.normalizeLocalePath)(info.pathname, i18n.locales);\n        info.locale = pathLocale.detectedLocale;\n        var _pathLocale_pathname;\n        info.pathname = (_pathLocale_pathname = pathLocale.pathname) != null ? _pathLocale_pathname : info.pathname;\n    }\n    return info;\n} //# sourceMappingURL=get-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2dldC1uZXh0LXBhdGhuYW1lLWluZm8uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILHVEQUFzRDtJQUNsREksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLHVCQUF1QkMsbUJBQU9BLENBQUMsdUhBQWtDO0FBQ3ZFLE1BQU1DLG9CQUFvQkQsbUJBQU9BLENBQUMsZ0hBQXNCO0FBQ3hELE1BQU1FLGlCQUFpQkYsbUJBQU9BLENBQUMsMEdBQW1CO0FBQ2xELFNBQVNGLG9CQUFvQkssUUFBUSxFQUFFQyxPQUFPO0lBQzFDLElBQUlDO0lBQ0osTUFBTSxFQUFFQyxRQUFRLEVBQUdDLElBQUksRUFBR0MsYUFBYSxFQUFHLEdBQUcsQ0FBQ0gsc0JBQXNCRCxRQUFRSyxVQUFTLEtBQU0sT0FBT0osc0JBQXNCLENBQUM7SUFDekgsTUFBTUssT0FBTztRQUNUUCxVQUFVQTtRQUNWSyxlQUFlTCxhQUFhLE1BQU1BLFNBQVNRLFNBQVMsT0FBT0g7SUFDL0Q7SUFDQSxJQUFJRixZQUFZLENBQUMsR0FBR0osZUFBZVUsYUFBWSxFQUFHRixLQUFLUCxVQUFVRyxXQUFXO1FBQ3hFSSxLQUFLUCxXQUFXLENBQUMsR0FBR0Ysa0JBQWtCWSxnQkFBZSxFQUFHSCxLQUFLUCxVQUFVRztRQUN2RUksS0FBS0osV0FBV0E7SUFDcEI7SUFDQSxJQUFJRixRQUFRVSxjQUFjLFFBQVFKLEtBQUtQLFNBQVNZLFdBQVcsbUJBQW1CTCxLQUFLUCxTQUFTUSxTQUFTLFVBQVU7UUFDM0csTUFBTUssUUFBUU4sS0FBS1AsU0FBU2MsUUFBUSxvQkFBb0IsSUFBSUEsUUFBUSxXQUFXLElBQUlDLE1BQU07UUFDekYsTUFBTUMsVUFBVUgsS0FBSyxDQUFDLEVBQUU7UUFDeEJOLEtBQUtQLFdBQVdhLEtBQUssQ0FBQyxFQUFFLEtBQUssVUFBVSxNQUFNQSxNQUFNSSxNQUFNLEdBQUdDLEtBQUssT0FBTztRQUN4RVgsS0FBS1MsVUFBVUE7SUFDbkI7SUFDQSw0RUFBNEU7SUFDNUUseUJBQXlCO0lBQ3pCLElBQUlmLFFBQVFrQixjQUFjO1FBQ3RCLE1BQU1DLFNBQVNuQixRQUFRa0IsYUFBYUUsUUFBUWQsS0FBS1A7UUFDakRPLEtBQUtlLFNBQVNGLE9BQU9HO1FBQ3JCLElBQUlDO1FBQ0pqQixLQUFLUCxXQUFXLENBQUN3QixtQkFBbUJKLE9BQU9wQixRQUFPLEtBQU0sT0FBT3dCLG1CQUFtQmpCLEtBQUtQO0lBQzNGLE9BQU8sSUFBSUksTUFBTTtRQUNiLE1BQU1xQixhQUFhLENBQUMsR0FBRzdCLHFCQUFxQjhCLG1CQUFrQixFQUFHbkIsS0FBS1AsVUFBVUksS0FBS3VCO1FBQ3JGcEIsS0FBS2UsU0FBU0csV0FBV0Y7UUFDekIsSUFBSUs7UUFDSnJCLEtBQUtQLFdBQVcsQ0FBQzRCLHVCQUF1QkgsV0FBV3pCLFFBQU8sS0FBTSxPQUFPNEIsdUJBQXVCckIsS0FBS1A7SUFDdkc7SUFDQSxPQUFPTztBQUNYLEVBRUEsa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZ2V0LW5leHQtcGF0aG5hbWUtaW5mby5qcz8wZDI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ2V0TmV4dFBhdGhuYW1lSW5mb1wiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gZ2V0TmV4dFBhdGhuYW1lSW5mbztcbiAgICB9XG59KTtcbmNvbnN0IF9ub3JtYWxpemVsb2NhbGVwYXRoID0gcmVxdWlyZShcIi4uLy4uL2kxOG4vbm9ybWFsaXplLWxvY2FsZS1wYXRoXCIpO1xuY29uc3QgX3JlbW92ZXBhdGhwcmVmaXggPSByZXF1aXJlKFwiLi9yZW1vdmUtcGF0aC1wcmVmaXhcIik7XG5jb25zdCBfcGF0aGhhc3ByZWZpeCA9IHJlcXVpcmUoXCIuL3BhdGgtaGFzLXByZWZpeFwiKTtcbmZ1bmN0aW9uIGdldE5leHRQYXRobmFtZUluZm8ocGF0aG5hbWUsIG9wdGlvbnMpIHtcbiAgICB2YXIgX29wdGlvbnNfbmV4dENvbmZpZztcbiAgICBjb25zdCB7IGJhc2VQYXRoICwgaTE4biAsIHRyYWlsaW5nU2xhc2ggIH0gPSAoX29wdGlvbnNfbmV4dENvbmZpZyA9IG9wdGlvbnMubmV4dENvbmZpZykgIT0gbnVsbCA/IF9vcHRpb25zX25leHRDb25maWcgOiB7fTtcbiAgICBjb25zdCBpbmZvID0ge1xuICAgICAgICBwYXRobmFtZTogcGF0aG5hbWUsXG4gICAgICAgIHRyYWlsaW5nU2xhc2g6IHBhdGhuYW1lICE9PSBcIi9cIiA/IHBhdGhuYW1lLmVuZHNXaXRoKFwiL1wiKSA6IHRyYWlsaW5nU2xhc2hcbiAgICB9O1xuICAgIGlmIChiYXNlUGF0aCAmJiAoMCwgX3BhdGhoYXNwcmVmaXgucGF0aEhhc1ByZWZpeCkoaW5mby5wYXRobmFtZSwgYmFzZVBhdGgpKSB7XG4gICAgICAgIGluZm8ucGF0aG5hbWUgPSAoMCwgX3JlbW92ZXBhdGhwcmVmaXgucmVtb3ZlUGF0aFByZWZpeCkoaW5mby5wYXRobmFtZSwgYmFzZVBhdGgpO1xuICAgICAgICBpbmZvLmJhc2VQYXRoID0gYmFzZVBhdGg7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLnBhcnNlRGF0YSA9PT0gdHJ1ZSAmJiBpbmZvLnBhdGhuYW1lLnN0YXJ0c1dpdGgoXCIvX25leHQvZGF0YS9cIikgJiYgaW5mby5wYXRobmFtZS5lbmRzV2l0aChcIi5qc29uXCIpKSB7XG4gICAgICAgIGNvbnN0IHBhdGhzID0gaW5mby5wYXRobmFtZS5yZXBsYWNlKC9eXFwvX25leHRcXC9kYXRhXFwvLywgXCJcIikucmVwbGFjZSgvXFwuanNvbiQvLCBcIlwiKS5zcGxpdChcIi9cIik7XG4gICAgICAgIGNvbnN0IGJ1aWxkSWQgPSBwYXRoc1swXTtcbiAgICAgICAgaW5mby5wYXRobmFtZSA9IHBhdGhzWzFdICE9PSBcImluZGV4XCIgPyBcIi9cIiArIHBhdGhzLnNsaWNlKDEpLmpvaW4oXCIvXCIpIDogXCIvXCI7XG4gICAgICAgIGluZm8uYnVpbGRJZCA9IGJ1aWxkSWQ7XG4gICAgfVxuICAgIC8vIElmIHByb3ZpZGVkLCB1c2UgdGhlIGxvY2FsZSByb3V0ZSBub3JtYWxpemVyIHRvIGRldGVjdCB0aGUgbG9jYWxlIGluc3RlYWRcbiAgICAvLyBvZiB0aGUgZnVuY3Rpb24gYmVsb3cuXG4gICAgaWYgKG9wdGlvbnMuaTE4blByb3ZpZGVyKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IG9wdGlvbnMuaTE4blByb3ZpZGVyLmFuYWx5emUoaW5mby5wYXRobmFtZSk7XG4gICAgICAgIGluZm8ubG9jYWxlID0gcmVzdWx0LmRldGVjdGVkTG9jYWxlO1xuICAgICAgICB2YXIgX3Jlc3VsdF9wYXRobmFtZTtcbiAgICAgICAgaW5mby5wYXRobmFtZSA9IChfcmVzdWx0X3BhdGhuYW1lID0gcmVzdWx0LnBhdGhuYW1lKSAhPSBudWxsID8gX3Jlc3VsdF9wYXRobmFtZSA6IGluZm8ucGF0aG5hbWU7XG4gICAgfSBlbHNlIGlmIChpMThuKSB7XG4gICAgICAgIGNvbnN0IHBhdGhMb2NhbGUgPSAoMCwgX25vcm1hbGl6ZWxvY2FsZXBhdGgubm9ybWFsaXplTG9jYWxlUGF0aCkoaW5mby5wYXRobmFtZSwgaTE4bi5sb2NhbGVzKTtcbiAgICAgICAgaW5mby5sb2NhbGUgPSBwYXRoTG9jYWxlLmRldGVjdGVkTG9jYWxlO1xuICAgICAgICB2YXIgX3BhdGhMb2NhbGVfcGF0aG5hbWU7XG4gICAgICAgIGluZm8ucGF0aG5hbWUgPSAoX3BhdGhMb2NhbGVfcGF0aG5hbWUgPSBwYXRoTG9jYWxlLnBhdGhuYW1lKSAhPSBudWxsID8gX3BhdGhMb2NhbGVfcGF0aG5hbWUgOiBpbmZvLnBhdGhuYW1lO1xuICAgIH1cbiAgICByZXR1cm4gaW5mbztcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LW5leHQtcGF0aG5hbWUtaW5mby5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZ2V0TmV4dFBhdGhuYW1lSW5mbyIsIl9ub3JtYWxpemVsb2NhbGVwYXRoIiwicmVxdWlyZSIsIl9yZW1vdmVwYXRocHJlZml4IiwiX3BhdGhoYXNwcmVmaXgiLCJwYXRobmFtZSIsIm9wdGlvbnMiLCJfb3B0aW9uc19uZXh0Q29uZmlnIiwiYmFzZVBhdGgiLCJpMThuIiwidHJhaWxpbmdTbGFzaCIsIm5leHRDb25maWciLCJpbmZvIiwiZW5kc1dpdGgiLCJwYXRoSGFzUHJlZml4IiwicmVtb3ZlUGF0aFByZWZpeCIsInBhcnNlRGF0YSIsInN0YXJ0c1dpdGgiLCJwYXRocyIsInJlcGxhY2UiLCJzcGxpdCIsImJ1aWxkSWQiLCJzbGljZSIsImpvaW4iLCJpMThuUHJvdmlkZXIiLCJyZXN1bHQiLCJhbmFseXplIiwibG9jYWxlIiwiZGV0ZWN0ZWRMb2NhbGUiLCJfcmVzdWx0X3BhdGhuYW1lIiwicGF0aExvY2FsZSIsIm5vcm1hbGl6ZUxvY2FsZVBhdGgiLCJsb2NhbGVzIiwiX3BhdGhMb2NhbGVfcGF0aG5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/get-next-pathname-info.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/parse-path.js":
/*!**********************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/parse-path.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"parsePath\", ({\n    enumerable: true,\n    get: function() {\n        return parsePath;\n    }\n}));\nfunction parsePath(path) {\n    const hashIndex = path.indexOf(\"#\");\n    const queryIndex = path.indexOf(\"?\");\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : \"\",\n            hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n        };\n    }\n    return {\n        pathname: path,\n        query: \"\",\n        hash: \"\"\n    };\n} //# sourceMappingURL=parse-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhcnNlLXBhdGguanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Q0FJQyxHQUFnQjtBQUNqQkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDZDQUE0QztJQUN4Q0ksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLFNBQVNBLFVBQVVDLElBQUk7SUFDbkIsTUFBTUMsWUFBWUQsS0FBS0UsUUFBUTtJQUMvQixNQUFNQyxhQUFhSCxLQUFLRSxRQUFRO0lBQ2hDLE1BQU1FLFdBQVdELGFBQWEsQ0FBQyxLQUFNRixDQUFBQSxZQUFZLEtBQUtFLGFBQWFGLFNBQVE7SUFDM0UsSUFBSUcsWUFBWUgsWUFBWSxDQUFDLEdBQUc7UUFDNUIsT0FBTztZQUNISSxVQUFVTCxLQUFLTSxVQUFVLEdBQUdGLFdBQVdELGFBQWFGO1lBQ3BETSxPQUFPSCxXQUFXSixLQUFLTSxVQUFVSCxZQUFZRixZQUFZLENBQUMsSUFBSUEsWUFBWU8sYUFBYTtZQUN2RkMsTUFBTVIsWUFBWSxDQUFDLElBQUlELEtBQUtVLE1BQU1ULGFBQWE7UUFDbkQ7SUFDSjtJQUNBLE9BQU87UUFDSEksVUFBVUw7UUFDVk8sT0FBTztRQUNQRSxNQUFNO0lBQ1Y7QUFDSixFQUVBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhcnNlLXBhdGguanM/ZTUyYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGEgcGF0aCB0aGlzIGZ1bmN0aW9uIHdpbGwgZmluZCB0aGUgcGF0aG5hbWUsIHF1ZXJ5IGFuZCBoYXNoIGFuZCByZXR1cm5cbiAqIHRoZW0uIFRoaXMgaXMgdXNlZnVsIHRvIHBhcnNlIGZ1bGwgcGF0aHMgb24gdGhlIGNsaWVudCBzaWRlLlxuICogQHBhcmFtIHBhdGggQSBwYXRoIHRvIHBhcnNlIGUuZy4gL2Zvby9iYXI/aWQ9MSNoYXNoXG4gKi8gXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJwYXJzZVBhdGhcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHBhcnNlUGF0aDtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIHBhcnNlUGF0aChwYXRoKSB7XG4gICAgY29uc3QgaGFzaEluZGV4ID0gcGF0aC5pbmRleE9mKFwiI1wiKTtcbiAgICBjb25zdCBxdWVyeUluZGV4ID0gcGF0aC5pbmRleE9mKFwiP1wiKTtcbiAgICBjb25zdCBoYXNRdWVyeSA9IHF1ZXJ5SW5kZXggPiAtMSAmJiAoaGFzaEluZGV4IDwgMCB8fCBxdWVyeUluZGV4IDwgaGFzaEluZGV4KTtcbiAgICBpZiAoaGFzUXVlcnkgfHwgaGFzaEluZGV4ID4gLTEpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHBhdGhuYW1lOiBwYXRoLnN1YnN0cmluZygwLCBoYXNRdWVyeSA/IHF1ZXJ5SW5kZXggOiBoYXNoSW5kZXgpLFxuICAgICAgICAgICAgcXVlcnk6IGhhc1F1ZXJ5ID8gcGF0aC5zdWJzdHJpbmcocXVlcnlJbmRleCwgaGFzaEluZGV4ID4gLTEgPyBoYXNoSW5kZXggOiB1bmRlZmluZWQpIDogXCJcIixcbiAgICAgICAgICAgIGhhc2g6IGhhc2hJbmRleCA+IC0xID8gcGF0aC5zbGljZShoYXNoSW5kZXgpIDogXCJcIlxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBwYXRobmFtZTogcGF0aCxcbiAgICAgICAgcXVlcnk6IFwiXCIsXG4gICAgICAgIGhhc2g6IFwiXCJcbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJwYXJzZVBhdGgiLCJwYXRoIiwiaGFzaEluZGV4IiwiaW5kZXhPZiIsInF1ZXJ5SW5kZXgiLCJoYXNRdWVyeSIsInBhdGhuYW1lIiwic3Vic3RyaW5nIiwicXVlcnkiLCJ1bmRlZmluZWQiLCJoYXNoIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/parse-path.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"pathHasPrefix\", ({\n    enumerable: true,\n    get: function() {\n        return pathHasPrefix;\n    }\n}));\nconst _parsepath = __webpack_require__(/*! ./parse-path */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/parse-path.js\");\nfunction pathHasPrefix(path, prefix) {\n    if (typeof path !== \"string\") {\n        return false;\n    }\n    const { pathname } = (0, _parsepath.parsePath)(path);\n    return pathname === prefix || pathname.startsWith(prefix + \"/\");\n} //# sourceMappingURL=path-has-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhdGgtaGFzLXByZWZpeC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsaURBQWdEO0lBQzVDSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsYUFBYUMsbUJBQU9BLENBQUMsZ0dBQWM7QUFDekMsU0FBU0YsY0FBY0csSUFBSSxFQUFFQyxNQUFNO0lBQy9CLElBQUksT0FBT0QsU0FBUyxVQUFVO1FBQzFCLE9BQU87SUFDWDtJQUNBLE1BQU0sRUFBRUUsUUFBUSxFQUFHLEdBQUcsQ0FBQyxHQUFHSixXQUFXSyxTQUFRLEVBQUdIO0lBQ2hELE9BQU9FLGFBQWFELFVBQVVDLFNBQVNFLFdBQVdILFNBQVM7QUFDL0QsRUFFQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9wYXRoLWhhcy1wcmVmaXguanM/YjUzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhdGhIYXNQcmVmaXhcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHBhdGhIYXNQcmVmaXg7XG4gICAgfVxufSk7XG5jb25zdCBfcGFyc2VwYXRoID0gcmVxdWlyZShcIi4vcGFyc2UtcGF0aFwiKTtcbmZ1bmN0aW9uIHBhdGhIYXNQcmVmaXgocGF0aCwgcHJlZml4KSB7XG4gICAgaWYgKHR5cGVvZiBwYXRoICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgY29uc3QgeyBwYXRobmFtZSAgfSA9ICgwLCBfcGFyc2VwYXRoLnBhcnNlUGF0aCkocGF0aCk7XG4gICAgcmV0dXJuIHBhdGhuYW1lID09PSBwcmVmaXggfHwgcGF0aG5hbWUuc3RhcnRzV2l0aChwcmVmaXggKyBcIi9cIik7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGgtaGFzLXByZWZpeC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicGF0aEhhc1ByZWZpeCIsIl9wYXJzZXBhdGgiLCJyZXF1aXJlIiwicGF0aCIsInByZWZpeCIsInBhdGhuYW1lIiwicGFyc2VQYXRoIiwic3RhcnRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"removePathPrefix\", ({\n    enumerable: true,\n    get: function() {\n        return removePathPrefix;\n    }\n}));\nconst _pathhasprefix = __webpack_require__(/*! ./path-has-prefix */ \"(sc_server)/./node_modules/next/dist/shared/lib/router/utils/path-has-prefix.js\");\nfunction removePathPrefix(path, prefix) {\n    // If the path doesn't start with the prefix we can return it as is. This\n    // protects us from situations where the prefix is a substring of the path\n    // prefix such as:\n    //\n    // For prefix: /blog\n    //\n    //   /blog -> true\n    //   /blog/ -> true\n    //   /blog/1 -> true\n    //   /blogging -> false\n    //   /blogging/ -> false\n    //   /blogging/1 -> false\n    if (!(0, _pathhasprefix.pathHasPrefix)(path, prefix)) {\n        return path;\n    }\n    // Remove the prefix from the path via slicing.\n    const withoutPrefix = path.slice(prefix.length);\n    // If the path without the prefix starts with a `/` we can return it as is.\n    if (withoutPrefix.startsWith(\"/\")) {\n        return withoutPrefix;\n    }\n    // If the path without the prefix doesn't start with a `/` we need to add it\n    // back to the path to make sure it's a valid path.\n    return \"/\" + withoutPrefix;\n} //# sourceMappingURL=remove-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbW92ZS1wYXRoLXByZWZpeC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsb0RBQW1EO0lBQy9DSSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMsaUJBQWlCQyxtQkFBT0EsQ0FBQywwR0FBbUI7QUFDbEQsU0FBU0YsaUJBQWlCRyxJQUFJLEVBQUVDLE1BQU07SUFDbEMseUVBQXlFO0lBQ3pFLDBFQUEwRTtJQUMxRSxrQkFBa0I7SUFDbEIsRUFBRTtJQUNGLG9CQUFvQjtJQUNwQixFQUFFO0lBQ0Ysa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixvQkFBb0I7SUFDcEIsdUJBQXVCO0lBQ3ZCLHdCQUF3QjtJQUN4Qix5QkFBeUI7SUFDekIsSUFBSSxDQUFDLENBQUMsR0FBR0gsZUFBZUksYUFBWSxFQUFHRixNQUFNQyxTQUFTO1FBQ2xELE9BQU9EO0lBQ1g7SUFDQSwrQ0FBK0M7SUFDL0MsTUFBTUcsZ0JBQWdCSCxLQUFLSSxNQUFNSCxPQUFPSTtJQUN4QywyRUFBMkU7SUFDM0UsSUFBSUYsY0FBY0csV0FBVyxNQUFNO1FBQy9CLE9BQU9IO0lBQ1g7SUFDQSw0RUFBNEU7SUFDNUUsbURBQW1EO0lBQ25ELE9BQU8sTUFBTUE7QUFDakIsRUFFQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9yZW1vdmUtcGF0aC1wcmVmaXguanM/NjE0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInJlbW92ZVBhdGhQcmVmaXhcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHJlbW92ZVBhdGhQcmVmaXg7XG4gICAgfVxufSk7XG5jb25zdCBfcGF0aGhhc3ByZWZpeCA9IHJlcXVpcmUoXCIuL3BhdGgtaGFzLXByZWZpeFwiKTtcbmZ1bmN0aW9uIHJlbW92ZVBhdGhQcmVmaXgocGF0aCwgcHJlZml4KSB7XG4gICAgLy8gSWYgdGhlIHBhdGggZG9lc24ndCBzdGFydCB3aXRoIHRoZSBwcmVmaXggd2UgY2FuIHJldHVybiBpdCBhcyBpcy4gVGhpc1xuICAgIC8vIHByb3RlY3RzIHVzIGZyb20gc2l0dWF0aW9ucyB3aGVyZSB0aGUgcHJlZml4IGlzIGEgc3Vic3RyaW5nIG9mIHRoZSBwYXRoXG4gICAgLy8gcHJlZml4IHN1Y2ggYXM6XG4gICAgLy9cbiAgICAvLyBGb3IgcHJlZml4OiAvYmxvZ1xuICAgIC8vXG4gICAgLy8gICAvYmxvZyAtPiB0cnVlXG4gICAgLy8gICAvYmxvZy8gLT4gdHJ1ZVxuICAgIC8vICAgL2Jsb2cvMSAtPiB0cnVlXG4gICAgLy8gICAvYmxvZ2dpbmcgLT4gZmFsc2VcbiAgICAvLyAgIC9ibG9nZ2luZy8gLT4gZmFsc2VcbiAgICAvLyAgIC9ibG9nZ2luZy8xIC0+IGZhbHNlXG4gICAgaWYgKCEoMCwgX3BhdGhoYXNwcmVmaXgucGF0aEhhc1ByZWZpeCkocGF0aCwgcHJlZml4KSkge1xuICAgICAgICByZXR1cm4gcGF0aDtcbiAgICB9XG4gICAgLy8gUmVtb3ZlIHRoZSBwcmVmaXggZnJvbSB0aGUgcGF0aCB2aWEgc2xpY2luZy5cbiAgICBjb25zdCB3aXRob3V0UHJlZml4ID0gcGF0aC5zbGljZShwcmVmaXgubGVuZ3RoKTtcbiAgICAvLyBJZiB0aGUgcGF0aCB3aXRob3V0IHRoZSBwcmVmaXggc3RhcnRzIHdpdGggYSBgL2Agd2UgY2FuIHJldHVybiBpdCBhcyBpcy5cbiAgICBpZiAod2l0aG91dFByZWZpeC5zdGFydHNXaXRoKFwiL1wiKSkge1xuICAgICAgICByZXR1cm4gd2l0aG91dFByZWZpeDtcbiAgICB9XG4gICAgLy8gSWYgdGhlIHBhdGggd2l0aG91dCB0aGUgcHJlZml4IGRvZXNuJ3Qgc3RhcnQgd2l0aCBhIGAvYCB3ZSBuZWVkIHRvIGFkZCBpdFxuICAgIC8vIGJhY2sgdG8gdGhlIHBhdGggdG8gbWFrZSBzdXJlIGl0J3MgYSB2YWxpZCBwYXRoLlxuICAgIHJldHVybiBcIi9cIiArIHdpdGhvdXRQcmVmaXg7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbW92ZS1wYXRoLXByZWZpeC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwicmVtb3ZlUGF0aFByZWZpeCIsIl9wYXRoaGFzcHJlZml4IiwicmVxdWlyZSIsInBhdGgiLCJwcmVmaXgiLCJwYXRoSGFzUHJlZml4Iiwid2l0aG91dFByZWZpeCIsInNsaWNlIiwibGVuZ3RoIiwic3RhcnRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/remove-path-prefix.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ \nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"removeTrailingSlash\", ({\n    enumerable: true,\n    get: function() {\n        return removeTrailingSlash;\n    }\n}));\nfunction removeTrailingSlash(route) {\n    return route.replace(/\\/$/, \"\") || \"/\";\n} //# sourceMappingURL=remove-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbW92ZS10cmFpbGluZy1zbGFzaC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0NBTUMsR0FBZ0I7QUFDakJBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCx1REFBc0Q7SUFDbERJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixTQUFTQSxvQkFBb0JDLEtBQUs7SUFDOUIsT0FBT0EsTUFBTUMsUUFBUSxPQUFPLE9BQU87QUFDdkMsRUFFQSxpREFBaUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9zaGFyZWQvbGliL3JvdXRlci91dGlscy9yZW1vdmUtdHJhaWxpbmctc2xhc2guanM/ZWMwNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlbW92ZXMgdGhlIHRyYWlsaW5nIHNsYXNoIGZvciBhIGdpdmVuIHJvdXRlIG9yIHBhZ2UgcGF0aC4gUHJlc2VydmVzIHRoZVxuICogcm9vdCBwYWdlLiBFeGFtcGxlczpcbiAqICAgLSBgL2Zvby9iYXIvYCAtPiBgL2Zvby9iYXJgXG4gKiAgIC0gYC9mb28vYmFyYCAtPiBgL2Zvby9iYXJgXG4gKiAgIC0gYC9gIC0+IGAvYFxuICovIFwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicmVtb3ZlVHJhaWxpbmdTbGFzaFwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gcmVtb3ZlVHJhaWxpbmdTbGFzaDtcbiAgICB9XG59KTtcbmZ1bmN0aW9uIHJlbW92ZVRyYWlsaW5nU2xhc2gocm91dGUpIHtcbiAgICByZXR1cm4gcm91dGUucmVwbGFjZSgvXFwvJC8sIFwiXCIpIHx8IFwiL1wiO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmUtdHJhaWxpbmctc2xhc2guanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsInJlbW92ZVRyYWlsaW5nU2xhc2giLCJyb3V0ZSIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/dist/shared/lib/router/utils/remove-trailing-slash.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/next/headers.js":
/*!**************************************!*\
  !*** ./node_modules/next/headers.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = __webpack_require__(/*! ./dist/client/components/headers */ \"(sc_server)/./node_modules/next/dist/client/components/headers.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsaUpBQXlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2hlYWRlcnMuanM/ZGZmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9jbGllbnQvY29tcG9uZW50cy9oZWFkZXJzJylcbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/next/headers.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oauth/index.js":
/*!*************************************!*\
  !*** ./node_modules/oauth/index.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("exports.OAuth = __webpack_require__(/*! ./lib/oauth */ \"(sc_server)/./node_modules/oauth/lib/oauth.js\").OAuth;\nexports.OAuthEcho = __webpack_require__(/*! ./lib/oauth */ \"(sc_server)/./node_modules/oauth/lib/oauth.js\").OAuthEcho;\nexports.OAuth2 = __webpack_require__(/*! ./lib/oauth2 */ \"(sc_server)/./node_modules/oauth/lib/oauth2.js\").OAuth2;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb2F1dGgvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUFBLDZHQUE0Q0M7QUFDNUNELHFIQUFvREc7QUFDcERILGlIQUErQ0kiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL29hdXRoL2luZGV4LmpzPzU4OTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5PQXV0aCA9IHJlcXVpcmUoXCIuL2xpYi9vYXV0aFwiKS5PQXV0aDtcbmV4cG9ydHMuT0F1dGhFY2hvID0gcmVxdWlyZShcIi4vbGliL29hdXRoXCIpLk9BdXRoRWNobztcbmV4cG9ydHMuT0F1dGgyID0gcmVxdWlyZShcIi4vbGliL29hdXRoMlwiKS5PQXV0aDI7Il0sIm5hbWVzIjpbImV4cG9ydHMiLCJPQXV0aCIsInJlcXVpcmUiLCJPQXV0aEVjaG8iLCJPQXV0aDIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oauth/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oauth/lib/_utils.js":
/*!******************************************!*\
  !*** ./node_modules/oauth/lib/_utils.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("// Returns true if this is a host that closes *before* it ends?!?!\n\nmodule.exports.isAnEarlyCloseHost = function(hostName) {\n    return hostName && hostName.match(\".*google(apis)?.com$\");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb2F1dGgvbGliL191dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxrRUFBa0U7O0FBQ2xFQSxpQ0FBaUNFLEdBQUUsU0FBVUMsUUFBUTtJQUNuRCxPQUFPQSxZQUFZQSxTQUFTQyxNQUFNO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9vYXV0aC9saWIvX3V0aWxzLmpzPzEzOTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUmV0dXJucyB0cnVlIGlmIHRoaXMgaXMgYSBob3N0IHRoYXQgY2xvc2VzICpiZWZvcmUqIGl0IGVuZHM/IT8hXG5tb2R1bGUuZXhwb3J0cy5pc0FuRWFybHlDbG9zZUhvc3Q9IGZ1bmN0aW9uKCBob3N0TmFtZSApIHtcbiAgcmV0dXJuIGhvc3ROYW1lICYmIGhvc3ROYW1lLm1hdGNoKFwiLipnb29nbGUoYXBpcyk/LmNvbSRcIilcbn0iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImlzQW5FYXJseUNsb3NlSG9zdCIsImhvc3ROYW1lIiwibWF0Y2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oauth/lib/_utils.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oauth/lib/oauth.js":
/*!*****************************************!*\
  !*** ./node_modules/oauth/lib/oauth.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var crypto = __webpack_require__(/*! crypto */ \"crypto\"), sha1 = __webpack_require__(/*! ./sha1 */ \"(sc_server)/./node_modules/oauth/lib/sha1.js\"), http = __webpack_require__(/*! http */ \"http\"), https = __webpack_require__(/*! https */ \"https\"), URL = __webpack_require__(/*! url */ \"url\"), querystring = __webpack_require__(/*! querystring */ \"querystring\"), OAuthUtils = __webpack_require__(/*! ./_utils */ \"(sc_server)/./node_modules/oauth/lib/_utils.js\");\nexports.OAuth = function(requestUrl, accessUrl, consumerKey, consumerSecret, version, authorize_callback, signatureMethod, nonceSize, customHeaders) {\n    this._isEcho = false;\n    this._requestUrl = requestUrl;\n    this._accessUrl = accessUrl;\n    this._consumerKey = consumerKey;\n    this._consumerSecret = this._encodeData(consumerSecret);\n    if (signatureMethod == \"RSA-SHA1\") {\n        this._privateKey = consumerSecret;\n    }\n    this._version = version;\n    if (authorize_callback === undefined) {\n        this._authorize_callback = \"oob\";\n    } else {\n        this._authorize_callback = authorize_callback;\n    }\n    if (signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\") throw new Error(\"Un-supported signature method: \" + signatureMethod);\n    this._signatureMethod = signatureMethod;\n    this._nonceSize = nonceSize || 32;\n    this._headers = customHeaders || {\n        \"Accept\": \"*/*\",\n        \"Connection\": \"close\",\n        \"User-Agent\": \"Node authentication\"\n    };\n    this._clientOptions = this._defaultClientOptions = {\n        \"requestTokenHttpMethod\": \"POST\",\n        \"accessTokenHttpMethod\": \"POST\",\n        \"followRedirects\": true\n    };\n    this._oauthParameterSeperator = \",\";\n};\nexports.OAuthEcho = function(realm, verify_credentials, consumerKey, consumerSecret, version, signatureMethod, nonceSize, customHeaders) {\n    this._isEcho = true;\n    this._realm = realm;\n    this._verifyCredentials = verify_credentials;\n    this._consumerKey = consumerKey;\n    this._consumerSecret = this._encodeData(consumerSecret);\n    if (signatureMethod == \"RSA-SHA1\") {\n        this._privateKey = consumerSecret;\n    }\n    this._version = version;\n    if (signatureMethod != \"PLAINTEXT\" && signatureMethod != \"HMAC-SHA1\" && signatureMethod != \"RSA-SHA1\") throw new Error(\"Un-supported signature method: \" + signatureMethod);\n    this._signatureMethod = signatureMethod;\n    this._nonceSize = nonceSize || 32;\n    this._headers = customHeaders || {\n        \"Accept\": \"*/*\",\n        \"Connection\": \"close\",\n        \"User-Agent\": \"Node authentication\"\n    };\n    this._oauthParameterSeperator = \",\";\n};\nexports.OAuthEcho.prototype = exports.OAuth.prototype;\nexports.OAuth.prototype._getTimestamp = function() {\n    return Math.floor(new Date().getTime() / 1000);\n};\nexports.OAuth.prototype._encodeData = function(toEncode) {\n    if (toEncode == null || toEncode == \"\") return \"\";\n    else {\n        var result = encodeURIComponent(toEncode);\n        // Fix the mismatch between OAuth's  RFC3986's and Javascript's beliefs in what is right and wrong ;)\n        return result.replace(/\\!/g, \"%21\").replace(/\\'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\").replace(/\\*/g, \"%2A\");\n    }\n};\nexports.OAuth.prototype._decodeData = function(toDecode) {\n    if (toDecode != null) {\n        toDecode = toDecode.replace(/\\+/g, \" \");\n    }\n    return decodeURIComponent(toDecode);\n};\nexports.OAuth.prototype._getSignature = function(method, url, parameters, tokenSecret) {\n    var signatureBase = this._createSignatureBase(method, url, parameters);\n    return this._createSignature(signatureBase, tokenSecret);\n};\nexports.OAuth.prototype._normalizeUrl = function(url) {\n    var parsedUrl = URL.parse(url, true);\n    var port = \"\";\n    if (parsedUrl.port) {\n        if (parsedUrl.protocol == \"http:\" && parsedUrl.port != \"80\" || parsedUrl.protocol == \"https:\" && parsedUrl.port != \"443\") {\n            port = \":\" + parsedUrl.port;\n        }\n    }\n    if (!parsedUrl.pathname || parsedUrl.pathname == \"\") parsedUrl.pathname = \"/\";\n    return parsedUrl.protocol + \"//\" + parsedUrl.hostname + port + parsedUrl.pathname;\n};\n// Is the parameter considered an OAuth parameter\nexports.OAuth.prototype._isParameterNameAnOAuthParameter = function(parameter) {\n    var m = parameter.match(\"^oauth_\");\n    if (m && m[0] === \"oauth_\") {\n        return true;\n    } else {\n        return false;\n    }\n};\n// build the OAuth request authorization header\nexports.OAuth.prototype._buildAuthorizationHeaders = function(orderedParameters) {\n    var authHeader = \"OAuth \";\n    if (this._isEcho) {\n        authHeader += 'realm=\"' + this._realm + '\",';\n    }\n    for(var i = 0; i < orderedParameters.length; i++){\n        // Whilst the all the parameters should be included within the signature, only the oauth_ arguments\n        // should appear within the authorization header.\n        if (this._isParameterNameAnOAuthParameter(orderedParameters[i][0])) {\n            authHeader += \"\" + this._encodeData(orderedParameters[i][0]) + '=\"' + this._encodeData(orderedParameters[i][1]) + '\"' + this._oauthParameterSeperator;\n        }\n    }\n    authHeader = authHeader.substring(0, authHeader.length - this._oauthParameterSeperator.length);\n    return authHeader;\n};\n// Takes an object literal that represents the arguments, and returns an array\n// of argument/value pairs.\nexports.OAuth.prototype._makeArrayOfArgumentsHash = function(argumentsHash) {\n    var argument_pairs = [];\n    for(var key in argumentsHash){\n        if (argumentsHash.hasOwnProperty(key)) {\n            var value = argumentsHash[key];\n            if (Array.isArray(value)) {\n                for(var i = 0; i < value.length; i++){\n                    argument_pairs[argument_pairs.length] = [\n                        key,\n                        value[i]\n                    ];\n                }\n            } else {\n                argument_pairs[argument_pairs.length] = [\n                    key,\n                    value\n                ];\n            }\n        }\n    }\n    return argument_pairs;\n};\n// Sorts the encoded key value pairs by encoded name, then encoded value\nexports.OAuth.prototype._sortRequestParams = function(argument_pairs) {\n    // Sort by name, then value.\n    argument_pairs.sort(function(a, b) {\n        if (a[0] == b[0]) {\n            return a[1] < b[1] ? -1 : 1;\n        } else return a[0] < b[0] ? -1 : 1;\n    });\n    return argument_pairs;\n};\nexports.OAuth.prototype._normaliseRequestParams = function(args) {\n    var argument_pairs = this._makeArrayOfArgumentsHash(args);\n    // First encode them #3.4.1.3.2 .1\n    for(var i = 0; i < argument_pairs.length; i++){\n        argument_pairs[i][0] = this._encodeData(argument_pairs[i][0]);\n        argument_pairs[i][1] = this._encodeData(argument_pairs[i][1]);\n    }\n    // Then sort them #3.4.1.3.2 .2\n    argument_pairs = this._sortRequestParams(argument_pairs);\n    // Then concatenate together #3.4.1.3.2 .3 & .4\n    var args = \"\";\n    for(var i = 0; i < argument_pairs.length; i++){\n        args += argument_pairs[i][0];\n        args += \"=\";\n        args += argument_pairs[i][1];\n        if (i < argument_pairs.length - 1) args += \"&\";\n    }\n    return args;\n};\nexports.OAuth.prototype._createSignatureBase = function(method, url, parameters) {\n    url = this._encodeData(this._normalizeUrl(url));\n    parameters = this._encodeData(parameters);\n    return method.toUpperCase() + \"&\" + url + \"&\" + parameters;\n};\nexports.OAuth.prototype._createSignature = function(signatureBase, tokenSecret) {\n    if (tokenSecret === undefined) var tokenSecret = \"\";\n    else tokenSecret = this._encodeData(tokenSecret);\n    // consumerSecret is already encoded\n    var key = this._consumerSecret + \"&\" + tokenSecret;\n    var hash = \"\";\n    if (this._signatureMethod == \"PLAINTEXT\") {\n        hash = key;\n    } else if (this._signatureMethod == \"RSA-SHA1\") {\n        key = this._privateKey || \"\";\n        hash = crypto.createSign(\"RSA-SHA1\").update(signatureBase).sign(key, \"base64\");\n    } else {\n        if (crypto.Hmac) {\n            hash = crypto.createHmac(\"sha1\", key).update(signatureBase).digest(\"base64\");\n        } else {\n            hash = sha1.HMACSHA1(key, signatureBase);\n        }\n    }\n    return hash;\n};\nexports.OAuth.prototype.NONCE_CHARS = [\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\"\n];\nexports.OAuth.prototype._getNonce = function(nonceSize) {\n    var result = [];\n    var chars = this.NONCE_CHARS;\n    var char_pos;\n    var nonce_chars_length = chars.length;\n    for(var i = 0; i < nonceSize; i++){\n        char_pos = Math.floor(Math.random() * nonce_chars_length);\n        result[i] = chars[char_pos];\n    }\n    return result.join(\"\");\n};\nexports.OAuth.prototype._createClient = function(port, hostname, method, path, headers, sslEnabled) {\n    var options = {\n        host: hostname,\n        port: port,\n        path: path,\n        method: method,\n        headers: headers\n    };\n    var httpModel;\n    if (sslEnabled) {\n        httpModel = https;\n    } else {\n        httpModel = http;\n    }\n    return httpModel.request(options);\n};\nexports.OAuth.prototype._prepareParameters = function(oauth_token, oauth_token_secret, method, url, extra_params) {\n    var oauthParameters = {\n        \"oauth_timestamp\": this._getTimestamp(),\n        \"oauth_nonce\": this._getNonce(this._nonceSize),\n        \"oauth_version\": this._version,\n        \"oauth_signature_method\": this._signatureMethod,\n        \"oauth_consumer_key\": this._consumerKey\n    };\n    if (oauth_token) {\n        oauthParameters[\"oauth_token\"] = oauth_token;\n    }\n    var sig;\n    if (this._isEcho) {\n        sig = this._getSignature(\"GET\", this._verifyCredentials, this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n    } else {\n        if (extra_params) {\n            for(var key in extra_params){\n                if (extra_params.hasOwnProperty(key)) oauthParameters[key] = extra_params[key];\n            }\n        }\n        var parsedUrl = URL.parse(url, false);\n        if (parsedUrl.query) {\n            var key2;\n            var extraParameters = querystring.parse(parsedUrl.query);\n            for(var key in extraParameters){\n                var value = extraParameters[key];\n                if (typeof value == \"object\") {\n                    // TODO: This probably should be recursive\n                    for(key2 in value){\n                        oauthParameters[key + \"[\" + key2 + \"]\"] = value[key2];\n                    }\n                } else {\n                    oauthParameters[key] = value;\n                }\n            }\n        }\n        sig = this._getSignature(method, url, this._normaliseRequestParams(oauthParameters), oauth_token_secret);\n    }\n    var orderedParameters = this._sortRequestParams(this._makeArrayOfArgumentsHash(oauthParameters));\n    orderedParameters[orderedParameters.length] = [\n        \"oauth_signature\",\n        sig\n    ];\n    return orderedParameters;\n};\nexports.OAuth.prototype._performSecureRequest = function(oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type, callback) {\n    var orderedParameters = this._prepareParameters(oauth_token, oauth_token_secret, method, url, extra_params);\n    if (!post_content_type) {\n        post_content_type = \"application/x-www-form-urlencoded\";\n    }\n    var parsedUrl = URL.parse(url, false);\n    if (parsedUrl.protocol == \"http:\" && !parsedUrl.port) parsedUrl.port = 80;\n    if (parsedUrl.protocol == \"https:\" && !parsedUrl.port) parsedUrl.port = 443;\n    var headers = {};\n    var authorization = this._buildAuthorizationHeaders(orderedParameters);\n    if (this._isEcho) {\n        headers[\"X-Verify-Credentials-Authorization\"] = authorization;\n    } else {\n        headers[\"Authorization\"] = authorization;\n    }\n    headers[\"Host\"] = parsedUrl.host;\n    for(var key in this._headers){\n        if (this._headers.hasOwnProperty(key)) {\n            headers[key] = this._headers[key];\n        }\n    }\n    // Filter out any passed extra_params that are really to do with OAuth\n    for(var key in extra_params){\n        if (this._isParameterNameAnOAuthParameter(key)) {\n            delete extra_params[key];\n        }\n    }\n    if ((method == \"POST\" || method == \"PUT\") && post_body == null && extra_params != null) {\n        // Fix the mismatch between the output of querystring.stringify() and this._encodeData()\n        post_body = querystring.stringify(extra_params).replace(/\\!/g, \"%21\").replace(/\\'/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\").replace(/\\*/g, \"%2A\");\n    }\n    if (post_body) {\n        if (Buffer.isBuffer(post_body)) {\n            headers[\"Content-length\"] = post_body.length;\n        } else {\n            headers[\"Content-length\"] = Buffer.byteLength(post_body);\n        }\n    } else {\n        headers[\"Content-length\"] = 0;\n    }\n    headers[\"Content-Type\"] = post_content_type;\n    var path;\n    if (!parsedUrl.pathname || parsedUrl.pathname == \"\") parsedUrl.pathname = \"/\";\n    if (parsedUrl.query) path = parsedUrl.pathname + \"?\" + parsedUrl.query;\n    else path = parsedUrl.pathname;\n    var request;\n    if (parsedUrl.protocol == \"https:\") {\n        request = this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers, true);\n    } else {\n        request = this._createClient(parsedUrl.port, parsedUrl.hostname, method, path, headers);\n    }\n    var clientOptions = this._clientOptions;\n    if (callback) {\n        var data = \"\";\n        var self = this;\n        // Some hosts *cough* google appear to close the connection early / send no content-length header\n        // allow this behaviour.\n        var allowEarlyClose = OAuthUtils.isAnEarlyCloseHost(parsedUrl.hostname);\n        var callbackCalled = false;\n        var passBackControl = function(response) {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                if (response.statusCode >= 200 && response.statusCode <= 299) {\n                    callback(null, data, response);\n                } else {\n                    // Follow 301 or 302 redirects with Location HTTP header\n                    if ((response.statusCode == 301 || response.statusCode == 302) && clientOptions.followRedirects && response.headers && response.headers.location) {\n                        self._performSecureRequest(oauth_token, oauth_token_secret, method, response.headers.location, extra_params, post_body, post_content_type, callback);\n                    } else {\n                        callback({\n                            statusCode: response.statusCode,\n                            data: data\n                        }, data, response);\n                    }\n                }\n            }\n        };\n        request.on(\"response\", function(response) {\n            response.setEncoding(\"utf8\");\n            response.on(\"data\", function(chunk) {\n                data += chunk;\n            });\n            response.on(\"end\", function() {\n                passBackControl(response);\n            });\n            response.on(\"close\", function() {\n                if (allowEarlyClose) {\n                    passBackControl(response);\n                }\n            });\n        });\n        request.on(\"error\", function(err) {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                callback(err);\n            }\n        });\n        if ((method == \"POST\" || method == \"PUT\") && post_body != null && post_body != \"\") {\n            request.write(post_body);\n        }\n        request.end();\n    } else {\n        if ((method == \"POST\" || method == \"PUT\") && post_body != null && post_body != \"\") {\n            request.write(post_body);\n        }\n        return request;\n    }\n    return;\n};\nexports.OAuth.prototype.setClientOptions = function(options) {\n    var key, mergedOptions = {}, hasOwnProperty = Object.prototype.hasOwnProperty;\n    for(key in this._defaultClientOptions){\n        if (!hasOwnProperty.call(options, key)) {\n            mergedOptions[key] = this._defaultClientOptions[key];\n        } else {\n            mergedOptions[key] = options[key];\n        }\n    }\n    this._clientOptions = mergedOptions;\n};\nexports.OAuth.prototype.getOAuthAccessToken = function(oauth_token, oauth_token_secret, oauth_verifier, callback) {\n    var extraParams = {};\n    if (typeof oauth_verifier == \"function\") {\n        callback = oauth_verifier;\n    } else {\n        extraParams.oauth_verifier = oauth_verifier;\n    }\n    this._performSecureRequest(oauth_token, oauth_token_secret, this._clientOptions.accessTokenHttpMethod, this._accessUrl, extraParams, null, null, function(error, data, response) {\n        if (error) callback(error);\n        else {\n            var results = querystring.parse(data);\n            var oauth_access_token = results[\"oauth_token\"];\n            delete results[\"oauth_token\"];\n            var oauth_access_token_secret = results[\"oauth_token_secret\"];\n            delete results[\"oauth_token_secret\"];\n            callback(null, oauth_access_token, oauth_access_token_secret, results);\n        }\n    });\n};\n// Deprecated\nexports.OAuth.prototype.getProtectedResource = function(url, method, oauth_token, oauth_token_secret, callback) {\n    this._performSecureRequest(oauth_token, oauth_token_secret, method, url, null, \"\", null, callback);\n};\nexports.OAuth.prototype[\"delete\"] = function(url, oauth_token, oauth_token_secret, callback) {\n    return this._performSecureRequest(oauth_token, oauth_token_secret, \"DELETE\", url, null, \"\", null, callback);\n};\nexports.OAuth.prototype.get = function(url, oauth_token, oauth_token_secret, callback) {\n    return this._performSecureRequest(oauth_token, oauth_token_secret, \"GET\", url, null, \"\", null, callback);\n};\nexports.OAuth.prototype._putOrPost = function(method, url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n    var extra_params = null;\n    if (typeof post_content_type == \"function\") {\n        callback = post_content_type;\n        post_content_type = null;\n    }\n    if (typeof post_body != \"string\" && !Buffer.isBuffer(post_body)) {\n        post_content_type = \"application/x-www-form-urlencoded\";\n        extra_params = post_body;\n        post_body = null;\n    }\n    return this._performSecureRequest(oauth_token, oauth_token_secret, method, url, extra_params, post_body, post_content_type, callback);\n};\nexports.OAuth.prototype.put = function(url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n    return this._putOrPost(\"PUT\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n};\nexports.OAuth.prototype.post = function(url, oauth_token, oauth_token_secret, post_body, post_content_type, callback) {\n    return this._putOrPost(\"POST\", url, oauth_token, oauth_token_secret, post_body, post_content_type, callback);\n};\n/**\n * Gets a request token from the OAuth provider and passes that information back\n * to the calling code.\n *\n * The callback should expect a function of the following form:\n *\n * function(err, token, token_secret, parsedQueryString) {}\n *\n * This method has optional parameters so can be called in the following 2 ways:\n *\n * 1) Primary use case: Does a basic request with no extra parameters\n *  getOAuthRequestToken( callbackFunction )\n *\n * 2) As above but allows for provision of extra parameters to be sent as part of the query to the server.\n *  getOAuthRequestToken( extraParams, callbackFunction )\n *\n * N.B. This method will HTTP POST verbs by default, if you wish to override this behaviour you will\n * need to provide a requestTokenHttpMethod option when creating the client.\n *\n **/ exports.OAuth.prototype.getOAuthRequestToken = function(extraParams, callback) {\n    if (typeof extraParams == \"function\") {\n        callback = extraParams;\n        extraParams = {};\n    }\n    // Callbacks are 1.0A related\n    if (this._authorize_callback) {\n        extraParams[\"oauth_callback\"] = this._authorize_callback;\n    }\n    this._performSecureRequest(null, null, this._clientOptions.requestTokenHttpMethod, this._requestUrl, extraParams, null, null, function(error, data, response) {\n        if (error) callback(error);\n        else {\n            var results = querystring.parse(data);\n            var oauth_token = results[\"oauth_token\"];\n            var oauth_token_secret = results[\"oauth_token_secret\"];\n            delete results[\"oauth_token\"];\n            delete results[\"oauth_token_secret\"];\n            callback(null, oauth_token, oauth_token_secret, results);\n        }\n    });\n};\nexports.OAuth.prototype.signUrl = function(url, oauth_token, oauth_token_secret, method) {\n    if (method === undefined) {\n        var method = \"GET\";\n    }\n    var orderedParameters = this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n    var parsedUrl = URL.parse(url, false);\n    var query = \"\";\n    for(var i = 0; i < orderedParameters.length; i++){\n        query += orderedParameters[i][0] + \"=\" + this._encodeData(orderedParameters[i][1]) + \"&\";\n    }\n    query = query.substring(0, query.length - 1);\n    return parsedUrl.protocol + \"//\" + parsedUrl.host + parsedUrl.pathname + \"?\" + query;\n};\nexports.OAuth.prototype.authHeader = function(url, oauth_token, oauth_token_secret, method) {\n    if (method === undefined) {\n        var method = \"GET\";\n    }\n    var orderedParameters = this._prepareParameters(oauth_token, oauth_token_secret, method, url, {});\n    return this._buildAuthorizationHeaders(orderedParameters);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb2F1dGgvbGliL29hdXRoLmpzIiwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFNBQVFDLG1CQUFPQSxDQUFDLHlCQUNoQkMsT0FBTUQsbUJBQU9BLENBQUMsK0RBQ2RFLE9BQU1GLG1CQUFPQSxDQUFDLHFCQUNkRyxRQUFPSCxtQkFBT0EsQ0FBQyx1QkFDZkksTUFBS0osbUJBQU9BLENBQUMsbUJBQ2JLLGNBQWFMLG1CQUFPQSxDQUFDLG1DQUNyQk0sYUFBWU4sbUJBQU9BLENBQUM7QUFFeEJPLGFBQWFDLEdBQUUsU0FBU0MsVUFBVSxFQUFFQyxTQUFTLEVBQUVDLFdBQVcsRUFBRUMsY0FBYyxFQUFFQyxPQUFPLEVBQUVDLGtCQUFrQixFQUFFQyxlQUFlLEVBQUVDLFNBQVMsRUFBRUMsYUFBYTtJQUNoSixJQUFJLENBQUNDLFVBQVU7SUFFZixJQUFJLENBQUNDLGNBQWFWO0lBQ2xCLElBQUksQ0FBQ1csYUFBWVY7SUFDakIsSUFBSSxDQUFDVyxlQUFjVjtJQUNuQixJQUFJLENBQUNXLGtCQUFpQixJQUFJLENBQUNDLFlBQWFYO0lBQ3hDLElBQUlHLG1CQUFtQixZQUFZO1FBQ2pDLElBQUksQ0FBQ1MsY0FBY1o7SUFDckI7SUFDQSxJQUFJLENBQUNhLFdBQVVaO0lBQ2YsSUFBSUMsdUJBQXVCWSxXQUFZO1FBQ3JDLElBQUksQ0FBQ0Msc0JBQXFCO0lBQzVCLE9BQ0s7UUFDSCxJQUFJLENBQUNBLHNCQUFxQmI7SUFDNUI7SUFFQSxJQUFJQyxtQkFBbUIsZUFBZUEsbUJBQW1CLGVBQWVBLG1CQUFtQixZQUN6RixNQUFNLElBQUlhLE1BQU0sb0NBQW9DYjtJQUN0RCxJQUFJLENBQUNjLG1CQUFrQmQ7SUFDdkIsSUFBSSxDQUFDZSxhQUFZZCxhQUFhO0lBQzlCLElBQUksQ0FBQ2UsV0FBVWQsaUJBQWlCO1FBQUMsVUFBVztRQUNYLGNBQWU7UUFDZixjQUFlO0lBQXFCO0lBQ3JFLElBQUksQ0FBQ2UsaUJBQWdCLElBQUksQ0FBQ0Msd0JBQXVCO1FBQUMsMEJBQTBCO1FBQzFCLHlCQUF5QjtRQUN6QixtQkFBbUI7SUFBSTtJQUN6RSxJQUFJLENBQUNDLDJCQUEyQjtBQUNsQztBQUVBM0IsaUJBQWlCNEIsR0FBRSxTQUFTQyxLQUFLLEVBQUVDLGtCQUFrQixFQUFFMUIsV0FBVyxFQUFFQyxjQUFjLEVBQUVDLE9BQU8sRUFBRUUsZUFBZSxFQUFFQyxTQUFTLEVBQUVDLGFBQWE7SUFDcEksSUFBSSxDQUFDQyxVQUFVO0lBRWYsSUFBSSxDQUFDb0IsU0FBUUY7SUFDYixJQUFJLENBQUNHLHFCQUFxQkY7SUFDMUIsSUFBSSxDQUFDaEIsZUFBY1Y7SUFDbkIsSUFBSSxDQUFDVyxrQkFBaUIsSUFBSSxDQUFDQyxZQUFhWDtJQUN4QyxJQUFJRyxtQkFBbUIsWUFBWTtRQUNqQyxJQUFJLENBQUNTLGNBQWNaO0lBQ3JCO0lBQ0EsSUFBSSxDQUFDYSxXQUFVWjtJQUVmLElBQUlFLG1CQUFtQixlQUFlQSxtQkFBbUIsZUFBZUEsbUJBQW1CLFlBQ3pGLE1BQU0sSUFBSWEsTUFBTSxvQ0FBb0NiO0lBQ3RELElBQUksQ0FBQ2MsbUJBQWtCZDtJQUN2QixJQUFJLENBQUNlLGFBQVlkLGFBQWE7SUFDOUIsSUFBSSxDQUFDZSxXQUFVZCxpQkFBaUI7UUFBQyxVQUFXO1FBQ1gsY0FBZTtRQUNmLGNBQWU7SUFBcUI7SUFDckUsSUFBSSxDQUFDaUIsMkJBQTJCO0FBQ2xDO0FBRUEzQiwyQkFBMkJpQyxHQUFHakMsUUFBUUMsTUFBTWdDO0FBRTVDakMscUNBQXFDa0MsR0FBRTtJQUNyQyxPQUFPQyxLQUFLQyxNQUFPLElBQUtDLE9BQVFDLFlBQVk7QUFDOUM7QUFFQXRDLG1DQUFtQ2dCLEdBQUUsU0FBU3VCLFFBQVE7SUFDckQsSUFBSUEsWUFBWSxRQUFRQSxZQUFZLElBQUssT0FBTztTQUMzQztRQUNGLElBQUlDLFNBQVFDLG1CQUFtQkY7UUFDL0IscUdBQXFHO1FBQ3JHLE9BQU9DLE9BQU9FLFFBQVEsT0FBTyxPQUNmQSxRQUFRLE9BQU8sT0FDZkEsUUFBUSxPQUFPLE9BQ2ZBLFFBQVEsT0FBTyxPQUNmQSxRQUFRLE9BQU87SUFDaEM7QUFDRDtBQUVBMUMsbUNBQW1DMkMsR0FBRSxTQUFTQyxRQUFRO0lBQ3BELElBQUlBLFlBQVksTUFBTztRQUNyQkEsV0FBV0EsU0FBU0YsUUFBUSxPQUFPO0lBQ3JDO0lBQ0EsT0FBT0csbUJBQW9CRDtBQUM3QjtBQUVBNUMscUNBQXFDOEMsR0FBRSxTQUFTQyxNQUFNLEVBQUVDLEdBQUcsRUFBRUMsVUFBVSxFQUFFQyxXQUFXO0lBQ2xGLElBQUlDLGdCQUFlLElBQUksQ0FBQ0MscUJBQXFCTCxRQUFRQyxLQUFLQztJQUMxRCxPQUFPLElBQUksQ0FBQ0ksaUJBQWtCRixlQUFlRDtBQUMvQztBQUVBbEQscUNBQXFDc0QsR0FBRSxTQUFTTixHQUFHO0lBQ2pELElBQUlPLFlBQVcxRCxJQUFJMkQsTUFBTVIsS0FBSztJQUM3QixJQUFJUyxPQUFNO0lBQ1YsSUFBSUYsVUFBVUUsTUFBTztRQUNuQixJQUFJLFVBQVdDLFlBQVksV0FBV0gsVUFBVUUsUUFBUSxRQUNuREYsVUFBVUcsWUFBWSxZQUFZSCxVQUFVRSxRQUFRLE9BQVM7WUFDNURBLE9BQU0sTUFBTUYsVUFBVUU7UUFDeEI7SUFDTjtJQUVELElBQUksQ0FBQ0YsVUFBVUksWUFBYUosVUFBVUksWUFBWSxJQUFLSixVQUFVSSxXQUFVO0lBRTNFLE9BQU9KLFVBQVVHLFdBQVcsT0FBT0gsVUFBVUssV0FBV0gsT0FBT0YsVUFBVUk7QUFDM0U7QUFFQSxpREFBaUQ7QUFDakQzRCx3REFBd0Q2RCxHQUFFLFNBQVNDLFNBQVM7SUFDMUUsSUFBSUMsSUFBSUQsVUFBVUUsTUFBTTtJQUN4QixJQUFJRCxLQUFPQSxDQUFDLENBQUMsRUFBRSxLQUFLLFVBQWE7UUFDL0IsT0FBTztJQUNULE9BQ0s7UUFDSCxPQUFPO0lBQ1Q7QUFDRjtBQUVBLCtDQUErQztBQUMvQy9ELGtEQUFrRGlFLEdBQUUsU0FBU0MsaUJBQWlCO0lBQzVFLElBQUlDLGFBQVc7SUFDZixJQUFJLElBQUksQ0FBQ3hELFNBQVU7UUFDakJ3RCxjQUFjLFlBQVksSUFBSSxDQUFDcEMsU0FBUztJQUMxQztJQUVBLElBQUssSUFBSXFDLElBQUcsR0FBSUEsSUFBSUYsa0JBQWtCRyxRQUFRRCxJQUFLO1FBQ2hELG1HQUFtRztRQUNuRyxpREFBaUQ7UUFDakQsSUFBSSxJQUFJLENBQUNQLGlDQUFpQ0ssaUJBQWlCLENBQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUk7WUFDcEVELGNBQWEsS0FBSyxJQUFJLENBQUNuRCxZQUFZa0QsaUJBQWlCLENBQUNFLEVBQUUsQ0FBQyxFQUFFLElBQUUsT0FBTyxJQUFJLENBQUNwRCxZQUFZa0QsaUJBQWlCLENBQUNFLEVBQUUsQ0FBQyxFQUFFLElBQUUsTUFBTSxJQUFJLENBQUN6QztRQUN6SDtJQUNIO0lBRUF3QyxhQUFZQSxXQUFXRyxVQUFVLEdBQUdILFdBQVdFLFNBQU8sSUFBSSxDQUFDMUMseUJBQXlCMEM7SUFDcEYsT0FBT0Y7QUFDVDtBQUVBLDhFQUE4RTtBQUM5RSwyQkFBMkI7QUFDM0JuRSxpREFBaUR1RSxHQUFFLFNBQVNDLGFBQWE7SUFDdkUsSUFBSUMsaUJBQWdCLEVBQUU7SUFDdEIsSUFBSSxJQUFJQyxPQUFPRixjQUFnQjtRQUM3QixJQUFJQSxjQUFjRyxlQUFlRCxNQUFNO1lBQ3BDLElBQUlFLFFBQU9KLGFBQWEsQ0FBQ0UsSUFBSTtZQUM3QixJQUFJRyxNQUFNQyxRQUFRRixRQUFTO2dCQUN6QixJQUFJLElBQUlSLElBQUUsR0FBRUEsSUFBRVEsTUFBTVAsUUFBT0QsSUFBSztvQkFDOUJLLGNBQWMsQ0FBQ0EsZUFBZUosT0FBTyxHQUFFO3dCQUFDSzt3QkFBS0UsS0FBSyxDQUFDUixFQUFFO3FCQUFDO2dCQUN4RDtZQUNGLE9BQ0s7Z0JBQ0hLLGNBQWMsQ0FBQ0EsZUFBZUosT0FBTyxHQUFFO29CQUFDSztvQkFBS0U7aUJBQU07WUFDckQ7UUFDSDtJQUNGO0lBQ0EsT0FBT0g7QUFDVDtBQUVBLHdFQUF3RTtBQUN4RXpFLDBDQUEwQytFLEdBQUUsU0FBU04sY0FBYztJQUNqRSw0QkFBNEI7SUFDNUJBLGVBQWVPLEtBQUssU0FBU0MsQ0FBQyxFQUFDQyxDQUFDO1FBQzVCLElBQUtELENBQUMsQ0FBQyxFQUFFLElBQUdDLENBQUMsQ0FBQyxFQUFFLEVBQUk7WUFDbEIsT0FBT0QsQ0FBQyxDQUFDLEVBQUUsR0FBR0MsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLElBQUk7UUFDNUIsT0FDSyxPQUFPRCxDQUFDLENBQUMsRUFBRSxHQUFHQyxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsSUFBSTtJQUNuQztJQUVBLE9BQU9UO0FBQ1Q7QUFFQXpFLCtDQUErQ21GLEdBQUUsU0FBU0MsSUFBSTtJQUM1RCxJQUFJWCxpQkFBZ0IsSUFBSSxDQUFDRiwwQkFBMEJhO0lBQ25ELGtDQUFrQztJQUNsQyxJQUFJLElBQUloQixJQUFFLEdBQUVBLElBQUVLLGVBQWVKLFFBQU9ELElBQUs7UUFDdkNLLGNBQWMsQ0FBQ0wsRUFBRSxDQUFDLEVBQUUsR0FBRSxJQUFJLENBQUNwRCxZQUFheUQsY0FBYyxDQUFDTCxFQUFFLENBQUMsRUFBRTtRQUM1REssY0FBYyxDQUFDTCxFQUFFLENBQUMsRUFBRSxHQUFFLElBQUksQ0FBQ3BELFlBQWF5RCxjQUFjLENBQUNMLEVBQUUsQ0FBQyxFQUFFO0lBQzlEO0lBRUEsK0JBQStCO0lBQy9CSyxpQkFBZ0IsSUFBSSxDQUFDTSxtQkFBb0JOO0lBRXpDLCtDQUErQztJQUMvQyxJQUFJVyxPQUFNO0lBQ1YsSUFBSSxJQUFJaEIsSUFBRSxHQUFFQSxJQUFFSyxlQUFlSixRQUFPRCxJQUFLO1FBQ3JDZ0IsUUFBT1gsY0FBYyxDQUFDTCxFQUFFLENBQUMsRUFBRTtRQUMzQmdCLFFBQU87UUFDUEEsUUFBT1gsY0FBYyxDQUFDTCxFQUFFLENBQUMsRUFBRTtRQUMzQixJQUFJQSxJQUFJSyxlQUFlSixTQUFPLEdBQUllLFFBQU87SUFDN0M7SUFDQSxPQUFPQTtBQUNUO0FBRUFwRiw0Q0FBNENvRCxHQUFFLFNBQVNMLE1BQU0sRUFBRUMsR0FBRyxFQUFFQyxVQUFVO0lBQzVFRCxNQUFLLElBQUksQ0FBQ2hDLFlBQWEsSUFBSSxDQUFDc0MsY0FBY047SUFDMUNDLGFBQVksSUFBSSxDQUFDakMsWUFBYWlDO0lBQzlCLE9BQU9GLE9BQU9zQyxnQkFBZ0IsTUFBTXJDLE1BQU0sTUFBTUM7QUFDbEQ7QUFFQWpELHdDQUF3Q3FELEdBQUUsU0FBU0YsYUFBYSxFQUFFRCxXQUFXO0lBQzFFLElBQUlBLGdCQUFnQi9CLFdBQVksSUFBSStCLGNBQWE7U0FDNUNBLGNBQWEsSUFBSSxDQUFDbEMsWUFBYWtDO0lBQ3BDLG9DQUFvQztJQUNwQyxJQUFJd0IsTUFBSyxJQUFJLENBQUMzRCxrQkFBa0IsTUFBTW1DO0lBRXRDLElBQUlvQyxPQUFNO0lBQ1YsSUFBSSxJQUFJLENBQUNoRSxvQkFBb0IsYUFBYztRQUN6Q2dFLE9BQU1aO0lBQ1IsT0FDSyxJQUFJLElBQUksQ0FBQ3BELG9CQUFvQixZQUFZO1FBQzVDb0QsTUFBTSxJQUFJLENBQUN6RCxlQUFlO1FBQzFCcUUsT0FBTTlGLE9BQU8rRixXQUFXLFlBQVlDLE9BQU9yQyxlQUFlc0MsS0FBS2YsS0FBSztJQUN0RSxPQUNLO1FBQ0QsSUFBSWxGLE9BQU9rRyxNQUFPO1lBQ2hCSixPQUFPOUYsT0FBT21HLFdBQVcsUUFBUWpCLEtBQUtjLE9BQU9yQyxlQUFleUMsT0FBTztRQUNyRSxPQUNLO1lBQ0hOLE9BQU01RixLQUFLbUcsU0FBU25CLEtBQUt2QjtRQUMzQjtJQUNKO0lBQ0EsT0FBT21DO0FBQ1Y7QUFDQXRGLG1DQUFtQzhGLEdBQUU7SUFBQztJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQzVFO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFDcEQ7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUNwRDtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtJQUFJO0lBQ3BEO0lBQUk7SUFBSTtJQUFJO0lBQUk7SUFBSTtDQUFJO0FBRXRDOUYsaUNBQWlDK0YsR0FBRSxTQUFTdEYsU0FBUztJQUNsRCxJQUFJK0IsU0FBUyxFQUFFO0lBQ2YsSUFBSXdELFFBQU8sSUFBSSxDQUFDRjtJQUNoQixJQUFJRztJQUNKLElBQUlDLHFCQUFvQkYsTUFBTTNCO0lBRTlCLElBQUssSUFBSUQsSUFBSSxHQUFHQSxJQUFJM0QsV0FBVzJELElBQUs7UUFDaEM2QixXQUFVOUQsS0FBS0MsTUFBTUQsS0FBS2dFLFdBQVdEO1FBQ3JDMUQsTUFBTSxDQUFDNEIsRUFBRSxHQUFHNEIsS0FBSyxDQUFDQyxTQUFTO0lBQy9CO0lBQ0EsT0FBT3pELE9BQU80RCxLQUFLO0FBQ3RCO0FBRUFwRyxxQ0FBcUNxRyxHQUFFLFNBQVU1QyxJQUFJLEVBQUVHLFFBQVEsRUFBRWIsTUFBTSxFQUFFdUQsSUFBSSxFQUFFQyxPQUFPLEVBQUVDLFVBQVU7SUFDaEcsSUFBSUMsVUFBVTtRQUNaQyxNQUFNOUM7UUFDTkgsTUFBTUE7UUFDTjZDLE1BQU1BO1FBQ052RCxRQUFRQTtRQUNSd0QsU0FBU0E7SUFDWDtJQUNBLElBQUlJO0lBQ0osSUFBSUgsWUFBYTtRQUNmRyxZQUFXL0c7SUFDYixPQUFPO1FBQ0wrRyxZQUFXaEg7SUFDYjtJQUNBLE9BQU9nSCxVQUFVQyxRQUFRSDtBQUMzQjtBQUVBekcsMENBQTBDNkcsR0FBRSxTQUFVQyxXQUFXLEVBQUVDLGtCQUFrQixFQUFFaEUsTUFBTSxFQUFFQyxHQUFHLEVBQUVnRSxZQUFZO0lBQzlHLElBQUlDLGtCQUFpQjtRQUNqQixtQkFBMEIsSUFBSSxDQUFDL0U7UUFDL0IsZUFBMEIsSUFBSSxDQUFDNkQsVUFBVSxJQUFJLENBQUN4RTtRQUM5QyxpQkFBMEIsSUFBSSxDQUFDTDtRQUMvQiwwQkFBMEIsSUFBSSxDQUFDSTtRQUMvQixzQkFBMEIsSUFBSSxDQUFDUjtJQUNuQztJQUVBLElBQUlnRyxhQUFjO1FBQ2hCRyxlQUFlLENBQUMsY0FBYyxHQUFFSDtJQUNsQztJQUVBLElBQUlJO0lBQ0osSUFBSSxJQUFJLENBQUN2RyxTQUFVO1FBQ2pCdUcsTUFBTSxJQUFJLENBQUNwRSxjQUFlLE9BQVEsSUFBSSxDQUFDZCxvQkFBcUIsSUFBSSxDQUFDbUQsd0JBQXdCOEIsa0JBQWtCRjtJQUM3RyxPQUNLO1FBQ0gsSUFBSUMsY0FBZTtZQUNqQixJQUFLLElBQUl0QyxPQUFPc0MsYUFBZTtnQkFDN0IsSUFBSUEsYUFBYXJDLGVBQWVELE1BQU11QyxlQUFlLENBQUN2QyxJQUFJLEdBQUVzQyxZQUFZLENBQUN0QyxJQUFJO1lBQy9FO1FBQ0Y7UUFDQSxJQUFJbkIsWUFBVzFELElBQUkyRCxNQUFPUixLQUFLO1FBRS9CLElBQUlPLFVBQVU0RCxPQUFRO1lBQ3BCLElBQUlDO1lBQ0osSUFBSUMsa0JBQWlCdkgsWUFBWTBELE1BQU1ELFVBQVU0RDtZQUNqRCxJQUFJLElBQUl6QyxPQUFPMkMsZ0JBQWtCO2dCQUMvQixJQUFJekMsUUFBT3lDLGVBQWUsQ0FBQzNDLElBQUk7Z0JBQzdCLElBQUksT0FBT0UsU0FBUyxVQUFVO29CQUM1QiwwQ0FBMEM7b0JBQzFDLElBQUl3QyxRQUFReEMsTUFBTTt3QkFDaEJxQyxlQUFlLENBQUN2QyxNQUFNLE1BQU0wQyxPQUFPLElBQUksR0FBR3hDLEtBQUssQ0FBQ3dDLEtBQUs7b0JBQ3ZEO2dCQUNGLE9BQU87b0JBQ0xILGVBQWUsQ0FBQ3ZDLElBQUksR0FBRUU7Z0JBQ3hCO1lBQ0Y7UUFDSjtRQUVBc0MsTUFBTSxJQUFJLENBQUNwRSxjQUFlQyxRQUFTQyxLQUFNLElBQUksQ0FBQ21DLHdCQUF3QjhCLGtCQUFrQkY7SUFDMUY7SUFFQSxJQUFJN0Msb0JBQW1CLElBQUksQ0FBQ2EsbUJBQW9CLElBQUksQ0FBQ1IsMEJBQTBCMEM7SUFDL0UvQyxpQkFBaUIsQ0FBQ0Esa0JBQWtCRyxPQUFPLEdBQUU7UUFBQztRQUFtQjZDO0tBQUk7SUFDckUsT0FBT2hEO0FBQ1Q7QUFFQWxFLDZDQUE2Q3NILEdBQUUsU0FBVVIsV0FBVyxFQUFFQyxrQkFBa0IsRUFBRWhFLE1BQU0sRUFBRUMsR0FBRyxFQUFFZ0UsWUFBWSxFQUFFTyxTQUFTLEVBQUVDLGlCQUFpQixFQUFHQyxRQUFRO0lBQzFKLElBQUl2RCxvQkFBbUIsSUFBSSxDQUFDMkMsbUJBQW1CQyxhQUFhQyxvQkFBb0JoRSxRQUFRQyxLQUFLZ0U7SUFFN0YsSUFBSSxDQUFDUSxtQkFBb0I7UUFDdkJBLG9CQUFtQjtJQUNyQjtJQUNBLElBQUlqRSxZQUFXMUQsSUFBSTJELE1BQU9SLEtBQUs7SUFDL0IsSUFBSU8sVUFBVUcsWUFBWSxXQUFXLENBQUNILFVBQVVFLE1BQU9GLFVBQVVFLE9BQU07SUFDdkUsSUFBSUYsVUFBVUcsWUFBWSxZQUFZLENBQUNILFVBQVVFLE1BQU9GLFVBQVVFLE9BQU07SUFFeEUsSUFBSThDLFVBQVMsQ0FBQztJQUNkLElBQUltQixnQkFBZ0IsSUFBSSxDQUFDekQsMkJBQTJCQztJQUNwRCxJQUFLLElBQUksQ0FBQ3ZELFNBQVU7UUFDbEI0RixPQUFPLENBQUMscUNBQXFDLEdBQUVtQjtJQUNqRCxPQUNLO1FBQ0huQixPQUFPLENBQUMsZ0JBQWdCLEdBQUVtQjtJQUM1QjtJQUVBbkIsT0FBTyxDQUFDLE9BQU8sR0FBR2hELFVBQVVtRDtJQUU1QixJQUFLLElBQUloQyxPQUFPLElBQUksQ0FBQ2xELFNBQVc7UUFDOUIsSUFBSSxJQUFJLENBQUNBLFNBQVNtRCxlQUFlRCxNQUFNO1lBQ3JDNkIsT0FBTyxDQUFDN0IsSUFBSSxHQUFFLElBQUksQ0FBQ2xELFFBQVEsQ0FBQ2tELElBQUk7UUFDbEM7SUFDRjtJQUVBLHNFQUFzRTtJQUN0RSxJQUFJLElBQUlBLE9BQU9zQyxhQUFjO1FBQzNCLElBQUksSUFBSSxDQUFDbkQsaUNBQWtDYSxNQUFRO1lBQ2pELE9BQU9zQyxZQUFZLENBQUN0QyxJQUFJO1FBQzFCO0lBQ0Y7SUFFQSxJQUFJLENBQUMzQixVQUFVLFVBQVVBLFVBQVUsS0FBSSxLQUFTd0UsYUFBYSxRQUFRUCxnQkFBZ0IsTUFBUTtRQUMzRix3RkFBd0Y7UUFDeEZPLFlBQVd6SCxZQUFZNkgsVUFBVVgsY0FDYnRFLFFBQVEsT0FBTyxPQUNmQSxRQUFRLE9BQU8sT0FDZkEsUUFBUSxPQUFPLE9BQ2ZBLFFBQVEsT0FBTyxPQUNmQSxRQUFRLE9BQU87SUFDckM7SUFFQSxJQUFJNkUsV0FBWTtRQUNaLElBQUtLLE9BQU9DLFNBQVNOLFlBQWE7WUFDOUJoQixPQUFPLENBQUMsaUJBQWlCLEdBQUVnQixVQUFVbEQ7UUFDekMsT0FBTztZQUNIa0MsT0FBTyxDQUFDLGlCQUFpQixHQUFFcUIsT0FBT0UsV0FBV1A7UUFDakQ7SUFDSixPQUFPO1FBQ0hoQixPQUFPLENBQUMsaUJBQWlCLEdBQUU7SUFDL0I7SUFFQUEsT0FBTyxDQUFDLGVBQWUsR0FBRWlCO0lBRXpCLElBQUlsQjtJQUNKLElBQUksQ0FBQy9DLFVBQVVJLFlBQWFKLFVBQVVJLFlBQVksSUFBS0osVUFBVUksV0FBVTtJQUMzRSxJQUFJSixVQUFVNEQsT0FBUWIsT0FBTS9DLFVBQVVJLFdBQVcsTUFBS0osVUFBVTREO1NBQzNEYixPQUFNL0MsVUFBVUk7SUFFckIsSUFBSWlEO0lBQ0osSUFBSXJELFVBQVVHLFlBQVksVUFBVztRQUNuQ2tELFVBQVMsSUFBSSxDQUFDUCxjQUFjOUMsVUFBVUUsTUFBTUYsVUFBVUssVUFBVWIsUUFBUXVELE1BQU1DLFNBQVM7SUFDekYsT0FDSztRQUNISyxVQUFTLElBQUksQ0FBQ1AsY0FBYzlDLFVBQVVFLE1BQU1GLFVBQVVLLFVBQVViLFFBQVF1RCxNQUFNQztJQUNoRjtJQUVBLElBQUl3QixnQkFBZ0IsSUFBSSxDQUFDdEc7SUFDekIsSUFBSWdHLFVBQVc7UUFDYixJQUFJTyxPQUFLO1FBQ1QsSUFBSUMsT0FBTSxJQUFJO1FBRWQsaUdBQWlHO1FBQ2pHLHdCQUF3QjtRQUN4QixJQUFJQyxrQkFBaUJuSSxXQUFXb0ksbUJBQW9CNUUsVUFBVUs7UUFDOUQsSUFBSXdFLGlCQUFnQjtRQUNwQixJQUFJQyxrQkFBa0IsU0FBVUMsUUFBUTtZQUN0QyxJQUFHLENBQUNGLGdCQUFnQjtnQkFDbEJBLGlCQUFnQjtnQkFDaEIsSUFBS0UsU0FBU0MsY0FBYyxPQUFPRCxTQUFTQyxjQUFjLEtBQU07b0JBQzlEZCxTQUFTLE1BQU1PLE1BQU1NO2dCQUN2QixPQUFPO29CQUNMLHdEQUF3RDtvQkFDeEQsSUFBRyxDQUFDQSxTQUFTQyxjQUFjLE9BQU9ELFNBQVNDLGNBQWMsR0FBRSxLQUFNUixjQUFjUyxtQkFBbUJGLFNBQVMvQixXQUFXK0IsU0FBUy9CLFFBQVFrQyxVQUFVO3dCQUMvSVIsS0FBS1gsc0JBQXVCUixhQUFhQyxvQkFBb0JoRSxRQUFRdUYsU0FBUy9CLFFBQVFrQyxVQUFVekIsY0FBY08sV0FBV0MsbUJBQW9CQztvQkFDL0ksT0FDSzt3QkFDSEEsU0FBUzs0QkFBRWMsWUFBWUQsU0FBU0M7NEJBQVlQLE1BQU1BO3dCQUFLLEdBQUdBLE1BQU1NO29CQUNsRTtnQkFDRjtZQUNGO1FBQ0Y7UUFFQTFCLFFBQVE4QixHQUFHLFlBQVksU0FBVUosUUFBUTtZQUN2Q0EsU0FBU0ssWUFBWTtZQUNyQkwsU0FBU0ksR0FBRyxRQUFRLFNBQVVFLEtBQUs7Z0JBQ2pDWixRQUFNWTtZQUNSO1lBQ0FOLFNBQVNJLEdBQUcsT0FBTztnQkFDakJMLGdCQUFpQkM7WUFDbkI7WUFDQUEsU0FBU0ksR0FBRyxTQUFTO2dCQUNuQixJQUFJUixpQkFBa0I7b0JBQ3BCRyxnQkFBaUJDO2dCQUNuQjtZQUNGO1FBQ0Y7UUFFQTFCLFFBQVE4QixHQUFHLFNBQVMsU0FBU0csR0FBRztZQUM5QixJQUFHLENBQUNULGdCQUFnQjtnQkFDbEJBLGlCQUFnQjtnQkFDaEJYLFNBQVVvQjtZQUNaO1FBQ0Y7UUFFQSxJQUFJLENBQUM5RixVQUFVLFVBQVVBLFVBQVMsS0FBSSxLQUFNd0UsYUFBYSxRQUFRQSxhQUFhLElBQUs7WUFDakZYLFFBQVFrQyxNQUFNdkI7UUFDaEI7UUFDQVgsUUFBUW1DO0lBQ1YsT0FDSztRQUNILElBQUksQ0FBQ2hHLFVBQVUsVUFBVUEsVUFBUyxLQUFJLEtBQU13RSxhQUFhLFFBQVFBLGFBQWEsSUFBSztZQUNqRlgsUUFBUWtDLE1BQU12QjtRQUNoQjtRQUNBLE9BQU9YO0lBQ1Q7SUFFQTtBQUNGO0FBRUE1Ryx3Q0FBd0NnSixHQUFFLFNBQVN2QyxPQUFPO0lBQ3hELElBQUkvQixLQUNBdUUsZ0JBQWUsQ0FBQyxHQUNoQnRFLGlCQUFnQnVFLE9BQU9qSCxVQUFVMEM7SUFFckMsSUFBS0QsT0FBTyxJQUFJLENBQUNoRCxzQkFBd0I7UUFDdkMsSUFBSSxDQUFDaUQsZUFBZXdFLEtBQUsxQyxTQUFTL0IsTUFBTztZQUN2Q3VFLGFBQWEsQ0FBQ3ZFLElBQUksR0FBRSxJQUFJLENBQUNoRCxxQkFBcUIsQ0FBQ2dELElBQUk7UUFDckQsT0FBTztZQUNMdUUsYUFBYSxDQUFDdkUsSUFBSSxHQUFFK0IsT0FBTyxDQUFDL0IsSUFBSTtRQUNsQztJQUNGO0lBRUEsSUFBSSxDQUFDakQsaUJBQWdCd0g7QUFDdkI7QUFFQWpKLDJDQUEyQ29KLEdBQUUsU0FBU3RDLFdBQVcsRUFBRUMsa0JBQWtCLEVBQUVzQyxjQUFjLEVBQUc1QixRQUFRO0lBQzlHLElBQUk2QixjQUFhLENBQUM7SUFDbEIsSUFBSSxPQUFPRCxrQkFBa0IsWUFBYTtRQUN4QzVCLFdBQVU0QjtJQUNaLE9BQU87UUFDTEMsWUFBWUQsaUJBQWdCQTtJQUM5QjtJQUVDLElBQUksQ0FBQy9CLHNCQUF1QlIsYUFBYUMsb0JBQW9CLElBQUksQ0FBQ3RGLGVBQWU4SCx1QkFBdUIsSUFBSSxDQUFDMUksWUFBWXlJLGFBQWEsTUFBTSxNQUFNLFNBQVNFLEtBQUssRUFBRXhCLElBQUksRUFBRU0sUUFBUTtRQUMxSyxJQUFJa0IsT0FBUS9CLFNBQVMrQjthQUNoQjtZQUNILElBQUlDLFVBQVMzSixZQUFZMEQsTUFBT3dFO1lBQ2hDLElBQUkwQixxQkFBb0JELE9BQU8sQ0FBQyxjQUFjO1lBQzlDLE9BQU9BLE9BQU8sQ0FBQyxjQUFjO1lBQzdCLElBQUlFLDRCQUEyQkYsT0FBTyxDQUFDLHFCQUFxQjtZQUM1RCxPQUFPQSxPQUFPLENBQUMscUJBQXFCO1lBQ3BDaEMsU0FBUyxNQUFNaUMsb0JBQW9CQywyQkFBMkJGO1FBQ2hFO0lBQ047QUFDSDtBQUVBLGFBQWE7QUFDYnpKLDRDQUE0QzRKLEdBQUUsU0FBUzVHLEdBQUcsRUFBRUQsTUFBTSxFQUFFK0QsV0FBVyxFQUFFQyxrQkFBa0IsRUFBRVUsUUFBUTtJQUMzRyxJQUFJLENBQUNILHNCQUF1QlIsYUFBYUMsb0JBQW9CaEUsUUFBUUMsS0FBSyxNQUFNLElBQUksTUFBTXlFO0FBQzVGO0FBRUF6SCxpQ0FBOEI2SixHQUFFLFNBQVM3RyxHQUFHLEVBQUU4RCxXQUFXLEVBQUVDLGtCQUFrQixFQUFFVSxRQUFRO0lBQ3JGLE9BQU8sSUFBSSxDQUFDSCxzQkFBdUJSLGFBQWFDLG9CQUFvQixVQUFVL0QsS0FBSyxNQUFNLElBQUksTUFBTXlFO0FBQ3JHO0FBRUF6SCwyQkFBMkI4SixHQUFFLFNBQVM5RyxHQUFHLEVBQUU4RCxXQUFXLEVBQUVDLGtCQUFrQixFQUFFVSxRQUFRO0lBQ2xGLE9BQU8sSUFBSSxDQUFDSCxzQkFBdUJSLGFBQWFDLG9CQUFvQixPQUFPL0QsS0FBSyxNQUFNLElBQUksTUFBTXlFO0FBQ2xHO0FBRUF6SCxrQ0FBa0MrSixHQUFFLFNBQVNoSCxNQUFNLEVBQUVDLEdBQUcsRUFBRThELFdBQVcsRUFBRUMsa0JBQWtCLEVBQUVRLFNBQVMsRUFBRUMsaUJBQWlCLEVBQUVDLFFBQVE7SUFDL0gsSUFBSVQsZUFBYztJQUNsQixJQUFJLE9BQU9RLHFCQUFxQixZQUFhO1FBQzNDQyxXQUFVRDtRQUNWQSxvQkFBbUI7SUFDckI7SUFDQSxJQUFLLE9BQU9ELGFBQWEsWUFBWSxDQUFDSyxPQUFPQyxTQUFTTixZQUFhO1FBQ2pFQyxvQkFBbUI7UUFDbkJSLGVBQWNPO1FBQ2RBLFlBQVc7SUFDYjtJQUNBLE9BQU8sSUFBSSxDQUFDRCxzQkFBdUJSLGFBQWFDLG9CQUFvQmhFLFFBQVFDLEtBQUtnRSxjQUFjTyxXQUFXQyxtQkFBbUJDO0FBQy9IO0FBR0F6SCwyQkFBMkJnSyxHQUFFLFNBQVNoSCxHQUFHLEVBQUU4RCxXQUFXLEVBQUVDLGtCQUFrQixFQUFFUSxTQUFTLEVBQUVDLGlCQUFpQixFQUFFQyxRQUFRO0lBQ2hILE9BQU8sSUFBSSxDQUFDc0MsV0FBVyxPQUFPL0csS0FBSzhELGFBQWFDLG9CQUFvQlEsV0FBV0MsbUJBQW1CQztBQUNwRztBQUVBekgsNEJBQTRCaUssR0FBRSxTQUFTakgsR0FBRyxFQUFFOEQsV0FBVyxFQUFFQyxrQkFBa0IsRUFBRVEsU0FBUyxFQUFFQyxpQkFBaUIsRUFBRUMsUUFBUTtJQUNqSCxPQUFPLElBQUksQ0FBQ3NDLFdBQVcsUUFBUS9HLEtBQUs4RCxhQUFhQyxvQkFBb0JRLFdBQVdDLG1CQUFtQkM7QUFDckc7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQW1CRSxHQUNGekgsNENBQTRDa0ssR0FBRSxTQUFVWixXQUFXLEVBQUU3QixRQUFRO0lBQzFFLElBQUksT0FBTzZCLGVBQWUsWUFBWTtRQUNwQzdCLFdBQVc2QjtRQUNYQSxjQUFjLENBQUM7SUFDakI7SUFDRCw2QkFBNkI7SUFDN0IsSUFBSSxJQUFJLENBQUNsSSxxQkFBc0I7UUFDN0JrSSxXQUFXLENBQUMsaUJBQWlCLEdBQUUsSUFBSSxDQUFDbEk7SUFDdEM7SUFDQSxJQUFJLENBQUNrRyxzQkFBdUIsTUFBTSxNQUFNLElBQUksQ0FBQzdGLGVBQWUwSSx3QkFBd0IsSUFBSSxDQUFDdkosYUFBYTBJLGFBQWEsTUFBTSxNQUFNLFNBQVNFLEtBQUssRUFBRXhCLElBQUksRUFBRU0sUUFBUTtRQUMzSixJQUFJa0IsT0FBUS9CLFNBQVMrQjthQUNoQjtZQUNILElBQUlDLFVBQVMzSixZQUFZMEQsTUFBTXdFO1lBRS9CLElBQUlsQixjQUFhMkMsT0FBTyxDQUFDLGNBQWM7WUFDdkMsSUFBSTFDLHFCQUFvQjBDLE9BQU8sQ0FBQyxxQkFBcUI7WUFDckQsT0FBT0EsT0FBTyxDQUFDLGNBQWM7WUFDN0IsT0FBT0EsT0FBTyxDQUFDLHFCQUFxQjtZQUNwQ2hDLFNBQVMsTUFBTVgsYUFBYUMsb0JBQXFCMEM7UUFDbkQ7SUFDRjtBQUNGO0FBRUF6SiwrQkFBK0JvSyxHQUFFLFNBQVNwSCxHQUFHLEVBQUU4RCxXQUFXLEVBQUVDLGtCQUFrQixFQUFFaEUsTUFBTTtJQUVwRixJQUFJQSxXQUFXNUIsV0FBWTtRQUN6QixJQUFJNEIsU0FBUTtJQUNkO0lBRUEsSUFBSW1CLG9CQUFtQixJQUFJLENBQUMyQyxtQkFBbUJDLGFBQWFDLG9CQUFvQmhFLFFBQVFDLEtBQUssQ0FBQztJQUM5RixJQUFJTyxZQUFXMUQsSUFBSTJELE1BQU9SLEtBQUs7SUFFL0IsSUFBSW1FLFFBQU07SUFDVixJQUFLLElBQUkvQyxJQUFHLEdBQUlBLElBQUlGLGtCQUFrQkcsUUFBUUQsSUFBSztRQUNqRCtDLFNBQVFqRCxpQkFBaUIsQ0FBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBQyxNQUFLLElBQUksQ0FBQ3BELFlBQVlrRCxpQkFBaUIsQ0FBQ0UsRUFBRSxDQUFDLEVBQUUsSUFBSTtJQUNuRjtJQUNBK0MsUUFBT0EsTUFBTTdDLFVBQVUsR0FBRzZDLE1BQU05QyxTQUFPO0lBRXZDLE9BQU9kLFVBQVVHLFdBQVcsT0FBTUgsVUFBVW1ELE9BQU9uRCxVQUFVSSxXQUFXLE1BQU13RDtBQUNoRjtBQUVBbkgsa0NBQWtDbUUsR0FBRSxTQUFTbkIsR0FBRyxFQUFFOEQsV0FBVyxFQUFFQyxrQkFBa0IsRUFBRWhFLE1BQU07SUFDdkYsSUFBSUEsV0FBVzVCLFdBQVk7UUFDekIsSUFBSTRCLFNBQVE7SUFDZDtJQUVBLElBQUltQixvQkFBbUIsSUFBSSxDQUFDMkMsbUJBQW1CQyxhQUFhQyxvQkFBb0JoRSxRQUFRQyxLQUFLLENBQUM7SUFDOUYsT0FBTyxJQUFJLENBQUNpQiwyQkFBMkJDO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9vYXV0aC9saWIvb2F1dGguanM/Mzk4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY3J5cHRvPSByZXF1aXJlKCdjcnlwdG8nKSxcbiAgICBzaGExPSByZXF1aXJlKCcuL3NoYTEnKSxcbiAgICBodHRwPSByZXF1aXJlKCdodHRwJyksXG4gICAgaHR0cHM9IHJlcXVpcmUoJ2h0dHBzJyksXG4gICAgVVJMPSByZXF1aXJlKCd1cmwnKSxcbiAgICBxdWVyeXN0cmluZz0gcmVxdWlyZSgncXVlcnlzdHJpbmcnKSxcbiAgICBPQXV0aFV0aWxzPSByZXF1aXJlKCcuL191dGlscycpO1xuXG5leHBvcnRzLk9BdXRoPSBmdW5jdGlvbihyZXF1ZXN0VXJsLCBhY2Nlc3NVcmwsIGNvbnN1bWVyS2V5LCBjb25zdW1lclNlY3JldCwgdmVyc2lvbiwgYXV0aG9yaXplX2NhbGxiYWNrLCBzaWduYXR1cmVNZXRob2QsIG5vbmNlU2l6ZSwgY3VzdG9tSGVhZGVycykge1xuICB0aGlzLl9pc0VjaG8gPSBmYWxzZTtcblxuICB0aGlzLl9yZXF1ZXN0VXJsPSByZXF1ZXN0VXJsO1xuICB0aGlzLl9hY2Nlc3NVcmw9IGFjY2Vzc1VybDtcbiAgdGhpcy5fY29uc3VtZXJLZXk9IGNvbnN1bWVyS2V5O1xuICB0aGlzLl9jb25zdW1lclNlY3JldD0gdGhpcy5fZW5jb2RlRGF0YSggY29uc3VtZXJTZWNyZXQgKTtcbiAgaWYgKHNpZ25hdHVyZU1ldGhvZCA9PSBcIlJTQS1TSEExXCIpIHtcbiAgICB0aGlzLl9wcml2YXRlS2V5ID0gY29uc3VtZXJTZWNyZXQ7XG4gIH1cbiAgdGhpcy5fdmVyc2lvbj0gdmVyc2lvbjtcbiAgaWYoIGF1dGhvcml6ZV9jYWxsYmFjayA9PT0gdW5kZWZpbmVkICkge1xuICAgIHRoaXMuX2F1dGhvcml6ZV9jYWxsYmFjaz0gXCJvb2JcIjtcbiAgfVxuICBlbHNlIHtcbiAgICB0aGlzLl9hdXRob3JpemVfY2FsbGJhY2s9IGF1dGhvcml6ZV9jYWxsYmFjaztcbiAgfVxuXG4gIGlmKCBzaWduYXR1cmVNZXRob2QgIT0gXCJQTEFJTlRFWFRcIiAmJiBzaWduYXR1cmVNZXRob2QgIT0gXCJITUFDLVNIQTFcIiAmJiBzaWduYXR1cmVNZXRob2QgIT0gXCJSU0EtU0hBMVwiKVxuICAgIHRocm93IG5ldyBFcnJvcihcIlVuLXN1cHBvcnRlZCBzaWduYXR1cmUgbWV0aG9kOiBcIiArIHNpZ25hdHVyZU1ldGhvZCApXG4gIHRoaXMuX3NpZ25hdHVyZU1ldGhvZD0gc2lnbmF0dXJlTWV0aG9kO1xuICB0aGlzLl9ub25jZVNpemU9IG5vbmNlU2l6ZSB8fCAzMjtcbiAgdGhpcy5faGVhZGVycz0gY3VzdG9tSGVhZGVycyB8fCB7XCJBY2NlcHRcIiA6IFwiKi8qXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiQ29ubmVjdGlvblwiIDogXCJjbG9zZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlVzZXItQWdlbnRcIiA6IFwiTm9kZSBhdXRoZW50aWNhdGlvblwifVxuICB0aGlzLl9jbGllbnRPcHRpb25zPSB0aGlzLl9kZWZhdWx0Q2xpZW50T3B0aW9ucz0ge1wicmVxdWVzdFRva2VuSHR0cE1ldGhvZFwiOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImFjY2Vzc1Rva2VuSHR0cE1ldGhvZFwiOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImZvbGxvd1JlZGlyZWN0c1wiOiB0cnVlfTtcbiAgdGhpcy5fb2F1dGhQYXJhbWV0ZXJTZXBlcmF0b3IgPSBcIixcIjtcbn07XG5cbmV4cG9ydHMuT0F1dGhFY2hvPSBmdW5jdGlvbihyZWFsbSwgdmVyaWZ5X2NyZWRlbnRpYWxzLCBjb25zdW1lcktleSwgY29uc3VtZXJTZWNyZXQsIHZlcnNpb24sIHNpZ25hdHVyZU1ldGhvZCwgbm9uY2VTaXplLCBjdXN0b21IZWFkZXJzKSB7XG4gIHRoaXMuX2lzRWNobyA9IHRydWU7XG5cbiAgdGhpcy5fcmVhbG09IHJlYWxtO1xuICB0aGlzLl92ZXJpZnlDcmVkZW50aWFscyA9IHZlcmlmeV9jcmVkZW50aWFscztcbiAgdGhpcy5fY29uc3VtZXJLZXk9IGNvbnN1bWVyS2V5O1xuICB0aGlzLl9jb25zdW1lclNlY3JldD0gdGhpcy5fZW5jb2RlRGF0YSggY29uc3VtZXJTZWNyZXQgKTtcbiAgaWYgKHNpZ25hdHVyZU1ldGhvZCA9PSBcIlJTQS1TSEExXCIpIHtcbiAgICB0aGlzLl9wcml2YXRlS2V5ID0gY29uc3VtZXJTZWNyZXQ7XG4gIH1cbiAgdGhpcy5fdmVyc2lvbj0gdmVyc2lvbjtcblxuICBpZiggc2lnbmF0dXJlTWV0aG9kICE9IFwiUExBSU5URVhUXCIgJiYgc2lnbmF0dXJlTWV0aG9kICE9IFwiSE1BQy1TSEExXCIgJiYgc2lnbmF0dXJlTWV0aG9kICE9IFwiUlNBLVNIQTFcIilcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbi1zdXBwb3J0ZWQgc2lnbmF0dXJlIG1ldGhvZDogXCIgKyBzaWduYXR1cmVNZXRob2QgKTtcbiAgdGhpcy5fc2lnbmF0dXJlTWV0aG9kPSBzaWduYXR1cmVNZXRob2Q7XG4gIHRoaXMuX25vbmNlU2l6ZT0gbm9uY2VTaXplIHx8IDMyO1xuICB0aGlzLl9oZWFkZXJzPSBjdXN0b21IZWFkZXJzIHx8IHtcIkFjY2VwdFwiIDogXCIqLypcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJDb25uZWN0aW9uXCIgOiBcImNsb3NlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiVXNlci1BZ2VudFwiIDogXCJOb2RlIGF1dGhlbnRpY2F0aW9uXCJ9O1xuICB0aGlzLl9vYXV0aFBhcmFtZXRlclNlcGVyYXRvciA9IFwiLFwiO1xufVxuXG5leHBvcnRzLk9BdXRoRWNoby5wcm90b3R5cGUgPSBleHBvcnRzLk9BdXRoLnByb3RvdHlwZTtcblxuZXhwb3J0cy5PQXV0aC5wcm90b3R5cGUuX2dldFRpbWVzdGFtcD0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBNYXRoLmZsb29yKCAobmV3IERhdGUoKSkuZ2V0VGltZSgpIC8gMTAwMCApO1xufVxuXG5leHBvcnRzLk9BdXRoLnByb3RvdHlwZS5fZW5jb2RlRGF0YT0gZnVuY3Rpb24odG9FbmNvZGUpe1xuIGlmKCB0b0VuY29kZSA9PSBudWxsIHx8IHRvRW5jb2RlID09IFwiXCIgKSByZXR1cm4gXCJcIlxuIGVsc2Uge1xuICAgIHZhciByZXN1bHQ9IGVuY29kZVVSSUNvbXBvbmVudCh0b0VuY29kZSk7XG4gICAgLy8gRml4IHRoZSBtaXNtYXRjaCBiZXR3ZWVuIE9BdXRoJ3MgIFJGQzM5ODYncyBhbmQgSmF2YXNjcmlwdCdzIGJlbGllZnMgaW4gd2hhdCBpcyByaWdodCBhbmQgd3JvbmcgOylcbiAgICByZXR1cm4gcmVzdWx0LnJlcGxhY2UoL1xcIS9nLCBcIiUyMVwiKVxuICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFwnL2csIFwiJTI3XCIpXG4gICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXCgvZywgXCIlMjhcIilcbiAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcKS9nLCBcIiUyOVwiKVxuICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFwqL2csIFwiJTJBXCIpO1xuIH1cbn1cblxuZXhwb3J0cy5PQXV0aC5wcm90b3R5cGUuX2RlY29kZURhdGE9IGZ1bmN0aW9uKHRvRGVjb2RlKSB7XG4gIGlmKCB0b0RlY29kZSAhPSBudWxsICkge1xuICAgIHRvRGVjb2RlID0gdG9EZWNvZGUucmVwbGFjZSgvXFwrL2csIFwiIFwiKTtcbiAgfVxuICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KCB0b0RlY29kZSk7XG59XG5cbmV4cG9ydHMuT0F1dGgucHJvdG90eXBlLl9nZXRTaWduYXR1cmU9IGZ1bmN0aW9uKG1ldGhvZCwgdXJsLCBwYXJhbWV0ZXJzLCB0b2tlblNlY3JldCkge1xuICB2YXIgc2lnbmF0dXJlQmFzZT0gdGhpcy5fY3JlYXRlU2lnbmF0dXJlQmFzZShtZXRob2QsIHVybCwgcGFyYW1ldGVycyk7XG4gIHJldHVybiB0aGlzLl9jcmVhdGVTaWduYXR1cmUoIHNpZ25hdHVyZUJhc2UsIHRva2VuU2VjcmV0ICk7XG59XG5cbmV4cG9ydHMuT0F1dGgucHJvdG90eXBlLl9ub3JtYWxpemVVcmw9IGZ1bmN0aW9uKHVybCkge1xuICB2YXIgcGFyc2VkVXJsPSBVUkwucGFyc2UodXJsLCB0cnVlKVxuICAgdmFyIHBvcnQgPVwiXCI7XG4gICBpZiggcGFyc2VkVXJsLnBvcnQgKSB7XG4gICAgIGlmKCAocGFyc2VkVXJsLnByb3RvY29sID09IFwiaHR0cDpcIiAmJiBwYXJzZWRVcmwucG9ydCAhPSBcIjgwXCIgKSB8fFxuICAgICAgICAgKHBhcnNlZFVybC5wcm90b2NvbCA9PSBcImh0dHBzOlwiICYmIHBhcnNlZFVybC5wb3J0ICE9IFwiNDQzXCIpICkge1xuICAgICAgICAgICBwb3J0PSBcIjpcIiArIHBhcnNlZFVybC5wb3J0O1xuICAgICAgICAgfVxuICAgfVxuXG4gIGlmKCAhcGFyc2VkVXJsLnBhdGhuYW1lICB8fCBwYXJzZWRVcmwucGF0aG5hbWUgPT0gXCJcIiApIHBhcnNlZFVybC5wYXRobmFtZSA9XCIvXCI7XG5cbiAgcmV0dXJuIHBhcnNlZFVybC5wcm90b2NvbCArIFwiLy9cIiArIHBhcnNlZFVybC5ob3N0bmFtZSArIHBvcnQgKyBwYXJzZWRVcmwucGF0aG5hbWU7XG59XG5cbi8vIElzIHRoZSBwYXJhbWV0ZXIgY29uc2lkZXJlZCBhbiBPQXV0aCBwYXJhbWV0ZXJcbmV4cG9ydHMuT0F1dGgucHJvdG90eXBlLl9pc1BhcmFtZXRlck5hbWVBbk9BdXRoUGFyYW1ldGVyPSBmdW5jdGlvbihwYXJhbWV0ZXIpIHtcbiAgdmFyIG0gPSBwYXJhbWV0ZXIubWF0Y2goJ15vYXV0aF8nKTtcbiAgaWYoIG0gJiYgKCBtWzBdID09PSBcIm9hdXRoX1wiICkgKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgZWxzZSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG4vLyBidWlsZCB0aGUgT0F1dGggcmVxdWVzdCBhdXRob3JpemF0aW9uIGhlYWRlclxuZXhwb3J0cy5PQXV0aC5wcm90b3R5cGUuX2J1aWxkQXV0aG9yaXphdGlvbkhlYWRlcnM9IGZ1bmN0aW9uKG9yZGVyZWRQYXJhbWV0ZXJzKSB7XG4gIHZhciBhdXRoSGVhZGVyPVwiT0F1dGggXCI7XG4gIGlmKCB0aGlzLl9pc0VjaG8gKSB7XG4gICAgYXV0aEhlYWRlciArPSAncmVhbG09XCInICsgdGhpcy5fcmVhbG0gKyAnXCIsJztcbiAgfVxuXG4gIGZvciggdmFyIGk9IDAgOyBpIDwgb3JkZXJlZFBhcmFtZXRlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgLy8gV2hpbHN0IHRoZSBhbGwgdGhlIHBhcmFtZXRlcnMgc2hvdWxkIGJlIGluY2x1ZGVkIHdpdGhpbiB0aGUgc2lnbmF0dXJlLCBvbmx5IHRoZSBvYXV0aF8gYXJndW1lbnRzXG4gICAgIC8vIHNob3VsZCBhcHBlYXIgd2l0aGluIHRoZSBhdXRob3JpemF0aW9uIGhlYWRlci5cbiAgICAgaWYoIHRoaXMuX2lzUGFyYW1ldGVyTmFtZUFuT0F1dGhQYXJhbWV0ZXIob3JkZXJlZFBhcmFtZXRlcnNbaV1bMF0pICkge1xuICAgICAgYXV0aEhlYWRlcis9IFwiXCIgKyB0aGlzLl9lbmNvZGVEYXRhKG9yZGVyZWRQYXJhbWV0ZXJzW2ldWzBdKStcIj1cXFwiXCIrIHRoaXMuX2VuY29kZURhdGEob3JkZXJlZFBhcmFtZXRlcnNbaV1bMV0pK1wiXFxcIlwiKyB0aGlzLl9vYXV0aFBhcmFtZXRlclNlcGVyYXRvcjtcbiAgICAgfVxuICB9XG5cbiAgYXV0aEhlYWRlcj0gYXV0aEhlYWRlci5zdWJzdHJpbmcoMCwgYXV0aEhlYWRlci5sZW5ndGgtdGhpcy5fb2F1dGhQYXJhbWV0ZXJTZXBlcmF0b3IubGVuZ3RoKTtcbiAgcmV0dXJuIGF1dGhIZWFkZXI7XG59XG5cbi8vIFRha2VzIGFuIG9iamVjdCBsaXRlcmFsIHRoYXQgcmVwcmVzZW50cyB0aGUgYXJndW1lbnRzLCBhbmQgcmV0dXJucyBhbiBhcnJheVxuLy8gb2YgYXJndW1lbnQvdmFsdWUgcGFpcnMuXG5leHBvcnRzLk9BdXRoLnByb3RvdHlwZS5fbWFrZUFycmF5T2ZBcmd1bWVudHNIYXNoPSBmdW5jdGlvbihhcmd1bWVudHNIYXNoKSB7XG4gIHZhciBhcmd1bWVudF9wYWlycz0gW107XG4gIGZvcih2YXIga2V5IGluIGFyZ3VtZW50c0hhc2ggKSB7XG4gICAgaWYgKGFyZ3VtZW50c0hhc2guaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgIHZhciB2YWx1ZT0gYXJndW1lbnRzSGFzaFtrZXldO1xuICAgICAgIGlmKCBBcnJheS5pc0FycmF5KHZhbHVlKSApIHtcbiAgICAgICAgIGZvcih2YXIgaT0wO2k8dmFsdWUubGVuZ3RoO2krKykge1xuICAgICAgICAgICBhcmd1bWVudF9wYWlyc1thcmd1bWVudF9wYWlycy5sZW5ndGhdPSBba2V5LCB2YWx1ZVtpXV07XG4gICAgICAgICB9XG4gICAgICAgfVxuICAgICAgIGVsc2Uge1xuICAgICAgICAgYXJndW1lbnRfcGFpcnNbYXJndW1lbnRfcGFpcnMubGVuZ3RoXT0gW2tleSwgdmFsdWVdO1xuICAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIGFyZ3VtZW50X3BhaXJzO1xufVxuXG4vLyBTb3J0cyB0aGUgZW5jb2RlZCBrZXkgdmFsdWUgcGFpcnMgYnkgZW5jb2RlZCBuYW1lLCB0aGVuIGVuY29kZWQgdmFsdWVcbmV4cG9ydHMuT0F1dGgucHJvdG90eXBlLl9zb3J0UmVxdWVzdFBhcmFtcz0gZnVuY3Rpb24oYXJndW1lbnRfcGFpcnMpIHtcbiAgLy8gU29ydCBieSBuYW1lLCB0aGVuIHZhbHVlLlxuICBhcmd1bWVudF9wYWlycy5zb3J0KGZ1bmN0aW9uKGEsYikge1xuICAgICAgaWYgKCBhWzBdPT0gYlswXSApICB7XG4gICAgICAgIHJldHVybiBhWzFdIDwgYlsxXSA/IC0xIDogMTtcbiAgICAgIH1cbiAgICAgIGVsc2UgcmV0dXJuIGFbMF0gPCBiWzBdID8gLTEgOiAxO1xuICB9KTtcblxuICByZXR1cm4gYXJndW1lbnRfcGFpcnM7XG59XG5cbmV4cG9ydHMuT0F1dGgucHJvdG90eXBlLl9ub3JtYWxpc2VSZXF1ZXN0UGFyYW1zPSBmdW5jdGlvbihhcmdzKSB7XG4gIHZhciBhcmd1bWVudF9wYWlycz0gdGhpcy5fbWFrZUFycmF5T2ZBcmd1bWVudHNIYXNoKGFyZ3MpO1xuICAvLyBGaXJzdCBlbmNvZGUgdGhlbSAjMy40LjEuMy4yIC4xXG4gIGZvcih2YXIgaT0wO2k8YXJndW1lbnRfcGFpcnMubGVuZ3RoO2krKykge1xuICAgIGFyZ3VtZW50X3BhaXJzW2ldWzBdPSB0aGlzLl9lbmNvZGVEYXRhKCBhcmd1bWVudF9wYWlyc1tpXVswXSApO1xuICAgIGFyZ3VtZW50X3BhaXJzW2ldWzFdPSB0aGlzLl9lbmNvZGVEYXRhKCBhcmd1bWVudF9wYWlyc1tpXVsxXSApO1xuICB9XG5cbiAgLy8gVGhlbiBzb3J0IHRoZW0gIzMuNC4xLjMuMiAuMlxuICBhcmd1bWVudF9wYWlycz0gdGhpcy5fc29ydFJlcXVlc3RQYXJhbXMoIGFyZ3VtZW50X3BhaXJzICk7XG5cbiAgLy8gVGhlbiBjb25jYXRlbmF0ZSB0b2dldGhlciAjMy40LjEuMy4yIC4zICYgLjRcbiAgdmFyIGFyZ3M9IFwiXCI7XG4gIGZvcih2YXIgaT0wO2k8YXJndW1lbnRfcGFpcnMubGVuZ3RoO2krKykge1xuICAgICAgYXJncys9IGFyZ3VtZW50X3BhaXJzW2ldWzBdO1xuICAgICAgYXJncys9IFwiPVwiXG4gICAgICBhcmdzKz0gYXJndW1lbnRfcGFpcnNbaV1bMV07XG4gICAgICBpZiggaSA8IGFyZ3VtZW50X3BhaXJzLmxlbmd0aC0xICkgYXJncys9IFwiJlwiO1xuICB9XG4gIHJldHVybiBhcmdzO1xufVxuXG5leHBvcnRzLk9BdXRoLnByb3RvdHlwZS5fY3JlYXRlU2lnbmF0dXJlQmFzZT0gZnVuY3Rpb24obWV0aG9kLCB1cmwsIHBhcmFtZXRlcnMpIHtcbiAgdXJsPSB0aGlzLl9lbmNvZGVEYXRhKCB0aGlzLl9ub3JtYWxpemVVcmwodXJsKSApO1xuICBwYXJhbWV0ZXJzPSB0aGlzLl9lbmNvZGVEYXRhKCBwYXJhbWV0ZXJzICk7XG4gIHJldHVybiBtZXRob2QudG9VcHBlckNhc2UoKSArIFwiJlwiICsgdXJsICsgXCImXCIgKyBwYXJhbWV0ZXJzO1xufVxuXG5leHBvcnRzLk9BdXRoLnByb3RvdHlwZS5fY3JlYXRlU2lnbmF0dXJlPSBmdW5jdGlvbihzaWduYXR1cmVCYXNlLCB0b2tlblNlY3JldCkge1xuICAgaWYoIHRva2VuU2VjcmV0ID09PSB1bmRlZmluZWQgKSB2YXIgdG9rZW5TZWNyZXQ9IFwiXCI7XG4gICBlbHNlIHRva2VuU2VjcmV0PSB0aGlzLl9lbmNvZGVEYXRhKCB0b2tlblNlY3JldCApO1xuICAgLy8gY29uc3VtZXJTZWNyZXQgaXMgYWxyZWFkeSBlbmNvZGVkXG4gICB2YXIga2V5PSB0aGlzLl9jb25zdW1lclNlY3JldCArIFwiJlwiICsgdG9rZW5TZWNyZXQ7XG5cbiAgIHZhciBoYXNoPSBcIlwiXG4gICBpZiggdGhpcy5fc2lnbmF0dXJlTWV0aG9kID09IFwiUExBSU5URVhUXCIgKSB7XG4gICAgIGhhc2g9IGtleTtcbiAgIH1cbiAgIGVsc2UgaWYgKHRoaXMuX3NpZ25hdHVyZU1ldGhvZCA9PSBcIlJTQS1TSEExXCIpIHtcbiAgICAga2V5ID0gdGhpcy5fcHJpdmF0ZUtleSB8fCBcIlwiO1xuICAgICBoYXNoPSBjcnlwdG8uY3JlYXRlU2lnbihcIlJTQS1TSEExXCIpLnVwZGF0ZShzaWduYXR1cmVCYXNlKS5zaWduKGtleSwgJ2Jhc2U2NCcpO1xuICAgfVxuICAgZWxzZSB7XG4gICAgICAgaWYoIGNyeXB0by5IbWFjICkge1xuICAgICAgICAgaGFzaCA9IGNyeXB0by5jcmVhdGVIbWFjKFwic2hhMVwiLCBrZXkpLnVwZGF0ZShzaWduYXR1cmVCYXNlKS5kaWdlc3QoXCJiYXNlNjRcIik7XG4gICAgICAgfVxuICAgICAgIGVsc2Uge1xuICAgICAgICAgaGFzaD0gc2hhMS5ITUFDU0hBMShrZXksIHNpZ25hdHVyZUJhc2UpO1xuICAgICAgIH1cbiAgIH1cbiAgIHJldHVybiBoYXNoO1xufVxuZXhwb3J0cy5PQXV0aC5wcm90b3R5cGUuTk9OQ0VfQ0hBUlM9IFsnYScsJ2InLCdjJywnZCcsJ2UnLCdmJywnZycsJ2gnLCdpJywnaicsJ2snLCdsJywnbScsJ24nLFxuICAgICAgICAgICAgICAnbycsJ3AnLCdxJywncicsJ3MnLCd0JywndScsJ3YnLCd3JywneCcsJ3knLCd6JywnQScsJ0InLFxuICAgICAgICAgICAgICAnQycsJ0QnLCdFJywnRicsJ0cnLCdIJywnSScsJ0onLCdLJywnTCcsJ00nLCdOJywnTycsJ1AnLFxuICAgICAgICAgICAgICAnUScsJ1InLCdTJywnVCcsJ1UnLCdWJywnVycsJ1gnLCdZJywnWicsJzAnLCcxJywnMicsJzMnLFxuICAgICAgICAgICAgICAnNCcsJzUnLCc2JywnNycsJzgnLCc5J107XG5cbmV4cG9ydHMuT0F1dGgucHJvdG90eXBlLl9nZXROb25jZT0gZnVuY3Rpb24obm9uY2VTaXplKSB7XG4gICB2YXIgcmVzdWx0ID0gW107XG4gICB2YXIgY2hhcnM9IHRoaXMuTk9OQ0VfQ0hBUlM7XG4gICB2YXIgY2hhcl9wb3M7XG4gICB2YXIgbm9uY2VfY2hhcnNfbGVuZ3RoPSBjaGFycy5sZW5ndGg7XG5cbiAgIGZvciAodmFyIGkgPSAwOyBpIDwgbm9uY2VTaXplOyBpKyspIHtcbiAgICAgICBjaGFyX3Bvcz0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbm9uY2VfY2hhcnNfbGVuZ3RoKTtcbiAgICAgICByZXN1bHRbaV09ICBjaGFyc1tjaGFyX3Bvc107XG4gICB9XG4gICByZXR1cm4gcmVzdWx0LmpvaW4oJycpO1xufVxuXG5leHBvcnRzLk9BdXRoLnByb3RvdHlwZS5fY3JlYXRlQ2xpZW50PSBmdW5jdGlvbiggcG9ydCwgaG9zdG5hbWUsIG1ldGhvZCwgcGF0aCwgaGVhZGVycywgc3NsRW5hYmxlZCApIHtcbiAgdmFyIG9wdGlvbnMgPSB7XG4gICAgaG9zdDogaG9zdG5hbWUsXG4gICAgcG9ydDogcG9ydCxcbiAgICBwYXRoOiBwYXRoLFxuICAgIG1ldGhvZDogbWV0aG9kLFxuICAgIGhlYWRlcnM6IGhlYWRlcnNcbiAgfTtcbiAgdmFyIGh0dHBNb2RlbDtcbiAgaWYoIHNzbEVuYWJsZWQgKSB7XG4gICAgaHR0cE1vZGVsPSBodHRwcztcbiAgfSBlbHNlIHtcbiAgICBodHRwTW9kZWw9IGh0dHA7XG4gIH1cbiAgcmV0dXJuIGh0dHBNb2RlbC5yZXF1ZXN0KG9wdGlvbnMpO1xufVxuXG5leHBvcnRzLk9BdXRoLnByb3RvdHlwZS5fcHJlcGFyZVBhcmFtZXRlcnM9IGZ1bmN0aW9uKCBvYXV0aF90b2tlbiwgb2F1dGhfdG9rZW5fc2VjcmV0LCBtZXRob2QsIHVybCwgZXh0cmFfcGFyYW1zICkge1xuICB2YXIgb2F1dGhQYXJhbWV0ZXJzPSB7XG4gICAgICBcIm9hdXRoX3RpbWVzdGFtcFwiOiAgICAgICAgdGhpcy5fZ2V0VGltZXN0YW1wKCksXG4gICAgICBcIm9hdXRoX25vbmNlXCI6ICAgICAgICAgICAgdGhpcy5fZ2V0Tm9uY2UodGhpcy5fbm9uY2VTaXplKSxcbiAgICAgIFwib2F1dGhfdmVyc2lvblwiOiAgICAgICAgICB0aGlzLl92ZXJzaW9uLFxuICAgICAgXCJvYXV0aF9zaWduYXR1cmVfbWV0aG9kXCI6IHRoaXMuX3NpZ25hdHVyZU1ldGhvZCxcbiAgICAgIFwib2F1dGhfY29uc3VtZXJfa2V5XCI6ICAgICB0aGlzLl9jb25zdW1lcktleVxuICB9O1xuXG4gIGlmKCBvYXV0aF90b2tlbiApIHtcbiAgICBvYXV0aFBhcmFtZXRlcnNbXCJvYXV0aF90b2tlblwiXT0gb2F1dGhfdG9rZW47XG4gIH1cblxuICB2YXIgc2lnO1xuICBpZiggdGhpcy5faXNFY2hvICkge1xuICAgIHNpZyA9IHRoaXMuX2dldFNpZ25hdHVyZSggXCJHRVRcIiwgIHRoaXMuX3ZlcmlmeUNyZWRlbnRpYWxzLCAgdGhpcy5fbm9ybWFsaXNlUmVxdWVzdFBhcmFtcyhvYXV0aFBhcmFtZXRlcnMpLCBvYXV0aF90b2tlbl9zZWNyZXQpO1xuICB9XG4gIGVsc2Uge1xuICAgIGlmKCBleHRyYV9wYXJhbXMgKSB7XG4gICAgICBmb3IoIHZhciBrZXkgaW4gZXh0cmFfcGFyYW1zICkge1xuICAgICAgICBpZiAoZXh0cmFfcGFyYW1zLmhhc093blByb3BlcnR5KGtleSkpIG9hdXRoUGFyYW1ldGVyc1trZXldPSBleHRyYV9wYXJhbXNba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gICAgdmFyIHBhcnNlZFVybD0gVVJMLnBhcnNlKCB1cmwsIGZhbHNlICk7XG5cbiAgICBpZiggcGFyc2VkVXJsLnF1ZXJ5ICkge1xuICAgICAgdmFyIGtleTI7XG4gICAgICB2YXIgZXh0cmFQYXJhbWV0ZXJzPSBxdWVyeXN0cmluZy5wYXJzZShwYXJzZWRVcmwucXVlcnkpO1xuICAgICAgZm9yKHZhciBrZXkgaW4gZXh0cmFQYXJhbWV0ZXJzICkge1xuICAgICAgICB2YXIgdmFsdWU9IGV4dHJhUGFyYW1ldGVyc1trZXldO1xuICAgICAgICAgIGlmKCB0eXBlb2YgdmFsdWUgPT0gXCJvYmplY3RcIiApe1xuICAgICAgICAgICAgLy8gVE9ETzogVGhpcyBwcm9iYWJseSBzaG91bGQgYmUgcmVjdXJzaXZlXG4gICAgICAgICAgICBmb3Ioa2V5MiBpbiB2YWx1ZSl7XG4gICAgICAgICAgICAgIG9hdXRoUGFyYW1ldGVyc1trZXkgKyBcIltcIiArIGtleTIgKyBcIl1cIl0gPSB2YWx1ZVtrZXkyXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgb2F1dGhQYXJhbWV0ZXJzW2tleV09IHZhbHVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNpZyA9IHRoaXMuX2dldFNpZ25hdHVyZSggbWV0aG9kLCAgdXJsLCAgdGhpcy5fbm9ybWFsaXNlUmVxdWVzdFBhcmFtcyhvYXV0aFBhcmFtZXRlcnMpLCBvYXV0aF90b2tlbl9zZWNyZXQpO1xuICB9XG5cbiAgdmFyIG9yZGVyZWRQYXJhbWV0ZXJzPSB0aGlzLl9zb3J0UmVxdWVzdFBhcmFtcyggdGhpcy5fbWFrZUFycmF5T2ZBcmd1bWVudHNIYXNoKG9hdXRoUGFyYW1ldGVycykgKTtcbiAgb3JkZXJlZFBhcmFtZXRlcnNbb3JkZXJlZFBhcmFtZXRlcnMubGVuZ3RoXT0gW1wib2F1dGhfc2lnbmF0dXJlXCIsIHNpZ107XG4gIHJldHVybiBvcmRlcmVkUGFyYW1ldGVycztcbn1cblxuZXhwb3J0cy5PQXV0aC5wcm90b3R5cGUuX3BlcmZvcm1TZWN1cmVSZXF1ZXN0PSBmdW5jdGlvbiggb2F1dGhfdG9rZW4sIG9hdXRoX3Rva2VuX3NlY3JldCwgbWV0aG9kLCB1cmwsIGV4dHJhX3BhcmFtcywgcG9zdF9ib2R5LCBwb3N0X2NvbnRlbnRfdHlwZSwgIGNhbGxiYWNrICkge1xuICB2YXIgb3JkZXJlZFBhcmFtZXRlcnM9IHRoaXMuX3ByZXBhcmVQYXJhbWV0ZXJzKG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQsIG1ldGhvZCwgdXJsLCBleHRyYV9wYXJhbXMpO1xuXG4gIGlmKCAhcG9zdF9jb250ZW50X3R5cGUgKSB7XG4gICAgcG9zdF9jb250ZW50X3R5cGU9IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCI7XG4gIH1cbiAgdmFyIHBhcnNlZFVybD0gVVJMLnBhcnNlKCB1cmwsIGZhbHNlICk7XG4gIGlmKCBwYXJzZWRVcmwucHJvdG9jb2wgPT0gXCJodHRwOlwiICYmICFwYXJzZWRVcmwucG9ydCApIHBhcnNlZFVybC5wb3J0PSA4MDtcbiAgaWYoIHBhcnNlZFVybC5wcm90b2NvbCA9PSBcImh0dHBzOlwiICYmICFwYXJzZWRVcmwucG9ydCApIHBhcnNlZFVybC5wb3J0PSA0NDM7XG5cbiAgdmFyIGhlYWRlcnM9IHt9O1xuICB2YXIgYXV0aG9yaXphdGlvbiA9IHRoaXMuX2J1aWxkQXV0aG9yaXphdGlvbkhlYWRlcnMob3JkZXJlZFBhcmFtZXRlcnMpO1xuICBpZiAoIHRoaXMuX2lzRWNobyApIHtcbiAgICBoZWFkZXJzW1wiWC1WZXJpZnktQ3JlZGVudGlhbHMtQXV0aG9yaXphdGlvblwiXT0gYXV0aG9yaXphdGlvbjtcbiAgfVxuICBlbHNlIHtcbiAgICBoZWFkZXJzW1wiQXV0aG9yaXphdGlvblwiXT0gYXV0aG9yaXphdGlvbjtcbiAgfVxuXG4gIGhlYWRlcnNbXCJIb3N0XCJdID0gcGFyc2VkVXJsLmhvc3RcblxuICBmb3IoIHZhciBrZXkgaW4gdGhpcy5faGVhZGVycyApIHtcbiAgICBpZiAodGhpcy5faGVhZGVycy5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICBoZWFkZXJzW2tleV09IHRoaXMuX2hlYWRlcnNba2V5XTtcbiAgICB9XG4gIH1cblxuICAvLyBGaWx0ZXIgb3V0IGFueSBwYXNzZWQgZXh0cmFfcGFyYW1zIHRoYXQgYXJlIHJlYWxseSB0byBkbyB3aXRoIE9BdXRoXG4gIGZvcih2YXIga2V5IGluIGV4dHJhX3BhcmFtcykge1xuICAgIGlmKCB0aGlzLl9pc1BhcmFtZXRlck5hbWVBbk9BdXRoUGFyYW1ldGVyKCBrZXkgKSApIHtcbiAgICAgIGRlbGV0ZSBleHRyYV9wYXJhbXNba2V5XTtcbiAgICB9XG4gIH1cblxuICBpZiggKG1ldGhvZCA9PSBcIlBPU1RcIiB8fCBtZXRob2QgPT0gXCJQVVRcIikgICYmICggcG9zdF9ib2R5ID09IG51bGwgJiYgZXh0cmFfcGFyYW1zICE9IG51bGwpICkge1xuICAgIC8vIEZpeCB0aGUgbWlzbWF0Y2ggYmV0d2VlbiB0aGUgb3V0cHV0IG9mIHF1ZXJ5c3RyaW5nLnN0cmluZ2lmeSgpIGFuZCB0aGlzLl9lbmNvZGVEYXRhKClcbiAgICBwb3N0X2JvZHk9IHF1ZXJ5c3RyaW5nLnN0cmluZ2lmeShleHRyYV9wYXJhbXMpXG4gICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXCEvZywgXCIlMjFcIilcbiAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcJy9nLCBcIiUyN1wiKVxuICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvXFwoL2csIFwiJTI4XCIpXG4gICAgICAgICAgICAgICAgICAgICAgIC5yZXBsYWNlKC9cXCkvZywgXCIlMjlcIilcbiAgICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL1xcKi9nLCBcIiUyQVwiKTtcbiAgfVxuXG4gIGlmKCBwb3N0X2JvZHkgKSB7XG4gICAgICBpZiAoIEJ1ZmZlci5pc0J1ZmZlcihwb3N0X2JvZHkpICkge1xuICAgICAgICAgIGhlYWRlcnNbXCJDb250ZW50LWxlbmd0aFwiXT0gcG9zdF9ib2R5Lmxlbmd0aDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaGVhZGVyc1tcIkNvbnRlbnQtbGVuZ3RoXCJdPSBCdWZmZXIuYnl0ZUxlbmd0aChwb3N0X2JvZHkpO1xuICAgICAgfVxuICB9IGVsc2Uge1xuICAgICAgaGVhZGVyc1tcIkNvbnRlbnQtbGVuZ3RoXCJdPSAwO1xuICB9XG5cbiAgaGVhZGVyc1tcIkNvbnRlbnQtVHlwZVwiXT0gcG9zdF9jb250ZW50X3R5cGU7XG5cbiAgdmFyIHBhdGg7XG4gIGlmKCAhcGFyc2VkVXJsLnBhdGhuYW1lICB8fCBwYXJzZWRVcmwucGF0aG5hbWUgPT0gXCJcIiApIHBhcnNlZFVybC5wYXRobmFtZSA9XCIvXCI7XG4gIGlmKCBwYXJzZWRVcmwucXVlcnkgKSBwYXRoPSBwYXJzZWRVcmwucGF0aG5hbWUgKyBcIj9cIisgcGFyc2VkVXJsLnF1ZXJ5IDtcbiAgZWxzZSBwYXRoPSBwYXJzZWRVcmwucGF0aG5hbWU7XG5cbiAgdmFyIHJlcXVlc3Q7XG4gIGlmKCBwYXJzZWRVcmwucHJvdG9jb2wgPT0gXCJodHRwczpcIiApIHtcbiAgICByZXF1ZXN0PSB0aGlzLl9jcmVhdGVDbGllbnQocGFyc2VkVXJsLnBvcnQsIHBhcnNlZFVybC5ob3N0bmFtZSwgbWV0aG9kLCBwYXRoLCBoZWFkZXJzLCB0cnVlKTtcbiAgfVxuICBlbHNlIHtcbiAgICByZXF1ZXN0PSB0aGlzLl9jcmVhdGVDbGllbnQocGFyc2VkVXJsLnBvcnQsIHBhcnNlZFVybC5ob3N0bmFtZSwgbWV0aG9kLCBwYXRoLCBoZWFkZXJzKTtcbiAgfVxuXG4gIHZhciBjbGllbnRPcHRpb25zID0gdGhpcy5fY2xpZW50T3B0aW9ucztcbiAgaWYoIGNhbGxiYWNrICkge1xuICAgIHZhciBkYXRhPVwiXCI7XG4gICAgdmFyIHNlbGY9IHRoaXM7XG5cbiAgICAvLyBTb21lIGhvc3RzICpjb3VnaCogZ29vZ2xlIGFwcGVhciB0byBjbG9zZSB0aGUgY29ubmVjdGlvbiBlYXJseSAvIHNlbmQgbm8gY29udGVudC1sZW5ndGggaGVhZGVyXG4gICAgLy8gYWxsb3cgdGhpcyBiZWhhdmlvdXIuXG4gICAgdmFyIGFsbG93RWFybHlDbG9zZT0gT0F1dGhVdGlscy5pc0FuRWFybHlDbG9zZUhvc3QoIHBhcnNlZFVybC5ob3N0bmFtZSApO1xuICAgIHZhciBjYWxsYmFja0NhbGxlZD0gZmFsc2U7XG4gICAgdmFyIHBhc3NCYWNrQ29udHJvbCA9IGZ1bmN0aW9uKCByZXNwb25zZSApIHtcbiAgICAgIGlmKCFjYWxsYmFja0NhbGxlZCkge1xuICAgICAgICBjYWxsYmFja0NhbGxlZD0gdHJ1ZTtcbiAgICAgICAgaWYgKCByZXNwb25zZS5zdGF0dXNDb2RlID49IDIwMCAmJiByZXNwb25zZS5zdGF0dXNDb2RlIDw9IDI5OSApIHtcbiAgICAgICAgICBjYWxsYmFjayhudWxsLCBkYXRhLCByZXNwb25zZSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gRm9sbG93IDMwMSBvciAzMDIgcmVkaXJlY3RzIHdpdGggTG9jYXRpb24gSFRUUCBoZWFkZXJcbiAgICAgICAgICBpZigocmVzcG9uc2Uuc3RhdHVzQ29kZSA9PSAzMDEgfHwgcmVzcG9uc2Uuc3RhdHVzQ29kZSA9PSAzMDIpICYmIGNsaWVudE9wdGlvbnMuZm9sbG93UmVkaXJlY3RzICYmIHJlc3BvbnNlLmhlYWRlcnMgJiYgcmVzcG9uc2UuaGVhZGVycy5sb2NhdGlvbikge1xuICAgICAgICAgICAgc2VsZi5fcGVyZm9ybVNlY3VyZVJlcXVlc3QoIG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQsIG1ldGhvZCwgcmVzcG9uc2UuaGVhZGVycy5sb2NhdGlvbiwgZXh0cmFfcGFyYW1zLCBwb3N0X2JvZHksIHBvc3RfY29udGVudF90eXBlLCAgY2FsbGJhY2spO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKHsgc3RhdHVzQ29kZTogcmVzcG9uc2Uuc3RhdHVzQ29kZSwgZGF0YTogZGF0YSB9LCBkYXRhLCByZXNwb25zZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmVxdWVzdC5vbigncmVzcG9uc2UnLCBmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgIHJlc3BvbnNlLnNldEVuY29kaW5nKCd1dGY4Jyk7XG4gICAgICByZXNwb25zZS5vbignZGF0YScsIGZ1bmN0aW9uIChjaHVuaykge1xuICAgICAgICBkYXRhKz1jaHVuaztcbiAgICAgIH0pO1xuICAgICAgcmVzcG9uc2Uub24oJ2VuZCcsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcGFzc0JhY2tDb250cm9sKCByZXNwb25zZSApO1xuICAgICAgfSk7XG4gICAgICByZXNwb25zZS5vbignY2xvc2UnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmKCBhbGxvd0Vhcmx5Q2xvc2UgKSB7XG4gICAgICAgICAgcGFzc0JhY2tDb250cm9sKCByZXNwb25zZSApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHJlcXVlc3Qub24oXCJlcnJvclwiLCBmdW5jdGlvbihlcnIpIHtcbiAgICAgIGlmKCFjYWxsYmFja0NhbGxlZCkge1xuICAgICAgICBjYWxsYmFja0NhbGxlZD0gdHJ1ZTtcbiAgICAgICAgY2FsbGJhY2soIGVyciApXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBpZiggKG1ldGhvZCA9PSBcIlBPU1RcIiB8fCBtZXRob2QgPT1cIlBVVFwiKSAmJiBwb3N0X2JvZHkgIT0gbnVsbCAmJiBwb3N0X2JvZHkgIT0gXCJcIiApIHtcbiAgICAgIHJlcXVlc3Qud3JpdGUocG9zdF9ib2R5KTtcbiAgICB9XG4gICAgcmVxdWVzdC5lbmQoKTtcbiAgfVxuICBlbHNlIHtcbiAgICBpZiggKG1ldGhvZCA9PSBcIlBPU1RcIiB8fCBtZXRob2QgPT1cIlBVVFwiKSAmJiBwb3N0X2JvZHkgIT0gbnVsbCAmJiBwb3N0X2JvZHkgIT0gXCJcIiApIHtcbiAgICAgIHJlcXVlc3Qud3JpdGUocG9zdF9ib2R5KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlcXVlc3Q7XG4gIH1cblxuICByZXR1cm47XG59XG5cbmV4cG9ydHMuT0F1dGgucHJvdG90eXBlLnNldENsaWVudE9wdGlvbnM9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgdmFyIGtleSxcbiAgICAgIG1lcmdlZE9wdGlvbnM9IHt9LFxuICAgICAgaGFzT3duUHJvcGVydHk9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbiAgZm9yKCBrZXkgaW4gdGhpcy5fZGVmYXVsdENsaWVudE9wdGlvbnMgKSB7XG4gICAgaWYoICFoYXNPd25Qcm9wZXJ0eS5jYWxsKG9wdGlvbnMsIGtleSkgKSB7XG4gICAgICBtZXJnZWRPcHRpb25zW2tleV09IHRoaXMuX2RlZmF1bHRDbGllbnRPcHRpb25zW2tleV07XG4gICAgfSBlbHNlIHtcbiAgICAgIG1lcmdlZE9wdGlvbnNba2V5XT0gb3B0aW9uc1trZXldO1xuICAgIH1cbiAgfVxuXG4gIHRoaXMuX2NsaWVudE9wdGlvbnM9IG1lcmdlZE9wdGlvbnM7XG59O1xuXG5leHBvcnRzLk9BdXRoLnByb3RvdHlwZS5nZXRPQXV0aEFjY2Vzc1Rva2VuPSBmdW5jdGlvbihvYXV0aF90b2tlbiwgb2F1dGhfdG9rZW5fc2VjcmV0LCBvYXV0aF92ZXJpZmllciwgIGNhbGxiYWNrKSB7XG4gIHZhciBleHRyYVBhcmFtcz0ge307XG4gIGlmKCB0eXBlb2Ygb2F1dGhfdmVyaWZpZXIgPT0gXCJmdW5jdGlvblwiICkge1xuICAgIGNhbGxiYWNrPSBvYXV0aF92ZXJpZmllcjtcbiAgfSBlbHNlIHtcbiAgICBleHRyYVBhcmFtcy5vYXV0aF92ZXJpZmllcj0gb2F1dGhfdmVyaWZpZXI7XG4gIH1cblxuICAgdGhpcy5fcGVyZm9ybVNlY3VyZVJlcXVlc3QoIG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQsIHRoaXMuX2NsaWVudE9wdGlvbnMuYWNjZXNzVG9rZW5IdHRwTWV0aG9kLCB0aGlzLl9hY2Nlc3NVcmwsIGV4dHJhUGFyYW1zLCBudWxsLCBudWxsLCBmdW5jdGlvbihlcnJvciwgZGF0YSwgcmVzcG9uc2UpIHtcbiAgICAgICAgIGlmKCBlcnJvciApIGNhbGxiYWNrKGVycm9yKTtcbiAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICB2YXIgcmVzdWx0cz0gcXVlcnlzdHJpbmcucGFyc2UoIGRhdGEgKTtcbiAgICAgICAgICAgdmFyIG9hdXRoX2FjY2Vzc190b2tlbj0gcmVzdWx0c1tcIm9hdXRoX3Rva2VuXCJdO1xuICAgICAgICAgICBkZWxldGUgcmVzdWx0c1tcIm9hdXRoX3Rva2VuXCJdO1xuICAgICAgICAgICB2YXIgb2F1dGhfYWNjZXNzX3Rva2VuX3NlY3JldD0gcmVzdWx0c1tcIm9hdXRoX3Rva2VuX3NlY3JldFwiXTtcbiAgICAgICAgICAgZGVsZXRlIHJlc3VsdHNbXCJvYXV0aF90b2tlbl9zZWNyZXRcIl07XG4gICAgICAgICAgIGNhbGxiYWNrKG51bGwsIG9hdXRoX2FjY2Vzc190b2tlbiwgb2F1dGhfYWNjZXNzX3Rva2VuX3NlY3JldCwgcmVzdWx0cyApO1xuICAgICAgICAgfVxuICAgfSlcbn1cblxuLy8gRGVwcmVjYXRlZFxuZXhwb3J0cy5PQXV0aC5wcm90b3R5cGUuZ2V0UHJvdGVjdGVkUmVzb3VyY2U9IGZ1bmN0aW9uKHVybCwgbWV0aG9kLCBvYXV0aF90b2tlbiwgb2F1dGhfdG9rZW5fc2VjcmV0LCBjYWxsYmFjaykge1xuICB0aGlzLl9wZXJmb3JtU2VjdXJlUmVxdWVzdCggb2F1dGhfdG9rZW4sIG9hdXRoX3Rva2VuX3NlY3JldCwgbWV0aG9kLCB1cmwsIG51bGwsIFwiXCIsIG51bGwsIGNhbGxiYWNrICk7XG59XG5cbmV4cG9ydHMuT0F1dGgucHJvdG90eXBlLmRlbGV0ZT0gZnVuY3Rpb24odXJsLCBvYXV0aF90b2tlbiwgb2F1dGhfdG9rZW5fc2VjcmV0LCBjYWxsYmFjaykge1xuICByZXR1cm4gdGhpcy5fcGVyZm9ybVNlY3VyZVJlcXVlc3QoIG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQsIFwiREVMRVRFXCIsIHVybCwgbnVsbCwgXCJcIiwgbnVsbCwgY2FsbGJhY2sgKTtcbn1cblxuZXhwb3J0cy5PQXV0aC5wcm90b3R5cGUuZ2V0PSBmdW5jdGlvbih1cmwsIG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQsIGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLl9wZXJmb3JtU2VjdXJlUmVxdWVzdCggb2F1dGhfdG9rZW4sIG9hdXRoX3Rva2VuX3NlY3JldCwgXCJHRVRcIiwgdXJsLCBudWxsLCBcIlwiLCBudWxsLCBjYWxsYmFjayApO1xufVxuXG5leHBvcnRzLk9BdXRoLnByb3RvdHlwZS5fcHV0T3JQb3N0PSBmdW5jdGlvbihtZXRob2QsIHVybCwgb2F1dGhfdG9rZW4sIG9hdXRoX3Rva2VuX3NlY3JldCwgcG9zdF9ib2R5LCBwb3N0X2NvbnRlbnRfdHlwZSwgY2FsbGJhY2spIHtcbiAgdmFyIGV4dHJhX3BhcmFtcz0gbnVsbDtcbiAgaWYoIHR5cGVvZiBwb3N0X2NvbnRlbnRfdHlwZSA9PSBcImZ1bmN0aW9uXCIgKSB7XG4gICAgY2FsbGJhY2s9IHBvc3RfY29udGVudF90eXBlO1xuICAgIHBvc3RfY29udGVudF90eXBlPSBudWxsO1xuICB9XG4gIGlmICggdHlwZW9mIHBvc3RfYm9keSAhPSBcInN0cmluZ1wiICYmICFCdWZmZXIuaXNCdWZmZXIocG9zdF9ib2R5KSApIHtcbiAgICBwb3N0X2NvbnRlbnRfdHlwZT0gXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIlxuICAgIGV4dHJhX3BhcmFtcz0gcG9zdF9ib2R5O1xuICAgIHBvc3RfYm9keT0gbnVsbDtcbiAgfVxuICByZXR1cm4gdGhpcy5fcGVyZm9ybVNlY3VyZVJlcXVlc3QoIG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQsIG1ldGhvZCwgdXJsLCBleHRyYV9wYXJhbXMsIHBvc3RfYm9keSwgcG9zdF9jb250ZW50X3R5cGUsIGNhbGxiYWNrICk7XG59XG5cblxuZXhwb3J0cy5PQXV0aC5wcm90b3R5cGUucHV0PSBmdW5jdGlvbih1cmwsIG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQsIHBvc3RfYm9keSwgcG9zdF9jb250ZW50X3R5cGUsIGNhbGxiYWNrKSB7XG4gIHJldHVybiB0aGlzLl9wdXRPclBvc3QoXCJQVVRcIiwgdXJsLCBvYXV0aF90b2tlbiwgb2F1dGhfdG9rZW5fc2VjcmV0LCBwb3N0X2JvZHksIHBvc3RfY29udGVudF90eXBlLCBjYWxsYmFjayk7XG59XG5cbmV4cG9ydHMuT0F1dGgucHJvdG90eXBlLnBvc3Q9IGZ1bmN0aW9uKHVybCwgb2F1dGhfdG9rZW4sIG9hdXRoX3Rva2VuX3NlY3JldCwgcG9zdF9ib2R5LCBwb3N0X2NvbnRlbnRfdHlwZSwgY2FsbGJhY2spIHtcbiAgcmV0dXJuIHRoaXMuX3B1dE9yUG9zdChcIlBPU1RcIiwgdXJsLCBvYXV0aF90b2tlbiwgb2F1dGhfdG9rZW5fc2VjcmV0LCBwb3N0X2JvZHksIHBvc3RfY29udGVudF90eXBlLCBjYWxsYmFjayk7XG59XG5cbi8qKlxuICogR2V0cyBhIHJlcXVlc3QgdG9rZW4gZnJvbSB0aGUgT0F1dGggcHJvdmlkZXIgYW5kIHBhc3NlcyB0aGF0IGluZm9ybWF0aW9uIGJhY2tcbiAqIHRvIHRoZSBjYWxsaW5nIGNvZGUuXG4gKlxuICogVGhlIGNhbGxiYWNrIHNob3VsZCBleHBlY3QgYSBmdW5jdGlvbiBvZiB0aGUgZm9sbG93aW5nIGZvcm06XG4gKlxuICogZnVuY3Rpb24oZXJyLCB0b2tlbiwgdG9rZW5fc2VjcmV0LCBwYXJzZWRRdWVyeVN0cmluZykge31cbiAqXG4gKiBUaGlzIG1ldGhvZCBoYXMgb3B0aW9uYWwgcGFyYW1ldGVycyBzbyBjYW4gYmUgY2FsbGVkIGluIHRoZSBmb2xsb3dpbmcgMiB3YXlzOlxuICpcbiAqIDEpIFByaW1hcnkgdXNlIGNhc2U6IERvZXMgYSBiYXNpYyByZXF1ZXN0IHdpdGggbm8gZXh0cmEgcGFyYW1ldGVyc1xuICogIGdldE9BdXRoUmVxdWVzdFRva2VuKCBjYWxsYmFja0Z1bmN0aW9uIClcbiAqXG4gKiAyKSBBcyBhYm92ZSBidXQgYWxsb3dzIGZvciBwcm92aXNpb24gb2YgZXh0cmEgcGFyYW1ldGVycyB0byBiZSBzZW50IGFzIHBhcnQgb2YgdGhlIHF1ZXJ5IHRvIHRoZSBzZXJ2ZXIuXG4gKiAgZ2V0T0F1dGhSZXF1ZXN0VG9rZW4oIGV4dHJhUGFyYW1zLCBjYWxsYmFja0Z1bmN0aW9uIClcbiAqXG4gKiBOLkIuIFRoaXMgbWV0aG9kIHdpbGwgSFRUUCBQT1NUIHZlcmJzIGJ5IGRlZmF1bHQsIGlmIHlvdSB3aXNoIHRvIG92ZXJyaWRlIHRoaXMgYmVoYXZpb3VyIHlvdSB3aWxsXG4gKiBuZWVkIHRvIHByb3ZpZGUgYSByZXF1ZXN0VG9rZW5IdHRwTWV0aG9kIG9wdGlvbiB3aGVuIGNyZWF0aW5nIHRoZSBjbGllbnQuXG4gKlxuICoqL1xuZXhwb3J0cy5PQXV0aC5wcm90b3R5cGUuZ2V0T0F1dGhSZXF1ZXN0VG9rZW49IGZ1bmN0aW9uKCBleHRyYVBhcmFtcywgY2FsbGJhY2sgKSB7XG4gICBpZiggdHlwZW9mIGV4dHJhUGFyYW1zID09IFwiZnVuY3Rpb25cIiApe1xuICAgICBjYWxsYmFjayA9IGV4dHJhUGFyYW1zO1xuICAgICBleHRyYVBhcmFtcyA9IHt9O1xuICAgfVxuICAvLyBDYWxsYmFja3MgYXJlIDEuMEEgcmVsYXRlZFxuICBpZiggdGhpcy5fYXV0aG9yaXplX2NhbGxiYWNrICkge1xuICAgIGV4dHJhUGFyYW1zW1wib2F1dGhfY2FsbGJhY2tcIl09IHRoaXMuX2F1dGhvcml6ZV9jYWxsYmFjaztcbiAgfVxuICB0aGlzLl9wZXJmb3JtU2VjdXJlUmVxdWVzdCggbnVsbCwgbnVsbCwgdGhpcy5fY2xpZW50T3B0aW9ucy5yZXF1ZXN0VG9rZW5IdHRwTWV0aG9kLCB0aGlzLl9yZXF1ZXN0VXJsLCBleHRyYVBhcmFtcywgbnVsbCwgbnVsbCwgZnVuY3Rpb24oZXJyb3IsIGRhdGEsIHJlc3BvbnNlKSB7XG4gICAgaWYoIGVycm9yICkgY2FsbGJhY2soZXJyb3IpO1xuICAgIGVsc2Uge1xuICAgICAgdmFyIHJlc3VsdHM9IHF1ZXJ5c3RyaW5nLnBhcnNlKGRhdGEpO1xuXG4gICAgICB2YXIgb2F1dGhfdG9rZW49IHJlc3VsdHNbXCJvYXV0aF90b2tlblwiXTtcbiAgICAgIHZhciBvYXV0aF90b2tlbl9zZWNyZXQ9IHJlc3VsdHNbXCJvYXV0aF90b2tlbl9zZWNyZXRcIl07XG4gICAgICBkZWxldGUgcmVzdWx0c1tcIm9hdXRoX3Rva2VuXCJdO1xuICAgICAgZGVsZXRlIHJlc3VsdHNbXCJvYXV0aF90b2tlbl9zZWNyZXRcIl07XG4gICAgICBjYWxsYmFjayhudWxsLCBvYXV0aF90b2tlbiwgb2F1dGhfdG9rZW5fc2VjcmV0LCAgcmVzdWx0cyApO1xuICAgIH1cbiAgfSk7XG59XG5cbmV4cG9ydHMuT0F1dGgucHJvdG90eXBlLnNpZ25Vcmw9IGZ1bmN0aW9uKHVybCwgb2F1dGhfdG9rZW4sIG9hdXRoX3Rva2VuX3NlY3JldCwgbWV0aG9kKSB7XG5cbiAgaWYoIG1ldGhvZCA9PT0gdW5kZWZpbmVkICkge1xuICAgIHZhciBtZXRob2Q9IFwiR0VUXCI7XG4gIH1cblxuICB2YXIgb3JkZXJlZFBhcmFtZXRlcnM9IHRoaXMuX3ByZXBhcmVQYXJhbWV0ZXJzKG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQsIG1ldGhvZCwgdXJsLCB7fSk7XG4gIHZhciBwYXJzZWRVcmw9IFVSTC5wYXJzZSggdXJsLCBmYWxzZSApO1xuXG4gIHZhciBxdWVyeT1cIlwiO1xuICBmb3IoIHZhciBpPSAwIDsgaSA8IG9yZGVyZWRQYXJhbWV0ZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgcXVlcnkrPSBvcmRlcmVkUGFyYW1ldGVyc1tpXVswXStcIj1cIisgdGhpcy5fZW5jb2RlRGF0YShvcmRlcmVkUGFyYW1ldGVyc1tpXVsxXSkgKyBcIiZcIjtcbiAgfVxuICBxdWVyeT0gcXVlcnkuc3Vic3RyaW5nKDAsIHF1ZXJ5Lmxlbmd0aC0xKTtcblxuICByZXR1cm4gcGFyc2VkVXJsLnByb3RvY29sICsgXCIvL1wiKyBwYXJzZWRVcmwuaG9zdCArIHBhcnNlZFVybC5wYXRobmFtZSArIFwiP1wiICsgcXVlcnk7XG59O1xuXG5leHBvcnRzLk9BdXRoLnByb3RvdHlwZS5hdXRoSGVhZGVyPSBmdW5jdGlvbih1cmwsIG9hdXRoX3Rva2VuLCBvYXV0aF90b2tlbl9zZWNyZXQsIG1ldGhvZCkge1xuICBpZiggbWV0aG9kID09PSB1bmRlZmluZWQgKSB7XG4gICAgdmFyIG1ldGhvZD0gXCJHRVRcIjtcbiAgfVxuXG4gIHZhciBvcmRlcmVkUGFyYW1ldGVycz0gdGhpcy5fcHJlcGFyZVBhcmFtZXRlcnMob2F1dGhfdG9rZW4sIG9hdXRoX3Rva2VuX3NlY3JldCwgbWV0aG9kLCB1cmwsIHt9KTtcbiAgcmV0dXJuIHRoaXMuX2J1aWxkQXV0aG9yaXphdGlvbkhlYWRlcnMob3JkZXJlZFBhcmFtZXRlcnMpO1xufTtcbiJdLCJuYW1lcyI6WyJjcnlwdG8iLCJyZXF1aXJlIiwic2hhMSIsImh0dHAiLCJodHRwcyIsIlVSTCIsInF1ZXJ5c3RyaW5nIiwiT0F1dGhVdGlscyIsImV4cG9ydHMiLCJPQXV0aCIsInJlcXVlc3RVcmwiLCJhY2Nlc3NVcmwiLCJjb25zdW1lcktleSIsImNvbnN1bWVyU2VjcmV0IiwidmVyc2lvbiIsImF1dGhvcml6ZV9jYWxsYmFjayIsInNpZ25hdHVyZU1ldGhvZCIsIm5vbmNlU2l6ZSIsImN1c3RvbUhlYWRlcnMiLCJfaXNFY2hvIiwiX3JlcXVlc3RVcmwiLCJfYWNjZXNzVXJsIiwiX2NvbnN1bWVyS2V5IiwiX2NvbnN1bWVyU2VjcmV0IiwiX2VuY29kZURhdGEiLCJfcHJpdmF0ZUtleSIsIl92ZXJzaW9uIiwidW5kZWZpbmVkIiwiX2F1dGhvcml6ZV9jYWxsYmFjayIsIkVycm9yIiwiX3NpZ25hdHVyZU1ldGhvZCIsIl9ub25jZVNpemUiLCJfaGVhZGVycyIsIl9jbGllbnRPcHRpb25zIiwiX2RlZmF1bHRDbGllbnRPcHRpb25zIiwiX29hdXRoUGFyYW1ldGVyU2VwZXJhdG9yIiwiT0F1dGhFY2hvIiwicmVhbG0iLCJ2ZXJpZnlfY3JlZGVudGlhbHMiLCJfcmVhbG0iLCJfdmVyaWZ5Q3JlZGVudGlhbHMiLCJwcm90b3R5cGUiLCJfZ2V0VGltZXN0YW1wIiwiTWF0aCIsImZsb29yIiwiRGF0ZSIsImdldFRpbWUiLCJ0b0VuY29kZSIsInJlc3VsdCIsImVuY29kZVVSSUNvbXBvbmVudCIsInJlcGxhY2UiLCJfZGVjb2RlRGF0YSIsInRvRGVjb2RlIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwiX2dldFNpZ25hdHVyZSIsIm1ldGhvZCIsInVybCIsInBhcmFtZXRlcnMiLCJ0b2tlblNlY3JldCIsInNpZ25hdHVyZUJhc2UiLCJfY3JlYXRlU2lnbmF0dXJlQmFzZSIsIl9jcmVhdGVTaWduYXR1cmUiLCJfbm9ybWFsaXplVXJsIiwicGFyc2VkVXJsIiwicGFyc2UiLCJwb3J0IiwicHJvdG9jb2wiLCJwYXRobmFtZSIsImhvc3RuYW1lIiwiX2lzUGFyYW1ldGVyTmFtZUFuT0F1dGhQYXJhbWV0ZXIiLCJwYXJhbWV0ZXIiLCJtIiwibWF0Y2giLCJfYnVpbGRBdXRob3JpemF0aW9uSGVhZGVycyIsIm9yZGVyZWRQYXJhbWV0ZXJzIiwiYXV0aEhlYWRlciIsImkiLCJsZW5ndGgiLCJzdWJzdHJpbmciLCJfbWFrZUFycmF5T2ZBcmd1bWVudHNIYXNoIiwiYXJndW1lbnRzSGFzaCIsImFyZ3VtZW50X3BhaXJzIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJ2YWx1ZSIsIkFycmF5IiwiaXNBcnJheSIsIl9zb3J0UmVxdWVzdFBhcmFtcyIsInNvcnQiLCJhIiwiYiIsIl9ub3JtYWxpc2VSZXF1ZXN0UGFyYW1zIiwiYXJncyIsInRvVXBwZXJDYXNlIiwiaGFzaCIsImNyZWF0ZVNpZ24iLCJ1cGRhdGUiLCJzaWduIiwiSG1hYyIsImNyZWF0ZUhtYWMiLCJkaWdlc3QiLCJITUFDU0hBMSIsIk5PTkNFX0NIQVJTIiwiX2dldE5vbmNlIiwiY2hhcnMiLCJjaGFyX3BvcyIsIm5vbmNlX2NoYXJzX2xlbmd0aCIsInJhbmRvbSIsImpvaW4iLCJfY3JlYXRlQ2xpZW50IiwicGF0aCIsImhlYWRlcnMiLCJzc2xFbmFibGVkIiwib3B0aW9ucyIsImhvc3QiLCJodHRwTW9kZWwiLCJyZXF1ZXN0IiwiX3ByZXBhcmVQYXJhbWV0ZXJzIiwib2F1dGhfdG9rZW4iLCJvYXV0aF90b2tlbl9zZWNyZXQiLCJleHRyYV9wYXJhbXMiLCJvYXV0aFBhcmFtZXRlcnMiLCJzaWciLCJxdWVyeSIsImtleTIiLCJleHRyYVBhcmFtZXRlcnMiLCJfcGVyZm9ybVNlY3VyZVJlcXVlc3QiLCJwb3N0X2JvZHkiLCJwb3N0X2NvbnRlbnRfdHlwZSIsImNhbGxiYWNrIiwiYXV0aG9yaXphdGlvbiIsInN0cmluZ2lmeSIsIkJ1ZmZlciIsImlzQnVmZmVyIiwiYnl0ZUxlbmd0aCIsImNsaWVudE9wdGlvbnMiLCJkYXRhIiwic2VsZiIsImFsbG93RWFybHlDbG9zZSIsImlzQW5FYXJseUNsb3NlSG9zdCIsImNhbGxiYWNrQ2FsbGVkIiwicGFzc0JhY2tDb250cm9sIiwicmVzcG9uc2UiLCJzdGF0dXNDb2RlIiwiZm9sbG93UmVkaXJlY3RzIiwibG9jYXRpb24iLCJvbiIsInNldEVuY29kaW5nIiwiY2h1bmsiLCJlcnIiLCJ3cml0ZSIsImVuZCIsInNldENsaWVudE9wdGlvbnMiLCJtZXJnZWRPcHRpb25zIiwiT2JqZWN0IiwiY2FsbCIsImdldE9BdXRoQWNjZXNzVG9rZW4iLCJvYXV0aF92ZXJpZmllciIsImV4dHJhUGFyYW1zIiwiYWNjZXNzVG9rZW5IdHRwTWV0aG9kIiwiZXJyb3IiLCJyZXN1bHRzIiwib2F1dGhfYWNjZXNzX3Rva2VuIiwib2F1dGhfYWNjZXNzX3Rva2VuX3NlY3JldCIsImdldFByb3RlY3RlZFJlc291cmNlIiwiZGVsZXRlIiwiZ2V0IiwiX3B1dE9yUG9zdCIsInB1dCIsInBvc3QiLCJnZXRPQXV0aFJlcXVlc3RUb2tlbiIsInJlcXVlc3RUb2tlbkh0dHBNZXRob2QiLCJzaWduVXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oauth/lib/oauth.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oauth/lib/oauth2.js":
/*!******************************************!*\
  !*** ./node_modules/oauth/lib/oauth2.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var querystring = __webpack_require__(/*! querystring */ \"querystring\"), crypto = __webpack_require__(/*! crypto */ \"crypto\"), https = __webpack_require__(/*! https */ \"https\"), http = __webpack_require__(/*! http */ \"http\"), URL = __webpack_require__(/*! url */ \"url\"), OAuthUtils = __webpack_require__(/*! ./_utils */ \"(sc_server)/./node_modules/oauth/lib/_utils.js\");\nexports.OAuth2 = function(clientId, clientSecret, baseSite, authorizePath, accessTokenPath, customHeaders) {\n    this._clientId = clientId;\n    this._clientSecret = clientSecret;\n    this._baseSite = baseSite;\n    this._authorizeUrl = authorizePath || \"/oauth/authorize\";\n    this._accessTokenUrl = accessTokenPath || \"/oauth/access_token\";\n    this._accessTokenName = \"access_token\";\n    this._authMethod = \"Bearer\";\n    this._customHeaders = customHeaders || {};\n    this._useAuthorizationHeaderForGET = false;\n    //our agent\n    this._agent = undefined;\n};\n// Allows you to set an agent to use instead of the default HTTP or\n// HTTPS agents. Useful when dealing with your own certificates.\nexports.OAuth2.prototype.setAgent = function(agent) {\n    this._agent = agent;\n};\n// This 'hack' method is required for sites that don't use\n// 'access_token' as the name of the access token (for requests).\n// ( http://tools.ietf.org/html/draft-ietf-oauth-v2-16#section-7 )\n// it isn't clear what the correct value should be atm, so allowing\n// for specific (temporary?) override for now.\nexports.OAuth2.prototype.setAccessTokenName = function(name) {\n    this._accessTokenName = name;\n};\n// Sets the authorization method for Authorization header.\n// e.g. Authorization: Bearer <token>  # \"Bearer\" is the authorization method.\nexports.OAuth2.prototype.setAuthMethod = function(authMethod) {\n    this._authMethod = authMethod;\n};\n// If you use the OAuth2 exposed 'get' method (and don't construct your own _request call )\n// this will specify whether to use an 'Authorize' header instead of passing the access_token as a query parameter\nexports.OAuth2.prototype.useAuthorizationHeaderforGET = function(useIt) {\n    this._useAuthorizationHeaderForGET = useIt;\n};\nexports.OAuth2.prototype._getAccessTokenUrl = function() {\n    return this._baseSite + this._accessTokenUrl; /* + \"?\" + querystring.stringify(params); */ \n};\n// Build the authorization header. In particular, build the part after the colon.\n// e.g. Authorization: Bearer <token>  # Build \"Bearer <token>\"\nexports.OAuth2.prototype.buildAuthHeader = function(token) {\n    return this._authMethod + \" \" + token;\n};\nexports.OAuth2.prototype._chooseHttpLibrary = function(parsedUrl) {\n    var http_library = https;\n    // As this is OAUth2, we *assume* https unless told explicitly otherwise.\n    if (parsedUrl.protocol != \"https:\") {\n        http_library = http;\n    }\n    return http_library;\n};\nexports.OAuth2.prototype._request = function(method, url, headers, post_body, access_token, callback) {\n    var parsedUrl = URL.parse(url, true);\n    if (parsedUrl.protocol == \"https:\" && !parsedUrl.port) {\n        parsedUrl.port = 443;\n    }\n    var http_library = this._chooseHttpLibrary(parsedUrl);\n    var realHeaders = {};\n    for(var key in this._customHeaders){\n        realHeaders[key] = this._customHeaders[key];\n    }\n    if (headers) {\n        for(var key in headers){\n            realHeaders[key] = headers[key];\n        }\n    }\n    realHeaders[\"Host\"] = parsedUrl.host;\n    if (!realHeaders[\"User-Agent\"]) {\n        realHeaders[\"User-Agent\"] = \"Node-oauth\";\n    }\n    if (post_body) {\n        if (Buffer.isBuffer(post_body)) {\n            realHeaders[\"Content-Length\"] = post_body.length;\n        } else {\n            realHeaders[\"Content-Length\"] = Buffer.byteLength(post_body);\n        }\n    } else {\n        realHeaders[\"Content-length\"] = 0;\n    }\n    if (access_token && !(\"Authorization\" in realHeaders)) {\n        if (!parsedUrl.query) parsedUrl.query = {};\n        parsedUrl.query[this._accessTokenName] = access_token;\n    }\n    var queryStr = querystring.stringify(parsedUrl.query);\n    if (queryStr) queryStr = \"?\" + queryStr;\n    var options = {\n        host: parsedUrl.hostname,\n        port: parsedUrl.port,\n        path: parsedUrl.pathname + queryStr,\n        method: method,\n        headers: realHeaders\n    };\n    this._executeRequest(http_library, options, post_body, callback);\n};\nexports.OAuth2.prototype._executeRequest = function(http_library, options, post_body, callback) {\n    // Some hosts *cough* google appear to close the connection early / send no content-length header\n    // allow this behaviour.\n    var allowEarlyClose = OAuthUtils.isAnEarlyCloseHost(options.host);\n    var callbackCalled = false;\n    function passBackControl(response, result) {\n        if (!callbackCalled) {\n            callbackCalled = true;\n            if (!(response.statusCode >= 200 && response.statusCode <= 299) && response.statusCode != 301 && response.statusCode != 302) {\n                callback({\n                    statusCode: response.statusCode,\n                    data: result\n                });\n            } else {\n                callback(null, result, response);\n            }\n        }\n    }\n    var result = \"\";\n    //set the agent on the request options\n    if (this._agent) {\n        options.agent = this._agent;\n    }\n    var request = http_library.request(options);\n    request.on(\"response\", function(response) {\n        response.on(\"data\", function(chunk) {\n            result += chunk;\n        });\n        response.on(\"close\", function(err) {\n            if (allowEarlyClose) {\n                passBackControl(response, result);\n            }\n        });\n        response.addListener(\"end\", function() {\n            passBackControl(response, result);\n        });\n    });\n    request.on(\"error\", function(e) {\n        callbackCalled = true;\n        callback(e);\n    });\n    if ((options.method == \"POST\" || options.method == \"PUT\") && post_body) {\n        request.write(post_body);\n    }\n    request.end();\n};\nexports.OAuth2.prototype.getAuthorizeUrl = function(params) {\n    var params = params || {};\n    params[\"client_id\"] = this._clientId;\n    return this._baseSite + this._authorizeUrl + \"?\" + querystring.stringify(params);\n};\nexports.OAuth2.prototype.getOAuthAccessToken = function(code, params, callback) {\n    var params = params || {};\n    params[\"client_id\"] = this._clientId;\n    params[\"client_secret\"] = this._clientSecret;\n    var codeParam = params.grant_type === \"refresh_token\" ? \"refresh_token\" : \"code\";\n    params[codeParam] = code;\n    var post_data = querystring.stringify(params);\n    var post_headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n    };\n    this._request(\"POST\", this._getAccessTokenUrl(), post_headers, post_data, null, function(error, data, response) {\n        if (error) callback(error);\n        else {\n            var results;\n            try {\n                // As of http://tools.ietf.org/html/draft-ietf-oauth-v2-07\n                // responses should be in JSON\n                results = JSON.parse(data);\n            } catch (e) {\n                // .... However both Facebook + Github currently use rev05 of the spec\n                // and neither seem to specify a content-type correctly in their response headers :(\n                // clients of these services will suffer a *minor* performance cost of the exception\n                // being thrown\n                results = querystring.parse(data);\n            }\n            var access_token = results[\"access_token\"];\n            var refresh_token = results[\"refresh_token\"];\n            delete results[\"refresh_token\"];\n            callback(null, access_token, refresh_token, results); // callback results =-=\n        }\n    });\n};\n// Deprecated\nexports.OAuth2.prototype.getProtectedResource = function(url, access_token, callback) {\n    this._request(\"GET\", url, {}, \"\", access_token, callback);\n};\nexports.OAuth2.prototype.get = function(url, access_token, callback) {\n    if (this._useAuthorizationHeaderForGET) {\n        var headers = {\n            \"Authorization\": this.buildAuthHeader(access_token)\n        };\n        access_token = null;\n    } else {\n        headers = {};\n    }\n    this._request(\"GET\", url, headers, \"\", access_token, callback);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oauth/lib/oauth2.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oauth/lib/sha1.js":
/*!****************************************!*\
  !*** ./node_modules/oauth/lib/sha1.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS 180-1\n * Version 2.2 Copyright Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */ /*\n * Configurable variables. You may need to tweak these to be compatible with\n * the server-side, but the defaults work in most cases.\n */ var hexcase = 1; /* hex output format. 0 - lowercase; 1 - uppercase        */ \nvar b64pad = \"=\"; /* base-64 pad character. \"=\" for strict RFC compliance   */ \n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */ function hex_sha1(s) {\n    return rstr2hex(rstr_sha1(str2rstr_utf8(s)));\n}\nfunction b64_sha1(s) {\n    return rstr2b64(rstr_sha1(str2rstr_utf8(s)));\n}\nfunction any_sha1(s, e) {\n    return rstr2any(rstr_sha1(str2rstr_utf8(s)), e);\n}\nfunction hex_hmac_sha1(k, d) {\n    return rstr2hex(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d)));\n}\nfunction b64_hmac_sha1(k, d) {\n    return rstr2b64(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d)));\n}\nfunction any_hmac_sha1(k, d, e) {\n    return rstr2any(rstr_hmac_sha1(str2rstr_utf8(k), str2rstr_utf8(d)), e);\n}\n/*\n * Perform a simple self-test to see if the VM is working\n */ function sha1_vm_test() {\n    return hex_sha1(\"abc\").toLowerCase() == \"a9993e364706816aba3e25717850c26c9cd0d89d\";\n}\n/*\n * Calculate the SHA1 of a raw string\n */ function rstr_sha1(s) {\n    return binb2rstr(binb_sha1(rstr2binb(s), s.length * 8));\n}\n/*\n * Calculate the HMAC-SHA1 of a key and some data (raw strings)\n */ function rstr_hmac_sha1(key, data) {\n    var bkey = rstr2binb(key);\n    if (bkey.length > 16) bkey = binb_sha1(bkey, key.length * 8);\n    var ipad = Array(16), opad = Array(16);\n    for(var i = 0; i < 16; i++){\n        ipad[i] = bkey[i] ^ 0x36363636;\n        opad[i] = bkey[i] ^ 0x5C5C5C5C;\n    }\n    var hash = binb_sha1(ipad.concat(rstr2binb(data)), 512 + data.length * 8);\n    return binb2rstr(binb_sha1(opad.concat(hash), 512 + 160));\n}\n/*\n * Convert a raw string to a hex string\n */ function rstr2hex(input) {\n    try {\n        hexcase;\n    } catch (e) {\n        hexcase = 0;\n    }\n    var hex_tab = hexcase ? \"0123456789ABCDEF\" : \"0123456789abcdef\";\n    var output = \"\";\n    var x;\n    for(var i = 0; i < input.length; i++){\n        x = input.charCodeAt(i);\n        output += hex_tab.charAt(x >>> 4 & 0x0F) + hex_tab.charAt(x & 0x0F);\n    }\n    return output;\n}\n/*\n * Convert a raw string to a base-64 string\n */ function rstr2b64(input) {\n    try {\n        b64pad;\n    } catch (e) {\n        b64pad = \"\";\n    }\n    var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    var output = \"\";\n    var len = input.length;\n    for(var i = 0; i < len; i += 3){\n        var triplet = input.charCodeAt(i) << 16 | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0) | (i + 2 < len ? input.charCodeAt(i + 2) : 0);\n        for(var j = 0; j < 4; j++){\n            if (i * 8 + j * 6 > input.length * 8) output += b64pad;\n            else output += tab.charAt(triplet >>> 6 * (3 - j) & 0x3F);\n        }\n    }\n    return output;\n}\n/*\n * Convert a raw string to an arbitrary string encoding\n */ function rstr2any(input, encoding) {\n    var divisor = encoding.length;\n    var remainders = Array();\n    var i, q, x, quotient;\n    /* Convert to an array of 16-bit big-endian values, forming the dividend */ var dividend = Array(Math.ceil(input.length / 2));\n    for(i = 0; i < dividend.length; i++){\n        dividend[i] = input.charCodeAt(i * 2) << 8 | input.charCodeAt(i * 2 + 1);\n    }\n    /*\n   * Repeatedly perform a long division. The binary array forms the dividend,\n   * the length of the encoding is the divisor. Once computed, the quotient\n   * forms the dividend for the next step. We stop when the dividend is zero.\n   * All remainders are stored for later use.\n   */ while(dividend.length > 0){\n        quotient = Array();\n        x = 0;\n        for(i = 0; i < dividend.length; i++){\n            x = (x << 16) + dividend[i];\n            q = Math.floor(x / divisor);\n            x -= q * divisor;\n            if (quotient.length > 0 || q > 0) quotient[quotient.length] = q;\n        }\n        remainders[remainders.length] = x;\n        dividend = quotient;\n    }\n    /* Convert the remainders to the output string */ var output = \"\";\n    for(i = remainders.length - 1; i >= 0; i--)output += encoding.charAt(remainders[i]);\n    /* Append leading zero equivalents */ var full_length = Math.ceil(input.length * 8 / (Math.log(encoding.length) / Math.log(2)));\n    for(i = output.length; i < full_length; i++)output = encoding[0] + output;\n    return output;\n}\n/*\n * Encode a string as utf-8.\n * For efficiency, this assumes the input is valid utf-16.\n */ function str2rstr_utf8(input) {\n    var output = \"\";\n    var i = -1;\n    var x, y;\n    while(++i < input.length){\n        /* Decode utf-16 surrogate pairs */ x = input.charCodeAt(i);\n        y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;\n        if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {\n            x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);\n            i++;\n        }\n        /* Encode output as utf-8 */ if (x <= 0x7F) output += String.fromCharCode(x);\n        else if (x <= 0x7FF) output += String.fromCharCode(0xC0 | x >>> 6 & 0x1F, 0x80 | x & 0x3F);\n        else if (x <= 0xFFFF) output += String.fromCharCode(0xE0 | x >>> 12 & 0x0F, 0x80 | x >>> 6 & 0x3F, 0x80 | x & 0x3F);\n        else if (x <= 0x1FFFFF) output += String.fromCharCode(0xF0 | x >>> 18 & 0x07, 0x80 | x >>> 12 & 0x3F, 0x80 | x >>> 6 & 0x3F, 0x80 | x & 0x3F);\n    }\n    return output;\n}\n/*\n * Encode a string as utf-16\n */ function str2rstr_utf16le(input) {\n    var output = \"\";\n    for(var i = 0; i < input.length; i++)output += String.fromCharCode(input.charCodeAt(i) & 0xFF, input.charCodeAt(i) >>> 8 & 0xFF);\n    return output;\n}\nfunction str2rstr_utf16be(input) {\n    var output = \"\";\n    for(var i = 0; i < input.length; i++)output += String.fromCharCode(input.charCodeAt(i) >>> 8 & 0xFF, input.charCodeAt(i) & 0xFF);\n    return output;\n}\n/*\n * Convert a raw string to an array of big-endian words\n * Characters >255 have their high-byte silently ignored.\n */ function rstr2binb(input) {\n    var output = Array(input.length >> 2);\n    for(var i = 0; i < output.length; i++)output[i] = 0;\n    for(var i = 0; i < input.length * 8; i += 8)output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << 24 - i % 32;\n    return output;\n}\n/*\n * Convert an array of big-endian words to a string\n */ function binb2rstr(input) {\n    var output = \"\";\n    for(var i = 0; i < input.length * 32; i += 8)output += String.fromCharCode(input[i >> 5] >>> 24 - i % 32 & 0xFF);\n    return output;\n}\n/*\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\n */ function binb_sha1(x, len) {\n    /* append padding */ x[len >> 5] |= 0x80 << 24 - len % 32;\n    x[(len + 64 >> 9 << 4) + 15] = len;\n    var w = Array(80);\n    var a = 1732584193;\n    var b = -271733879;\n    var c = -1732584194;\n    var d = 271733878;\n    var e = -1009589776;\n    for(var i = 0; i < x.length; i += 16){\n        var olda = a;\n        var oldb = b;\n        var oldc = c;\n        var oldd = d;\n        var olde = e;\n        for(var j = 0; j < 80; j++){\n            if (j < 16) w[j] = x[i + j];\n            else w[j] = bit_rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            var t = safe_add(safe_add(bit_rol(a, 5), sha1_ft(j, b, c, d)), safe_add(safe_add(e, w[j]), sha1_kt(j)));\n            e = d;\n            d = c;\n            c = bit_rol(b, 30);\n            b = a;\n            a = t;\n        }\n        a = safe_add(a, olda);\n        b = safe_add(b, oldb);\n        c = safe_add(c, oldc);\n        d = safe_add(d, oldd);\n        e = safe_add(e, olde);\n    }\n    return Array(a, b, c, d, e);\n}\n/*\n * Perform the appropriate triplet combination function for the current\n * iteration\n */ function sha1_ft(t, b, c, d) {\n    if (t < 20) return b & c | ~b & d;\n    if (t < 40) return b ^ c ^ d;\n    if (t < 60) return b & c | b & d | c & d;\n    return b ^ c ^ d;\n}\n/*\n * Determine the appropriate additive constant for the current iteration\n */ function sha1_kt(t) {\n    return t < 20 ? 1518500249 : t < 40 ? 1859775393 : t < 60 ? -1894007588 : -899497514;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */ function safe_add(x, y) {\n    var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n    return msw << 16 | lsw & 0xFFFF;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */ function bit_rol(num, cnt) {\n    return num << cnt | num >>> 32 - cnt;\n}\nexports.HMACSHA1 = function(key, data) {\n    return b64_hmac_sha1(key, data);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oauth/lib/sha1.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oidc-token-hash/lib/index.js":
/*!***************************************************!*\
  !*** ./node_modules/oidc-token-hash/lib/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { strict: assert } = __webpack_require__(/*! assert */ \"assert\");\nconst { createHash } = __webpack_require__(/*! crypto */ \"crypto\");\nconst { format } = __webpack_require__(/*! util */ \"util\");\nconst shake256 = __webpack_require__(/*! ./shake256 */ \"(sc_server)/./node_modules/oidc-token-hash/lib/shake256.js\");\nlet encode;\nif (Buffer.isEncoding(\"base64url\")) {\n    encode = (input)=>input.toString(\"base64url\");\n} else {\n    const fromBase64 = (base64)=>base64.replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n    encode = (input)=>fromBase64(input.toString(\"base64\"));\n}\n/** SPECIFICATION\n * Its (_hash) value is the base64url encoding of the left-most half of the hash of the octets of\n * the ASCII representation of the token value, where the hash algorithm used is the hash algorithm\n * used in the alg Header Parameter of the ID Token's JOSE Header. For instance, if the alg is\n * RS256, hash the token value with SHA-256, then take the left-most 128 bits and base64url encode\n * them. The _hash value is a case sensitive string.\n */ /**\n * @name getHash\n * @api private\n *\n * returns the sha length based off the JOSE alg heade value, defaults to sha256\n *\n * @param token {String} token value to generate the hash from\n * @param alg {String} ID Token JOSE header alg value (i.e. RS256, HS384, ES512, PS256)\n * @param [crv] {String} For EdDSA the curve decides what hash algorithm is used. Required for EdDSA\n */ function getHash(alg, crv) {\n    switch(alg){\n        case \"HS256\":\n        case \"RS256\":\n        case \"PS256\":\n        case \"ES256\":\n        case \"ES256K\":\n            return createHash(\"sha256\");\n        case \"HS384\":\n        case \"RS384\":\n        case \"PS384\":\n        case \"ES384\":\n            return createHash(\"sha384\");\n        case \"HS512\":\n        case \"RS512\":\n        case \"PS512\":\n        case \"ES512\":\n            return createHash(\"sha512\");\n        case \"EdDSA\":\n            switch(crv){\n                case \"Ed25519\":\n                    return createHash(\"sha512\");\n                case \"Ed448\":\n                    if (!shake256) {\n                        throw new TypeError(\"Ed448 *_hash calculation is not supported in your Node.js runtime version\");\n                    }\n                    return createHash(\"shake256\", {\n                        outputLength: 114\n                    });\n                default:\n                    throw new TypeError(\"unrecognized or invalid EdDSA curve provided\");\n            }\n        default:\n            throw new TypeError(\"unrecognized or invalid JWS algorithm provided\");\n    }\n}\nfunction generate(token, alg, crv) {\n    const digest = getHash(alg, crv).update(token).digest();\n    return encode(digest.slice(0, digest.length / 2));\n}\nfunction validate(names, actual, source, alg, crv) {\n    if (typeof names.claim !== \"string\" || !names.claim) {\n        throw new TypeError(\"names.claim must be a non-empty string\");\n    }\n    if (typeof names.source !== \"string\" || !names.source) {\n        throw new TypeError(\"names.source must be a non-empty string\");\n    }\n    assert(typeof actual === \"string\" && actual, `${names.claim} must be a non-empty string`);\n    assert(typeof source === \"string\" && source, `${names.source} must be a non-empty string`);\n    let expected;\n    let msg;\n    try {\n        expected = generate(source, alg, crv);\n    } catch (err) {\n        msg = format(\"%s could not be validated (%s)\", names.claim, err.message);\n    }\n    msg = msg || format(\"%s mismatch, expected %s, got: %s\", names.claim, expected, actual);\n    assert.equal(expected, actual, msg);\n}\nmodule.exports = {\n    validate,\n    generate\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb2lkYy10b2tlbi1oYXNoL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTSxFQUFFQSxRQUFRQyxNQUFNLEVBQUUsR0FBR0MsbUJBQU9BLENBQUM7QUFDbkMsTUFBTSxFQUFFQyxVQUFVLEVBQUUsR0FBR0QsbUJBQU9BLENBQUM7QUFDL0IsTUFBTSxFQUFFRSxNQUFNLEVBQUUsR0FBR0YsbUJBQU9BLENBQUM7QUFFM0IsTUFBTUcsV0FBV0gsbUJBQU9BLENBQUM7QUFFekIsSUFBSUk7QUFDSixJQUFJQyxPQUFPQyxXQUFXLGNBQWM7SUFDbENGLFNBQVMsQ0FBQ0csUUFBVUEsTUFBTUMsU0FBUztBQUNyQyxPQUFPO0lBQ0wsTUFBTUMsYUFBYSxDQUFDQyxTQUFXQSxPQUFPQyxRQUFRLE1BQU0sSUFBSUEsUUFBUSxPQUFPLEtBQUtBLFFBQVEsT0FBTztJQUMzRlAsU0FBUyxDQUFDRyxRQUFVRSxXQUFXRixNQUFNQyxTQUFTO0FBQ2hEO0FBRUE7Ozs7OztDQU1DLEdBRUQ7Ozs7Ozs7OztDQVNDLEdBQ0QsU0FBU0ksUUFBUUMsR0FBRyxFQUFFQyxHQUFHO0lBQ3ZCLE9BQVFEO1FBQ04sS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPWixXQUFXO1FBRXBCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPQSxXQUFXO1FBRXBCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPQSxXQUFXO1FBRXBCLEtBQUs7WUFDSCxPQUFRYTtnQkFDTixLQUFLO29CQUNILE9BQU9iLFdBQVc7Z0JBQ3BCLEtBQUs7b0JBQ0gsSUFBSSxDQUFDRSxVQUFVO3dCQUNiLE1BQU0sSUFBSVksVUFBVTtvQkFDdEI7b0JBRUEsT0FBT2QsV0FBVyxZQUFZO3dCQUFFZSxjQUFjO29CQUFJO2dCQUNwRDtvQkFDRSxNQUFNLElBQUlELFVBQVU7WUFDeEI7UUFFRjtZQUNFLE1BQU0sSUFBSUEsVUFBVTtJQUN4QjtBQUNGO0FBRUEsU0FBU0UsU0FBU0MsS0FBSyxFQUFFTCxHQUFHLEVBQUVDLEdBQUc7SUFDL0IsTUFBTUssU0FBU1AsUUFBUUMsS0FBS0MsS0FBS00sT0FBT0YsT0FBT0M7SUFDL0MsT0FBT2YsT0FBT2UsT0FBT0UsTUFBTSxHQUFHRixPQUFPRyxTQUFTO0FBQ2hEO0FBRUEsU0FBU0MsU0FBU0MsS0FBSyxFQUFFQyxNQUFNLEVBQUVDLE1BQU0sRUFBRWIsR0FBRyxFQUFFQyxHQUFHO0lBQy9DLElBQUksT0FBT1UsTUFBTUcsVUFBVSxZQUFZLENBQUNILE1BQU1HLE9BQU87UUFDbkQsTUFBTSxJQUFJWixVQUFVO0lBQ3RCO0lBRUEsSUFBSSxPQUFPUyxNQUFNRSxXQUFXLFlBQVksQ0FBQ0YsTUFBTUUsUUFBUTtRQUNyRCxNQUFNLElBQUlYLFVBQVU7SUFDdEI7SUFFQWhCLE9BQU8sT0FBTzBCLFdBQVcsWUFBWUEsUUFBUSxDQUFDLEVBQUVELE1BQU1HLE1BQU0sMkJBQTJCLENBQUM7SUFDeEY1QixPQUFPLE9BQU8yQixXQUFXLFlBQVlBLFFBQVEsQ0FBQyxFQUFFRixNQUFNRSxPQUFPLDJCQUEyQixDQUFDO0lBRXpGLElBQUlFO0lBQ0osSUFBSUM7SUFDSixJQUFJO1FBQ0ZELFdBQVdYLFNBQVNTLFFBQVFiLEtBQUtDO0lBQ25DLEVBQUUsT0FBT2dCLEtBQUs7UUFDWkQsTUFBTTNCLE9BQU8sa0NBQWtDc0IsTUFBTUcsT0FBT0csSUFBSUM7SUFDbEU7SUFFQUYsTUFBTUEsT0FBTzNCLE9BQU8scUNBQXFDc0IsTUFBTUcsT0FBT0MsVUFBVUg7SUFFaEYxQixPQUFPaUMsTUFBTUosVUFBVUgsUUFBUUk7QUFDakM7QUFFQUksT0FBT0MsVUFBVTtJQUNmWDtJQUNBTjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9vaWRjLXRva2VuLWhhc2gvbGliL2luZGV4LmpzP2M4MjMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBzdHJpY3Q6IGFzc2VydCB9ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7XG5jb25zdCB7IGNyZWF0ZUhhc2ggfSA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuY29uc3QgeyBmb3JtYXQgfSA9IHJlcXVpcmUoJ3V0aWwnKTtcblxuY29uc3Qgc2hha2UyNTYgPSByZXF1aXJlKCcuL3NoYWtlMjU2Jyk7XG5cbmxldCBlbmNvZGU7XG5pZiAoQnVmZmVyLmlzRW5jb2RpbmcoJ2Jhc2U2NHVybCcpKSB7XG4gIGVuY29kZSA9IChpbnB1dCkgPT4gaW5wdXQudG9TdHJpbmcoJ2Jhc2U2NHVybCcpO1xufSBlbHNlIHtcbiAgY29uc3QgZnJvbUJhc2U2NCA9IChiYXNlNjQpID0+IGJhc2U2NC5yZXBsYWNlKC89L2csICcnKS5yZXBsYWNlKC9cXCsvZywgJy0nKS5yZXBsYWNlKC9cXC8vZywgJ18nKTtcbiAgZW5jb2RlID0gKGlucHV0KSA9PiBmcm9tQmFzZTY0KGlucHV0LnRvU3RyaW5nKCdiYXNlNjQnKSk7XG59XG5cbi8qKiBTUEVDSUZJQ0FUSU9OXG4gKiBJdHMgKF9oYXNoKSB2YWx1ZSBpcyB0aGUgYmFzZTY0dXJsIGVuY29kaW5nIG9mIHRoZSBsZWZ0LW1vc3QgaGFsZiBvZiB0aGUgaGFzaCBvZiB0aGUgb2N0ZXRzIG9mXG4gKiB0aGUgQVNDSUkgcmVwcmVzZW50YXRpb24gb2YgdGhlIHRva2VuIHZhbHVlLCB3aGVyZSB0aGUgaGFzaCBhbGdvcml0aG0gdXNlZCBpcyB0aGUgaGFzaCBhbGdvcml0aG1cbiAqIHVzZWQgaW4gdGhlIGFsZyBIZWFkZXIgUGFyYW1ldGVyIG9mIHRoZSBJRCBUb2tlbidzIEpPU0UgSGVhZGVyLiBGb3IgaW5zdGFuY2UsIGlmIHRoZSBhbGcgaXNcbiAqIFJTMjU2LCBoYXNoIHRoZSB0b2tlbiB2YWx1ZSB3aXRoIFNIQS0yNTYsIHRoZW4gdGFrZSB0aGUgbGVmdC1tb3N0IDEyOCBiaXRzIGFuZCBiYXNlNjR1cmwgZW5jb2RlXG4gKiB0aGVtLiBUaGUgX2hhc2ggdmFsdWUgaXMgYSBjYXNlIHNlbnNpdGl2ZSBzdHJpbmcuXG4gKi9cblxuLyoqXG4gKiBAbmFtZSBnZXRIYXNoXG4gKiBAYXBpIHByaXZhdGVcbiAqXG4gKiByZXR1cm5zIHRoZSBzaGEgbGVuZ3RoIGJhc2VkIG9mZiB0aGUgSk9TRSBhbGcgaGVhZGUgdmFsdWUsIGRlZmF1bHRzIHRvIHNoYTI1NlxuICpcbiAqIEBwYXJhbSB0b2tlbiB7U3RyaW5nfSB0b2tlbiB2YWx1ZSB0byBnZW5lcmF0ZSB0aGUgaGFzaCBmcm9tXG4gKiBAcGFyYW0gYWxnIHtTdHJpbmd9IElEIFRva2VuIEpPU0UgaGVhZGVyIGFsZyB2YWx1ZSAoaS5lLiBSUzI1NiwgSFMzODQsIEVTNTEyLCBQUzI1NilcbiAqIEBwYXJhbSBbY3J2XSB7U3RyaW5nfSBGb3IgRWREU0EgdGhlIGN1cnZlIGRlY2lkZXMgd2hhdCBoYXNoIGFsZ29yaXRobSBpcyB1c2VkLiBSZXF1aXJlZCBmb3IgRWREU0FcbiAqL1xuZnVuY3Rpb24gZ2V0SGFzaChhbGcsIGNydikge1xuICBzd2l0Y2ggKGFsZykge1xuICAgIGNhc2UgJ0hTMjU2JzpcbiAgICBjYXNlICdSUzI1Nic6XG4gICAgY2FzZSAnUFMyNTYnOlxuICAgIGNhc2UgJ0VTMjU2JzpcbiAgICBjYXNlICdFUzI1NksnOlxuICAgICAgcmV0dXJuIGNyZWF0ZUhhc2goJ3NoYTI1NicpO1xuXG4gICAgY2FzZSAnSFMzODQnOlxuICAgIGNhc2UgJ1JTMzg0JzpcbiAgICBjYXNlICdQUzM4NCc6XG4gICAgY2FzZSAnRVMzODQnOlxuICAgICAgcmV0dXJuIGNyZWF0ZUhhc2goJ3NoYTM4NCcpO1xuXG4gICAgY2FzZSAnSFM1MTInOlxuICAgIGNhc2UgJ1JTNTEyJzpcbiAgICBjYXNlICdQUzUxMic6XG4gICAgY2FzZSAnRVM1MTInOlxuICAgICAgcmV0dXJuIGNyZWF0ZUhhc2goJ3NoYTUxMicpO1xuXG4gICAgY2FzZSAnRWREU0EnOlxuICAgICAgc3dpdGNoIChjcnYpIHtcbiAgICAgICAgY2FzZSAnRWQyNTUxOSc6XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZUhhc2goJ3NoYTUxMicpO1xuICAgICAgICBjYXNlICdFZDQ0OCc6XG4gICAgICAgICAgaWYgKCFzaGFrZTI1Nikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRWQ0NDggKl9oYXNoIGNhbGN1bGF0aW9uIGlzIG5vdCBzdXBwb3J0ZWQgaW4geW91ciBOb2RlLmpzIHJ1bnRpbWUgdmVyc2lvbicpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiBjcmVhdGVIYXNoKCdzaGFrZTI1NicsIHsgb3V0cHV0TGVuZ3RoOiAxMTQgfSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigndW5yZWNvZ25pemVkIG9yIGludmFsaWQgRWREU0EgY3VydmUgcHJvdmlkZWQnKTtcbiAgICAgIH1cblxuICAgIGRlZmF1bHQ6XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCd1bnJlY29nbml6ZWQgb3IgaW52YWxpZCBKV1MgYWxnb3JpdGhtIHByb3ZpZGVkJyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGUodG9rZW4sIGFsZywgY3J2KSB7XG4gIGNvbnN0IGRpZ2VzdCA9IGdldEhhc2goYWxnLCBjcnYpLnVwZGF0ZSh0b2tlbikuZGlnZXN0KCk7XG4gIHJldHVybiBlbmNvZGUoZGlnZXN0LnNsaWNlKDAsIGRpZ2VzdC5sZW5ndGggLyAyKSk7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlKG5hbWVzLCBhY3R1YWwsIHNvdXJjZSwgYWxnLCBjcnYpIHtcbiAgaWYgKHR5cGVvZiBuYW1lcy5jbGFpbSAhPT0gJ3N0cmluZycgfHwgIW5hbWVzLmNsYWltKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignbmFtZXMuY2xhaW0gbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmcnKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgbmFtZXMuc291cmNlICE9PSAnc3RyaW5nJyB8fCAhbmFtZXMuc291cmNlKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignbmFtZXMuc291cmNlIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nJyk7XG4gIH1cblxuICBhc3NlcnQodHlwZW9mIGFjdHVhbCA9PT0gJ3N0cmluZycgJiYgYWN0dWFsLCBgJHtuYW1lcy5jbGFpbX0gbXVzdCBiZSBhIG5vbi1lbXB0eSBzdHJpbmdgKTtcbiAgYXNzZXJ0KHR5cGVvZiBzb3VyY2UgPT09ICdzdHJpbmcnICYmIHNvdXJjZSwgYCR7bmFtZXMuc291cmNlfSBtdXN0IGJlIGEgbm9uLWVtcHR5IHN0cmluZ2ApO1xuXG4gIGxldCBleHBlY3RlZDtcbiAgbGV0IG1zZztcbiAgdHJ5IHtcbiAgICBleHBlY3RlZCA9IGdlbmVyYXRlKHNvdXJjZSwgYWxnLCBjcnYpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICBtc2cgPSBmb3JtYXQoJyVzIGNvdWxkIG5vdCBiZSB2YWxpZGF0ZWQgKCVzKScsIG5hbWVzLmNsYWltLCBlcnIubWVzc2FnZSk7XG4gIH1cblxuICBtc2cgPSBtc2cgfHwgZm9ybWF0KCclcyBtaXNtYXRjaCwgZXhwZWN0ZWQgJXMsIGdvdDogJXMnLCBuYW1lcy5jbGFpbSwgZXhwZWN0ZWQsIGFjdHVhbCk7XG5cbiAgYXNzZXJ0LmVxdWFsKGV4cGVjdGVkLCBhY3R1YWwsIG1zZyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICB2YWxpZGF0ZSxcbiAgZ2VuZXJhdGUsXG59O1xuIl0sIm5hbWVzIjpbInN0cmljdCIsImFzc2VydCIsInJlcXVpcmUiLCJjcmVhdGVIYXNoIiwiZm9ybWF0Iiwic2hha2UyNTYiLCJlbmNvZGUiLCJCdWZmZXIiLCJpc0VuY29kaW5nIiwiaW5wdXQiLCJ0b1N0cmluZyIsImZyb21CYXNlNjQiLCJiYXNlNjQiLCJyZXBsYWNlIiwiZ2V0SGFzaCIsImFsZyIsImNydiIsIlR5cGVFcnJvciIsIm91dHB1dExlbmd0aCIsImdlbmVyYXRlIiwidG9rZW4iLCJkaWdlc3QiLCJ1cGRhdGUiLCJzbGljZSIsImxlbmd0aCIsInZhbGlkYXRlIiwibmFtZXMiLCJhY3R1YWwiLCJzb3VyY2UiLCJjbGFpbSIsImV4cGVjdGVkIiwibXNnIiwiZXJyIiwibWVzc2FnZSIsImVxdWFsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oidc-token-hash/lib/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/oidc-token-hash/lib/shake256.js":
/*!******************************************************!*\
  !*** ./node_modules/oidc-token-hash/lib/shake256.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst [major, minor] = process.version.substring(1).split(\".\").map((x)=>parseInt(x, 10));\nconst xofOutputLength = major > 12 || major === 12 && minor >= 8;\nconst shake256 = xofOutputLength && crypto.getHashes().includes(\"shake256\");\nmodule.exports = shake256;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb2lkYy10b2tlbi1oYXNoL2xpYi9zaGFrZTI1Ni5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFFdkIsTUFBTSxDQUFDQyxPQUFPQyxNQUFNLEdBQUdDLFFBQVFDLFFBQVFDLFVBQVUsR0FBR0MsTUFBTSxLQUFLQyxJQUFJLENBQUNDLElBQU1DLFNBQVNELEdBQUc7QUFDdEYsTUFBTUUsa0JBQWtCVCxRQUFRLE1BQU9BLFVBQVUsTUFBTUMsU0FBUztBQUNoRSxNQUFNUyxXQUFXRCxtQkFBbUJYLE9BQU9hLFlBQVlDLFNBQVM7QUFFaEVDLE9BQU9DLFVBQVVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9vaWRjLXRva2VuLWhhc2gvbGliL3NoYWtlMjU2LmpzPzgyNDUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG5cbmNvbnN0IFttYWpvciwgbWlub3JdID0gcHJvY2Vzcy52ZXJzaW9uLnN1YnN0cmluZygxKS5zcGxpdCgnLicpLm1hcCgoeCkgPT4gcGFyc2VJbnQoeCwgMTApKTtcbmNvbnN0IHhvZk91dHB1dExlbmd0aCA9IG1ham9yID4gMTIgfHwgKG1ham9yID09PSAxMiAmJiBtaW5vciA+PSA4KTtcbmNvbnN0IHNoYWtlMjU2ID0geG9mT3V0cHV0TGVuZ3RoICYmIGNyeXB0by5nZXRIYXNoZXMoKS5pbmNsdWRlcygnc2hha2UyNTYnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBzaGFrZTI1NjtcbiJdLCJuYW1lcyI6WyJjcnlwdG8iLCJyZXF1aXJlIiwibWFqb3IiLCJtaW5vciIsInByb2Nlc3MiLCJ2ZXJzaW9uIiwic3Vic3RyaW5nIiwic3BsaXQiLCJtYXAiLCJ4IiwicGFyc2VJbnQiLCJ4b2ZPdXRwdXRMZW5ndGgiLCJzaGFrZTI1NiIsImdldEhhc2hlcyIsImluY2x1ZGVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/oidc-token-hash/lib/shake256.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/client.js":
/*!**************************************************!*\
  !*** ./node_modules/openid-client/lib/client.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { inspect } = __webpack_require__(/*! util */ \"util\");\nconst stdhttp = __webpack_require__(/*! http */ \"http\");\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst { strict: assert } = __webpack_require__(/*! assert */ \"assert\");\nconst querystring = __webpack_require__(/*! querystring */ \"querystring\");\nconst url = __webpack_require__(/*! url */ \"url\");\nconst jose = __webpack_require__(/*! jose */ \"(sc_server)/./node_modules/jose/dist/node/cjs/index.js\");\nconst tokenHash = __webpack_require__(/*! oidc-token-hash */ \"(sc_server)/./node_modules/oidc-token-hash/lib/index.js\");\nconst isKeyObject = __webpack_require__(/*! ./helpers/is_key_object */ \"(sc_server)/./node_modules/openid-client/lib/helpers/is_key_object.js\");\nconst decodeJWT = __webpack_require__(/*! ./helpers/decode_jwt */ \"(sc_server)/./node_modules/openid-client/lib/helpers/decode_jwt.js\");\nconst base64url = __webpack_require__(/*! ./helpers/base64url */ \"(sc_server)/./node_modules/openid-client/lib/helpers/base64url.js\");\nconst defaults = __webpack_require__(/*! ./helpers/defaults */ \"(sc_server)/./node_modules/openid-client/lib/helpers/defaults.js\");\nconst parseWwwAuthenticate = __webpack_require__(/*! ./helpers/www_authenticate_parser */ \"(sc_server)/./node_modules/openid-client/lib/helpers/www_authenticate_parser.js\");\nconst { assertSigningAlgValuesSupport, assertIssuerConfiguration } = __webpack_require__(/*! ./helpers/assert */ \"(sc_server)/./node_modules/openid-client/lib/helpers/assert.js\");\nconst pick = __webpack_require__(/*! ./helpers/pick */ \"(sc_server)/./node_modules/openid-client/lib/helpers/pick.js\");\nconst isPlainObject = __webpack_require__(/*! ./helpers/is_plain_object */ \"(sc_server)/./node_modules/openid-client/lib/helpers/is_plain_object.js\");\nconst processResponse = __webpack_require__(/*! ./helpers/process_response */ \"(sc_server)/./node_modules/openid-client/lib/helpers/process_response.js\");\nconst TokenSet = __webpack_require__(/*! ./token_set */ \"(sc_server)/./node_modules/openid-client/lib/token_set.js\");\nconst { OPError, RPError } = __webpack_require__(/*! ./errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst now = __webpack_require__(/*! ./helpers/unix_timestamp */ \"(sc_server)/./node_modules/openid-client/lib/helpers/unix_timestamp.js\");\nconst { random } = __webpack_require__(/*! ./helpers/generators */ \"(sc_server)/./node_modules/openid-client/lib/helpers/generators.js\");\nconst request = __webpack_require__(/*! ./helpers/request */ \"(sc_server)/./node_modules/openid-client/lib/helpers/request.js\");\nconst { CLOCK_TOLERANCE } = __webpack_require__(/*! ./helpers/consts */ \"(sc_server)/./node_modules/openid-client/lib/helpers/consts.js\");\nconst { keystores } = __webpack_require__(/*! ./helpers/weak_cache */ \"(sc_server)/./node_modules/openid-client/lib/helpers/weak_cache.js\");\nconst KeyStore = __webpack_require__(/*! ./helpers/keystore */ \"(sc_server)/./node_modules/openid-client/lib/helpers/keystore.js\");\nconst clone = __webpack_require__(/*! ./helpers/deep_clone */ \"(sc_server)/./node_modules/openid-client/lib/helpers/deep_clone.js\");\nconst { authenticatedPost, resolveResponseType, resolveRedirectUri } = __webpack_require__(/*! ./helpers/client */ \"(sc_server)/./node_modules/openid-client/lib/helpers/client.js\");\nconst { queryKeyStore } = __webpack_require__(/*! ./helpers/issuer */ \"(sc_server)/./node_modules/openid-client/lib/helpers/issuer.js\");\nconst DeviceFlowHandle = __webpack_require__(/*! ./device_flow_handle */ \"(sc_server)/./node_modules/openid-client/lib/device_flow_handle.js\");\nconst [major, minor] = process.version.slice(1).split(\".\").map((str)=>parseInt(str, 10));\nconst rsaPssParams = major >= 17 || major === 16 && minor >= 9;\nconst retryAttempt = Symbol();\nconst skipNonceCheck = Symbol();\nconst skipMaxAgeCheck = Symbol();\nfunction pickCb(input) {\n    return pick(input, \"access_token\", \"code\", \"error_description\", \"error_uri\", \"error\", \"expires_in\", \"id_token\", \"iss\", \"response\", \"session_state\", \"state\", \"token_type\");\n}\nfunction authorizationHeaderValue(token, tokenType = \"Bearer\") {\n    return `${tokenType} ${token}`;\n}\nfunction verifyPresence(payload, jwt, prop) {\n    if (payload[prop] === undefined) {\n        throw new RPError({\n            message: `missing required JWT property ${prop}`,\n            jwt\n        });\n    }\n}\nfunction authorizationParams(params) {\n    const authParams = {\n        client_id: this.client_id,\n        scope: \"openid\",\n        response_type: resolveResponseType.call(this),\n        redirect_uri: resolveRedirectUri.call(this),\n        ...params\n    };\n    Object.entries(authParams).forEach(([key, value])=>{\n        if (value === null || value === undefined) {\n            delete authParams[key];\n        } else if (key === \"claims\" && typeof value === \"object\") {\n            authParams[key] = JSON.stringify(value);\n        } else if (key === \"resource\" && Array.isArray(value)) {\n            authParams[key] = value;\n        } else if (typeof value !== \"string\") {\n            authParams[key] = String(value);\n        }\n    });\n    return authParams;\n}\nfunction getKeystore(jwks) {\n    if (!isPlainObject(jwks) || !Array.isArray(jwks.keys) || jwks.keys.some((k)=>!isPlainObject(k) || !(\"kty\" in k))) {\n        throw new TypeError(\"jwks must be a JSON Web Key Set formatted object\");\n    }\n    return KeyStore.fromJWKS(jwks, {\n        onlyPrivate: true\n    });\n}\n// if an OP doesnt support client_secret_basic but supports client_secret_post, use it instead\n// this is in place to take care of most common pitfalls when first using discovered Issuers without\n// the support for default values defined by Discovery 1.0\nfunction checkBasicSupport(client, properties) {\n    try {\n        const supported = client.issuer.token_endpoint_auth_methods_supported;\n        if (!supported.includes(properties.token_endpoint_auth_method)) {\n            if (supported.includes(\"client_secret_post\")) {\n                properties.token_endpoint_auth_method = \"client_secret_post\";\n            }\n        }\n    } catch (err) {}\n}\nfunction handleCommonMistakes(client, metadata, properties) {\n    if (!metadata.token_endpoint_auth_method) {\n        // if no explicit value was provided\n        checkBasicSupport(client, properties);\n    }\n    // :fp: c'mon people... RTFM\n    if (metadata.redirect_uri) {\n        if (metadata.redirect_uris) {\n            throw new TypeError(\"provide a redirect_uri or redirect_uris, not both\");\n        }\n        properties.redirect_uris = [\n            metadata.redirect_uri\n        ];\n        delete properties.redirect_uri;\n    }\n    if (metadata.response_type) {\n        if (metadata.response_types) {\n            throw new TypeError(\"provide a response_type or response_types, not both\");\n        }\n        properties.response_types = [\n            metadata.response_type\n        ];\n        delete properties.response_type;\n    }\n}\nfunction getDefaultsForEndpoint(endpoint, issuer, properties) {\n    if (!issuer[`${endpoint}_endpoint`]) return;\n    const tokenEndpointAuthMethod = properties.token_endpoint_auth_method;\n    const tokenEndpointAuthSigningAlg = properties.token_endpoint_auth_signing_alg;\n    const eam = `${endpoint}_endpoint_auth_method`;\n    const easa = `${endpoint}_endpoint_auth_signing_alg`;\n    if (properties[eam] === undefined && properties[easa] === undefined) {\n        if (tokenEndpointAuthMethod !== undefined) {\n            properties[eam] = tokenEndpointAuthMethod;\n        }\n        if (tokenEndpointAuthSigningAlg !== undefined) {\n            properties[easa] = tokenEndpointAuthSigningAlg;\n        }\n    }\n}\nclass BaseClient {\n    #metadata;\n    #issuer;\n    #aadIssValidation;\n    #additionalAuthorizedParties;\n    constructor(issuer, aadIssValidation, metadata = {}, jwks, options){\n        this.#metadata = new Map();\n        this.#issuer = issuer;\n        this.#aadIssValidation = aadIssValidation;\n        if (typeof metadata.client_id !== \"string\" || !metadata.client_id) {\n            throw new TypeError(\"client_id is required\");\n        }\n        const properties = {\n            grant_types: [\n                \"authorization_code\"\n            ],\n            id_token_signed_response_alg: \"RS256\",\n            authorization_signed_response_alg: \"RS256\",\n            response_types: [\n                \"code\"\n            ],\n            token_endpoint_auth_method: \"client_secret_basic\",\n            ...this.fapi() ? {\n                grant_types: [\n                    \"authorization_code\",\n                    \"implicit\"\n                ],\n                id_token_signed_response_alg: \"PS256\",\n                authorization_signed_response_alg: \"PS256\",\n                response_types: [\n                    \"code id_token\"\n                ],\n                tls_client_certificate_bound_access_tokens: true,\n                token_endpoint_auth_method: undefined\n            } : undefined,\n            ...metadata\n        };\n        if (this.fapi()) {\n            switch(properties.token_endpoint_auth_method){\n                case \"self_signed_tls_client_auth\":\n                case \"tls_client_auth\":\n                    break;\n                case \"private_key_jwt\":\n                    if (!jwks) {\n                        throw new TypeError(\"jwks is required\");\n                    }\n                    break;\n                case undefined:\n                    throw new TypeError(\"token_endpoint_auth_method is required\");\n                default:\n                    throw new TypeError(\"invalid or unsupported token_endpoint_auth_method\");\n            }\n        }\n        handleCommonMistakes(this, metadata, properties);\n        assertSigningAlgValuesSupport(\"token\", this.issuer, properties);\n        [\n            \"introspection\",\n            \"revocation\"\n        ].forEach((endpoint)=>{\n            getDefaultsForEndpoint(endpoint, this.issuer, properties);\n            assertSigningAlgValuesSupport(endpoint, this.issuer, properties);\n        });\n        Object.entries(properties).forEach(([key, value])=>{\n            this.#metadata.set(key, value);\n            if (!this[key]) {\n                Object.defineProperty(this, key, {\n                    get () {\n                        return this.#metadata.get(key);\n                    },\n                    enumerable: true\n                });\n            }\n        });\n        if (jwks !== undefined) {\n            const keystore = getKeystore.call(this, jwks);\n            keystores.set(this, keystore);\n        }\n        if (options != null && options.additionalAuthorizedParties) {\n            this.#additionalAuthorizedParties = clone(options.additionalAuthorizedParties);\n        }\n        this[CLOCK_TOLERANCE] = 0;\n    }\n    authorizationUrl(params = {}) {\n        if (!isPlainObject(params)) {\n            throw new TypeError(\"params must be a plain object\");\n        }\n        assertIssuerConfiguration(this.issuer, \"authorization_endpoint\");\n        const target = url.parse(this.issuer.authorization_endpoint, true);\n        target.search = null;\n        target.query = {\n            ...target.query,\n            ...authorizationParams.call(this, params)\n        };\n        return url.format(target);\n    }\n    authorizationPost(params = {}) {\n        if (!isPlainObject(params)) {\n            throw new TypeError(\"params must be a plain object\");\n        }\n        const inputs = authorizationParams.call(this, params);\n        const formInputs = Object.keys(inputs).map((name)=>`<input type=\"hidden\" name=\"${name}\" value=\"${inputs[name]}\"/>`).join(\"\\n\");\n        return `<!DOCTYPE html>\n<head>\n<title>Requesting Authorization</title>\n</head>\n<body onload=\"javascript:document.forms[0].submit()\">\n<form method=\"post\" action=\"${this.issuer.authorization_endpoint}\">\n  ${formInputs}\n</form>\n</body>\n</html>`;\n    }\n    endSessionUrl(params = {}) {\n        assertIssuerConfiguration(this.issuer, \"end_session_endpoint\");\n        const { 0: postLogout, length } = this.post_logout_redirect_uris || [];\n        const { post_logout_redirect_uri = length === 1 ? postLogout : undefined } = params;\n        let id_token_hint;\n        ({ id_token_hint, ...params } = params);\n        if (id_token_hint instanceof TokenSet) {\n            if (!id_token_hint.id_token) {\n                throw new TypeError(\"id_token not present in TokenSet\");\n            }\n            id_token_hint = id_token_hint.id_token;\n        }\n        const target = url.parse(this.issuer.end_session_endpoint, true);\n        target.search = null;\n        defaults(target.query, params, {\n            post_logout_redirect_uri,\n            client_id: this.client_id\n        }, {\n            id_token_hint\n        });\n        Object.entries(target.query).forEach(([key, value])=>{\n            if (value === null || value === undefined) {\n                delete target.query[key];\n            }\n        });\n        return url.format(target);\n    }\n    callbackParams(input) {\n        const isIncomingMessage = input instanceof stdhttp.IncomingMessage || input && input.method && input.url;\n        const isString = typeof input === \"string\";\n        if (!isString && !isIncomingMessage) {\n            throw new TypeError(\"#callbackParams only accepts string urls, http.IncomingMessage or a lookalike\");\n        }\n        if (isIncomingMessage) {\n            switch(input.method){\n                case \"GET\":\n                    return pickCb(url.parse(input.url, true).query);\n                case \"POST\":\n                    if (input.body === undefined) {\n                        throw new TypeError(\"incoming message body missing, include a body parser prior to this method call\");\n                    }\n                    switch(typeof input.body){\n                        case \"object\":\n                        case \"string\":\n                            if (Buffer.isBuffer(input.body)) {\n                                return pickCb(querystring.parse(input.body.toString(\"utf-8\")));\n                            }\n                            if (typeof input.body === \"string\") {\n                                return pickCb(querystring.parse(input.body));\n                            }\n                            return pickCb(input.body);\n                        default:\n                            throw new TypeError(\"invalid IncomingMessage body object\");\n                    }\n                default:\n                    throw new TypeError(\"invalid IncomingMessage method\");\n            }\n        } else {\n            return pickCb(url.parse(input, true).query);\n        }\n    }\n    async callback(redirectUri, parameters, checks = {}, { exchangeBody, clientAssertionPayload, DPoP } = {}) {\n        let params = pickCb(parameters);\n        if (checks.jarm && !(\"response\" in parameters)) {\n            throw new RPError({\n                message: \"expected a JARM response\",\n                checks,\n                params\n            });\n        } else if (\"response\" in parameters) {\n            const decrypted = await this.decryptJARM(params.response);\n            params = await this.validateJARM(decrypted);\n        }\n        if (this.default_max_age && !checks.max_age) {\n            checks.max_age = this.default_max_age;\n        }\n        if (params.state && !checks.state) {\n            throw new TypeError(\"checks.state argument is missing\");\n        }\n        if (!params.state && checks.state) {\n            throw new RPError({\n                message: \"state missing from the response\",\n                checks,\n                params\n            });\n        }\n        if (checks.state !== params.state) {\n            throw new RPError({\n                printf: [\n                    \"state mismatch, expected %s, got: %s\",\n                    checks.state,\n                    params.state\n                ],\n                checks,\n                params\n            });\n        }\n        if (\"iss\" in params) {\n            assertIssuerConfiguration(this.issuer, \"issuer\");\n            if (params.iss !== this.issuer.issuer) {\n                throw new RPError({\n                    printf: [\n                        \"iss mismatch, expected %s, got: %s\",\n                        this.issuer.issuer,\n                        params.iss\n                    ],\n                    params\n                });\n            }\n        } else if (this.issuer.authorization_response_iss_parameter_supported && !(\"id_token\" in params) && !(\"response\" in parameters)) {\n            throw new RPError({\n                message: \"iss missing from the response\",\n                params\n            });\n        }\n        if (params.error) {\n            throw new OPError(params);\n        }\n        const RESPONSE_TYPE_REQUIRED_PARAMS = {\n            code: [\n                \"code\"\n            ],\n            id_token: [\n                \"id_token\"\n            ],\n            token: [\n                \"access_token\",\n                \"token_type\"\n            ]\n        };\n        if (checks.response_type) {\n            for (const type of checks.response_type.split(\" \")){\n                if (type === \"none\") {\n                    if (params.code || params.id_token || params.access_token) {\n                        throw new RPError({\n                            message: 'unexpected params encountered for \"none\" response',\n                            checks,\n                            params\n                        });\n                    }\n                } else {\n                    for (const param of RESPONSE_TYPE_REQUIRED_PARAMS[type]){\n                        if (!params[param]) {\n                            throw new RPError({\n                                message: `${param} missing from response`,\n                                checks,\n                                params\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (params.id_token) {\n            const tokenset = new TokenSet(params);\n            await this.decryptIdToken(tokenset);\n            await this.validateIdToken(tokenset, checks.nonce, \"authorization\", checks.max_age, checks.state);\n            if (!params.code) {\n                return tokenset;\n            }\n        }\n        if (params.code) {\n            const tokenset = await this.grant({\n                ...exchangeBody,\n                grant_type: \"authorization_code\",\n                code: params.code,\n                redirect_uri: redirectUri,\n                code_verifier: checks.code_verifier\n            }, {\n                clientAssertionPayload,\n                DPoP\n            });\n            await this.decryptIdToken(tokenset);\n            await this.validateIdToken(tokenset, checks.nonce, \"token\", checks.max_age);\n            if (params.session_state) {\n                tokenset.session_state = params.session_state;\n            }\n            return tokenset;\n        }\n        return new TokenSet(params);\n    }\n    async oauthCallback(redirectUri, parameters, checks = {}, { exchangeBody, clientAssertionPayload, DPoP } = {}) {\n        let params = pickCb(parameters);\n        if (checks.jarm && !(\"response\" in parameters)) {\n            throw new RPError({\n                message: \"expected a JARM response\",\n                checks,\n                params\n            });\n        } else if (\"response\" in parameters) {\n            const decrypted = await this.decryptJARM(params.response);\n            params = await this.validateJARM(decrypted);\n        }\n        if (params.state && !checks.state) {\n            throw new TypeError(\"checks.state argument is missing\");\n        }\n        if (!params.state && checks.state) {\n            throw new RPError({\n                message: \"state missing from the response\",\n                checks,\n                params\n            });\n        }\n        if (checks.state !== params.state) {\n            throw new RPError({\n                printf: [\n                    \"state mismatch, expected %s, got: %s\",\n                    checks.state,\n                    params.state\n                ],\n                checks,\n                params\n            });\n        }\n        if (\"iss\" in params) {\n            assertIssuerConfiguration(this.issuer, \"issuer\");\n            if (params.iss !== this.issuer.issuer) {\n                throw new RPError({\n                    printf: [\n                        \"iss mismatch, expected %s, got: %s\",\n                        this.issuer.issuer,\n                        params.iss\n                    ],\n                    params\n                });\n            }\n        } else if (this.issuer.authorization_response_iss_parameter_supported && !(\"id_token\" in params) && !(\"response\" in parameters)) {\n            throw new RPError({\n                message: \"iss missing from the response\",\n                params\n            });\n        }\n        if (params.error) {\n            throw new OPError(params);\n        }\n        if (typeof params.id_token === \"string\" && params.id_token.length) {\n            throw new RPError({\n                message: \"id_token detected in the response, you must use client.callback() instead of client.oauthCallback()\",\n                params\n            });\n        }\n        delete params.id_token;\n        const RESPONSE_TYPE_REQUIRED_PARAMS = {\n            code: [\n                \"code\"\n            ],\n            token: [\n                \"access_token\",\n                \"token_type\"\n            ]\n        };\n        if (checks.response_type) {\n            for (const type of checks.response_type.split(\" \")){\n                if (type === \"none\") {\n                    if (params.code || params.id_token || params.access_token) {\n                        throw new RPError({\n                            message: 'unexpected params encountered for \"none\" response',\n                            checks,\n                            params\n                        });\n                    }\n                }\n                if (RESPONSE_TYPE_REQUIRED_PARAMS[type]) {\n                    for (const param of RESPONSE_TYPE_REQUIRED_PARAMS[type]){\n                        if (!params[param]) {\n                            throw new RPError({\n                                message: `${param} missing from response`,\n                                checks,\n                                params\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (params.code) {\n            const tokenset = await this.grant({\n                ...exchangeBody,\n                grant_type: \"authorization_code\",\n                code: params.code,\n                redirect_uri: redirectUri,\n                code_verifier: checks.code_verifier\n            }, {\n                clientAssertionPayload,\n                DPoP\n            });\n            if (typeof tokenset.id_token === \"string\" && tokenset.id_token.length) {\n                throw new RPError({\n                    message: \"id_token detected in the response, you must use client.callback() instead of client.oauthCallback()\",\n                    params\n                });\n            }\n            delete tokenset.id_token;\n            return tokenset;\n        }\n        return new TokenSet(params);\n    }\n    async decryptIdToken(token) {\n        if (!this.id_token_encrypted_response_alg) {\n            return token;\n        }\n        let idToken = token;\n        if (idToken instanceof TokenSet) {\n            if (!idToken.id_token) {\n                throw new TypeError(\"id_token not present in TokenSet\");\n            }\n            idToken = idToken.id_token;\n        }\n        const expectedAlg = this.id_token_encrypted_response_alg;\n        const expectedEnc = this.id_token_encrypted_response_enc;\n        const result = await this.decryptJWE(idToken, expectedAlg, expectedEnc);\n        if (token instanceof TokenSet) {\n            token.id_token = result;\n            return token;\n        }\n        return result;\n    }\n    async validateJWTUserinfo(body) {\n        const expectedAlg = this.userinfo_signed_response_alg;\n        return this.validateJWT(body, expectedAlg, []);\n    }\n    async decryptJARM(response) {\n        if (!this.authorization_encrypted_response_alg) {\n            return response;\n        }\n        const expectedAlg = this.authorization_encrypted_response_alg;\n        const expectedEnc = this.authorization_encrypted_response_enc;\n        return this.decryptJWE(response, expectedAlg, expectedEnc);\n    }\n    async decryptJWTUserinfo(body) {\n        if (!this.userinfo_encrypted_response_alg) {\n            return body;\n        }\n        const expectedAlg = this.userinfo_encrypted_response_alg;\n        const expectedEnc = this.userinfo_encrypted_response_enc;\n        return this.decryptJWE(body, expectedAlg, expectedEnc);\n    }\n    async decryptJWE(jwe, expectedAlg, expectedEnc = \"A128CBC-HS256\") {\n        const header = JSON.parse(base64url.decode(jwe.split(\".\")[0]));\n        if (header.alg !== expectedAlg) {\n            throw new RPError({\n                printf: [\n                    \"unexpected JWE alg received, expected %s, got: %s\",\n                    expectedAlg,\n                    header.alg\n                ],\n                jwt: jwe\n            });\n        }\n        if (header.enc !== expectedEnc) {\n            throw new RPError({\n                printf: [\n                    \"unexpected JWE enc received, expected %s, got: %s\",\n                    expectedEnc,\n                    header.enc\n                ],\n                jwt: jwe\n            });\n        }\n        const getPlaintext = (result)=>new TextDecoder().decode(result.plaintext);\n        let plaintext;\n        if (expectedAlg.match(/^(?:RSA|ECDH)/)) {\n            const keystore = await keystores.get(this);\n            for (const { keyObject: key } of keystore.all({\n                ...jose.decodeProtectedHeader(jwe),\n                use: \"enc\"\n            })){\n                plaintext = await jose.compactDecrypt(jwe, key).then(getPlaintext, ()=>{});\n                if (plaintext) break;\n            }\n        } else {\n            plaintext = await jose.compactDecrypt(jwe, this.secretForAlg(expectedAlg === \"dir\" ? expectedEnc : expectedAlg)).then(getPlaintext, ()=>{});\n        }\n        if (!plaintext) {\n            throw new RPError({\n                message: \"failed to decrypt JWE\",\n                jwt: jwe\n            });\n        }\n        return plaintext;\n    }\n    async validateIdToken(tokenSet, nonce, returnedBy, maxAge, state) {\n        let idToken = tokenSet;\n        const expectedAlg = this.id_token_signed_response_alg;\n        const isTokenSet = idToken instanceof TokenSet;\n        if (isTokenSet) {\n            if (!idToken.id_token) {\n                throw new TypeError(\"id_token not present in TokenSet\");\n            }\n            idToken = idToken.id_token;\n        }\n        idToken = String(idToken);\n        const timestamp = now();\n        const { protected: header, payload, key } = await this.validateJWT(idToken, expectedAlg);\n        if (typeof maxAge === \"number\" || maxAge !== skipMaxAgeCheck && this.require_auth_time) {\n            if (!payload.auth_time) {\n                throw new RPError({\n                    message: \"missing required JWT property auth_time\",\n                    jwt: idToken\n                });\n            }\n            if (typeof payload.auth_time !== \"number\") {\n                throw new RPError({\n                    message: \"JWT auth_time claim must be a JSON numeric value\",\n                    jwt: idToken\n                });\n            }\n        }\n        if (typeof maxAge === \"number\" && payload.auth_time + maxAge < timestamp - this[CLOCK_TOLERANCE]) {\n            throw new RPError({\n                printf: [\n                    \"too much time has elapsed since the last End-User authentication, max_age %i, auth_time: %i, now %i\",\n                    maxAge,\n                    payload.auth_time,\n                    timestamp - this[CLOCK_TOLERANCE]\n                ],\n                now: timestamp,\n                tolerance: this[CLOCK_TOLERANCE],\n                auth_time: payload.auth_time,\n                jwt: idToken\n            });\n        }\n        if (nonce !== skipNonceCheck && (payload.nonce || nonce !== undefined) && payload.nonce !== nonce) {\n            throw new RPError({\n                printf: [\n                    \"nonce mismatch, expected %s, got: %s\",\n                    nonce,\n                    payload.nonce\n                ],\n                jwt: idToken\n            });\n        }\n        if (returnedBy === \"authorization\") {\n            if (!payload.at_hash && tokenSet.access_token) {\n                throw new RPError({\n                    message: \"missing required property at_hash\",\n                    jwt: idToken\n                });\n            }\n            if (!payload.c_hash && tokenSet.code) {\n                throw new RPError({\n                    message: \"missing required property c_hash\",\n                    jwt: idToken\n                });\n            }\n            if (this.fapi()) {\n                if (!payload.s_hash && (tokenSet.state || state)) {\n                    throw new RPError({\n                        message: \"missing required property s_hash\",\n                        jwt: idToken\n                    });\n                }\n            }\n            if (payload.s_hash) {\n                if (!state) {\n                    throw new TypeError('cannot verify s_hash, \"checks.state\" property not provided');\n                }\n                try {\n                    tokenHash.validate({\n                        claim: \"s_hash\",\n                        source: \"state\"\n                    }, payload.s_hash, state, header.alg, key.jwk && key.jwk.crv);\n                } catch (err) {\n                    throw new RPError({\n                        message: err.message,\n                        jwt: idToken\n                    });\n                }\n            }\n        }\n        if (this.fapi() && payload.iat < timestamp - 3600) {\n            throw new RPError({\n                printf: [\n                    \"JWT issued too far in the past, now %i, iat %i\",\n                    timestamp,\n                    payload.iat\n                ],\n                now: timestamp,\n                tolerance: this[CLOCK_TOLERANCE],\n                iat: payload.iat,\n                jwt: idToken\n            });\n        }\n        if (tokenSet.access_token && payload.at_hash !== undefined) {\n            try {\n                tokenHash.validate({\n                    claim: \"at_hash\",\n                    source: \"access_token\"\n                }, payload.at_hash, tokenSet.access_token, header.alg, key.jwk && key.jwk.crv);\n            } catch (err) {\n                throw new RPError({\n                    message: err.message,\n                    jwt: idToken\n                });\n            }\n        }\n        if (tokenSet.code && payload.c_hash !== undefined) {\n            try {\n                tokenHash.validate({\n                    claim: \"c_hash\",\n                    source: \"code\"\n                }, payload.c_hash, tokenSet.code, header.alg, key.jwk && key.jwk.crv);\n            } catch (err) {\n                throw new RPError({\n                    message: err.message,\n                    jwt: idToken\n                });\n            }\n        }\n        return tokenSet;\n    }\n    async validateJWT(jwt, expectedAlg, required = [\n        \"iss\",\n        \"sub\",\n        \"aud\",\n        \"exp\",\n        \"iat\"\n    ]) {\n        const isSelfIssued = this.issuer.issuer === \"https://self-issued.me\";\n        const timestamp = now();\n        let header;\n        let payload;\n        try {\n            ({ header, payload } = decodeJWT(jwt, {\n                complete: true\n            }));\n        } catch (err) {\n            throw new RPError({\n                printf: [\n                    \"failed to decode JWT (%s: %s)\",\n                    err.name,\n                    err.message\n                ],\n                jwt\n            });\n        }\n        if (header.alg !== expectedAlg) {\n            throw new RPError({\n                printf: [\n                    \"unexpected JWT alg received, expected %s, got: %s\",\n                    expectedAlg,\n                    header.alg\n                ],\n                jwt\n            });\n        }\n        if (isSelfIssued) {\n            required = [\n                ...required,\n                \"sub_jwk\"\n            ];\n        }\n        required.forEach(verifyPresence.bind(undefined, payload, jwt));\n        if (payload.iss !== undefined) {\n            let expectedIss = this.issuer.issuer;\n            if (this.#aadIssValidation) {\n                expectedIss = this.issuer.issuer.replace(\"{tenantid}\", payload.tid);\n            }\n            if (payload.iss !== expectedIss) {\n                throw new RPError({\n                    printf: [\n                        \"unexpected iss value, expected %s, got: %s\",\n                        expectedIss,\n                        payload.iss\n                    ],\n                    jwt\n                });\n            }\n        }\n        if (payload.iat !== undefined) {\n            if (typeof payload.iat !== \"number\") {\n                throw new RPError({\n                    message: \"JWT iat claim must be a JSON numeric value\",\n                    jwt\n                });\n            }\n        }\n        if (payload.nbf !== undefined) {\n            if (typeof payload.nbf !== \"number\") {\n                throw new RPError({\n                    message: \"JWT nbf claim must be a JSON numeric value\",\n                    jwt\n                });\n            }\n            if (payload.nbf > timestamp + this[CLOCK_TOLERANCE]) {\n                throw new RPError({\n                    printf: [\n                        \"JWT not active yet, now %i, nbf %i\",\n                        timestamp + this[CLOCK_TOLERANCE],\n                        payload.nbf\n                    ],\n                    now: timestamp,\n                    tolerance: this[CLOCK_TOLERANCE],\n                    nbf: payload.nbf,\n                    jwt\n                });\n            }\n        }\n        if (payload.exp !== undefined) {\n            if (typeof payload.exp !== \"number\") {\n                throw new RPError({\n                    message: \"JWT exp claim must be a JSON numeric value\",\n                    jwt\n                });\n            }\n            if (timestamp - this[CLOCK_TOLERANCE] >= payload.exp) {\n                throw new RPError({\n                    printf: [\n                        \"JWT expired, now %i, exp %i\",\n                        timestamp - this[CLOCK_TOLERANCE],\n                        payload.exp\n                    ],\n                    now: timestamp,\n                    tolerance: this[CLOCK_TOLERANCE],\n                    exp: payload.exp,\n                    jwt\n                });\n            }\n        }\n        if (payload.aud !== undefined) {\n            if (Array.isArray(payload.aud)) {\n                if (payload.aud.length > 1 && !payload.azp) {\n                    throw new RPError({\n                        message: \"missing required JWT property azp\",\n                        jwt\n                    });\n                }\n                if (!payload.aud.includes(this.client_id)) {\n                    throw new RPError({\n                        printf: [\n                            \"aud is missing the client_id, expected %s to be included in %j\",\n                            this.client_id,\n                            payload.aud\n                        ],\n                        jwt\n                    });\n                }\n            } else if (payload.aud !== this.client_id) {\n                throw new RPError({\n                    printf: [\n                        \"aud mismatch, expected %s, got: %s\",\n                        this.client_id,\n                        payload.aud\n                    ],\n                    jwt\n                });\n            }\n        }\n        if (payload.azp !== undefined) {\n            let additionalAuthorizedParties = this.#additionalAuthorizedParties;\n            if (typeof additionalAuthorizedParties === \"string\") {\n                additionalAuthorizedParties = [\n                    this.client_id,\n                    additionalAuthorizedParties\n                ];\n            } else if (Array.isArray(additionalAuthorizedParties)) {\n                additionalAuthorizedParties = [\n                    this.client_id,\n                    ...additionalAuthorizedParties\n                ];\n            } else {\n                additionalAuthorizedParties = [\n                    this.client_id\n                ];\n            }\n            if (!additionalAuthorizedParties.includes(payload.azp)) {\n                throw new RPError({\n                    printf: [\n                        \"azp mismatch, got: %s\",\n                        payload.azp\n                    ],\n                    jwt\n                });\n            }\n        }\n        let keys;\n        if (isSelfIssued) {\n            try {\n                assert(isPlainObject(payload.sub_jwk));\n                const key = await jose.importJWK(payload.sub_jwk, header.alg);\n                assert.equal(key.type, \"public\");\n                keys = [\n                    {\n                        keyObject: key\n                    }\n                ];\n            } catch (err) {\n                throw new RPError({\n                    message: \"failed to use sub_jwk claim as an asymmetric JSON Web Key\",\n                    jwt\n                });\n            }\n            if (await jose.calculateJwkThumbprint(payload.sub_jwk) !== payload.sub) {\n                throw new RPError({\n                    message: \"failed to match the subject with sub_jwk\",\n                    jwt\n                });\n            }\n        } else if (header.alg.startsWith(\"HS\")) {\n            keys = [\n                this.secretForAlg(header.alg)\n            ];\n        } else if (header.alg !== \"none\") {\n            keys = await queryKeyStore.call(this.issuer, {\n                ...header,\n                use: \"sig\"\n            });\n        }\n        if (!keys && header.alg === \"none\") {\n            return {\n                protected: header,\n                payload\n            };\n        }\n        for (const key of keys){\n            const verified = await jose.compactVerify(jwt, key instanceof Uint8Array ? key : key.keyObject).catch(()=>{});\n            if (verified) {\n                return {\n                    payload,\n                    protected: verified.protectedHeader,\n                    key\n                };\n            }\n        }\n        throw new RPError({\n            message: \"failed to validate JWT signature\",\n            jwt\n        });\n    }\n    async refresh(refreshToken, { exchangeBody, clientAssertionPayload, DPoP } = {}) {\n        let token = refreshToken;\n        if (token instanceof TokenSet) {\n            if (!token.refresh_token) {\n                throw new TypeError(\"refresh_token not present in TokenSet\");\n            }\n            token = token.refresh_token;\n        }\n        const tokenset = await this.grant({\n            ...exchangeBody,\n            grant_type: \"refresh_token\",\n            refresh_token: String(token)\n        }, {\n            clientAssertionPayload,\n            DPoP\n        });\n        if (tokenset.id_token) {\n            await this.decryptIdToken(tokenset);\n            await this.validateIdToken(tokenset, skipNonceCheck, \"token\", skipMaxAgeCheck);\n            if (refreshToken instanceof TokenSet && refreshToken.id_token) {\n                const expectedSub = refreshToken.claims().sub;\n                const actualSub = tokenset.claims().sub;\n                if (actualSub !== expectedSub) {\n                    throw new RPError({\n                        printf: [\n                            \"sub mismatch, expected %s, got: %s\",\n                            expectedSub,\n                            actualSub\n                        ],\n                        jwt: tokenset.id_token\n                    });\n                }\n            }\n        }\n        return tokenset;\n    }\n    async requestResource(resourceUrl, accessToken, { method, headers, body, DPoP, tokenType = DPoP ? \"DPoP\" : accessToken instanceof TokenSet ? accessToken.token_type : \"Bearer\" } = {}, retry) {\n        if (accessToken instanceof TokenSet) {\n            if (!accessToken.access_token) {\n                throw new TypeError(\"access_token not present in TokenSet\");\n            }\n            accessToken = accessToken.access_token;\n        }\n        if (!accessToken) {\n            throw new TypeError(\"no access token provided\");\n        } else if (typeof accessToken !== \"string\") {\n            throw new TypeError(\"invalid access token provided\");\n        }\n        const requestOpts = {\n            headers: {\n                Authorization: authorizationHeaderValue(accessToken, tokenType),\n                ...headers\n            },\n            body\n        };\n        const mTLS = !!this.tls_client_certificate_bound_access_tokens;\n        const response = await request.call(this, {\n            ...requestOpts,\n            responseType: \"buffer\",\n            method,\n            url: resourceUrl\n        }, {\n            accessToken,\n            mTLS,\n            DPoP\n        });\n        const wwwAuthenticate = response.headers[\"www-authenticate\"];\n        if (retry !== retryAttempt && wwwAuthenticate && wwwAuthenticate.toLowerCase().startsWith(\"dpop \") && parseWwwAuthenticate(wwwAuthenticate).error === \"use_dpop_nonce\") {\n            return this.requestResource(resourceUrl, accessToken, {\n                method,\n                headers,\n                body,\n                DPoP,\n                tokenType\n            });\n        }\n        return response;\n    }\n    async userinfo(accessToken, { method = \"GET\", via = \"header\", tokenType, params, DPoP } = {}) {\n        assertIssuerConfiguration(this.issuer, \"userinfo_endpoint\");\n        const options = {\n            tokenType,\n            method: String(method).toUpperCase(),\n            DPoP\n        };\n        if (options.method !== \"GET\" && options.method !== \"POST\") {\n            throw new TypeError(\"#userinfo() method can only be POST or a GET\");\n        }\n        if (via === \"body\" && options.method !== \"POST\") {\n            throw new TypeError(\"can only send body on POST\");\n        }\n        const jwt = !!(this.userinfo_signed_response_alg || this.userinfo_encrypted_response_alg);\n        if (jwt) {\n            options.headers = {\n                Accept: \"application/jwt\"\n            };\n        } else {\n            options.headers = {\n                Accept: \"application/json\"\n            };\n        }\n        const mTLS = !!this.tls_client_certificate_bound_access_tokens;\n        let targetUrl;\n        if (mTLS && this.issuer.mtls_endpoint_aliases) {\n            targetUrl = this.issuer.mtls_endpoint_aliases.userinfo_endpoint;\n        }\n        targetUrl = new url.URL(targetUrl || this.issuer.userinfo_endpoint);\n        if (via === \"body\") {\n            options.headers.Authorization = undefined;\n            options.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n            options.body = new url.URLSearchParams();\n            options.body.append(\"access_token\", accessToken instanceof TokenSet ? accessToken.access_token : accessToken);\n        }\n        // handle additional parameters, GET via querystring, POST via urlencoded body\n        if (params) {\n            if (options.method === \"GET\") {\n                Object.entries(params).forEach(([key, value])=>{\n                    targetUrl.searchParams.append(key, value);\n                });\n            } else if (options.body) {\n                // POST && via body\n                Object.entries(params).forEach(([key, value])=>{\n                    options.body.append(key, value);\n                });\n            } else {\n                // POST && via header\n                options.body = new url.URLSearchParams();\n                options.headers[\"Content-Type\"] = \"application/x-www-form-urlencoded\";\n                Object.entries(params).forEach(([key, value])=>{\n                    options.body.append(key, value);\n                });\n            }\n        }\n        if (options.body) {\n            options.body = options.body.toString();\n        }\n        const response = await this.requestResource(targetUrl, accessToken, options);\n        let parsed = processResponse(response, {\n            bearer: true\n        });\n        if (jwt) {\n            if (!/^application\\/jwt/.test(response.headers[\"content-type\"])) {\n                throw new RPError({\n                    message: \"expected application/jwt response from the userinfo_endpoint\",\n                    response\n                });\n            }\n            const body = response.body.toString();\n            const userinfo = await this.decryptJWTUserinfo(body);\n            if (!this.userinfo_signed_response_alg) {\n                try {\n                    parsed = JSON.parse(userinfo);\n                    assert(isPlainObject(parsed));\n                } catch (err) {\n                    throw new RPError({\n                        message: \"failed to parse userinfo JWE payload as JSON\",\n                        jwt: userinfo\n                    });\n                }\n            } else {\n                ({ payload: parsed } = await this.validateJWTUserinfo(userinfo));\n            }\n        } else {\n            try {\n                parsed = JSON.parse(response.body);\n            } catch (err) {\n                Object.defineProperty(err, \"response\", {\n                    value: response\n                });\n                throw err;\n            }\n        }\n        if (accessToken instanceof TokenSet && accessToken.id_token) {\n            const expectedSub = accessToken.claims().sub;\n            if (parsed.sub !== expectedSub) {\n                throw new RPError({\n                    printf: [\n                        \"userinfo sub mismatch, expected %s, got: %s\",\n                        expectedSub,\n                        parsed.sub\n                    ],\n                    body: parsed,\n                    jwt: accessToken.id_token\n                });\n            }\n        }\n        return parsed;\n    }\n    encryptionSecret(len) {\n        const hash = len <= 256 ? \"sha256\" : len <= 384 ? \"sha384\" : len <= 512 ? \"sha512\" : false;\n        if (!hash) {\n            throw new Error(\"unsupported symmetric encryption key derivation\");\n        }\n        return crypto.createHash(hash).update(this.client_secret).digest().slice(0, len / 8);\n    }\n    secretForAlg(alg) {\n        if (!this.client_secret) {\n            throw new TypeError(\"client_secret is required\");\n        }\n        if (/^A(\\d{3})(?:GCM)?KW$/.test(alg)) {\n            return this.encryptionSecret(parseInt(RegExp.$1, 10));\n        }\n        if (/^A(\\d{3})(?:GCM|CBC-HS(\\d{3}))$/.test(alg)) {\n            return this.encryptionSecret(parseInt(RegExp.$2 || RegExp.$1, 10));\n        }\n        return new TextEncoder().encode(this.client_secret);\n    }\n    async grant(body, { clientAssertionPayload, DPoP } = {}, retry) {\n        assertIssuerConfiguration(this.issuer, \"token_endpoint\");\n        const response = await authenticatedPost.call(this, \"token\", {\n            form: body,\n            responseType: \"json\"\n        }, {\n            clientAssertionPayload,\n            DPoP\n        });\n        let responseBody;\n        try {\n            responseBody = processResponse(response);\n        } catch (err) {\n            if (retry !== retryAttempt && err instanceof OPError && err.error === \"use_dpop_nonce\") {\n                return this.grant(body, {\n                    clientAssertionPayload,\n                    DPoP\n                }, retryAttempt);\n            }\n            throw err;\n        }\n        return new TokenSet(responseBody);\n    }\n    async deviceAuthorization(params = {}, { exchangeBody, clientAssertionPayload, DPoP } = {}) {\n        assertIssuerConfiguration(this.issuer, \"device_authorization_endpoint\");\n        assertIssuerConfiguration(this.issuer, \"token_endpoint\");\n        const body = authorizationParams.call(this, {\n            client_id: this.client_id,\n            redirect_uri: null,\n            response_type: null,\n            ...params\n        });\n        const response = await authenticatedPost.call(this, \"device_authorization\", {\n            responseType: \"json\",\n            form: body\n        }, {\n            clientAssertionPayload,\n            endpointAuthMethod: \"token\"\n        });\n        const responseBody = processResponse(response);\n        return new DeviceFlowHandle({\n            client: this,\n            exchangeBody,\n            clientAssertionPayload,\n            response: responseBody,\n            maxAge: params.max_age,\n            DPoP\n        });\n    }\n    async revoke(token, hint, { revokeBody, clientAssertionPayload } = {}) {\n        assertIssuerConfiguration(this.issuer, \"revocation_endpoint\");\n        if (hint !== undefined && typeof hint !== \"string\") {\n            throw new TypeError(\"hint must be a string\");\n        }\n        const form = {\n            ...revokeBody,\n            token\n        };\n        if (hint) {\n            form.token_type_hint = hint;\n        }\n        const response = await authenticatedPost.call(this, \"revocation\", {\n            form\n        }, {\n            clientAssertionPayload\n        });\n        processResponse(response, {\n            body: false\n        });\n    }\n    async introspect(token, hint, { introspectBody, clientAssertionPayload } = {}) {\n        assertIssuerConfiguration(this.issuer, \"introspection_endpoint\");\n        if (hint !== undefined && typeof hint !== \"string\") {\n            throw new TypeError(\"hint must be a string\");\n        }\n        const form = {\n            ...introspectBody,\n            token\n        };\n        if (hint) {\n            form.token_type_hint = hint;\n        }\n        const response = await authenticatedPost.call(this, \"introspection\", {\n            form,\n            responseType: \"json\"\n        }, {\n            clientAssertionPayload\n        });\n        const responseBody = processResponse(response);\n        return responseBody;\n    }\n    static async register(metadata, options = {}) {\n        const { initialAccessToken, jwks, ...clientOptions } = options;\n        assertIssuerConfiguration(this.issuer, \"registration_endpoint\");\n        if (jwks !== undefined && !(metadata.jwks || metadata.jwks_uri)) {\n            const keystore = await getKeystore.call(this, jwks);\n            metadata.jwks = keystore.toJWKS();\n        }\n        const response = await request.call(this, {\n            headers: {\n                Accept: \"application/json\",\n                ...initialAccessToken ? {\n                    Authorization: authorizationHeaderValue(initialAccessToken)\n                } : undefined\n            },\n            responseType: \"json\",\n            json: metadata,\n            url: this.issuer.registration_endpoint,\n            method: \"POST\"\n        });\n        const responseBody = processResponse(response, {\n            statusCode: 201,\n            bearer: true\n        });\n        return new this(responseBody, jwks, clientOptions);\n    }\n    get metadata() {\n        return clone(Object.fromEntries(this.#metadata.entries()));\n    }\n    static async fromUri(registrationClientUri, registrationAccessToken, jwks, clientOptions) {\n        const response = await request.call(this, {\n            method: \"GET\",\n            url: registrationClientUri,\n            responseType: \"json\",\n            headers: {\n                Authorization: authorizationHeaderValue(registrationAccessToken),\n                Accept: \"application/json\"\n            }\n        });\n        const responseBody = processResponse(response, {\n            bearer: true\n        });\n        return new this(responseBody, jwks, clientOptions);\n    }\n    async requestObject(requestObject = {}, { sign: signingAlgorithm = this.request_object_signing_alg || \"none\", encrypt: { alg: eKeyManagement = this.request_object_encryption_alg, enc: eContentEncryption = this.request_object_encryption_enc || \"A128CBC-HS256\" } = {} } = {}) {\n        if (!isPlainObject(requestObject)) {\n            throw new TypeError(\"requestObject must be a plain object\");\n        }\n        let signed;\n        let key;\n        const unix = now();\n        const header = {\n            alg: signingAlgorithm,\n            typ: \"oauth-authz-req+jwt\"\n        };\n        const payload = JSON.stringify(defaults({}, requestObject, {\n            iss: this.client_id,\n            aud: this.issuer.issuer,\n            client_id: this.client_id,\n            jti: random(),\n            iat: unix,\n            exp: unix + 300,\n            ...this.fapi() ? {\n                nbf: unix\n            } : undefined\n        }));\n        if (signingAlgorithm === \"none\") {\n            signed = [\n                base64url.encode(JSON.stringify(header)),\n                base64url.encode(payload),\n                \"\"\n            ].join(\".\");\n        } else {\n            const symmetric = signingAlgorithm.startsWith(\"HS\");\n            if (symmetric) {\n                key = this.secretForAlg(signingAlgorithm);\n            } else {\n                const keystore = await keystores.get(this);\n                if (!keystore) {\n                    throw new TypeError(`no keystore present for client, cannot sign using alg ${signingAlgorithm}`);\n                }\n                key = keystore.get({\n                    alg: signingAlgorithm,\n                    use: \"sig\"\n                });\n                if (!key) {\n                    throw new TypeError(`no key to sign with found for alg ${signingAlgorithm}`);\n                }\n            }\n            signed = await new jose.CompactSign(new TextEncoder().encode(payload)).setProtectedHeader({\n                ...header,\n                kid: symmetric ? undefined : key.jwk.kid\n            }).sign(symmetric ? key : key.keyObject);\n        }\n        if (!eKeyManagement) {\n            return signed;\n        }\n        const fields = {\n            alg: eKeyManagement,\n            enc: eContentEncryption,\n            cty: \"oauth-authz-req+jwt\"\n        };\n        if (fields.alg.match(/^(RSA|ECDH)/)) {\n            [key] = await queryKeyStore.call(this.issuer, {\n                alg: fields.alg,\n                use: \"enc\"\n            }, {\n                allowMulti: true\n            });\n        } else {\n            key = this.secretForAlg(fields.alg === \"dir\" ? fields.enc : fields.alg);\n        }\n        return new jose.CompactEncrypt(new TextEncoder().encode(signed)).setProtectedHeader({\n            ...fields,\n            kid: key instanceof Uint8Array ? undefined : key.jwk.kid\n        }).encrypt(key instanceof Uint8Array ? key : key.keyObject);\n    }\n    async pushedAuthorizationRequest(params = {}, { clientAssertionPayload } = {}) {\n        assertIssuerConfiguration(this.issuer, \"pushed_authorization_request_endpoint\");\n        const body = {\n            ...\"request\" in params ? params : authorizationParams.call(this, params),\n            client_id: this.client_id\n        };\n        const response = await authenticatedPost.call(this, \"pushed_authorization_request\", {\n            responseType: \"json\",\n            form: body\n        }, {\n            clientAssertionPayload,\n            endpointAuthMethod: \"token\"\n        });\n        const responseBody = processResponse(response, {\n            statusCode: 201\n        });\n        if (!(\"expires_in\" in responseBody)) {\n            throw new RPError({\n                message: \"expected expires_in in Pushed Authorization Successful Response\",\n                response\n            });\n        }\n        if (typeof responseBody.expires_in !== \"number\") {\n            throw new RPError({\n                message: \"invalid expires_in value in Pushed Authorization Successful Response\",\n                response\n            });\n        }\n        if (!(\"request_uri\" in responseBody)) {\n            throw new RPError({\n                message: \"expected request_uri in Pushed Authorization Successful Response\",\n                response\n            });\n        }\n        if (typeof responseBody.request_uri !== \"string\") {\n            throw new RPError({\n                message: \"invalid request_uri value in Pushed Authorization Successful Response\",\n                response\n            });\n        }\n        return responseBody;\n    }\n    get issuer() {\n        return this.#issuer;\n    }\n    /* istanbul ignore next */ [inspect.custom]() {\n        return `${this.constructor.name} ${inspect(this.metadata, {\n            depth: Infinity,\n            colors: process.stdout.isTTY,\n            compact: false,\n            sorted: true\n        })}`;\n    }\n    fapi() {\n        return this.constructor.name === \"FAPI1Client\";\n    }\n    async validateJARM(response) {\n        const expectedAlg = this.authorization_signed_response_alg;\n        const { payload } = await this.validateJWT(response, expectedAlg, [\n            \"iss\",\n            \"exp\",\n            \"aud\"\n        ]);\n        return pickCb(payload);\n    }\n}\nconst RSPS = /^(?:RS|PS)(?:256|384|512)$/;\nfunction determineRsaAlgorithm(privateKey, privateKeyInput, valuesSupported) {\n    if (typeof privateKeyInput === \"object\" && typeof privateKeyInput.key === \"object\" && privateKeyInput.key.alg) {\n        return privateKeyInput.key.alg;\n    }\n    if (Array.isArray(valuesSupported)) {\n        let candidates = valuesSupported.filter(RegExp.prototype.test.bind(RSPS));\n        if (privateKey.asymmetricKeyType === \"rsa-pss\") {\n            candidates = candidates.filter((value)=>value.startsWith(\"PS\"));\n        }\n        return [\n            \"PS256\",\n            \"PS384\",\n            \"PS512\",\n            \"RS256\",\n            \"RS384\",\n            \"RS384\"\n        ].find((preferred)=>candidates.includes(preferred));\n    }\n    return \"PS256\";\n}\nconst p256 = Buffer.from([\n    42,\n    134,\n    72,\n    206,\n    61,\n    3,\n    1,\n    7\n]);\nconst p384 = Buffer.from([\n    43,\n    129,\n    4,\n    0,\n    34\n]);\nconst p521 = Buffer.from([\n    43,\n    129,\n    4,\n    0,\n    35\n]);\nconst secp256k1 = Buffer.from([\n    43,\n    129,\n    4,\n    0,\n    10\n]);\nfunction determineEcAlgorithm(privateKey, privateKeyInput) {\n    // If input was a JWK\n    switch(typeof privateKeyInput === \"object\" && typeof privateKeyInput.key === \"object\" && privateKeyInput.key.crv){\n        case \"P-256\":\n            return \"ES256\";\n        case \"secp256k1\":\n            return \"ES256K\";\n        case \"P-384\":\n            return \"ES384\";\n        case \"P-512\":\n            return \"ES512\";\n        default:\n            break;\n    }\n    const buf = privateKey.export({\n        format: \"der\",\n        type: \"pkcs8\"\n    });\n    const i = buf[1] < 128 ? 17 : 18;\n    const len = buf[i];\n    const curveOid = buf.slice(i + 1, i + 1 + len);\n    if (curveOid.equals(p256)) {\n        return \"ES256\";\n    }\n    if (curveOid.equals(p384)) {\n        return \"ES384\";\n    }\n    if (curveOid.equals(p521)) {\n        return \"ES512\";\n    }\n    if (curveOid.equals(secp256k1)) {\n        return \"ES256K\";\n    }\n    throw new TypeError(\"unsupported DPoP private key curve\");\n}\nconst jwkCache = new WeakMap();\nasync function getJwk(privateKey, privateKeyInput) {\n    if (typeof privateKeyInput === \"object\" && typeof privateKeyInput.key === \"object\" && privateKeyInput.key.crv) {\n        return pick(privateKeyInput.key, \"kty\", \"crv\", \"x\", \"y\", \"e\", \"n\");\n    }\n    if (jwkCache.has(privateKeyInput)) {\n        return jwkCache.get(privateKeyInput);\n    }\n    const jwk = pick(await jose.exportJWK(privateKey), \"kty\", \"crv\", \"x\", \"y\", \"e\", \"n\");\n    if (isKeyObject(privateKeyInput)) {\n        jwkCache.set(privateKeyInput, jwk);\n    }\n    return jwk;\n}\n/**\n * @name dpopProof\n * @api private\n */ async function dpopProof(payload, privateKeyInput, accessToken) {\n    if (!isPlainObject(payload)) {\n        throw new TypeError(\"payload must be a plain object\");\n    }\n    let privateKey;\n    if (isKeyObject(privateKeyInput)) {\n        privateKey = privateKeyInput;\n    } else {\n        privateKey = crypto.createPrivateKey(privateKeyInput);\n    }\n    if (privateKey.type !== \"private\") {\n        throw new TypeError('\"DPoP\" option must be a private key');\n    }\n    let alg;\n    switch(privateKey.asymmetricKeyType){\n        case \"ed25519\":\n        case \"ed448\":\n            alg = \"EdDSA\";\n            break;\n        case \"ec\":\n            alg = determineEcAlgorithm(privateKey, privateKeyInput);\n            break;\n        case \"rsa\":\n        case rsaPssParams && \"rsa-pss\":\n            alg = determineRsaAlgorithm(privateKey, privateKeyInput, this.issuer.dpop_signing_alg_values_supported);\n            break;\n        default:\n            throw new TypeError(\"unsupported DPoP private key asymmetric key type\");\n    }\n    if (!alg) {\n        throw new TypeError(\"could not determine DPoP JWS Algorithm\");\n    }\n    return new jose.SignJWT({\n        ath: accessToken ? base64url.encode(crypto.createHash(\"sha256\").update(accessToken).digest()) : undefined,\n        ...payload\n    }).setProtectedHeader({\n        alg,\n        typ: \"dpop+jwt\",\n        jwk: await getJwk(privateKey, privateKeyInput)\n    }).setIssuedAt().setJti(random()).sign(privateKey);\n}\nObject.defineProperty(BaseClient.prototype, \"dpopProof\", {\n    enumerable: true,\n    configurable: true,\n    value (...args) {\n        process.emitWarning(\"The DPoP APIs implements an IETF draft (https://www.ietf.org/archive/id/draft-ietf-oauth-dpop-04.html). Breaking draft implementations are included as minor versions of the openid-client library, therefore, the ~ semver operator should be used and close attention be payed to library changelog as well as the drafts themselves.\", \"DraftWarning\");\n        Object.defineProperty(BaseClient.prototype, \"dpopProof\", {\n            enumerable: true,\n            configurable: true,\n            value: dpopProof\n        });\n        return this.dpopProof(...args);\n    }\n});\nmodule.exports = (issuer, aadIssValidation = false)=>class Client extends BaseClient {\n        constructor(...args){\n            super(issuer, aadIssValidation, ...args);\n        }\n        static get issuer() {\n            return issuer;\n        }\n    };\nmodule.exports.BaseClient = BaseClient;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/client.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/device_flow_handle.js":
/*!**************************************************************!*\
  !*** ./node_modules/openid-client/lib/device_flow_handle.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { inspect } = __webpack_require__(/*! util */ \"util\");\nconst { RPError, OPError } = __webpack_require__(/*! ./errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst now = __webpack_require__(/*! ./helpers/unix_timestamp */ \"(sc_server)/./node_modules/openid-client/lib/helpers/unix_timestamp.js\");\nclass DeviceFlowHandle {\n    #aborted;\n    #client;\n    #clientAssertionPayload;\n    #DPoP;\n    #exchangeBody;\n    #expires_at;\n    #interval;\n    #maxAge;\n    #response;\n    constructor({ client, exchangeBody, clientAssertionPayload, response, maxAge, DPoP }){\n        [\n            \"verification_uri\",\n            \"user_code\",\n            \"device_code\"\n        ].forEach((prop)=>{\n            if (typeof response[prop] !== \"string\" || !response[prop]) {\n                throw new RPError(`expected ${prop} string to be returned by Device Authorization Response, got %j`, response[prop]);\n            }\n        });\n        if (!Number.isSafeInteger(response.expires_in)) {\n            throw new RPError(\"expected expires_in number to be returned by Device Authorization Response, got %j\", response.expires_in);\n        }\n        this.#expires_at = now() + response.expires_in;\n        this.#client = client;\n        this.#DPoP = DPoP;\n        this.#maxAge = maxAge;\n        this.#exchangeBody = exchangeBody;\n        this.#clientAssertionPayload = clientAssertionPayload;\n        this.#response = response;\n        this.#interval = response.interval * 1000 || 5000;\n    }\n    abort() {\n        this.#aborted = true;\n    }\n    async poll({ signal } = {}) {\n        if (signal && signal.aborted || this.#aborted) {\n            throw new RPError(\"polling aborted\");\n        }\n        if (this.expired()) {\n            throw new RPError(\"the device code %j has expired and the device authorization session has concluded\", this.device_code);\n        }\n        await new Promise((resolve)=>setTimeout(resolve, this.#interval));\n        let tokenset;\n        try {\n            tokenset = await this.#client.grant({\n                ...this.#exchangeBody,\n                grant_type: \"urn:ietf:params:oauth:grant-type:device_code\",\n                device_code: this.device_code\n            }, {\n                clientAssertionPayload: this.#clientAssertionPayload,\n                DPoP: this.#DPoP\n            });\n        } catch (err) {\n            switch(err instanceof OPError && err.error){\n                case \"slow_down\":\n                    this.#interval += 5000;\n                case \"authorization_pending\":\n                    return this.poll({\n                        signal\n                    });\n                default:\n                    throw err;\n            }\n        }\n        if (\"id_token\" in tokenset) {\n            await this.#client.decryptIdToken(tokenset);\n            await this.#client.validateIdToken(tokenset, undefined, \"token\", this.#maxAge);\n        }\n        return tokenset;\n    }\n    get device_code() {\n        return this.#response.device_code;\n    }\n    get user_code() {\n        return this.#response.user_code;\n    }\n    get verification_uri() {\n        return this.#response.verification_uri;\n    }\n    get verification_uri_complete() {\n        return this.#response.verification_uri_complete;\n    }\n    get expires_in() {\n        return Math.max.apply(null, [\n            this.#expires_at - now(),\n            0\n        ]);\n    }\n    expired() {\n        return this.expires_in === 0;\n    }\n    /* istanbul ignore next */ [inspect.custom]() {\n        return `${this.constructor.name} ${inspect(this.#response, {\n            depth: Infinity,\n            colors: process.stdout.isTTY,\n            compact: false,\n            sorted: true\n        })}`;\n    }\n}\nmodule.exports = DeviceFlowHandle;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvZGV2aWNlX2Zsb3dfaGFuZGxlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLEVBQUVBLE9BQU8sRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQztBQUU1QixNQUFNLEVBQUVDLE9BQU8sRUFBRUMsT0FBTyxFQUFFLEdBQUdGLG1CQUFPQSxDQUFDO0FBQ3JDLE1BQU1HLE1BQU1ILG1CQUFPQSxDQUFDO0FBRXBCLE1BQU1JO0lBQ0osQ0FBQ0MsT0FBTyxDQUFDO0lBQ1QsQ0FBQ0MsTUFBTSxDQUFDO0lBQ1IsQ0FBQ0Msc0JBQXNCLENBQUM7SUFDeEIsQ0FBQ0MsSUFBSSxDQUFDO0lBQ04sQ0FBQ0MsWUFBWSxDQUFDO0lBQ2QsQ0FBQ0MsVUFBVSxDQUFDO0lBQ1osQ0FBQ0MsUUFBUSxDQUFDO0lBQ1YsQ0FBQ0MsTUFBTSxDQUFDO0lBQ1IsQ0FBQ0MsUUFBUSxDQUFDO0lBQ1ZDLFlBQVksRUFBRVIsTUFBTSxFQUFFRyxZQUFZLEVBQUVGLHNCQUFzQixFQUFFTSxRQUFRLEVBQUVELE1BQU0sRUFBRUosSUFBSSxFQUFFLENBQUU7UUFDcEY7WUFBQztZQUFvQjtZQUFhO1NBQWMsQ0FBQ08sUUFBUSxDQUFDQztZQUN4RCxJQUFJLE9BQU9ILFFBQVEsQ0FBQ0csS0FBSyxLQUFLLFlBQVksQ0FBQ0gsUUFBUSxDQUFDRyxLQUFLLEVBQUU7Z0JBQ3pELE1BQU0sSUFBSWYsUUFDUixDQUFDLFNBQVMsRUFBRWUsS0FBSywrREFBK0QsQ0FBQyxFQUNqRkgsUUFBUSxDQUFDRyxLQUFLO1lBRWxCO1FBQ0Y7UUFFQSxJQUFJLENBQUNDLE9BQU9DLGNBQWNMLFNBQVNNLGFBQWE7WUFDOUMsTUFBTSxJQUFJbEIsUUFDUixzRkFDQVksU0FBU007UUFFYjtRQUVBLElBQUksQ0FBQyxDQUFDVCxVQUFVLEdBQUdQLFFBQVFVLFNBQVNNO1FBQ3BDLElBQUksQ0FBQyxDQUFDYixNQUFNLEdBQUdBO1FBQ2YsSUFBSSxDQUFDLENBQUNFLElBQUksR0FBR0E7UUFDYixJQUFJLENBQUMsQ0FBQ0ksTUFBTSxHQUFHQTtRQUNmLElBQUksQ0FBQyxDQUFDSCxZQUFZLEdBQUdBO1FBQ3JCLElBQUksQ0FBQyxDQUFDRixzQkFBc0IsR0FBR0E7UUFDL0IsSUFBSSxDQUFDLENBQUNNLFFBQVEsR0FBR0E7UUFDakIsSUFBSSxDQUFDLENBQUNGLFFBQVEsR0FBR0UsU0FBU0YsV0FBVyxRQUFRO0lBQy9DO0lBRUFTLFFBQVE7UUFDTixJQUFJLENBQUMsQ0FBQ2YsT0FBTyxHQUFHO0lBQ2xCO0lBRUEsTUFBTWdCLEtBQUssRUFBRUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUU7UUFDMUIsSUFBSSxVQUFXQSxPQUFPakIsV0FBWSxJQUFJLENBQUMsQ0FBQ0EsT0FBTyxFQUFFO1lBQy9DLE1BQU0sSUFBSUosUUFBUTtRQUNwQjtRQUVBLElBQUksSUFBSSxDQUFDc0IsV0FBVztZQUNsQixNQUFNLElBQUl0QixRQUNSLHFGQUNBLElBQUksQ0FBQ3VCO1FBRVQ7UUFFQSxNQUFNLElBQUlDLFFBQVEsQ0FBQ0MsVUFBWUMsV0FBV0QsU0FBUyxJQUFJLENBQUMsQ0FBQ2YsUUFBUTtRQUVqRSxJQUFJaUI7UUFDSixJQUFJO1lBQ0ZBLFdBQVcsTUFBTSxJQUFJLENBQUMsQ0FBQ3RCLE1BQU0sQ0FBQ3VCLE1BQzVCO2dCQUNFLEdBQUcsSUFBSSxDQUFDLENBQUNwQixZQUFZO2dCQUNyQnFCLFlBQVk7Z0JBQ1pOLGFBQWEsSUFBSSxDQUFDQTtZQUNwQixHQUNBO2dCQUFFakIsd0JBQXdCLElBQUksQ0FBQyxDQUFDQSxzQkFBc0I7Z0JBQUVDLE1BQU0sSUFBSSxDQUFDLENBQUNBLElBQUk7WUFBQztRQUU3RSxFQUFFLE9BQU91QixLQUFLO1lBQ1osT0FBUUEsZUFBZTdCLFdBQVc2QixJQUFJQztnQkFDcEMsS0FBSztvQkFDSCxJQUFJLENBQUMsQ0FBQ3JCLFFBQVEsSUFBSTtnQkFDcEIsS0FBSztvQkFDSCxPQUFPLElBQUksQ0FBQ1UsS0FBSzt3QkFBRUM7b0JBQU87Z0JBQzVCO29CQUNFLE1BQU1TO1lBQ1Y7UUFDRjtRQUVBLElBQUksY0FBY0gsVUFBVTtZQUMxQixNQUFNLElBQUksQ0FBQyxDQUFDdEIsTUFBTSxDQUFDMkIsZUFBZUw7WUFDbEMsTUFBTSxJQUFJLENBQUMsQ0FBQ3RCLE1BQU0sQ0FBQzRCLGdCQUFnQk4sVUFBVU8sV0FBVyxTQUFTLElBQUksQ0FBQyxDQUFDdkIsTUFBTTtRQUMvRTtRQUVBLE9BQU9nQjtJQUNUO0lBRUEsSUFBSUosY0FBYztRQUNoQixPQUFPLElBQUksQ0FBQyxDQUFDWCxRQUFRLENBQUNXO0lBQ3hCO0lBRUEsSUFBSVksWUFBWTtRQUNkLE9BQU8sSUFBSSxDQUFDLENBQUN2QixRQUFRLENBQUN1QjtJQUN4QjtJQUVBLElBQUlDLG1CQUFtQjtRQUNyQixPQUFPLElBQUksQ0FBQyxDQUFDeEIsUUFBUSxDQUFDd0I7SUFDeEI7SUFFQSxJQUFJQyw0QkFBNEI7UUFDOUIsT0FBTyxJQUFJLENBQUMsQ0FBQ3pCLFFBQVEsQ0FBQ3lCO0lBQ3hCO0lBRUEsSUFBSW5CLGFBQWE7UUFDZixPQUFPb0IsS0FBS0MsSUFBSUMsTUFBTSxNQUFNO1lBQUMsSUFBSSxDQUFDLENBQUMvQixVQUFVLEdBQUdQO1lBQU87U0FBRTtJQUMzRDtJQUVBb0IsVUFBVTtRQUNSLE9BQU8sSUFBSSxDQUFDSixlQUFlO0lBQzdCO0lBRUEsd0JBQXdCLEdBQ3hCLENBQUNwQixRQUFRMkMsT0FBTyxHQUFHO1FBQ2pCLE9BQU8sQ0FBQyxFQUFFLElBQUksQ0FBQzVCLFlBQVk2QixLQUFLLENBQUMsRUFBRTVDLFFBQVEsSUFBSSxDQUFDLENBQUNjLFFBQVEsRUFBRTtZQUN6RCtCLE9BQU9DO1lBQ1BDLFFBQVFDLFFBQVFDLE9BQU9DO1lBQ3ZCQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVixHQUFHLENBQUM7SUFDTjtBQUNGO0FBRUFDLE9BQU9DLFVBQVVqRCIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvZGV2aWNlX2Zsb3dfaGFuZGxlLmpzPzczNzYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBpbnNwZWN0IH0gPSByZXF1aXJlKCd1dGlsJyk7XG5cbmNvbnN0IHsgUlBFcnJvciwgT1BFcnJvciB9ID0gcmVxdWlyZSgnLi9lcnJvcnMnKTtcbmNvbnN0IG5vdyA9IHJlcXVpcmUoJy4vaGVscGVycy91bml4X3RpbWVzdGFtcCcpO1xuXG5jbGFzcyBEZXZpY2VGbG93SGFuZGxlIHtcbiAgI2Fib3J0ZWQ7XG4gICNjbGllbnQ7XG4gICNjbGllbnRBc3NlcnRpb25QYXlsb2FkO1xuICAjRFBvUDtcbiAgI2V4Y2hhbmdlQm9keTtcbiAgI2V4cGlyZXNfYXQ7XG4gICNpbnRlcnZhbDtcbiAgI21heEFnZTtcbiAgI3Jlc3BvbnNlO1xuICBjb25zdHJ1Y3Rvcih7IGNsaWVudCwgZXhjaGFuZ2VCb2R5LCBjbGllbnRBc3NlcnRpb25QYXlsb2FkLCByZXNwb25zZSwgbWF4QWdlLCBEUG9QIH0pIHtcbiAgICBbJ3ZlcmlmaWNhdGlvbl91cmknLCAndXNlcl9jb2RlJywgJ2RldmljZV9jb2RlJ10uZm9yRWFjaCgocHJvcCkgPT4ge1xuICAgICAgaWYgKHR5cGVvZiByZXNwb25zZVtwcm9wXSAhPT0gJ3N0cmluZycgfHwgIXJlc3BvbnNlW3Byb3BdKSB7XG4gICAgICAgIHRocm93IG5ldyBSUEVycm9yKFxuICAgICAgICAgIGBleHBlY3RlZCAke3Byb3B9IHN0cmluZyB0byBiZSByZXR1cm5lZCBieSBEZXZpY2UgQXV0aG9yaXphdGlvbiBSZXNwb25zZSwgZ290ICVqYCxcbiAgICAgICAgICByZXNwb25zZVtwcm9wXSxcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIGlmICghTnVtYmVyLmlzU2FmZUludGVnZXIocmVzcG9uc2UuZXhwaXJlc19pbikpIHtcbiAgICAgIHRocm93IG5ldyBSUEVycm9yKFxuICAgICAgICAnZXhwZWN0ZWQgZXhwaXJlc19pbiBudW1iZXIgdG8gYmUgcmV0dXJuZWQgYnkgRGV2aWNlIEF1dGhvcml6YXRpb24gUmVzcG9uc2UsIGdvdCAlaicsXG4gICAgICAgIHJlc3BvbnNlLmV4cGlyZXNfaW4sXG4gICAgICApO1xuICAgIH1cblxuICAgIHRoaXMuI2V4cGlyZXNfYXQgPSBub3coKSArIHJlc3BvbnNlLmV4cGlyZXNfaW47XG4gICAgdGhpcy4jY2xpZW50ID0gY2xpZW50O1xuICAgIHRoaXMuI0RQb1AgPSBEUG9QO1xuICAgIHRoaXMuI21heEFnZSA9IG1heEFnZTtcbiAgICB0aGlzLiNleGNoYW5nZUJvZHkgPSBleGNoYW5nZUJvZHk7XG4gICAgdGhpcy4jY2xpZW50QXNzZXJ0aW9uUGF5bG9hZCA9IGNsaWVudEFzc2VydGlvblBheWxvYWQ7XG4gICAgdGhpcy4jcmVzcG9uc2UgPSByZXNwb25zZTtcbiAgICB0aGlzLiNpbnRlcnZhbCA9IHJlc3BvbnNlLmludGVydmFsICogMTAwMCB8fCA1MDAwO1xuICB9XG5cbiAgYWJvcnQoKSB7XG4gICAgdGhpcy4jYWJvcnRlZCA9IHRydWU7XG4gIH1cblxuICBhc3luYyBwb2xsKHsgc2lnbmFsIH0gPSB7fSkge1xuICAgIGlmICgoc2lnbmFsICYmIHNpZ25hbC5hYm9ydGVkKSB8fCB0aGlzLiNhYm9ydGVkKSB7XG4gICAgICB0aHJvdyBuZXcgUlBFcnJvcigncG9sbGluZyBhYm9ydGVkJyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuZXhwaXJlZCgpKSB7XG4gICAgICB0aHJvdyBuZXcgUlBFcnJvcihcbiAgICAgICAgJ3RoZSBkZXZpY2UgY29kZSAlaiBoYXMgZXhwaXJlZCBhbmQgdGhlIGRldmljZSBhdXRob3JpemF0aW9uIHNlc3Npb24gaGFzIGNvbmNsdWRlZCcsXG4gICAgICAgIHRoaXMuZGV2aWNlX2NvZGUsXG4gICAgICApO1xuICAgIH1cblxuICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIHRoaXMuI2ludGVydmFsKSk7XG5cbiAgICBsZXQgdG9rZW5zZXQ7XG4gICAgdHJ5IHtcbiAgICAgIHRva2Vuc2V0ID0gYXdhaXQgdGhpcy4jY2xpZW50LmdyYW50KFxuICAgICAgICB7XG4gICAgICAgICAgLi4udGhpcy4jZXhjaGFuZ2VCb2R5LFxuICAgICAgICAgIGdyYW50X3R5cGU6ICd1cm46aWV0ZjpwYXJhbXM6b2F1dGg6Z3JhbnQtdHlwZTpkZXZpY2VfY29kZScsXG4gICAgICAgICAgZGV2aWNlX2NvZGU6IHRoaXMuZGV2aWNlX2NvZGUsXG4gICAgICAgIH0sXG4gICAgICAgIHsgY2xpZW50QXNzZXJ0aW9uUGF5bG9hZDogdGhpcy4jY2xpZW50QXNzZXJ0aW9uUGF5bG9hZCwgRFBvUDogdGhpcy4jRFBvUCB9LFxuICAgICAgKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIHN3aXRjaCAoZXJyIGluc3RhbmNlb2YgT1BFcnJvciAmJiBlcnIuZXJyb3IpIHtcbiAgICAgICAgY2FzZSAnc2xvd19kb3duJzpcbiAgICAgICAgICB0aGlzLiNpbnRlcnZhbCArPSA1MDAwO1xuICAgICAgICBjYXNlICdhdXRob3JpemF0aW9uX3BlbmRpbmcnOlxuICAgICAgICAgIHJldHVybiB0aGlzLnBvbGwoeyBzaWduYWwgfSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICgnaWRfdG9rZW4nIGluIHRva2Vuc2V0KSB7XG4gICAgICBhd2FpdCB0aGlzLiNjbGllbnQuZGVjcnlwdElkVG9rZW4odG9rZW5zZXQpO1xuICAgICAgYXdhaXQgdGhpcy4jY2xpZW50LnZhbGlkYXRlSWRUb2tlbih0b2tlbnNldCwgdW5kZWZpbmVkLCAndG9rZW4nLCB0aGlzLiNtYXhBZ2UpO1xuICAgIH1cblxuICAgIHJldHVybiB0b2tlbnNldDtcbiAgfVxuXG4gIGdldCBkZXZpY2VfY29kZSgpIHtcbiAgICByZXR1cm4gdGhpcy4jcmVzcG9uc2UuZGV2aWNlX2NvZGU7XG4gIH1cblxuICBnZXQgdXNlcl9jb2RlKCkge1xuICAgIHJldHVybiB0aGlzLiNyZXNwb25zZS51c2VyX2NvZGU7XG4gIH1cblxuICBnZXQgdmVyaWZpY2F0aW9uX3VyaSgpIHtcbiAgICByZXR1cm4gdGhpcy4jcmVzcG9uc2UudmVyaWZpY2F0aW9uX3VyaTtcbiAgfVxuXG4gIGdldCB2ZXJpZmljYXRpb25fdXJpX2NvbXBsZXRlKCkge1xuICAgIHJldHVybiB0aGlzLiNyZXNwb25zZS52ZXJpZmljYXRpb25fdXJpX2NvbXBsZXRlO1xuICB9XG5cbiAgZ2V0IGV4cGlyZXNfaW4oKSB7XG4gICAgcmV0dXJuIE1hdGgubWF4LmFwcGx5KG51bGwsIFt0aGlzLiNleHBpcmVzX2F0IC0gbm93KCksIDBdKTtcbiAgfVxuXG4gIGV4cGlyZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZXhwaXJlc19pbiA9PT0gMDtcbiAgfVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIFtpbnNwZWN0LmN1c3RvbV0oKSB7XG4gICAgcmV0dXJuIGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0gJHtpbnNwZWN0KHRoaXMuI3Jlc3BvbnNlLCB7XG4gICAgICBkZXB0aDogSW5maW5pdHksXG4gICAgICBjb2xvcnM6IHByb2Nlc3Muc3Rkb3V0LmlzVFRZLFxuICAgICAgY29tcGFjdDogZmFsc2UsXG4gICAgICBzb3J0ZWQ6IHRydWUsXG4gICAgfSl9YDtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IERldmljZUZsb3dIYW5kbGU7XG4iXSwibmFtZXMiOlsiaW5zcGVjdCIsInJlcXVpcmUiLCJSUEVycm9yIiwiT1BFcnJvciIsIm5vdyIsIkRldmljZUZsb3dIYW5kbGUiLCJhYm9ydGVkIiwiY2xpZW50IiwiY2xpZW50QXNzZXJ0aW9uUGF5bG9hZCIsIkRQb1AiLCJleGNoYW5nZUJvZHkiLCJleHBpcmVzX2F0IiwiaW50ZXJ2YWwiLCJtYXhBZ2UiLCJyZXNwb25zZSIsImNvbnN0cnVjdG9yIiwiZm9yRWFjaCIsInByb3AiLCJOdW1iZXIiLCJpc1NhZmVJbnRlZ2VyIiwiZXhwaXJlc19pbiIsImFib3J0IiwicG9sbCIsInNpZ25hbCIsImV4cGlyZWQiLCJkZXZpY2VfY29kZSIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsInRva2Vuc2V0IiwiZ3JhbnQiLCJncmFudF90eXBlIiwiZXJyIiwiZXJyb3IiLCJkZWNyeXB0SWRUb2tlbiIsInZhbGlkYXRlSWRUb2tlbiIsInVuZGVmaW5lZCIsInVzZXJfY29kZSIsInZlcmlmaWNhdGlvbl91cmkiLCJ2ZXJpZmljYXRpb25fdXJpX2NvbXBsZXRlIiwiTWF0aCIsIm1heCIsImFwcGx5IiwiY3VzdG9tIiwibmFtZSIsImRlcHRoIiwiSW5maW5pdHkiLCJjb2xvcnMiLCJwcm9jZXNzIiwic3Rkb3V0IiwiaXNUVFkiLCJjb21wYWN0Iiwic29ydGVkIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/device_flow_handle.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/errors.js":
/*!**************************************************!*\
  !*** ./node_modules/openid-client/lib/errors.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { format } = __webpack_require__(/*! util */ \"util\");\nclass OPError extends Error {\n    constructor({ error_description, error, error_uri, session_state, state, scope }, response){\n        super(!error_description ? error : `${error} (${error_description})`);\n        Object.assign(this, {\n            error\n        }, error_description && {\n            error_description\n        }, error_uri && {\n            error_uri\n        }, state && {\n            state\n        }, scope && {\n            scope\n        }, session_state && {\n            session_state\n        });\n        if (response) {\n            Object.defineProperty(this, \"response\", {\n                value: response\n            });\n        }\n        this.name = this.constructor.name;\n        Error.captureStackTrace(this, this.constructor);\n    }\n}\nclass RPError extends Error {\n    constructor(...args){\n        if (typeof args[0] === \"string\") {\n            super(format(...args));\n        } else {\n            const { message, printf, response, ...rest } = args[0];\n            if (printf) {\n                super(format(...printf));\n            } else {\n                super(message);\n            }\n            Object.assign(this, rest);\n            if (response) {\n                Object.defineProperty(this, \"response\", {\n                    value: response\n                });\n            }\n        }\n        this.name = this.constructor.name;\n        Error.captureStackTrace(this, this.constructor);\n    }\n}\nmodule.exports = {\n    OPError,\n    RPError\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLEVBQUVBLE1BQU0sRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQztBQUUzQixNQUFNQyxnQkFBZ0JDO0lBQ3BCQyxZQUFZLEVBQUVDLGlCQUFpQixFQUFFQyxLQUFLLEVBQUVDLFNBQVMsRUFBRUMsYUFBYSxFQUFFQyxLQUFLLEVBQUVDLEtBQUssRUFBRSxFQUFFQyxRQUFRLENBQUU7UUFDMUYsS0FBSyxDQUFDLENBQUNOLG9CQUFvQkMsUUFBUSxDQUFDLEVBQUVBLE1BQU0sRUFBRSxFQUFFRCxrQkFBa0IsQ0FBQyxDQUFDO1FBRXBFTyxPQUFPQyxPQUNMLElBQUksRUFDSjtZQUFFUDtRQUFNLEdBQ1JELHFCQUFxQjtZQUFFQTtRQUFrQixHQUN6Q0UsYUFBYTtZQUFFQTtRQUFVLEdBQ3pCRSxTQUFTO1lBQUVBO1FBQU0sR0FDakJDLFNBQVM7WUFBRUE7UUFBTSxHQUNqQkYsaUJBQWlCO1lBQUVBO1FBQWM7UUFHbkMsSUFBSUcsVUFBVTtZQUNaQyxPQUFPRSxlQUFlLElBQUksRUFBRSxZQUFZO2dCQUN0Q0MsT0FBT0o7WUFDVDtRQUNGO1FBRUEsSUFBSSxDQUFDSyxPQUFPLElBQUksQ0FBQ1osWUFBWVk7UUFDN0JiLE1BQU1jLGtCQUFrQixJQUFJLEVBQUUsSUFBSSxDQUFDYjtJQUNyQztBQUNGO0FBRUEsTUFBTWMsZ0JBQWdCZjtJQUNwQkMsWUFBWSxHQUFHZSxJQUFJLENBQUU7UUFDbkIsSUFBSSxPQUFPQSxJQUFJLENBQUMsRUFBRSxLQUFLLFVBQVU7WUFDL0IsS0FBSyxDQUFDbkIsVUFBVW1CO1FBQ2xCLE9BQU87WUFDTCxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsTUFBTSxFQUFFVixRQUFRLEVBQUUsR0FBR1csTUFBTSxHQUFHSCxJQUFJLENBQUMsRUFBRTtZQUN0RCxJQUFJRSxRQUFRO2dCQUNWLEtBQUssQ0FBQ3JCLFVBQVVxQjtZQUNsQixPQUFPO2dCQUNMLEtBQUssQ0FBQ0Q7WUFDUjtZQUNBUixPQUFPQyxPQUFPLElBQUksRUFBRVM7WUFDcEIsSUFBSVgsVUFBVTtnQkFDWkMsT0FBT0UsZUFBZSxJQUFJLEVBQUUsWUFBWTtvQkFDdENDLE9BQU9KO2dCQUNUO1lBQ0Y7UUFDRjtRQUVBLElBQUksQ0FBQ0ssT0FBTyxJQUFJLENBQUNaLFlBQVlZO1FBQzdCYixNQUFNYyxrQkFBa0IsSUFBSSxFQUFFLElBQUksQ0FBQ2I7SUFDckM7QUFDRjtBQUVBbUIsT0FBT0MsVUFBVTtJQUNmdEI7SUFDQWdCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2Vycm9ycy5qcz9hNzQxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZm9ybWF0IH0gPSByZXF1aXJlKCd1dGlsJyk7XG5cbmNsYXNzIE9QRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKHsgZXJyb3JfZGVzY3JpcHRpb24sIGVycm9yLCBlcnJvcl91cmksIHNlc3Npb25fc3RhdGUsIHN0YXRlLCBzY29wZSB9LCByZXNwb25zZSkge1xuICAgIHN1cGVyKCFlcnJvcl9kZXNjcmlwdGlvbiA/IGVycm9yIDogYCR7ZXJyb3J9ICgke2Vycm9yX2Rlc2NyaXB0aW9ufSlgKTtcblxuICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICB0aGlzLFxuICAgICAgeyBlcnJvciB9LFxuICAgICAgZXJyb3JfZGVzY3JpcHRpb24gJiYgeyBlcnJvcl9kZXNjcmlwdGlvbiB9LFxuICAgICAgZXJyb3JfdXJpICYmIHsgZXJyb3JfdXJpIH0sXG4gICAgICBzdGF0ZSAmJiB7IHN0YXRlIH0sXG4gICAgICBzY29wZSAmJiB7IHNjb3BlIH0sXG4gICAgICBzZXNzaW9uX3N0YXRlICYmIHsgc2Vzc2lvbl9zdGF0ZSB9LFxuICAgICk7XG5cbiAgICBpZiAocmVzcG9uc2UpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCAncmVzcG9uc2UnLCB7XG4gICAgICAgIHZhbHVlOiByZXNwb25zZSxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRoaXMubmFtZSA9IHRoaXMuY29uc3RydWN0b3IubmFtZTtcbiAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCB0aGlzLmNvbnN0cnVjdG9yKTtcbiAgfVxufVxuXG5jbGFzcyBSUEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvciguLi5hcmdzKSB7XG4gICAgaWYgKHR5cGVvZiBhcmdzWzBdID09PSAnc3RyaW5nJykge1xuICAgICAgc3VwZXIoZm9ybWF0KC4uLmFyZ3MpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgeyBtZXNzYWdlLCBwcmludGYsIHJlc3BvbnNlLCAuLi5yZXN0IH0gPSBhcmdzWzBdO1xuICAgICAgaWYgKHByaW50Zikge1xuICAgICAgICBzdXBlcihmb3JtYXQoLi4ucHJpbnRmKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgIH1cbiAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgcmVzdCk7XG4gICAgICBpZiAocmVzcG9uc2UpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICdyZXNwb25zZScsIHtcbiAgICAgICAgICB2YWx1ZTogcmVzcG9uc2UsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMubmFtZSA9IHRoaXMuY29uc3RydWN0b3IubmFtZTtcbiAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLCB0aGlzLmNvbnN0cnVjdG9yKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgT1BFcnJvcixcbiAgUlBFcnJvcixcbn07XG4iXSwibmFtZXMiOlsiZm9ybWF0IiwicmVxdWlyZSIsIk9QRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiZXJyb3JfZGVzY3JpcHRpb24iLCJlcnJvciIsImVycm9yX3VyaSIsInNlc3Npb25fc3RhdGUiLCJzdGF0ZSIsInNjb3BlIiwicmVzcG9uc2UiLCJPYmplY3QiLCJhc3NpZ24iLCJkZWZpbmVQcm9wZXJ0eSIsInZhbHVlIiwibmFtZSIsImNhcHR1cmVTdGFja1RyYWNlIiwiUlBFcnJvciIsImFyZ3MiLCJtZXNzYWdlIiwicHJpbnRmIiwicmVzdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/errors.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/assert.js":
/*!**********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/assert.js ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction assertSigningAlgValuesSupport(endpoint, issuer, properties) {\n    if (!issuer[`${endpoint}_endpoint`]) return;\n    const eam = `${endpoint}_endpoint_auth_method`;\n    const easa = `${endpoint}_endpoint_auth_signing_alg`;\n    const easavs = `${endpoint}_endpoint_auth_signing_alg_values_supported`;\n    if (properties[eam] && properties[eam].endsWith(\"_jwt\") && !properties[easa] && !issuer[easavs]) {\n        throw new TypeError(`${easavs} must be configured on the issuer if ${easa} is not defined on a client`);\n    }\n}\nfunction assertIssuerConfiguration(issuer, endpoint) {\n    if (!issuer[endpoint]) {\n        throw new TypeError(`${endpoint} must be configured on the issuer`);\n    }\n}\nmodule.exports = {\n    assertSigningAlgValuesSupport,\n    assertIssuerConfiguration\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9hc3NlcnQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLDhCQUE4QkMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLFVBQVU7SUFDakUsSUFBSSxDQUFDRCxNQUFNLENBQUMsQ0FBQyxFQUFFRCxTQUFTLFNBQVMsQ0FBQyxDQUFDLEVBQUU7SUFFckMsTUFBTUcsTUFBTSxDQUFDLEVBQUVILFNBQVMscUJBQXFCLENBQUM7SUFDOUMsTUFBTUksT0FBTyxDQUFDLEVBQUVKLFNBQVMsMEJBQTBCLENBQUM7SUFDcEQsTUFBTUssU0FBUyxDQUFDLEVBQUVMLFNBQVMsMkNBQTJDLENBQUM7SUFFdkUsSUFBSUUsVUFBVSxDQUFDQyxJQUFJLElBQUlELFVBQVUsQ0FBQ0MsSUFBSSxDQUFDRyxTQUFTLFdBQVcsQ0FBQ0osVUFBVSxDQUFDRSxLQUFLLElBQUksQ0FBQ0gsTUFBTSxDQUFDSSxPQUFPLEVBQUU7UUFDL0YsTUFBTSxJQUFJRSxVQUNSLENBQUMsRUFBRUYsT0FBTyxxQ0FBcUMsRUFBRUQsS0FBSywyQkFBMkIsQ0FBQztJQUV0RjtBQUNGO0FBRUEsU0FBU0ksMEJBQTBCUCxNQUFNLEVBQUVELFFBQVE7SUFDakQsSUFBSSxDQUFDQyxNQUFNLENBQUNELFNBQVMsRUFBRTtRQUNyQixNQUFNLElBQUlPLFVBQVUsQ0FBQyxFQUFFUCxTQUFTLGlDQUFpQyxDQUFDO0lBQ3BFO0FBQ0Y7QUFFQVMsT0FBT0MsVUFBVTtJQUNmWDtJQUNBUztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9vcGVuaWQtY2xpZW50L2xpYi9oZWxwZXJzL2Fzc2VydC5qcz9hZDIyIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzc2VydFNpZ25pbmdBbGdWYWx1ZXNTdXBwb3J0KGVuZHBvaW50LCBpc3N1ZXIsIHByb3BlcnRpZXMpIHtcbiAgaWYgKCFpc3N1ZXJbYCR7ZW5kcG9pbnR9X2VuZHBvaW50YF0pIHJldHVybjtcblxuICBjb25zdCBlYW0gPSBgJHtlbmRwb2ludH1fZW5kcG9pbnRfYXV0aF9tZXRob2RgO1xuICBjb25zdCBlYXNhID0gYCR7ZW5kcG9pbnR9X2VuZHBvaW50X2F1dGhfc2lnbmluZ19hbGdgO1xuICBjb25zdCBlYXNhdnMgPSBgJHtlbmRwb2ludH1fZW5kcG9pbnRfYXV0aF9zaWduaW5nX2FsZ192YWx1ZXNfc3VwcG9ydGVkYDtcblxuICBpZiAocHJvcGVydGllc1tlYW1dICYmIHByb3BlcnRpZXNbZWFtXS5lbmRzV2l0aCgnX2p3dCcpICYmICFwcm9wZXJ0aWVzW2Vhc2FdICYmICFpc3N1ZXJbZWFzYXZzXSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXG4gICAgICBgJHtlYXNhdnN9IG11c3QgYmUgY29uZmlndXJlZCBvbiB0aGUgaXNzdWVyIGlmICR7ZWFzYX0gaXMgbm90IGRlZmluZWQgb24gYSBjbGllbnRgLFxuICAgICk7XG4gIH1cbn1cblxuZnVuY3Rpb24gYXNzZXJ0SXNzdWVyQ29uZmlndXJhdGlvbihpc3N1ZXIsIGVuZHBvaW50KSB7XG4gIGlmICghaXNzdWVyW2VuZHBvaW50XSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7ZW5kcG9pbnR9IG11c3QgYmUgY29uZmlndXJlZCBvbiB0aGUgaXNzdWVyYCk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFzc2VydFNpZ25pbmdBbGdWYWx1ZXNTdXBwb3J0LFxuICBhc3NlcnRJc3N1ZXJDb25maWd1cmF0aW9uLFxufTtcbiJdLCJuYW1lcyI6WyJhc3NlcnRTaWduaW5nQWxnVmFsdWVzU3VwcG9ydCIsImVuZHBvaW50IiwiaXNzdWVyIiwicHJvcGVydGllcyIsImVhbSIsImVhc2EiLCJlYXNhdnMiLCJlbmRzV2l0aCIsIlR5cGVFcnJvciIsImFzc2VydElzc3VlckNvbmZpZ3VyYXRpb24iLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/assert.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/base64url.js":
/*!*************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/base64url.js ***!
  \*************************************************************/
/***/ ((module) => {

"use strict";
eval("\nlet encode;\nif (Buffer.isEncoding(\"base64url\")) {\n    encode = (input, encoding = \"utf8\")=>Buffer.from(input, encoding).toString(\"base64url\");\n} else {\n    const fromBase64 = (base64)=>base64.replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n    encode = (input, encoding = \"utf8\")=>fromBase64(Buffer.from(input, encoding).toString(\"base64\"));\n}\nconst decode = (input)=>Buffer.from(input, \"base64\");\nmodule.exports.decode = decode;\nmodule.exports.encode = encode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9iYXNlNjR1cmwuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBO0FBQ0osSUFBSUMsT0FBT0MsV0FBVyxjQUFjO0lBQ2xDRixTQUFTLENBQUNHLE9BQU9DLFdBQVcsTUFBTSxHQUFLSCxPQUFPSSxLQUFLRixPQUFPQyxVQUFVRSxTQUFTO0FBQy9FLE9BQU87SUFDTCxNQUFNQyxhQUFhLENBQUNDLFNBQVdBLE9BQU9DLFFBQVEsTUFBTSxJQUFJQSxRQUFRLE9BQU8sS0FBS0EsUUFBUSxPQUFPO0lBQzNGVCxTQUFTLENBQUNHLE9BQU9DLFdBQVcsTUFBTSxHQUNoQ0csV0FBV04sT0FBT0ksS0FBS0YsT0FBT0MsVUFBVUUsU0FBUztBQUNyRDtBQUVBLE1BQU1JLFNBQVMsQ0FBQ1AsUUFBVUYsT0FBT0ksS0FBS0YsT0FBTztBQUU3Q1EscUJBQXFCRCxHQUFHQTtBQUN4QkMscUJBQXFCWCxHQUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9iYXNlNjR1cmwuanM/M2I1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgZW5jb2RlO1xuaWYgKEJ1ZmZlci5pc0VuY29kaW5nKCdiYXNlNjR1cmwnKSkge1xuICBlbmNvZGUgPSAoaW5wdXQsIGVuY29kaW5nID0gJ3V0ZjgnKSA9PiBCdWZmZXIuZnJvbShpbnB1dCwgZW5jb2RpbmcpLnRvU3RyaW5nKCdiYXNlNjR1cmwnKTtcbn0gZWxzZSB7XG4gIGNvbnN0IGZyb21CYXNlNjQgPSAoYmFzZTY0KSA9PiBiYXNlNjQucmVwbGFjZSgvPS9nLCAnJykucmVwbGFjZSgvXFwrL2csICctJykucmVwbGFjZSgvXFwvL2csICdfJyk7XG4gIGVuY29kZSA9IChpbnB1dCwgZW5jb2RpbmcgPSAndXRmOCcpID0+XG4gICAgZnJvbUJhc2U2NChCdWZmZXIuZnJvbShpbnB1dCwgZW5jb2RpbmcpLnRvU3RyaW5nKCdiYXNlNjQnKSk7XG59XG5cbmNvbnN0IGRlY29kZSA9IChpbnB1dCkgPT4gQnVmZmVyLmZyb20oaW5wdXQsICdiYXNlNjQnKTtcblxubW9kdWxlLmV4cG9ydHMuZGVjb2RlID0gZGVjb2RlO1xubW9kdWxlLmV4cG9ydHMuZW5jb2RlID0gZW5jb2RlO1xuIl0sIm5hbWVzIjpbImVuY29kZSIsIkJ1ZmZlciIsImlzRW5jb2RpbmciLCJpbnB1dCIsImVuY29kaW5nIiwiZnJvbSIsInRvU3RyaW5nIiwiZnJvbUJhc2U2NCIsImJhc2U2NCIsInJlcGxhY2UiLCJkZWNvZGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/base64url.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/client.js":
/*!**********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/client.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst jose = __webpack_require__(/*! jose */ \"(sc_server)/./node_modules/jose/dist/node/cjs/index.js\");\nconst { RPError } = __webpack_require__(/*! ../errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst { assertIssuerConfiguration } = __webpack_require__(/*! ./assert */ \"(sc_server)/./node_modules/openid-client/lib/helpers/assert.js\");\nconst { random } = __webpack_require__(/*! ./generators */ \"(sc_server)/./node_modules/openid-client/lib/helpers/generators.js\");\nconst now = __webpack_require__(/*! ./unix_timestamp */ \"(sc_server)/./node_modules/openid-client/lib/helpers/unix_timestamp.js\");\nconst request = __webpack_require__(/*! ./request */ \"(sc_server)/./node_modules/openid-client/lib/helpers/request.js\");\nconst { keystores } = __webpack_require__(/*! ./weak_cache */ \"(sc_server)/./node_modules/openid-client/lib/helpers/weak_cache.js\");\nconst merge = __webpack_require__(/*! ./merge */ \"(sc_server)/./node_modules/openid-client/lib/helpers/merge.js\");\nconst formUrlEncode = (value)=>encodeURIComponent(value).replace(/%20/g, \"+\");\nasync function clientAssertion(endpoint, payload) {\n    let alg = this[`${endpoint}_endpoint_auth_signing_alg`];\n    if (!alg) {\n        assertIssuerConfiguration(this.issuer, `${endpoint}_endpoint_auth_signing_alg_values_supported`);\n    }\n    if (this[`${endpoint}_endpoint_auth_method`] === \"client_secret_jwt\") {\n        if (!alg) {\n            const supported = this.issuer[`${endpoint}_endpoint_auth_signing_alg_values_supported`];\n            alg = Array.isArray(supported) && supported.find((signAlg)=>/^HS(?:256|384|512)/.test(signAlg));\n        }\n        if (!alg) {\n            throw new RPError(`failed to determine a JWS Algorithm to use for ${this[`${endpoint}_endpoint_auth_method`]} Client Assertion`);\n        }\n        return new jose.CompactSign(Buffer.from(JSON.stringify(payload))).setProtectedHeader({\n            alg\n        }).sign(this.secretForAlg(alg));\n    }\n    const keystore = await keystores.get(this);\n    if (!keystore) {\n        throw new TypeError(\"no client jwks provided for signing a client assertion with\");\n    }\n    if (!alg) {\n        const supported = this.issuer[`${endpoint}_endpoint_auth_signing_alg_values_supported`];\n        alg = Array.isArray(supported) && supported.find((signAlg)=>keystore.get({\n                alg: signAlg,\n                use: \"sig\"\n            }));\n    }\n    if (!alg) {\n        throw new RPError(`failed to determine a JWS Algorithm to use for ${this[`${endpoint}_endpoint_auth_method`]} Client Assertion`);\n    }\n    const key = keystore.get({\n        alg,\n        use: \"sig\"\n    });\n    if (!key) {\n        throw new RPError(`no key found in client jwks to sign a client assertion with using alg ${alg}`);\n    }\n    return new jose.CompactSign(Buffer.from(JSON.stringify(payload))).setProtectedHeader({\n        alg,\n        kid: key.jwk && key.jwk.kid\n    }).sign(key.keyObject);\n}\nasync function authFor(endpoint, { clientAssertionPayload } = {}) {\n    const authMethod = this[`${endpoint}_endpoint_auth_method`];\n    switch(authMethod){\n        case \"self_signed_tls_client_auth\":\n        case \"tls_client_auth\":\n        case \"none\":\n            return {\n                form: {\n                    client_id: this.client_id\n                }\n            };\n        case \"client_secret_post\":\n            if (!this.client_secret) {\n                throw new TypeError(\"client_secret_post client authentication method requires a client_secret\");\n            }\n            return {\n                form: {\n                    client_id: this.client_id,\n                    client_secret: this.client_secret\n                }\n            };\n        case \"private_key_jwt\":\n        case \"client_secret_jwt\":\n            {\n                const timestamp = now();\n                const audience = [\n                    ...new Set([\n                        this.issuer.issuer,\n                        this.issuer.token_endpoint\n                    ].filter(Boolean))\n                ];\n                const assertion = await clientAssertion.call(this, endpoint, {\n                    iat: timestamp,\n                    exp: timestamp + 60,\n                    jti: random(),\n                    iss: this.client_id,\n                    sub: this.client_id,\n                    aud: audience,\n                    ...clientAssertionPayload\n                });\n                return {\n                    form: {\n                        client_id: this.client_id,\n                        client_assertion: assertion,\n                        client_assertion_type: \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\"\n                    }\n                };\n            }\n        case \"client_secret_basic\":\n            {\n                // This is correct behaviour, see https://tools.ietf.org/html/rfc6749#section-2.3.1 and the\n                // related appendix. (also https://github.com/panva/node-openid-client/pull/91)\n                // > The client identifier is encoded using the\n                // > \"application/x-www-form-urlencoded\" encoding algorithm per\n                // > Appendix B, and the encoded value is used as the username; the client\n                // > password is encoded using the same algorithm and used as the\n                // > password.\n                if (!this.client_secret) {\n                    throw new TypeError(\"client_secret_basic client authentication method requires a client_secret\");\n                }\n                const encoded = `${formUrlEncode(this.client_id)}:${formUrlEncode(this.client_secret)}`;\n                const value = Buffer.from(encoded).toString(\"base64\");\n                return {\n                    headers: {\n                        Authorization: `Basic ${value}`\n                    }\n                };\n            }\n        default:\n            {\n                throw new TypeError(`missing, or unsupported, ${endpoint}_endpoint_auth_method`);\n            }\n    }\n}\nfunction resolveResponseType() {\n    const { length, 0: value } = this.response_types;\n    if (length === 1) {\n        return value;\n    }\n    return undefined;\n}\nfunction resolveRedirectUri() {\n    const { length, 0: value } = this.redirect_uris || [];\n    if (length === 1) {\n        return value;\n    }\n    return undefined;\n}\nasync function authenticatedPost(endpoint, opts, { clientAssertionPayload, endpointAuthMethod = endpoint, DPoP } = {}) {\n    const auth = await authFor.call(this, endpointAuthMethod, {\n        clientAssertionPayload\n    });\n    const requestOpts = merge(opts, auth);\n    const mTLS = this[`${endpointAuthMethod}_endpoint_auth_method`].includes(\"tls_client_auth\") || endpoint === \"token\" && this.tls_client_certificate_bound_access_tokens;\n    let targetUrl;\n    if (mTLS && this.issuer.mtls_endpoint_aliases) {\n        targetUrl = this.issuer.mtls_endpoint_aliases[`${endpoint}_endpoint`];\n    }\n    targetUrl = targetUrl || this.issuer[`${endpoint}_endpoint`];\n    if (\"form\" in requestOpts) {\n        for (const [key, value] of Object.entries(requestOpts.form)){\n            if (typeof value === \"undefined\") {\n                delete requestOpts.form[key];\n            }\n        }\n    }\n    return request.call(this, {\n        ...requestOpts,\n        method: \"POST\",\n        url: targetUrl,\n        headers: {\n            ...endpoint !== \"revocation\" ? {\n                Accept: \"application/json\"\n            } : undefined,\n            ...requestOpts.headers\n        }\n    }, {\n        mTLS,\n        DPoP\n    });\n}\nmodule.exports = {\n    resolveResponseType,\n    resolveRedirectUri,\n    authFor,\n    authenticatedPost\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/client.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/consts.js":
/*!**********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/consts.js ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
eval("\nconst HTTP_OPTIONS = Symbol();\nconst CLOCK_TOLERANCE = Symbol();\nmodule.exports = {\n    CLOCK_TOLERANCE,\n    HTTP_OPTIONS\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9jb25zdHMuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLGVBQWVDO0FBQ3JCLE1BQU1DLGtCQUFrQkQ7QUFFeEJFLE9BQU9DLFVBQVU7SUFDZkY7SUFDQUY7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9jb25zdHMuanM/ZTA1MyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBIVFRQX09QVElPTlMgPSBTeW1ib2woKTtcbmNvbnN0IENMT0NLX1RPTEVSQU5DRSA9IFN5bWJvbCgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgQ0xPQ0tfVE9MRVJBTkNFLFxuICBIVFRQX09QVElPTlMsXG59O1xuIl0sIm5hbWVzIjpbIkhUVFBfT1BUSU9OUyIsIlN5bWJvbCIsIkNMT0NLX1RPTEVSQU5DRSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/consts.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/decode_jwt.js":
/*!**************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/decode_jwt.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst base64url = __webpack_require__(/*! ./base64url */ \"(sc_server)/./node_modules/openid-client/lib/helpers/base64url.js\");\nmodule.exports = (token)=>{\n    if (typeof token !== \"string\" || !token) {\n        throw new TypeError(\"JWT must be a string\");\n    }\n    const { 0: header, 1: payload, 2: signature, length } = token.split(\".\");\n    if (length === 5) {\n        throw new TypeError(\"encrypted JWTs cannot be decoded\");\n    }\n    if (length !== 3) {\n        throw new Error(\"JWTs must have three components\");\n    }\n    try {\n        return {\n            header: JSON.parse(base64url.decode(header)),\n            payload: JSON.parse(base64url.decode(payload)),\n            signature\n        };\n    } catch (err) {\n        throw new Error(\"JWT is malformed\");\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9kZWNvZGVfand0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxZQUFZQyxtQkFBT0EsQ0FBQztBQUUxQkMsT0FBT0MsVUFBVSxDQUFDQztJQUNoQixJQUFJLE9BQU9BLFVBQVUsWUFBWSxDQUFDQSxPQUFPO1FBQ3ZDLE1BQU0sSUFBSUMsVUFBVTtJQUN0QjtJQUVBLE1BQU0sRUFBRSxHQUFHQyxNQUFNLEVBQUUsR0FBR0MsT0FBTyxFQUFFLEdBQUdDLFNBQVMsRUFBRUMsTUFBTSxFQUFFLEdBQUdMLE1BQU1NLE1BQU07SUFFcEUsSUFBSUQsV0FBVyxHQUFHO1FBQ2hCLE1BQU0sSUFBSUosVUFBVTtJQUN0QjtJQUVBLElBQUlJLFdBQVcsR0FBRztRQUNoQixNQUFNLElBQUlFLE1BQU07SUFDbEI7SUFFQSxJQUFJO1FBQ0YsT0FBTztZQUNMTCxRQUFRTSxLQUFLQyxNQUFNYixVQUFVYyxPQUFPUjtZQUNwQ0MsU0FBU0ssS0FBS0MsTUFBTWIsVUFBVWMsT0FBT1A7WUFDckNDO1FBQ0Y7SUFDRixFQUFFLE9BQU9PLEtBQUs7UUFDWixNQUFNLElBQUlKLE1BQU07SUFDbEI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9kZWNvZGVfand0LmpzPzU2MDMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmFzZTY0dXJsID0gcmVxdWlyZSgnLi9iYXNlNjR1cmwnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAodG9rZW4pID0+IHtcbiAgaWYgKHR5cGVvZiB0b2tlbiAhPT0gJ3N0cmluZycgfHwgIXRva2VuKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSldUIG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgfVxuXG4gIGNvbnN0IHsgMDogaGVhZGVyLCAxOiBwYXlsb2FkLCAyOiBzaWduYXR1cmUsIGxlbmd0aCB9ID0gdG9rZW4uc3BsaXQoJy4nKTtcblxuICBpZiAobGVuZ3RoID09PSA1KSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignZW5jcnlwdGVkIEpXVHMgY2Fubm90IGJlIGRlY29kZWQnKTtcbiAgfVxuXG4gIGlmIChsZW5ndGggIT09IDMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0pXVHMgbXVzdCBoYXZlIHRocmVlIGNvbXBvbmVudHMnKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGhlYWRlcjogSlNPTi5wYXJzZShiYXNlNjR1cmwuZGVjb2RlKGhlYWRlcikpLFxuICAgICAgcGF5bG9hZDogSlNPTi5wYXJzZShiYXNlNjR1cmwuZGVjb2RlKHBheWxvYWQpKSxcbiAgICAgIHNpZ25hdHVyZSxcbiAgICB9O1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0pXVCBpcyBtYWxmb3JtZWQnKTtcbiAgfVxufTtcbiJdLCJuYW1lcyI6WyJiYXNlNjR1cmwiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInRva2VuIiwiVHlwZUVycm9yIiwiaGVhZGVyIiwicGF5bG9hZCIsInNpZ25hdHVyZSIsImxlbmd0aCIsInNwbGl0IiwiRXJyb3IiLCJKU09OIiwicGFyc2UiLCJkZWNvZGUiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/decode_jwt.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/deep_clone.js":
/*!**************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/deep_clone.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = globalThis.structuredClone || ((obj)=>JSON.parse(JSON.stringify(obj)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9kZWVwX2Nsb25lLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsT0FBT0MsVUFBVUMsV0FBV0MsbUJBQW9CLEVBQUNDLE1BQVFDLEtBQUtDLE1BQU1ELEtBQUtFLFVBQVVILEtBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvZGVlcF9jbG9uZS5qcz84ZTRiIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZ2xvYmFsVGhpcy5zdHJ1Y3R1cmVkQ2xvbmUgfHwgKChvYmopID0+IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkob2JqKSkpO1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJnbG9iYWxUaGlzIiwic3RydWN0dXJlZENsb25lIiwib2JqIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/deep_clone.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/defaults.js":
/*!************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/defaults.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst isPlainObject = __webpack_require__(/*! ./is_plain_object */ \"(sc_server)/./node_modules/openid-client/lib/helpers/is_plain_object.js\");\nfunction defaults(deep, target, ...sources) {\n    for (const source of sources){\n        if (!isPlainObject(source)) {\n            continue;\n        }\n        for (const [key, value] of Object.entries(source)){\n            /* istanbul ignore if */ if (key === \"__proto__\" || key === \"constructor\") {\n                continue;\n            }\n            if (typeof target[key] === \"undefined\" && typeof value !== \"undefined\") {\n                target[key] = value;\n            }\n            if (deep && isPlainObject(target[key]) && isPlainObject(value)) {\n                defaults(true, target[key], value);\n            }\n        }\n    }\n    return target;\n}\nmodule.exports = defaults.bind(undefined, false);\nmodule.exports.deep = defaults.bind(undefined, true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9kZWZhdWx0cy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQztBQUU5QixTQUFTQyxTQUFTQyxJQUFJLEVBQUVDLE1BQU0sRUFBRSxHQUFHQyxPQUFPO0lBQ3hDLEtBQUssTUFBTUMsVUFBVUQsUUFBUztRQUM1QixJQUFJLENBQUNMLGNBQWNNLFNBQVM7WUFDMUI7UUFDRjtRQUNBLEtBQUssTUFBTSxDQUFDQyxLQUFLQyxNQUFNLElBQUlDLE9BQU9DLFFBQVFKLFFBQVM7WUFDakQsc0JBQXNCLEdBQ3RCLElBQUlDLFFBQVEsZUFBZUEsUUFBUSxlQUFlO2dCQUNoRDtZQUNGO1lBQ0EsSUFBSSxPQUFPSCxNQUFNLENBQUNHLElBQUksS0FBSyxlQUFlLE9BQU9DLFVBQVUsYUFBYTtnQkFDdEVKLE1BQU0sQ0FBQ0csSUFBSSxHQUFHQztZQUNoQjtZQUVBLElBQUlMLFFBQVFILGNBQWNJLE1BQU0sQ0FBQ0csSUFBSSxLQUFLUCxjQUFjUSxRQUFRO2dCQUM5RE4sU0FBUyxNQUFNRSxNQUFNLENBQUNHLElBQUksRUFBRUM7WUFDOUI7UUFDRjtJQUNGO0lBRUEsT0FBT0o7QUFDVDtBQUVBTyxPQUFPQyxVQUFVVixTQUFTVyxLQUFLQyxXQUFXO0FBQzFDSCxtQkFBbUJSLEdBQUdELFNBQVNXLEtBQUtDLFdBQVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvZGVmYXVsdHMuanM/MGNiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpc1BsYWluT2JqZWN0ID0gcmVxdWlyZSgnLi9pc19wbGFpbl9vYmplY3QnKTtcblxuZnVuY3Rpb24gZGVmYXVsdHMoZGVlcCwgdGFyZ2V0LCAuLi5zb3VyY2VzKSB7XG4gIGZvciAoY29uc3Qgc291cmNlIG9mIHNvdXJjZXMpIHtcbiAgICBpZiAoIWlzUGxhaW5PYmplY3Qoc291cmNlKSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHNvdXJjZSkpIHtcbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgaWYgKGtleSA9PT0gJ19fcHJvdG9fXycgfHwga2V5ID09PSAnY29uc3RydWN0b3InKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiB0YXJnZXRba2V5XSA9PT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHZhbHVlO1xuICAgICAgfVxuXG4gICAgICBpZiAoZGVlcCAmJiBpc1BsYWluT2JqZWN0KHRhcmdldFtrZXldKSAmJiBpc1BsYWluT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICBkZWZhdWx0cyh0cnVlLCB0YXJnZXRba2V5XSwgdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZGVmYXVsdHMuYmluZCh1bmRlZmluZWQsIGZhbHNlKTtcbm1vZHVsZS5leHBvcnRzLmRlZXAgPSBkZWZhdWx0cy5iaW5kKHVuZGVmaW5lZCwgdHJ1ZSk7XG4iXSwibmFtZXMiOlsiaXNQbGFpbk9iamVjdCIsInJlcXVpcmUiLCJkZWZhdWx0cyIsImRlZXAiLCJ0YXJnZXQiLCJzb3VyY2VzIiwic291cmNlIiwia2V5IiwidmFsdWUiLCJPYmplY3QiLCJlbnRyaWVzIiwibW9kdWxlIiwiZXhwb3J0cyIsImJpbmQiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/defaults.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/generators.js":
/*!**************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/generators.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { createHash, randomBytes } = __webpack_require__(/*! crypto */ \"crypto\");\nconst base64url = __webpack_require__(/*! ./base64url */ \"(sc_server)/./node_modules/openid-client/lib/helpers/base64url.js\");\nconst random = (bytes = 32)=>base64url.encode(randomBytes(bytes));\nmodule.exports = {\n    random,\n    state: random,\n    nonce: random,\n    codeVerifier: random,\n    codeChallenge: (codeVerifier)=>base64url.encode(createHash(\"sha256\").update(codeVerifier).digest())\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9nZW5lcmF0b3JzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLEVBQUVBLFVBQVUsRUFBRUMsV0FBVyxFQUFFLEdBQUdDLG1CQUFPQSxDQUFDO0FBRTVDLE1BQU1DLFlBQVlELG1CQUFPQSxDQUFDO0FBRTFCLE1BQU1FLFNBQVMsQ0FBQ0MsUUFBUSxFQUFFLEdBQUtGLFVBQVVHLE9BQU9MLFlBQVlJO0FBRTVERSxPQUFPQyxVQUFVO0lBQ2ZKO0lBQ0FLLE9BQU9MO0lBQ1BNLE9BQU9OO0lBQ1BPLGNBQWNQO0lBQ2RRLGVBQWUsQ0FBQ0QsZUFDZFIsVUFBVUcsT0FBT04sV0FBVyxVQUFVYSxPQUFPRixjQUFjRztBQUMvRCIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9nZW5lcmF0b3JzLmpzPzgyZjgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjcmVhdGVIYXNoLCByYW5kb21CeXRlcyB9ID0gcmVxdWlyZSgnY3J5cHRvJyk7XG5cbmNvbnN0IGJhc2U2NHVybCA9IHJlcXVpcmUoJy4vYmFzZTY0dXJsJyk7XG5cbmNvbnN0IHJhbmRvbSA9IChieXRlcyA9IDMyKSA9PiBiYXNlNjR1cmwuZW5jb2RlKHJhbmRvbUJ5dGVzKGJ5dGVzKSk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICByYW5kb20sXG4gIHN0YXRlOiByYW5kb20sXG4gIG5vbmNlOiByYW5kb20sXG4gIGNvZGVWZXJpZmllcjogcmFuZG9tLFxuICBjb2RlQ2hhbGxlbmdlOiAoY29kZVZlcmlmaWVyKSA9PlxuICAgIGJhc2U2NHVybC5lbmNvZGUoY3JlYXRlSGFzaCgnc2hhMjU2JykudXBkYXRlKGNvZGVWZXJpZmllcikuZGlnZXN0KCkpLFxufTtcbiJdLCJuYW1lcyI6WyJjcmVhdGVIYXNoIiwicmFuZG9tQnl0ZXMiLCJyZXF1aXJlIiwiYmFzZTY0dXJsIiwicmFuZG9tIiwiYnl0ZXMiLCJlbmNvZGUiLCJtb2R1bGUiLCJleHBvcnRzIiwic3RhdGUiLCJub25jZSIsImNvZGVWZXJpZmllciIsImNvZGVDaGFsbGVuZ2UiLCJ1cGRhdGUiLCJkaWdlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/generators.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/is_key_object.js":
/*!*****************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/is_key_object.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst util = __webpack_require__(/*! util */ \"util\");\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nmodule.exports = util.types.isKeyObject || ((obj)=>obj && obj instanceof crypto.KeyObject);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9pc19rZXlfb2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxPQUFPQyxtQkFBT0EsQ0FBQztBQUNyQixNQUFNQyxTQUFTRCxtQkFBT0EsQ0FBQztBQUV2QkUsT0FBT0MsVUFBVUosS0FBS0ssTUFBTUMsZUFBZ0IsRUFBQ0MsTUFBUUEsT0FBT0EsZUFBZUwsT0FBT00sU0FBUSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9pc19rZXlfb2JqZWN0LmpzP2EwMGIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHV0aWwudHlwZXMuaXNLZXlPYmplY3QgfHwgKChvYmopID0+IG9iaiAmJiBvYmogaW5zdGFuY2VvZiBjcnlwdG8uS2V5T2JqZWN0KTtcbiJdLCJuYW1lcyI6WyJ1dGlsIiwicmVxdWlyZSIsImNyeXB0byIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0eXBlcyIsImlzS2V5T2JqZWN0Iiwib2JqIiwiS2V5T2JqZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/is_key_object.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/is_plain_object.js":
/*!*******************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/is_plain_object.js ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = (a)=>!!a && a.constructor === Object;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9pc19wbGFpbl9vYmplY3QuanMiLCJtYXBwaW5ncyI6IjtBQUFBQSxPQUFPQyxVQUFVLENBQUNDLElBQU0sQ0FBQyxDQUFDQSxLQUFLQSxFQUFFQyxnQkFBZ0JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9vcGVuaWQtY2xpZW50L2xpYi9oZWxwZXJzL2lzX3BsYWluX29iamVjdC5qcz9lM2U4Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKGEpID0+ICEhYSAmJiBhLmNvbnN0cnVjdG9yID09PSBPYmplY3Q7XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImEiLCJjb25zdHJ1Y3RvciIsIk9iamVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/is_plain_object.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/issuer.js":
/*!**********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/issuer.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst objectHash = __webpack_require__(/*! object-hash */ \"(sc_server)/./node_modules/openid-client/node_modules/object-hash/index.js\");\nconst LRU = __webpack_require__(/*! lru-cache */ \"(sc_server)/./node_modules/lru-cache/index.js\");\nconst { RPError } = __webpack_require__(/*! ../errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst { assertIssuerConfiguration } = __webpack_require__(/*! ./assert */ \"(sc_server)/./node_modules/openid-client/lib/helpers/assert.js\");\nconst KeyStore = __webpack_require__(/*! ./keystore */ \"(sc_server)/./node_modules/openid-client/lib/helpers/keystore.js\");\nconst { keystores } = __webpack_require__(/*! ./weak_cache */ \"(sc_server)/./node_modules/openid-client/lib/helpers/weak_cache.js\");\nconst processResponse = __webpack_require__(/*! ./process_response */ \"(sc_server)/./node_modules/openid-client/lib/helpers/process_response.js\");\nconst request = __webpack_require__(/*! ./request */ \"(sc_server)/./node_modules/openid-client/lib/helpers/request.js\");\nconst inFlight = new WeakMap();\nconst caches = new WeakMap();\nconst lrus = (ctx)=>{\n    if (!caches.has(ctx)) {\n        caches.set(ctx, new LRU({\n            max: 100\n        }));\n    }\n    return caches.get(ctx);\n};\nasync function getKeyStore(reload = false) {\n    assertIssuerConfiguration(this, \"jwks_uri\");\n    const keystore = keystores.get(this);\n    const cache = lrus(this);\n    if (reload || !keystore) {\n        if (inFlight.has(this)) {\n            return inFlight.get(this);\n        }\n        cache.reset();\n        inFlight.set(this, (async ()=>{\n            const response = await request.call(this, {\n                method: \"GET\",\n                responseType: \"json\",\n                url: this.jwks_uri,\n                headers: {\n                    Accept: \"application/json, application/jwk-set+json\"\n                }\n            }).finally(()=>{\n                inFlight.delete(this);\n            });\n            const jwks = processResponse(response);\n            const joseKeyStore = KeyStore.fromJWKS(jwks, {\n                onlyPublic: true\n            });\n            cache.set(\"throttle\", true, 60 * 1000);\n            keystores.set(this, joseKeyStore);\n            return joseKeyStore;\n        })());\n        return inFlight.get(this);\n    }\n    return keystore;\n}\nasync function queryKeyStore({ kid, kty, alg, use }, { allowMulti = false } = {}) {\n    const cache = lrus(this);\n    const def = {\n        kid,\n        kty,\n        alg,\n        use\n    };\n    const defHash = objectHash(def, {\n        algorithm: \"sha256\",\n        ignoreUnknown: true,\n        unorderedArrays: true,\n        unorderedSets: true\n    });\n    // refresh keystore on every unknown key but also only upto once every minute\n    const freshJwksUri = cache.get(defHash) || cache.get(\"throttle\");\n    const keystore = await getKeyStore.call(this, !freshJwksUri);\n    const keys = keystore.all(def);\n    delete def.use;\n    if (keys.length === 0) {\n        throw new RPError({\n            printf: [\n                \"no valid key found in issuer's jwks_uri for key parameters %j\",\n                def\n            ],\n            jwks: keystore\n        });\n    }\n    if (!allowMulti && keys.length > 1 && !kid) {\n        throw new RPError({\n            printf: [\n                \"multiple matching keys found in issuer's jwks_uri for key parameters %j, kid must be provided in this case\",\n                def\n            ],\n            jwks: keystore\n        });\n    }\n    cache.set(defHash, true);\n    return keys;\n}\nmodule.exports.queryKeyStore = queryKeyStore;\nmodule.exports.keystore = getKeyStore;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9pc3N1ZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLGFBQWFDLG1CQUFPQSxDQUFDO0FBQzNCLE1BQU1DLE1BQU1ELG1CQUFPQSxDQUFDO0FBRXBCLE1BQU0sRUFBRUUsT0FBTyxFQUFFLEdBQUdGLG1CQUFPQSxDQUFDO0FBRTVCLE1BQU0sRUFBRUcseUJBQXlCLEVBQUUsR0FBR0gsbUJBQU9BLENBQUM7QUFDOUMsTUFBTUksV0FBV0osbUJBQU9BLENBQUM7QUFDekIsTUFBTSxFQUFFSyxTQUFTLEVBQUUsR0FBR0wsbUJBQU9BLENBQUM7QUFDOUIsTUFBTU0sa0JBQWtCTixtQkFBT0EsQ0FBQztBQUNoQyxNQUFNTyxVQUFVUCxtQkFBT0EsQ0FBQztBQUV4QixNQUFNUSxXQUFXLElBQUlDO0FBQ3JCLE1BQU1DLFNBQVMsSUFBSUQ7QUFDbkIsTUFBTUUsT0FBTyxDQUFDQztJQUNaLElBQUksQ0FBQ0YsT0FBT0csSUFBSUQsTUFBTTtRQUNwQkYsT0FBT0ksSUFBSUYsS0FBSyxJQUFJWCxJQUFJO1lBQUVjLEtBQUs7UUFBSTtJQUNyQztJQUNBLE9BQU9MLE9BQU9NLElBQUlKO0FBQ3BCO0FBRUEsZUFBZUssWUFBWUMsU0FBUyxLQUFLO0lBQ3ZDZiwwQkFBMEIsSUFBSSxFQUFFO0lBRWhDLE1BQU1nQixXQUFXZCxVQUFVVyxJQUFJLElBQUk7SUFDbkMsTUFBTUksUUFBUVQsS0FBSyxJQUFJO0lBRXZCLElBQUlPLFVBQVUsQ0FBQ0MsVUFBVTtRQUN2QixJQUFJWCxTQUFTSyxJQUFJLElBQUksR0FBRztZQUN0QixPQUFPTCxTQUFTUSxJQUFJLElBQUk7UUFDMUI7UUFDQUksTUFBTUM7UUFDTmIsU0FBU00sSUFDUCxJQUFJLEVBQ0osQ0FBQztZQUNDLE1BQU1RLFdBQVcsTUFBTWYsUUFDcEJnQixLQUFLLElBQUksRUFBRTtnQkFDVkMsUUFBUTtnQkFDUkMsY0FBYztnQkFDZEMsS0FBSyxJQUFJLENBQUNDO2dCQUNWQyxTQUFTO29CQUNQQyxRQUFRO2dCQUNWO1lBQ0YsR0FDQ0MsUUFBUTtnQkFDUHRCLFNBQVN1QixPQUFPLElBQUk7WUFDdEI7WUFDRixNQUFNQyxPQUFPMUIsZ0JBQWdCZ0I7WUFFN0IsTUFBTVcsZUFBZTdCLFNBQVM4QixTQUFTRixNQUFNO2dCQUFFRyxZQUFZO1lBQUs7WUFDaEVmLE1BQU1OLElBQUksWUFBWSxNQUFNLEtBQUs7WUFDakNULFVBQVVTLElBQUksSUFBSSxFQUFFbUI7WUFFcEIsT0FBT0E7UUFDVDtRQUdGLE9BQU96QixTQUFTUSxJQUFJLElBQUk7SUFDMUI7SUFFQSxPQUFPRztBQUNUO0FBRUEsZUFBZWlCLGNBQWMsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFLEVBQUUsRUFBRUMsYUFBYSxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDOUUsTUFBTXJCLFFBQVFULEtBQUssSUFBSTtJQUV2QixNQUFNK0IsTUFBTTtRQUNWTDtRQUNBQztRQUNBQztRQUNBQztJQUNGO0lBRUEsTUFBTUcsVUFBVTVDLFdBQVcyQyxLQUFLO1FBQzlCRSxXQUFXO1FBQ1hDLGVBQWU7UUFDZkMsaUJBQWlCO1FBQ2pCQyxlQUFlO0lBQ2pCO0lBRUEsNkVBQTZFO0lBQzdFLE1BQU1DLGVBQWU1QixNQUFNSixJQUFJMkIsWUFBWXZCLE1BQU1KLElBQUk7SUFFckQsTUFBTUcsV0FBVyxNQUFNRixZQUFZTSxLQUFLLElBQUksRUFBRSxDQUFDeUI7SUFDL0MsTUFBTUMsT0FBTzlCLFNBQVMrQixJQUFJUjtJQUUxQixPQUFPQSxJQUFJRjtJQUNYLElBQUlTLEtBQUtFLFdBQVcsR0FBRztRQUNyQixNQUFNLElBQUlqRCxRQUFRO1lBQ2hCa0QsUUFBUTtnQkFBQztnQkFBaUVWO2FBQUk7WUFDOUVWLE1BQU1iO1FBQ1I7SUFDRjtJQUVBLElBQUksQ0FBQ3NCLGNBQWNRLEtBQUtFLFNBQVMsS0FBSyxDQUFDZCxLQUFLO1FBQzFDLE1BQU0sSUFBSW5DLFFBQVE7WUFDaEJrRCxRQUFRO2dCQUNOO2dCQUNBVjthQUNEO1lBQ0RWLE1BQU1iO1FBQ1I7SUFDRjtJQUVBQyxNQUFNTixJQUFJNkIsU0FBUztJQUVuQixPQUFPTTtBQUNUO0FBRUFJLDRCQUE0QmpCLEdBQUdBO0FBQy9CaUIsdUJBQXVCbEMsR0FBR0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvaXNzdWVyLmpzPzRhNzIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgb2JqZWN0SGFzaCA9IHJlcXVpcmUoJ29iamVjdC1oYXNoJyk7XG5jb25zdCBMUlUgPSByZXF1aXJlKCdscnUtY2FjaGUnKTtcblxuY29uc3QgeyBSUEVycm9yIH0gPSByZXF1aXJlKCcuLi9lcnJvcnMnKTtcblxuY29uc3QgeyBhc3NlcnRJc3N1ZXJDb25maWd1cmF0aW9uIH0gPSByZXF1aXJlKCcuL2Fzc2VydCcpO1xuY29uc3QgS2V5U3RvcmUgPSByZXF1aXJlKCcuL2tleXN0b3JlJyk7XG5jb25zdCB7IGtleXN0b3JlcyB9ID0gcmVxdWlyZSgnLi93ZWFrX2NhY2hlJyk7XG5jb25zdCBwcm9jZXNzUmVzcG9uc2UgPSByZXF1aXJlKCcuL3Byb2Nlc3NfcmVzcG9uc2UnKTtcbmNvbnN0IHJlcXVlc3QgPSByZXF1aXJlKCcuL3JlcXVlc3QnKTtcblxuY29uc3QgaW5GbGlnaHQgPSBuZXcgV2Vha01hcCgpO1xuY29uc3QgY2FjaGVzID0gbmV3IFdlYWtNYXAoKTtcbmNvbnN0IGxydXMgPSAoY3R4KSA9PiB7XG4gIGlmICghY2FjaGVzLmhhcyhjdHgpKSB7XG4gICAgY2FjaGVzLnNldChjdHgsIG5ldyBMUlUoeyBtYXg6IDEwMCB9KSk7XG4gIH1cbiAgcmV0dXJuIGNhY2hlcy5nZXQoY3R4KTtcbn07XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEtleVN0b3JlKHJlbG9hZCA9IGZhbHNlKSB7XG4gIGFzc2VydElzc3VlckNvbmZpZ3VyYXRpb24odGhpcywgJ2p3a3NfdXJpJyk7XG5cbiAgY29uc3Qga2V5c3RvcmUgPSBrZXlzdG9yZXMuZ2V0KHRoaXMpO1xuICBjb25zdCBjYWNoZSA9IGxydXModGhpcyk7XG5cbiAgaWYgKHJlbG9hZCB8fCAha2V5c3RvcmUpIHtcbiAgICBpZiAoaW5GbGlnaHQuaGFzKHRoaXMpKSB7XG4gICAgICByZXR1cm4gaW5GbGlnaHQuZ2V0KHRoaXMpO1xuICAgIH1cbiAgICBjYWNoZS5yZXNldCgpO1xuICAgIGluRmxpZ2h0LnNldChcbiAgICAgIHRoaXMsXG4gICAgICAoYXN5bmMgKCkgPT4ge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHJlcXVlc3RcbiAgICAgICAgICAuY2FsbCh0aGlzLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICAgICAgcmVzcG9uc2VUeXBlOiAnanNvbicsXG4gICAgICAgICAgICB1cmw6IHRoaXMuandrc191cmksXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24sIGFwcGxpY2F0aW9uL2p3ay1zZXQranNvbicsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0pXG4gICAgICAgICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICAgICAgaW5GbGlnaHQuZGVsZXRlKHRoaXMpO1xuICAgICAgICAgIH0pO1xuICAgICAgICBjb25zdCBqd2tzID0gcHJvY2Vzc1Jlc3BvbnNlKHJlc3BvbnNlKTtcblxuICAgICAgICBjb25zdCBqb3NlS2V5U3RvcmUgPSBLZXlTdG9yZS5mcm9tSldLUyhqd2tzLCB7IG9ubHlQdWJsaWM6IHRydWUgfSk7XG4gICAgICAgIGNhY2hlLnNldCgndGhyb3R0bGUnLCB0cnVlLCA2MCAqIDEwMDApO1xuICAgICAgICBrZXlzdG9yZXMuc2V0KHRoaXMsIGpvc2VLZXlTdG9yZSk7XG5cbiAgICAgICAgcmV0dXJuIGpvc2VLZXlTdG9yZTtcbiAgICAgIH0pKCksXG4gICAgKTtcblxuICAgIHJldHVybiBpbkZsaWdodC5nZXQodGhpcyk7XG4gIH1cblxuICByZXR1cm4ga2V5c3RvcmU7XG59XG5cbmFzeW5jIGZ1bmN0aW9uIHF1ZXJ5S2V5U3RvcmUoeyBraWQsIGt0eSwgYWxnLCB1c2UgfSwgeyBhbGxvd011bHRpID0gZmFsc2UgfSA9IHt9KSB7XG4gIGNvbnN0IGNhY2hlID0gbHJ1cyh0aGlzKTtcblxuICBjb25zdCBkZWYgPSB7XG4gICAga2lkLFxuICAgIGt0eSxcbiAgICBhbGcsXG4gICAgdXNlLFxuICB9O1xuXG4gIGNvbnN0IGRlZkhhc2ggPSBvYmplY3RIYXNoKGRlZiwge1xuICAgIGFsZ29yaXRobTogJ3NoYTI1NicsXG4gICAgaWdub3JlVW5rbm93bjogdHJ1ZSxcbiAgICB1bm9yZGVyZWRBcnJheXM6IHRydWUsXG4gICAgdW5vcmRlcmVkU2V0czogdHJ1ZSxcbiAgfSk7XG5cbiAgLy8gcmVmcmVzaCBrZXlzdG9yZSBvbiBldmVyeSB1bmtub3duIGtleSBidXQgYWxzbyBvbmx5IHVwdG8gb25jZSBldmVyeSBtaW51dGVcbiAgY29uc3QgZnJlc2hKd2tzVXJpID0gY2FjaGUuZ2V0KGRlZkhhc2gpIHx8IGNhY2hlLmdldCgndGhyb3R0bGUnKTtcblxuICBjb25zdCBrZXlzdG9yZSA9IGF3YWl0IGdldEtleVN0b3JlLmNhbGwodGhpcywgIWZyZXNoSndrc1VyaSk7XG4gIGNvbnN0IGtleXMgPSBrZXlzdG9yZS5hbGwoZGVmKTtcblxuICBkZWxldGUgZGVmLnVzZTtcbiAgaWYgKGtleXMubGVuZ3RoID09PSAwKSB7XG4gICAgdGhyb3cgbmV3IFJQRXJyb3Ioe1xuICAgICAgcHJpbnRmOiBbXCJubyB2YWxpZCBrZXkgZm91bmQgaW4gaXNzdWVyJ3Mgandrc191cmkgZm9yIGtleSBwYXJhbWV0ZXJzICVqXCIsIGRlZl0sXG4gICAgICBqd2tzOiBrZXlzdG9yZSxcbiAgICB9KTtcbiAgfVxuXG4gIGlmICghYWxsb3dNdWx0aSAmJiBrZXlzLmxlbmd0aCA+IDEgJiYgIWtpZCkge1xuICAgIHRocm93IG5ldyBSUEVycm9yKHtcbiAgICAgIHByaW50ZjogW1xuICAgICAgICBcIm11bHRpcGxlIG1hdGNoaW5nIGtleXMgZm91bmQgaW4gaXNzdWVyJ3Mgandrc191cmkgZm9yIGtleSBwYXJhbWV0ZXJzICVqLCBraWQgbXVzdCBiZSBwcm92aWRlZCBpbiB0aGlzIGNhc2VcIixcbiAgICAgICAgZGVmLFxuICAgICAgXSxcbiAgICAgIGp3a3M6IGtleXN0b3JlLFxuICAgIH0pO1xuICB9XG5cbiAgY2FjaGUuc2V0KGRlZkhhc2gsIHRydWUpO1xuXG4gIHJldHVybiBrZXlzO1xufVxuXG5tb2R1bGUuZXhwb3J0cy5xdWVyeUtleVN0b3JlID0gcXVlcnlLZXlTdG9yZTtcbm1vZHVsZS5leHBvcnRzLmtleXN0b3JlID0gZ2V0S2V5U3RvcmU7XG4iXSwibmFtZXMiOlsib2JqZWN0SGFzaCIsInJlcXVpcmUiLCJMUlUiLCJSUEVycm9yIiwiYXNzZXJ0SXNzdWVyQ29uZmlndXJhdGlvbiIsIktleVN0b3JlIiwia2V5c3RvcmVzIiwicHJvY2Vzc1Jlc3BvbnNlIiwicmVxdWVzdCIsImluRmxpZ2h0IiwiV2Vha01hcCIsImNhY2hlcyIsImxydXMiLCJjdHgiLCJoYXMiLCJzZXQiLCJtYXgiLCJnZXQiLCJnZXRLZXlTdG9yZSIsInJlbG9hZCIsImtleXN0b3JlIiwiY2FjaGUiLCJyZXNldCIsInJlc3BvbnNlIiwiY2FsbCIsIm1ldGhvZCIsInJlc3BvbnNlVHlwZSIsInVybCIsImp3a3NfdXJpIiwiaGVhZGVycyIsIkFjY2VwdCIsImZpbmFsbHkiLCJkZWxldGUiLCJqd2tzIiwiam9zZUtleVN0b3JlIiwiZnJvbUpXS1MiLCJvbmx5UHVibGljIiwicXVlcnlLZXlTdG9yZSIsImtpZCIsImt0eSIsImFsZyIsInVzZSIsImFsbG93TXVsdGkiLCJkZWYiLCJkZWZIYXNoIiwiYWxnb3JpdGhtIiwiaWdub3JlVW5rbm93biIsInVub3JkZXJlZEFycmF5cyIsInVub3JkZXJlZFNldHMiLCJmcmVzaEp3a3NVcmkiLCJrZXlzIiwiYWxsIiwibGVuZ3RoIiwicHJpbnRmIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/issuer.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/keystore.js":
/*!************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/keystore.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst jose = __webpack_require__(/*! jose */ \"(sc_server)/./node_modules/jose/dist/node/cjs/index.js\");\nconst clone = __webpack_require__(/*! ./deep_clone */ \"(sc_server)/./node_modules/openid-client/lib/helpers/deep_clone.js\");\nconst isPlainObject = __webpack_require__(/*! ./is_plain_object */ \"(sc_server)/./node_modules/openid-client/lib/helpers/is_plain_object.js\");\nconst isKeyObject = __webpack_require__(/*! ./is_key_object */ \"(sc_server)/./node_modules/openid-client/lib/helpers/is_key_object.js\");\nconst internal = Symbol();\nfunction fauxAlg(kty) {\n    switch(kty){\n        case \"RSA\":\n            return \"RSA-OAEP\";\n        case \"EC\":\n            return \"ECDH-ES\";\n        case \"OKP\":\n            return \"ECDH-ES\";\n        case \"oct\":\n            return \"HS256\";\n        default:\n            return undefined;\n    }\n}\nconst keyscore = (key, { alg, use })=>{\n    let score = 0;\n    if (alg && key.alg) {\n        score++;\n    }\n    if (use && key.use) {\n        score++;\n    }\n    return score;\n};\nfunction getKtyFromAlg(alg) {\n    switch(typeof alg === \"string\" && alg.slice(0, 2)){\n        case \"RS\":\n        case \"PS\":\n            return \"RSA\";\n        case \"ES\":\n            return \"EC\";\n        case \"Ed\":\n            return \"OKP\";\n        default:\n            return undefined;\n    }\n}\nfunction getAlgorithms(use, alg, kty, crv) {\n    // Ed25519, Ed448, and secp256k1 always have \"alg\"\n    // OKP always has use\n    if (alg) {\n        return new Set([\n            alg\n        ]);\n    }\n    switch(kty){\n        case \"EC\":\n            {\n                let algs = [];\n                if (use === \"enc\" || use === undefined) {\n                    algs = algs.concat([\n                        \"ECDH-ES\",\n                        \"ECDH-ES+A128KW\",\n                        \"ECDH-ES+A192KW\",\n                        \"ECDH-ES+A256KW\"\n                    ]);\n                }\n                if (use === \"sig\" || use === undefined) {\n                    algs = algs.concat([\n                        `ES${crv.slice(-3)}`.replace(\"21\", \"12\")\n                    ]);\n                }\n                return new Set(algs);\n            }\n        case \"OKP\":\n            {\n                return new Set([\n                    \"ECDH-ES\",\n                    \"ECDH-ES+A128KW\",\n                    \"ECDH-ES+A192KW\",\n                    \"ECDH-ES+A256KW\"\n                ]);\n            }\n        case \"RSA\":\n            {\n                let algs = [];\n                if (use === \"enc\" || use === undefined) {\n                    algs = algs.concat([\n                        \"RSA-OAEP\",\n                        \"RSA-OAEP-256\",\n                        \"RSA-OAEP-384\",\n                        \"RSA-OAEP-512\",\n                        \"RSA1_5\"\n                    ]);\n                }\n                if (use === \"sig\" || use === undefined) {\n                    algs = algs.concat([\n                        \"PS256\",\n                        \"PS384\",\n                        \"PS512\",\n                        \"RS256\",\n                        \"RS384\",\n                        \"RS512\"\n                    ]);\n                }\n                return new Set(algs);\n            }\n        default:\n            throw new Error(\"unreachable\");\n    }\n}\nmodule.exports = class KeyStore {\n    #keys;\n    constructor(i, keys){\n        if (i !== internal) throw new Error(\"invalid constructor call\");\n        this.#keys = keys;\n    }\n    toJWKS() {\n        return {\n            keys: this.map(({ jwk: { d, p, q, dp, dq, qi, ...jwk } })=>jwk)\n        };\n    }\n    all({ alg, kid, use } = {}) {\n        if (!use || !alg) {\n            throw new Error();\n        }\n        const kty = getKtyFromAlg(alg);\n        const search = {\n            alg,\n            use\n        };\n        return this.filter((key)=>{\n            let candidate = true;\n            if (candidate && kty !== undefined && key.jwk.kty !== kty) {\n                candidate = false;\n            }\n            if (candidate && kid !== undefined && key.jwk.kid !== kid) {\n                candidate = false;\n            }\n            if (candidate && use !== undefined && key.jwk.use !== undefined && key.jwk.use !== use) {\n                candidate = false;\n            }\n            if (candidate && key.jwk.alg && key.jwk.alg !== alg) {\n                candidate = false;\n            } else if (!key.algorithms.has(alg)) {\n                candidate = false;\n            }\n            return candidate;\n        }).sort((first, second)=>keyscore(second, search) - keyscore(first, search));\n    }\n    get(...args) {\n        return this.all(...args)[0];\n    }\n    static async fromJWKS(jwks, { onlyPublic = false, onlyPrivate = false } = {}) {\n        if (!isPlainObject(jwks) || !Array.isArray(jwks.keys) || jwks.keys.some((k)=>!isPlainObject(k) || !(\"kty\" in k))) {\n            throw new TypeError(\"jwks must be a JSON Web Key Set formatted object\");\n        }\n        const keys = [];\n        for (let jwk of jwks.keys){\n            jwk = clone(jwk);\n            const { kty, kid, crv } = jwk;\n            let { alg, use } = jwk;\n            if (typeof kty !== \"string\" || !kty) {\n                continue;\n            }\n            if (use !== undefined && use !== \"sig\" && use !== \"enc\") {\n                continue;\n            }\n            if (typeof alg !== \"string\" && alg !== undefined) {\n                continue;\n            }\n            if (typeof kid !== \"string\" && kid !== undefined) {\n                continue;\n            }\n            if (kty === \"EC\" && use === \"sig\") {\n                switch(crv){\n                    case \"P-256\":\n                        alg = \"ES256\";\n                        break;\n                    case \"P-384\":\n                        alg = \"ES384\";\n                        break;\n                    case \"P-521\":\n                        alg = \"ES512\";\n                        break;\n                    default:\n                        break;\n                }\n            }\n            if (crv === \"secp256k1\") {\n                use = \"sig\";\n                alg = \"ES256K\";\n            }\n            if (kty === \"OKP\") {\n                switch(crv){\n                    case \"Ed25519\":\n                    case \"Ed448\":\n                        use = \"sig\";\n                        alg = \"EdDSA\";\n                        break;\n                    case \"X25519\":\n                    case \"X448\":\n                        use = \"enc\";\n                        break;\n                    default:\n                        break;\n                }\n            }\n            if (alg && !use) {\n                switch(true){\n                    case alg.startsWith(\"ECDH\"):\n                        use = \"enc\";\n                        break;\n                    case alg.startsWith(\"RSA\"):\n                        use = \"enc\";\n                        break;\n                    default:\n                        break;\n                }\n            }\n            const keyObject = await jose.importJWK(jwk, alg || fauxAlg(jwk.kty)).catch(()=>{});\n            if (!keyObject) continue;\n            if (keyObject instanceof Uint8Array || keyObject.type === \"secret\") {\n                if (onlyPrivate) {\n                    throw new Error(\"jwks must only contain private keys\");\n                }\n                continue;\n            }\n            if (!isKeyObject(keyObject)) {\n                throw new Error(\"what?!\");\n            }\n            if (onlyPrivate && keyObject.type !== \"private\") {\n                throw new Error(\"jwks must only contain private keys\");\n            }\n            if (onlyPublic && keyObject.type !== \"public\") {\n                continue;\n            }\n            if (kty === \"RSA\" && keyObject.asymmetricKeySize < 2048) {\n                continue;\n            }\n            keys.push({\n                jwk: {\n                    ...jwk,\n                    alg,\n                    use\n                },\n                keyObject,\n                get algorithms () {\n                    Object.defineProperty(this, \"algorithms\", {\n                        value: getAlgorithms(this.jwk.use, this.jwk.alg, this.jwk.kty, this.jwk.crv),\n                        enumerable: true,\n                        configurable: false\n                    });\n                    return this.algorithms;\n                }\n            });\n        }\n        return new this(internal, keys);\n    }\n    filter(...args) {\n        return this.#keys.filter(...args);\n    }\n    find(...args) {\n        return this.#keys.find(...args);\n    }\n    every(...args) {\n        return this.#keys.every(...args);\n    }\n    some(...args) {\n        return this.#keys.some(...args);\n    }\n    map(...args) {\n        return this.#keys.map(...args);\n    }\n    forEach(...args) {\n        return this.#keys.forEach(...args);\n    }\n    reduce(...args) {\n        return this.#keys.reduce(...args);\n    }\n    sort(...args) {\n        return this.#keys.sort(...args);\n    }\n    *[Symbol.iterator]() {\n        for (const key of this.#keys){\n            yield key;\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/keystore.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/merge.js":
/*!*********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/merge.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst isPlainObject = __webpack_require__(/*! ./is_plain_object */ \"(sc_server)/./node_modules/openid-client/lib/helpers/is_plain_object.js\");\nfunction merge(target, ...sources) {\n    for (const source of sources){\n        if (!isPlainObject(source)) {\n            continue;\n        }\n        for (const [key, value] of Object.entries(source)){\n            /* istanbul ignore if */ if (key === \"__proto__\" || key === \"constructor\") {\n                continue;\n            }\n            if (isPlainObject(target[key]) && isPlainObject(value)) {\n                target[key] = merge(target[key], value);\n            } else if (typeof value !== \"undefined\") {\n                target[key] = value;\n            }\n        }\n    }\n    return target;\n}\nmodule.exports = merge;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9tZXJnZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQztBQUU5QixTQUFTQyxNQUFNQyxNQUFNLEVBQUUsR0FBR0MsT0FBTztJQUMvQixLQUFLLE1BQU1DLFVBQVVELFFBQVM7UUFDNUIsSUFBSSxDQUFDSixjQUFjSyxTQUFTO1lBQzFCO1FBQ0Y7UUFDQSxLQUFLLE1BQU0sQ0FBQ0MsS0FBS0MsTUFBTSxJQUFJQyxPQUFPQyxRQUFRSixRQUFTO1lBQ2pELHNCQUFzQixHQUN0QixJQUFJQyxRQUFRLGVBQWVBLFFBQVEsZUFBZTtnQkFDaEQ7WUFDRjtZQUNBLElBQUlOLGNBQWNHLE1BQU0sQ0FBQ0csSUFBSSxLQUFLTixjQUFjTyxRQUFRO2dCQUN0REosTUFBTSxDQUFDRyxJQUFJLEdBQUdKLE1BQU1DLE1BQU0sQ0FBQ0csSUFBSSxFQUFFQztZQUNuQyxPQUFPLElBQUksT0FBT0EsVUFBVSxhQUFhO2dCQUN2Q0osTUFBTSxDQUFDRyxJQUFJLEdBQUdDO1lBQ2hCO1FBQ0Y7SUFDRjtJQUVBLE9BQU9KO0FBQ1Q7QUFFQU8sT0FBT0MsVUFBVVQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvbWVyZ2UuanM/YTU4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpc1BsYWluT2JqZWN0ID0gcmVxdWlyZSgnLi9pc19wbGFpbl9vYmplY3QnKTtcblxuZnVuY3Rpb24gbWVyZ2UodGFyZ2V0LCAuLi5zb3VyY2VzKSB7XG4gIGZvciAoY29uc3Qgc291cmNlIG9mIHNvdXJjZXMpIHtcbiAgICBpZiAoIWlzUGxhaW5PYmplY3Qoc291cmNlKSkge1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHNvdXJjZSkpIHtcbiAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAqL1xuICAgICAgaWYgKGtleSA9PT0gJ19fcHJvdG9fXycgfHwga2V5ID09PSAnY29uc3RydWN0b3InKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKGlzUGxhaW5PYmplY3QodGFyZ2V0W2tleV0pICYmIGlzUGxhaW5PYmplY3QodmFsdWUpKSB7XG4gICAgICAgIHRhcmdldFtrZXldID0gbWVyZ2UodGFyZ2V0W2tleV0sIHZhbHVlKTtcbiAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHZhbHVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbWVyZ2U7XG4iXSwibmFtZXMiOlsiaXNQbGFpbk9iamVjdCIsInJlcXVpcmUiLCJtZXJnZSIsInRhcmdldCIsInNvdXJjZXMiLCJzb3VyY2UiLCJrZXkiLCJ2YWx1ZSIsIk9iamVjdCIsImVudHJpZXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/merge.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/pick.js":
/*!********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/pick.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = function pick(object, ...paths) {\n    const obj = {};\n    for (const path of paths){\n        if (object[path] !== undefined) {\n            obj[path] = object[path];\n        }\n    }\n    return obj;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9waWNrLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsT0FBT0MsVUFBVSxTQUFTQyxLQUFLQyxNQUFNLEVBQUUsR0FBR0MsS0FBSztJQUM3QyxNQUFNQyxNQUFNLENBQUM7SUFDYixLQUFLLE1BQU1DLFFBQVFGLE1BQU87UUFDeEIsSUFBSUQsTUFBTSxDQUFDRyxLQUFLLEtBQUtDLFdBQVc7WUFDOUJGLEdBQUcsQ0FBQ0MsS0FBSyxHQUFHSCxNQUFNLENBQUNHLEtBQUs7UUFDMUI7SUFDRjtJQUNBLE9BQU9EO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvcGljay5qcz82ODY3Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gcGljayhvYmplY3QsIC4uLnBhdGhzKSB7XG4gIGNvbnN0IG9iaiA9IHt9O1xuICBmb3IgKGNvbnN0IHBhdGggb2YgcGF0aHMpIHtcbiAgICBpZiAob2JqZWN0W3BhdGhdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIG9ialtwYXRoXSA9IG9iamVjdFtwYXRoXTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG9iajtcbn07XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInBpY2siLCJvYmplY3QiLCJwYXRocyIsIm9iaiIsInBhdGgiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/pick.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/process_response.js":
/*!********************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/process_response.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { STATUS_CODES } = __webpack_require__(/*! http */ \"http\");\nconst { format } = __webpack_require__(/*! util */ \"util\");\nconst { OPError } = __webpack_require__(/*! ../errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst parseWwwAuthenticate = __webpack_require__(/*! ./www_authenticate_parser */ \"(sc_server)/./node_modules/openid-client/lib/helpers/www_authenticate_parser.js\");\nconst throwAuthenticateErrors = (response)=>{\n    const params = parseWwwAuthenticate(response.headers[\"www-authenticate\"]);\n    if (params.error) {\n        throw new OPError(params, response);\n    }\n};\nconst isStandardBodyError = (response)=>{\n    let result = false;\n    try {\n        let jsonbody;\n        if (typeof response.body !== \"object\" || Buffer.isBuffer(response.body)) {\n            jsonbody = JSON.parse(response.body);\n        } else {\n            jsonbody = response.body;\n        }\n        result = typeof jsonbody.error === \"string\" && jsonbody.error.length;\n        if (result) Object.defineProperty(response, \"body\", {\n            value: jsonbody,\n            configurable: true\n        });\n    } catch (err) {}\n    return result;\n};\nfunction processResponse(response, { statusCode = 200, body = true, bearer = false } = {}) {\n    if (response.statusCode !== statusCode) {\n        if (bearer) {\n            throwAuthenticateErrors(response);\n        }\n        if (isStandardBodyError(response)) {\n            throw new OPError(response.body, response);\n        }\n        throw new OPError({\n            error: format(\"expected %i %s, got: %i %s\", statusCode, STATUS_CODES[statusCode], response.statusCode, STATUS_CODES[response.statusCode])\n        }, response);\n    }\n    if (body && !response.body) {\n        throw new OPError({\n            error: format(\"expected %i %s with body but no body was returned\", statusCode, STATUS_CODES[statusCode])\n        }, response);\n    }\n    return response.body;\n}\nmodule.exports = processResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy9wcm9jZXNzX3Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNLEVBQUVBLFlBQVksRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQztBQUNqQyxNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFHRCxtQkFBT0EsQ0FBQztBQUUzQixNQUFNLEVBQUVFLE9BQU8sRUFBRSxHQUFHRixtQkFBT0EsQ0FBQztBQUM1QixNQUFNRyx1QkFBdUJILG1CQUFPQSxDQUFDO0FBRXJDLE1BQU1JLDBCQUEwQixDQUFDQztJQUMvQixNQUFNQyxTQUFTSCxxQkFBcUJFLFNBQVNFLE9BQU8sQ0FBQyxtQkFBbUI7SUFFeEUsSUFBSUQsT0FBT0UsT0FBTztRQUNoQixNQUFNLElBQUlOLFFBQVFJLFFBQVFEO0lBQzVCO0FBQ0Y7QUFFQSxNQUFNSSxzQkFBc0IsQ0FBQ0o7SUFDM0IsSUFBSUssU0FBUztJQUNiLElBQUk7UUFDRixJQUFJQztRQUNKLElBQUksT0FBT04sU0FBU08sU0FBUyxZQUFZQyxPQUFPQyxTQUFTVCxTQUFTTyxPQUFPO1lBQ3ZFRCxXQUFXSSxLQUFLQyxNQUFNWCxTQUFTTztRQUNqQyxPQUFPO1lBQ0xELFdBQVdOLFNBQVNPO1FBQ3RCO1FBQ0FGLFNBQVMsT0FBT0MsU0FBU0gsVUFBVSxZQUFZRyxTQUFTSCxNQUFNUztRQUM5RCxJQUFJUCxRQUFRUSxPQUFPQyxlQUFlZCxVQUFVLFFBQVE7WUFBRWUsT0FBT1Q7WUFBVVUsY0FBYztRQUFLO0lBQzVGLEVBQUUsT0FBT0MsS0FBSyxDQUFDO0lBRWYsT0FBT1o7QUFDVDtBQUVBLFNBQVNhLGdCQUFnQmxCLFFBQVEsRUFBRSxFQUFFbUIsYUFBYSxHQUFHLEVBQUVaLE9BQU8sSUFBSSxFQUFFYSxTQUFTLEtBQUssRUFBRSxHQUFHLENBQUMsQ0FBQztJQUN2RixJQUFJcEIsU0FBU21CLGVBQWVBLFlBQVk7UUFDdEMsSUFBSUMsUUFBUTtZQUNWckIsd0JBQXdCQztRQUMxQjtRQUVBLElBQUlJLG9CQUFvQkosV0FBVztZQUNqQyxNQUFNLElBQUlILFFBQVFHLFNBQVNPLE1BQU1QO1FBQ25DO1FBRUEsTUFBTSxJQUFJSCxRQUNSO1lBQ0VNLE9BQU9QLE9BQ0wsOEJBQ0F1QixZQUNBekIsWUFBWSxDQUFDeUIsV0FBVyxFQUN4Qm5CLFNBQVNtQixZQUNUekIsWUFBWSxDQUFDTSxTQUFTbUIsV0FBVztRQUVyQyxHQUNBbkI7SUFFSjtJQUVBLElBQUlPLFFBQVEsQ0FBQ1AsU0FBU08sTUFBTTtRQUMxQixNQUFNLElBQUlWLFFBQ1I7WUFDRU0sT0FBT1AsT0FDTCxxREFDQXVCLFlBQ0F6QixZQUFZLENBQUN5QixXQUFXO1FBRTVCLEdBQ0FuQjtJQUVKO0lBRUEsT0FBT0EsU0FBU087QUFDbEI7QUFFQWMsT0FBT0MsVUFBVUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2hlbHBlcnMvcHJvY2Vzc19yZXNwb25zZS5qcz83ZGU3Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgU1RBVFVTX0NPREVTIH0gPSByZXF1aXJlKCdodHRwJyk7XG5jb25zdCB7IGZvcm1hdCB9ID0gcmVxdWlyZSgndXRpbCcpO1xuXG5jb25zdCB7IE9QRXJyb3IgfSA9IHJlcXVpcmUoJy4uL2Vycm9ycycpO1xuY29uc3QgcGFyc2VXd3dBdXRoZW50aWNhdGUgPSByZXF1aXJlKCcuL3d3d19hdXRoZW50aWNhdGVfcGFyc2VyJyk7XG5cbmNvbnN0IHRocm93QXV0aGVudGljYXRlRXJyb3JzID0gKHJlc3BvbnNlKSA9PiB7XG4gIGNvbnN0IHBhcmFtcyA9IHBhcnNlV3d3QXV0aGVudGljYXRlKHJlc3BvbnNlLmhlYWRlcnNbJ3d3dy1hdXRoZW50aWNhdGUnXSk7XG5cbiAgaWYgKHBhcmFtcy5lcnJvcikge1xuICAgIHRocm93IG5ldyBPUEVycm9yKHBhcmFtcywgcmVzcG9uc2UpO1xuICB9XG59O1xuXG5jb25zdCBpc1N0YW5kYXJkQm9keUVycm9yID0gKHJlc3BvbnNlKSA9PiB7XG4gIGxldCByZXN1bHQgPSBmYWxzZTtcbiAgdHJ5IHtcbiAgICBsZXQganNvbmJvZHk7XG4gICAgaWYgKHR5cGVvZiByZXNwb25zZS5ib2R5ICE9PSAnb2JqZWN0JyB8fCBCdWZmZXIuaXNCdWZmZXIocmVzcG9uc2UuYm9keSkpIHtcbiAgICAgIGpzb25ib2R5ID0gSlNPTi5wYXJzZShyZXNwb25zZS5ib2R5KTtcbiAgICB9IGVsc2Uge1xuICAgICAganNvbmJvZHkgPSByZXNwb25zZS5ib2R5O1xuICAgIH1cbiAgICByZXN1bHQgPSB0eXBlb2YganNvbmJvZHkuZXJyb3IgPT09ICdzdHJpbmcnICYmIGpzb25ib2R5LmVycm9yLmxlbmd0aDtcbiAgICBpZiAocmVzdWx0KSBPYmplY3QuZGVmaW5lUHJvcGVydHkocmVzcG9uc2UsICdib2R5JywgeyB2YWx1ZToganNvbmJvZHksIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9KTtcbiAgfSBjYXRjaCAoZXJyKSB7fVxuXG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG5mdW5jdGlvbiBwcm9jZXNzUmVzcG9uc2UocmVzcG9uc2UsIHsgc3RhdHVzQ29kZSA9IDIwMCwgYm9keSA9IHRydWUsIGJlYXJlciA9IGZhbHNlIH0gPSB7fSkge1xuICBpZiAocmVzcG9uc2Uuc3RhdHVzQ29kZSAhPT0gc3RhdHVzQ29kZSkge1xuICAgIGlmIChiZWFyZXIpIHtcbiAgICAgIHRocm93QXV0aGVudGljYXRlRXJyb3JzKHJlc3BvbnNlKTtcbiAgICB9XG5cbiAgICBpZiAoaXNTdGFuZGFyZEJvZHlFcnJvcihyZXNwb25zZSkpIHtcbiAgICAgIHRocm93IG5ldyBPUEVycm9yKHJlc3BvbnNlLmJvZHksIHJlc3BvbnNlKTtcbiAgICB9XG5cbiAgICB0aHJvdyBuZXcgT1BFcnJvcihcbiAgICAgIHtcbiAgICAgICAgZXJyb3I6IGZvcm1hdChcbiAgICAgICAgICAnZXhwZWN0ZWQgJWkgJXMsIGdvdDogJWkgJXMnLFxuICAgICAgICAgIHN0YXR1c0NvZGUsXG4gICAgICAgICAgU1RBVFVTX0NPREVTW3N0YXR1c0NvZGVdLFxuICAgICAgICAgIHJlc3BvbnNlLnN0YXR1c0NvZGUsXG4gICAgICAgICAgU1RBVFVTX0NPREVTW3Jlc3BvbnNlLnN0YXR1c0NvZGVdLFxuICAgICAgICApLFxuICAgICAgfSxcbiAgICAgIHJlc3BvbnNlLFxuICAgICk7XG4gIH1cblxuICBpZiAoYm9keSAmJiAhcmVzcG9uc2UuYm9keSkge1xuICAgIHRocm93IG5ldyBPUEVycm9yKFxuICAgICAge1xuICAgICAgICBlcnJvcjogZm9ybWF0KFxuICAgICAgICAgICdleHBlY3RlZCAlaSAlcyB3aXRoIGJvZHkgYnV0IG5vIGJvZHkgd2FzIHJldHVybmVkJyxcbiAgICAgICAgICBzdGF0dXNDb2RlLFxuICAgICAgICAgIFNUQVRVU19DT0RFU1tzdGF0dXNDb2RlXSxcbiAgICAgICAgKSxcbiAgICAgIH0sXG4gICAgICByZXNwb25zZSxcbiAgICApO1xuICB9XG5cbiAgcmV0dXJuIHJlc3BvbnNlLmJvZHk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gcHJvY2Vzc1Jlc3BvbnNlO1xuIl0sIm5hbWVzIjpbIlNUQVRVU19DT0RFUyIsInJlcXVpcmUiLCJmb3JtYXQiLCJPUEVycm9yIiwicGFyc2VXd3dBdXRoZW50aWNhdGUiLCJ0aHJvd0F1dGhlbnRpY2F0ZUVycm9ycyIsInJlc3BvbnNlIiwicGFyYW1zIiwiaGVhZGVycyIsImVycm9yIiwiaXNTdGFuZGFyZEJvZHlFcnJvciIsInJlc3VsdCIsImpzb25ib2R5IiwiYm9keSIsIkJ1ZmZlciIsImlzQnVmZmVyIiwiSlNPTiIsInBhcnNlIiwibGVuZ3RoIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSIsImNvbmZpZ3VyYWJsZSIsImVyciIsInByb2Nlc3NSZXNwb25zZSIsInN0YXR1c0NvZGUiLCJiZWFyZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/process_response.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/request.js":
/*!***********************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/request.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst assert = __webpack_require__(/*! assert */ \"assert\");\nconst querystring = __webpack_require__(/*! querystring */ \"querystring\");\nconst http = __webpack_require__(/*! http */ \"http\");\nconst https = __webpack_require__(/*! https */ \"https\");\nconst { once } = __webpack_require__(/*! events */ \"events\");\nconst { URL } = __webpack_require__(/*! url */ \"url\");\nconst LRU = __webpack_require__(/*! lru-cache */ \"(sc_server)/./node_modules/lru-cache/index.js\");\nconst pkg = __webpack_require__(/*! ../../package.json */ \"(sc_server)/./node_modules/openid-client/package.json\");\nconst { RPError } = __webpack_require__(/*! ../errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst pick = __webpack_require__(/*! ./pick */ \"(sc_server)/./node_modules/openid-client/lib/helpers/pick.js\");\nconst { deep: defaultsDeep } = __webpack_require__(/*! ./defaults */ \"(sc_server)/./node_modules/openid-client/lib/helpers/defaults.js\");\nconst { HTTP_OPTIONS } = __webpack_require__(/*! ./consts */ \"(sc_server)/./node_modules/openid-client/lib/helpers/consts.js\");\nlet DEFAULT_HTTP_OPTIONS;\nconst NQCHAR = /^[\\x21\\x23-\\x5B\\x5D-\\x7E]+$/;\nconst allowed = [\n    \"agent\",\n    \"ca\",\n    \"cert\",\n    \"crl\",\n    \"headers\",\n    \"key\",\n    \"lookup\",\n    \"passphrase\",\n    \"pfx\",\n    \"timeout\"\n];\nconst setDefaults = (props, options)=>{\n    DEFAULT_HTTP_OPTIONS = defaultsDeep({}, props.length ? pick(options, ...props) : options, DEFAULT_HTTP_OPTIONS);\n};\nsetDefaults([], {\n    headers: {\n        \"User-Agent\": `${pkg.name}/${pkg.version} (${pkg.homepage})`\n    },\n    timeout: 3500\n});\nfunction send(req, body, contentType) {\n    if (contentType) {\n        req.removeHeader(\"content-type\");\n        req.setHeader(\"content-type\", contentType);\n    }\n    if (body) {\n        req.removeHeader(\"content-length\");\n        req.setHeader(\"content-length\", Buffer.byteLength(body));\n        req.write(body);\n    }\n    req.end();\n}\nconst nonces = new LRU({\n    max: 100\n});\nmodule.exports = async function request(options, { accessToken, mTLS = false, DPoP } = {}) {\n    let url;\n    try {\n        url = new URL(options.url);\n        delete options.url;\n        assert(/^(https?:)$/.test(url.protocol));\n    } catch (err) {\n        throw new TypeError(\"only valid absolute URLs can be requested\");\n    }\n    const optsFn = this[HTTP_OPTIONS];\n    let opts = options;\n    const nonceKey = `${url.origin}${url.pathname}`;\n    if (DPoP && \"dpopProof\" in this) {\n        opts.headers = opts.headers || {};\n        opts.headers.DPoP = await this.dpopProof({\n            htu: `${url.origin}${url.pathname}`,\n            htm: options.method,\n            nonce: nonces.get(nonceKey)\n        }, DPoP, accessToken);\n    }\n    let userOptions;\n    if (optsFn) {\n        userOptions = pick(optsFn.call(this, url, defaultsDeep({}, opts, DEFAULT_HTTP_OPTIONS)), ...allowed);\n    }\n    opts = defaultsDeep({}, userOptions, opts, DEFAULT_HTTP_OPTIONS);\n    if (mTLS && !opts.pfx && !(opts.key && opts.cert)) {\n        throw new TypeError(\"mutual-TLS certificate and key not set\");\n    }\n    if (opts.searchParams) {\n        for (const [key, value] of Object.entries(opts.searchParams)){\n            url.searchParams.delete(key);\n            url.searchParams.set(key, value);\n        }\n    }\n    let responseType;\n    let form;\n    let json;\n    let body;\n    ({ form, responseType, json, body, ...opts } = opts);\n    for (const [key, value] of Object.entries(opts.headers || {})){\n        if (value === undefined) {\n            delete opts.headers[key];\n        }\n    }\n    let response;\n    const req = (url.protocol === \"https:\" ? https.request : http.request)(url.href, opts);\n    return (async ()=>{\n        if (json) {\n            send(req, JSON.stringify(json), \"application/json\");\n        } else if (form) {\n            send(req, querystring.stringify(form), \"application/x-www-form-urlencoded\");\n        } else if (body) {\n            send(req, body);\n        } else {\n            send(req);\n        }\n        [response] = await Promise.race([\n            once(req, \"response\"),\n            once(req, \"timeout\")\n        ]);\n        // timeout reached\n        if (!response) {\n            req.destroy();\n            throw new RPError(`outgoing request timed out after ${opts.timeout}ms`);\n        }\n        const parts = [];\n        for await (const part of response){\n            parts.push(part);\n        }\n        if (parts.length) {\n            switch(responseType){\n                case \"json\":\n                    {\n                        Object.defineProperty(response, \"body\", {\n                            get () {\n                                let value = Buffer.concat(parts);\n                                try {\n                                    value = JSON.parse(value);\n                                } catch (err) {\n                                    Object.defineProperty(err, \"response\", {\n                                        value: response\n                                    });\n                                    throw err;\n                                } finally{\n                                    Object.defineProperty(response, \"body\", {\n                                        value,\n                                        configurable: true\n                                    });\n                                }\n                                return value;\n                            },\n                            configurable: true\n                        });\n                        break;\n                    }\n                case undefined:\n                case \"buffer\":\n                    {\n                        Object.defineProperty(response, \"body\", {\n                            get () {\n                                const value = Buffer.concat(parts);\n                                Object.defineProperty(response, \"body\", {\n                                    value,\n                                    configurable: true\n                                });\n                                return value;\n                            },\n                            configurable: true\n                        });\n                        break;\n                    }\n                default:\n                    throw new TypeError(\"unsupported responseType request option\");\n            }\n        }\n        return response;\n    })().catch((err)=>{\n        if (response) Object.defineProperty(err, \"response\", {\n            value: response\n        });\n        throw err;\n    }).finally(()=>{\n        const dpopNonce = response && response.headers[\"dpop-nonce\"];\n        if (dpopNonce && NQCHAR.test(dpopNonce)) {\n            nonces.set(nonceKey, dpopNonce);\n        }\n    });\n};\nmodule.exports.setDefaults = setDefaults.bind(undefined, allowed);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/request.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/unix_timestamp.js":
/*!******************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/unix_timestamp.js ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = ()=>Math.floor(Date.now() / 1000);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy91bml4X3RpbWVzdGFtcC5qcyIsIm1hcHBpbmdzIjoiO0FBQUFBLE9BQU9DLFVBQVUsSUFBTUMsS0FBS0MsTUFBTUMsS0FBS0MsUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy91bml4X3RpbWVzdGFtcC5qcz80ZTdmIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKCkgPT4gTWF0aC5mbG9vcihEYXRlLm5vdygpIC8gMTAwMCk7XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/unix_timestamp.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/weak_cache.js":
/*!**************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/weak_cache.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports.keystores = new WeakMap();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy93ZWFrX2NhY2hlLmpzIiwibWFwcGluZ3MiOiI7QUFBQUEsd0JBQXdCRSxHQUFHLElBQUlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9vcGVuaWQtY2xpZW50L2xpYi9oZWxwZXJzL3dlYWtfY2FjaGUuanM/YzkzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cy5rZXlzdG9yZXMgPSBuZXcgV2Vha01hcCgpO1xuIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJrZXlzdG9yZXMiLCJXZWFrTWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/weak_cache.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/webfinger_normalize.js":
/*!***********************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/webfinger_normalize.js ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
eval("// Credit: https://github.com/rohe/pyoidc/blob/master/src/oic/utils/webfinger.py\n// -- Normalization --\n// A string of any other type is interpreted as a URI either the form of scheme\n// \"://\" authority path-abempty [ \"?\" query ] [ \"#\" fragment ] or authority\n// path-abempty [ \"?\" query ] [ \"#\" fragment ] per RFC 3986 [RFC3986] and is\n// normalized according to the following rules:\n//\n// If the user input Identifier does not have an RFC 3986 [RFC3986] scheme\n// portion, the string is interpreted as [userinfo \"@\"] host [\":\" port]\n// path-abempty [ \"?\" query ] [ \"#\" fragment ] per RFC 3986 [RFC3986].\n// If the userinfo component is present and all of the path component, query\n// component, and port component are empty, the acct scheme is assumed. In this\n// case, the normalized URI is formed by prefixing acct: to the string as the\n// scheme. Per the 'acct' URI Scheme [I‑D.ietf‑appsawg‑acct‑uri], if there is an\n// at-sign character ('@') in the userinfo component, it needs to be\n// percent-encoded as described in RFC 3986 [RFC3986].\n// For all other inputs without a scheme portion, the https scheme is assumed,\n// and the normalized URI is formed by prefixing https:// to the string as the\n// scheme.\n// If the resulting URI contains a fragment portion, it MUST be stripped off\n// together with the fragment delimiter character \"#\".\n// The WebFinger [I‑D.ietf‑appsawg‑webfinger] Resource in this case is the\n// resulting URI, and the WebFinger Host is the authority component.\n//\n// Note: Since the definition of authority in RFC 3986 [RFC3986] is\n// [ userinfo \"@\" ] host [ \":\" port ], it is legal to have a user input\n// identifier like userinfo@host:port, e.g., alice@example.com:8080.\n\nconst PORT = /^\\d+$/;\nfunction hasScheme(input) {\n    if (input.includes(\"://\")) return true;\n    const authority = input.replace(/(\\/|\\?)/g, \"#\").split(\"#\")[0];\n    if (authority.includes(\":\")) {\n        const index = authority.indexOf(\":\");\n        const hostOrPort = authority.slice(index + 1);\n        if (!PORT.test(hostOrPort)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction acctSchemeAssumed(input) {\n    if (!input.includes(\"@\")) return false;\n    const parts = input.split(\"@\");\n    const host = parts[parts.length - 1];\n    return !(host.includes(\":\") || host.includes(\"/\") || host.includes(\"?\"));\n}\nfunction normalize(input) {\n    if (typeof input !== \"string\") {\n        throw new TypeError(\"input must be a string\");\n    }\n    let output;\n    if (hasScheme(input)) {\n        output = input;\n    } else if (acctSchemeAssumed(input)) {\n        output = `acct:${input}`;\n    } else {\n        output = `https://${input}`;\n    }\n    return output.split(\"#\")[0];\n}\nmodule.exports = normalize;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy93ZWJmaW5nZXJfbm9ybWFsaXplLmpzIiwibWFwcGluZ3MiOiJBQUFBLGdGQUFnRjtBQUVoRixzQkFBc0I7QUFDdEIsK0VBQStFO0FBQy9FLDJFQUEyRTtBQUMzRSw0RUFBNEU7QUFDNUUsK0NBQStDO0FBQy9DLEVBQUU7QUFDRiwwRUFBMEU7QUFDMUUsdUVBQXVFO0FBQ3ZFLHNFQUFzRTtBQUN0RSw0RUFBNEU7QUFDNUUsK0VBQStFO0FBQy9FLDZFQUE2RTtBQUM3RSxnRkFBZ0Y7QUFDaEYsb0VBQW9FO0FBQ3BFLHNEQUFzRDtBQUN0RCw4RUFBOEU7QUFDOUUsOEVBQThFO0FBQzlFLFVBQVU7QUFDViw0RUFBNEU7QUFDNUUsc0RBQXNEO0FBQ3RELDBFQUEwRTtBQUMxRSxvRUFBb0U7QUFDcEUsRUFBRTtBQUNGLG1FQUFtRTtBQUNuRSx1RUFBdUU7QUFDdkUsb0VBQW9FOztBQUVwRSxNQUFNQSxPQUFPO0FBRWIsU0FBU0MsVUFBVUMsS0FBSztJQUN0QixJQUFJQSxNQUFNQyxTQUFTLFFBQVEsT0FBTztJQUVsQyxNQUFNQyxZQUFZRixNQUFNRyxRQUFRLFlBQVksS0FBS0MsTUFBTSxJQUFJLENBQUMsRUFBRTtJQUM5RCxJQUFJRixVQUFVRCxTQUFTLE1BQU07UUFDM0IsTUFBTUksUUFBUUgsVUFBVUksUUFBUTtRQUNoQyxNQUFNQyxhQUFhTCxVQUFVTSxNQUFNSCxRQUFRO1FBQzNDLElBQUksQ0FBQ1AsS0FBS1csS0FBS0YsYUFBYTtZQUMxQixPQUFPO1FBQ1Q7SUFDRjtJQUVBLE9BQU87QUFDVDtBQUVBLFNBQVNHLGtCQUFrQlYsS0FBSztJQUM5QixJQUFJLENBQUNBLE1BQU1DLFNBQVMsTUFBTSxPQUFPO0lBQ2pDLE1BQU1VLFFBQVFYLE1BQU1JLE1BQU07SUFDMUIsTUFBTVEsT0FBT0QsS0FBSyxDQUFDQSxNQUFNRSxTQUFTLEVBQUU7SUFDcEMsT0FBTyxDQUFFRCxDQUFBQSxLQUFLWCxTQUFTLFFBQVFXLEtBQUtYLFNBQVMsUUFBUVcsS0FBS1gsU0FBUyxJQUFHO0FBQ3hFO0FBRUEsU0FBU2EsVUFBVWQsS0FBSztJQUN0QixJQUFJLE9BQU9BLFVBQVUsVUFBVTtRQUM3QixNQUFNLElBQUllLFVBQVU7SUFDdEI7SUFFQSxJQUFJQztJQUNKLElBQUlqQixVQUFVQyxRQUFRO1FBQ3BCZ0IsU0FBU2hCO0lBQ1gsT0FBTyxJQUFJVSxrQkFBa0JWLFFBQVE7UUFDbkNnQixTQUFTLENBQUMsS0FBSyxFQUFFaEIsTUFBTSxDQUFDO0lBQzFCLE9BQU87UUFDTGdCLFNBQVMsQ0FBQyxRQUFRLEVBQUVoQixNQUFNLENBQUM7SUFDN0I7SUFFQSxPQUFPZ0IsT0FBT1osTUFBTSxJQUFJLENBQUMsRUFBRTtBQUM3QjtBQUVBYSxPQUFPQyxVQUFVSiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy93ZWJmaW5nZXJfbm9ybWFsaXplLmpzPzM2NmYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQ3JlZGl0OiBodHRwczovL2dpdGh1Yi5jb20vcm9oZS9weW9pZGMvYmxvYi9tYXN0ZXIvc3JjL29pYy91dGlscy93ZWJmaW5nZXIucHlcblxuLy8gLS0gTm9ybWFsaXphdGlvbiAtLVxuLy8gQSBzdHJpbmcgb2YgYW55IG90aGVyIHR5cGUgaXMgaW50ZXJwcmV0ZWQgYXMgYSBVUkkgZWl0aGVyIHRoZSBmb3JtIG9mIHNjaGVtZVxuLy8gXCI6Ly9cIiBhdXRob3JpdHkgcGF0aC1hYmVtcHR5IFsgXCI/XCIgcXVlcnkgXSBbIFwiI1wiIGZyYWdtZW50IF0gb3IgYXV0aG9yaXR5XG4vLyBwYXRoLWFiZW1wdHkgWyBcIj9cIiBxdWVyeSBdIFsgXCIjXCIgZnJhZ21lbnQgXSBwZXIgUkZDIDM5ODYgW1JGQzM5ODZdIGFuZCBpc1xuLy8gbm9ybWFsaXplZCBhY2NvcmRpbmcgdG8gdGhlIGZvbGxvd2luZyBydWxlczpcbi8vXG4vLyBJZiB0aGUgdXNlciBpbnB1dCBJZGVudGlmaWVyIGRvZXMgbm90IGhhdmUgYW4gUkZDIDM5ODYgW1JGQzM5ODZdIHNjaGVtZVxuLy8gcG9ydGlvbiwgdGhlIHN0cmluZyBpcyBpbnRlcnByZXRlZCBhcyBbdXNlcmluZm8gXCJAXCJdIGhvc3QgW1wiOlwiIHBvcnRdXG4vLyBwYXRoLWFiZW1wdHkgWyBcIj9cIiBxdWVyeSBdIFsgXCIjXCIgZnJhZ21lbnQgXSBwZXIgUkZDIDM5ODYgW1JGQzM5ODZdLlxuLy8gSWYgdGhlIHVzZXJpbmZvIGNvbXBvbmVudCBpcyBwcmVzZW50IGFuZCBhbGwgb2YgdGhlIHBhdGggY29tcG9uZW50LCBxdWVyeVxuLy8gY29tcG9uZW50LCBhbmQgcG9ydCBjb21wb25lbnQgYXJlIGVtcHR5LCB0aGUgYWNjdCBzY2hlbWUgaXMgYXNzdW1lZC4gSW4gdGhpc1xuLy8gY2FzZSwgdGhlIG5vcm1hbGl6ZWQgVVJJIGlzIGZvcm1lZCBieSBwcmVmaXhpbmcgYWNjdDogdG8gdGhlIHN0cmluZyBhcyB0aGVcbi8vIHNjaGVtZS4gUGVyIHRoZSAnYWNjdCcgVVJJIFNjaGVtZSBbSeKAkUQuaWV0ZuKAkWFwcHNhd2figJFhY2N04oCRdXJpXSwgaWYgdGhlcmUgaXMgYW5cbi8vIGF0LXNpZ24gY2hhcmFjdGVyICgnQCcpIGluIHRoZSB1c2VyaW5mbyBjb21wb25lbnQsIGl0IG5lZWRzIHRvIGJlXG4vLyBwZXJjZW50LWVuY29kZWQgYXMgZGVzY3JpYmVkIGluIFJGQyAzOTg2IFtSRkMzOTg2XS5cbi8vIEZvciBhbGwgb3RoZXIgaW5wdXRzIHdpdGhvdXQgYSBzY2hlbWUgcG9ydGlvbiwgdGhlIGh0dHBzIHNjaGVtZSBpcyBhc3N1bWVkLFxuLy8gYW5kIHRoZSBub3JtYWxpemVkIFVSSSBpcyBmb3JtZWQgYnkgcHJlZml4aW5nIGh0dHBzOi8vIHRvIHRoZSBzdHJpbmcgYXMgdGhlXG4vLyBzY2hlbWUuXG4vLyBJZiB0aGUgcmVzdWx0aW5nIFVSSSBjb250YWlucyBhIGZyYWdtZW50IHBvcnRpb24sIGl0IE1VU1QgYmUgc3RyaXBwZWQgb2ZmXG4vLyB0b2dldGhlciB3aXRoIHRoZSBmcmFnbWVudCBkZWxpbWl0ZXIgY2hhcmFjdGVyIFwiI1wiLlxuLy8gVGhlIFdlYkZpbmdlciBbSeKAkUQuaWV0ZuKAkWFwcHNhd2figJF3ZWJmaW5nZXJdIFJlc291cmNlIGluIHRoaXMgY2FzZSBpcyB0aGVcbi8vIHJlc3VsdGluZyBVUkksIGFuZCB0aGUgV2ViRmluZ2VyIEhvc3QgaXMgdGhlIGF1dGhvcml0eSBjb21wb25lbnQuXG4vL1xuLy8gTm90ZTogU2luY2UgdGhlIGRlZmluaXRpb24gb2YgYXV0aG9yaXR5IGluIFJGQyAzOTg2IFtSRkMzOTg2XSBpc1xuLy8gWyB1c2VyaW5mbyBcIkBcIiBdIGhvc3QgWyBcIjpcIiBwb3J0IF0sIGl0IGlzIGxlZ2FsIHRvIGhhdmUgYSB1c2VyIGlucHV0XG4vLyBpZGVudGlmaWVyIGxpa2UgdXNlcmluZm9AaG9zdDpwb3J0LCBlLmcuLCBhbGljZUBleGFtcGxlLmNvbTo4MDgwLlxuXG5jb25zdCBQT1JUID0gL15cXGQrJC87XG5cbmZ1bmN0aW9uIGhhc1NjaGVtZShpbnB1dCkge1xuICBpZiAoaW5wdXQuaW5jbHVkZXMoJzovLycpKSByZXR1cm4gdHJ1ZTtcblxuICBjb25zdCBhdXRob3JpdHkgPSBpbnB1dC5yZXBsYWNlKC8oXFwvfFxcPykvZywgJyMnKS5zcGxpdCgnIycpWzBdO1xuICBpZiAoYXV0aG9yaXR5LmluY2x1ZGVzKCc6JykpIHtcbiAgICBjb25zdCBpbmRleCA9IGF1dGhvcml0eS5pbmRleE9mKCc6Jyk7XG4gICAgY29uc3QgaG9zdE9yUG9ydCA9IGF1dGhvcml0eS5zbGljZShpbmRleCArIDEpO1xuICAgIGlmICghUE9SVC50ZXN0KGhvc3RPclBvcnQpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cbmZ1bmN0aW9uIGFjY3RTY2hlbWVBc3N1bWVkKGlucHV0KSB7XG4gIGlmICghaW5wdXQuaW5jbHVkZXMoJ0AnKSkgcmV0dXJuIGZhbHNlO1xuICBjb25zdCBwYXJ0cyA9IGlucHV0LnNwbGl0KCdAJyk7XG4gIGNvbnN0IGhvc3QgPSBwYXJ0c1twYXJ0cy5sZW5ndGggLSAxXTtcbiAgcmV0dXJuICEoaG9zdC5pbmNsdWRlcygnOicpIHx8IGhvc3QuaW5jbHVkZXMoJy8nKSB8fCBob3N0LmluY2x1ZGVzKCc/JykpO1xufVxuXG5mdW5jdGlvbiBub3JtYWxpemUoaW5wdXQpIHtcbiAgaWYgKHR5cGVvZiBpbnB1dCAhPT0gJ3N0cmluZycpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnB1dCBtdXN0IGJlIGEgc3RyaW5nJyk7XG4gIH1cblxuICBsZXQgb3V0cHV0O1xuICBpZiAoaGFzU2NoZW1lKGlucHV0KSkge1xuICAgIG91dHB1dCA9IGlucHV0O1xuICB9IGVsc2UgaWYgKGFjY3RTY2hlbWVBc3N1bWVkKGlucHV0KSkge1xuICAgIG91dHB1dCA9IGBhY2N0OiR7aW5wdXR9YDtcbiAgfSBlbHNlIHtcbiAgICBvdXRwdXQgPSBgaHR0cHM6Ly8ke2lucHV0fWA7XG4gIH1cblxuICByZXR1cm4gb3V0cHV0LnNwbGl0KCcjJylbMF07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbm9ybWFsaXplO1xuIl0sIm5hbWVzIjpbIlBPUlQiLCJoYXNTY2hlbWUiLCJpbnB1dCIsImluY2x1ZGVzIiwiYXV0aG9yaXR5IiwicmVwbGFjZSIsInNwbGl0IiwiaW5kZXgiLCJpbmRleE9mIiwiaG9zdE9yUG9ydCIsInNsaWNlIiwidGVzdCIsImFjY3RTY2hlbWVBc3N1bWVkIiwicGFydHMiLCJob3N0IiwibGVuZ3RoIiwibm9ybWFsaXplIiwiVHlwZUVycm9yIiwib3V0cHV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/webfinger_normalize.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/helpers/www_authenticate_parser.js":
/*!***************************************************************************!*\
  !*** ./node_modules/openid-client/lib/helpers/www_authenticate_parser.js ***!
  \***************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nconst REGEXP = /(\\w+)=(\"[^\"]*\")/g;\nmodule.exports = (wwwAuthenticate)=>{\n    const params = {};\n    try {\n        while(REGEXP.exec(wwwAuthenticate) !== null){\n            if (RegExp.$1 && RegExp.$2) {\n                params[RegExp.$1] = RegExp.$2.slice(1, -1);\n            }\n        }\n    } catch (err) {}\n    return params;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaGVscGVycy93d3dfYXV0aGVudGljYXRlX3BhcnNlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsU0FBUztBQUVmQyxPQUFPQyxVQUFVLENBQUNDO0lBQ2hCLE1BQU1DLFNBQVMsQ0FBQztJQUNoQixJQUFJO1FBQ0YsTUFBT0osT0FBT0ssS0FBS0YscUJBQXFCLEtBQU07WUFDNUMsSUFBSUcsT0FBT0MsTUFBTUQsT0FBT0UsSUFBSTtnQkFDMUJKLE1BQU0sQ0FBQ0UsT0FBT0MsR0FBRyxHQUFHRCxPQUFPRSxHQUFHQyxNQUFNLEdBQUcsQ0FBQztZQUMxQztRQUNGO0lBQ0YsRUFBRSxPQUFPQyxLQUFLLENBQUM7SUFFZixPQUFPTjtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9vcGVuaWQtY2xpZW50L2xpYi9oZWxwZXJzL3d3d19hdXRoZW50aWNhdGVfcGFyc2VyLmpzP2YwMGQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUkVHRVhQID0gLyhcXHcrKT0oXCJbXlwiXSpcIikvZztcblxubW9kdWxlLmV4cG9ydHMgPSAod3d3QXV0aGVudGljYXRlKSA9PiB7XG4gIGNvbnN0IHBhcmFtcyA9IHt9O1xuICB0cnkge1xuICAgIHdoaWxlIChSRUdFWFAuZXhlYyh3d3dBdXRoZW50aWNhdGUpICE9PSBudWxsKSB7XG4gICAgICBpZiAoUmVnRXhwLiQxICYmIFJlZ0V4cC4kMikge1xuICAgICAgICBwYXJhbXNbUmVnRXhwLiQxXSA9IFJlZ0V4cC4kMi5zbGljZSgxLCAtMSk7XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChlcnIpIHt9XG5cbiAgcmV0dXJuIHBhcmFtcztcbn07XG4iXSwibmFtZXMiOlsiUkVHRVhQIiwibW9kdWxlIiwiZXhwb3J0cyIsInd3d0F1dGhlbnRpY2F0ZSIsInBhcmFtcyIsImV4ZWMiLCJSZWdFeHAiLCIkMSIsIiQyIiwic2xpY2UiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/helpers/www_authenticate_parser.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/openid-client/lib/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst Issuer = __webpack_require__(/*! ./issuer */ \"(sc_server)/./node_modules/openid-client/lib/issuer.js\");\nconst { OPError, RPError } = __webpack_require__(/*! ./errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst Strategy = __webpack_require__(/*! ./passport_strategy */ \"(sc_server)/./node_modules/openid-client/lib/passport_strategy.js\");\nconst TokenSet = __webpack_require__(/*! ./token_set */ \"(sc_server)/./node_modules/openid-client/lib/token_set.js\");\nconst { CLOCK_TOLERANCE, HTTP_OPTIONS } = __webpack_require__(/*! ./helpers/consts */ \"(sc_server)/./node_modules/openid-client/lib/helpers/consts.js\");\nconst generators = __webpack_require__(/*! ./helpers/generators */ \"(sc_server)/./node_modules/openid-client/lib/helpers/generators.js\");\nconst { setDefaults } = __webpack_require__(/*! ./helpers/request */ \"(sc_server)/./node_modules/openid-client/lib/helpers/request.js\");\nmodule.exports = {\n    Issuer,\n    Strategy,\n    TokenSet,\n    errors: {\n        OPError,\n        RPError\n    },\n    custom: {\n        setHttpOptionsDefaults: setDefaults,\n        http_options: HTTP_OPTIONS,\n        clock_tolerance: CLOCK_TOLERANCE\n    },\n    generators\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU0sRUFBRUMsT0FBTyxFQUFFQyxPQUFPLEVBQUUsR0FBR0YsbUJBQU9BLENBQUM7QUFDckMsTUFBTUcsV0FBV0gsbUJBQU9BLENBQUM7QUFDekIsTUFBTUksV0FBV0osbUJBQU9BLENBQUM7QUFDekIsTUFBTSxFQUFFSyxlQUFlLEVBQUVDLFlBQVksRUFBRSxHQUFHTixtQkFBT0EsQ0FBQztBQUNsRCxNQUFNTyxhQUFhUCxtQkFBT0EsQ0FBQztBQUMzQixNQUFNLEVBQUVRLFdBQVcsRUFBRSxHQUFHUixtQkFBT0EsQ0FBQztBQUVoQ1MsT0FBT0MsVUFBVTtJQUNmWDtJQUNBSTtJQUNBQztJQUNBTyxRQUFRO1FBQ05WO1FBQ0FDO0lBQ0Y7SUFDQVUsUUFBUTtRQUNOQyx3QkFBd0JMO1FBQ3hCTSxjQUFjUjtRQUNkUyxpQkFBaUJWO0lBQ25CO0lBQ0FFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL29wZW5pZC1jbGllbnQvbGliL2luZGV4LmpzP2NmOTEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgSXNzdWVyID0gcmVxdWlyZSgnLi9pc3N1ZXInKTtcbmNvbnN0IHsgT1BFcnJvciwgUlBFcnJvciB9ID0gcmVxdWlyZSgnLi9lcnJvcnMnKTtcbmNvbnN0IFN0cmF0ZWd5ID0gcmVxdWlyZSgnLi9wYXNzcG9ydF9zdHJhdGVneScpO1xuY29uc3QgVG9rZW5TZXQgPSByZXF1aXJlKCcuL3Rva2VuX3NldCcpO1xuY29uc3QgeyBDTE9DS19UT0xFUkFOQ0UsIEhUVFBfT1BUSU9OUyB9ID0gcmVxdWlyZSgnLi9oZWxwZXJzL2NvbnN0cycpO1xuY29uc3QgZ2VuZXJhdG9ycyA9IHJlcXVpcmUoJy4vaGVscGVycy9nZW5lcmF0b3JzJyk7XG5jb25zdCB7IHNldERlZmF1bHRzIH0gPSByZXF1aXJlKCcuL2hlbHBlcnMvcmVxdWVzdCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgSXNzdWVyLFxuICBTdHJhdGVneSxcbiAgVG9rZW5TZXQsXG4gIGVycm9yczoge1xuICAgIE9QRXJyb3IsXG4gICAgUlBFcnJvcixcbiAgfSxcbiAgY3VzdG9tOiB7XG4gICAgc2V0SHR0cE9wdGlvbnNEZWZhdWx0czogc2V0RGVmYXVsdHMsXG4gICAgaHR0cF9vcHRpb25zOiBIVFRQX09QVElPTlMsXG4gICAgY2xvY2tfdG9sZXJhbmNlOiBDTE9DS19UT0xFUkFOQ0UsXG4gIH0sXG4gIGdlbmVyYXRvcnMsXG59O1xuIl0sIm5hbWVzIjpbIklzc3VlciIsInJlcXVpcmUiLCJPUEVycm9yIiwiUlBFcnJvciIsIlN0cmF0ZWd5IiwiVG9rZW5TZXQiLCJDTE9DS19UT0xFUkFOQ0UiLCJIVFRQX09QVElPTlMiLCJnZW5lcmF0b3JzIiwic2V0RGVmYXVsdHMiLCJtb2R1bGUiLCJleHBvcnRzIiwiZXJyb3JzIiwiY3VzdG9tIiwic2V0SHR0cE9wdGlvbnNEZWZhdWx0cyIsImh0dHBfb3B0aW9ucyIsImNsb2NrX3RvbGVyYW5jZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/issuer.js":
/*!**************************************************!*\
  !*** ./node_modules/openid-client/lib/issuer.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst { inspect } = __webpack_require__(/*! util */ \"util\");\nconst url = __webpack_require__(/*! url */ \"url\");\nconst { RPError } = __webpack_require__(/*! ./errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst getClient = __webpack_require__(/*! ./client */ \"(sc_server)/./node_modules/openid-client/lib/client.js\");\nconst registry = __webpack_require__(/*! ./issuer_registry */ \"(sc_server)/./node_modules/openid-client/lib/issuer_registry.js\");\nconst processResponse = __webpack_require__(/*! ./helpers/process_response */ \"(sc_server)/./node_modules/openid-client/lib/helpers/process_response.js\");\nconst webfingerNormalize = __webpack_require__(/*! ./helpers/webfinger_normalize */ \"(sc_server)/./node_modules/openid-client/lib/helpers/webfinger_normalize.js\");\nconst request = __webpack_require__(/*! ./helpers/request */ \"(sc_server)/./node_modules/openid-client/lib/helpers/request.js\");\nconst clone = __webpack_require__(/*! ./helpers/deep_clone */ \"(sc_server)/./node_modules/openid-client/lib/helpers/deep_clone.js\");\nconst { keystore } = __webpack_require__(/*! ./helpers/issuer */ \"(sc_server)/./node_modules/openid-client/lib/helpers/issuer.js\");\nconst AAD_MULTITENANT_DISCOVERY = [\n    \"https://login.microsoftonline.com/common/.well-known/openid-configuration\",\n    \"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration\",\n    \"https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration\",\n    \"https://login.microsoftonline.com/consumers/v2.0/.well-known/openid-configuration\"\n];\nconst AAD_MULTITENANT = Symbol();\nconst ISSUER_DEFAULTS = {\n    claim_types_supported: [\n        \"normal\"\n    ],\n    claims_parameter_supported: false,\n    grant_types_supported: [\n        \"authorization_code\",\n        \"implicit\"\n    ],\n    request_parameter_supported: false,\n    request_uri_parameter_supported: true,\n    require_request_uri_registration: false,\n    response_modes_supported: [\n        \"query\",\n        \"fragment\"\n    ],\n    token_endpoint_auth_methods_supported: [\n        \"client_secret_basic\"\n    ]\n};\nclass Issuer {\n    #metadata;\n    constructor(meta = {}){\n        const aadIssValidation = meta[AAD_MULTITENANT];\n        delete meta[AAD_MULTITENANT];\n        [\n            \"introspection\",\n            \"revocation\"\n        ].forEach((endpoint)=>{\n            // if intro/revocation endpoint auth specific meta is missing use the token ones if they\n            // are defined\n            if (meta[`${endpoint}_endpoint`] && meta[`${endpoint}_endpoint_auth_methods_supported`] === undefined && meta[`${endpoint}_endpoint_auth_signing_alg_values_supported`] === undefined) {\n                if (meta.token_endpoint_auth_methods_supported) {\n                    meta[`${endpoint}_endpoint_auth_methods_supported`] = meta.token_endpoint_auth_methods_supported;\n                }\n                if (meta.token_endpoint_auth_signing_alg_values_supported) {\n                    meta[`${endpoint}_endpoint_auth_signing_alg_values_supported`] = meta.token_endpoint_auth_signing_alg_values_supported;\n                }\n            }\n        });\n        this.#metadata = new Map();\n        Object.entries(meta).forEach(([key, value])=>{\n            this.#metadata.set(key, value);\n            if (!this[key]) {\n                Object.defineProperty(this, key, {\n                    get () {\n                        return this.#metadata.get(key);\n                    },\n                    enumerable: true\n                });\n            }\n        });\n        registry.set(this.issuer, this);\n        const Client = getClient(this, aadIssValidation);\n        Object.defineProperties(this, {\n            Client: {\n                value: Client,\n                enumerable: true\n            },\n            FAPI1Client: {\n                value: class FAPI1Client extends Client {\n                },\n                enumerable: true\n            }\n        });\n    }\n    get metadata() {\n        return clone(Object.fromEntries(this.#metadata.entries()));\n    }\n    static async webfinger(input) {\n        const resource = webfingerNormalize(input);\n        const { host } = url.parse(resource);\n        const webfingerUrl = `https://${host}/.well-known/webfinger`;\n        const response = await request.call(this, {\n            method: \"GET\",\n            url: webfingerUrl,\n            responseType: \"json\",\n            searchParams: {\n                resource,\n                rel: \"http://openid.net/specs/connect/1.0/issuer\"\n            },\n            headers: {\n                Accept: \"application/json\"\n            }\n        });\n        const body = processResponse(response);\n        const location = Array.isArray(body.links) && body.links.find((link)=>typeof link === \"object\" && link.rel === \"http://openid.net/specs/connect/1.0/issuer\" && link.href);\n        if (!location) {\n            throw new RPError({\n                message: \"no issuer found in webfinger response\",\n                body\n            });\n        }\n        if (typeof location.href !== \"string\" || !location.href.startsWith(\"https://\")) {\n            throw new RPError({\n                printf: [\n                    \"invalid issuer location %s\",\n                    location.href\n                ],\n                body\n            });\n        }\n        const expectedIssuer = location.href;\n        if (registry.has(expectedIssuer)) {\n            return registry.get(expectedIssuer);\n        }\n        const issuer = await this.discover(expectedIssuer);\n        if (issuer.issuer !== expectedIssuer) {\n            registry.del(issuer.issuer);\n            throw new RPError(\"discovered issuer mismatch, expected %s, got: %s\", expectedIssuer, issuer.issuer);\n        }\n        return issuer;\n    }\n    static async discover(uri) {\n        const parsed = url.parse(uri);\n        if (parsed.pathname.includes(\"/.well-known/\")) {\n            const response = await request.call(this, {\n                method: \"GET\",\n                responseType: \"json\",\n                url: uri,\n                headers: {\n                    Accept: \"application/json\"\n                }\n            });\n            const body = processResponse(response);\n            return new Issuer({\n                ...ISSUER_DEFAULTS,\n                ...body,\n                [AAD_MULTITENANT]: !!AAD_MULTITENANT_DISCOVERY.find((discoveryURL)=>uri.startsWith(discoveryURL))\n            });\n        }\n        let pathname;\n        if (parsed.pathname.endsWith(\"/\")) {\n            pathname = `${parsed.pathname}.well-known/openid-configuration`;\n        } else {\n            pathname = `${parsed.pathname}/.well-known/openid-configuration`;\n        }\n        const wellKnownUri = url.format({\n            ...parsed,\n            pathname\n        });\n        const response = await request.call(this, {\n            method: \"GET\",\n            responseType: \"json\",\n            url: wellKnownUri,\n            headers: {\n                Accept: \"application/json\"\n            }\n        });\n        const body = processResponse(response);\n        return new Issuer({\n            ...ISSUER_DEFAULTS,\n            ...body,\n            [AAD_MULTITENANT]: !!AAD_MULTITENANT_DISCOVERY.find((discoveryURL)=>wellKnownUri.startsWith(discoveryURL))\n        });\n    }\n    async reloadJwksUri() {\n        await keystore.call(this, true);\n    }\n    /* istanbul ignore next */ [inspect.custom]() {\n        return `${this.constructor.name} ${inspect(this.metadata, {\n            depth: Infinity,\n            colors: process.stdout.isTTY,\n            compact: false,\n            sorted: true\n        })}`;\n    }\n}\nmodule.exports = Issuer;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/issuer.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/issuer_registry.js":
/*!***********************************************************!*\
  !*** ./node_modules/openid-client/lib/issuer_registry.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst LRU = __webpack_require__(/*! lru-cache */ \"(sc_server)/./node_modules/lru-cache/index.js\");\nmodule.exports = new LRU({\n    max: 100\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaXNzdWVyX3JlZ2lzdHJ5LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxNQUFNQyxtQkFBT0EsQ0FBQztBQUVwQkMsT0FBT0MsVUFBVSxJQUFJSCxJQUFJO0lBQUVJLEtBQUs7QUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvaXNzdWVyX3JlZ2lzdHJ5LmpzP2IwNmQiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTFJVID0gcmVxdWlyZSgnbHJ1LWNhY2hlJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3IExSVSh7IG1heDogMTAwIH0pO1xuIl0sIm5hbWVzIjpbIkxSVSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwibWF4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/issuer_registry.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/passport_strategy.js":
/*!*************************************************************!*\
  !*** ./node_modules/openid-client/lib/passport_strategy.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst url = __webpack_require__(/*! url */ \"url\");\nconst { format } = __webpack_require__(/*! util */ \"util\");\nconst cloneDeep = __webpack_require__(/*! ./helpers/deep_clone */ \"(sc_server)/./node_modules/openid-client/lib/helpers/deep_clone.js\");\nconst { RPError, OPError } = __webpack_require__(/*! ./errors */ \"(sc_server)/./node_modules/openid-client/lib/errors.js\");\nconst { BaseClient } = __webpack_require__(/*! ./client */ \"(sc_server)/./node_modules/openid-client/lib/client.js\");\nconst { random, codeChallenge } = __webpack_require__(/*! ./helpers/generators */ \"(sc_server)/./node_modules/openid-client/lib/helpers/generators.js\");\nconst pick = __webpack_require__(/*! ./helpers/pick */ \"(sc_server)/./node_modules/openid-client/lib/helpers/pick.js\");\nconst { resolveResponseType, resolveRedirectUri } = __webpack_require__(/*! ./helpers/client */ \"(sc_server)/./node_modules/openid-client/lib/helpers/client.js\");\nfunction verified(err, user, info = {}) {\n    if (err) {\n        this.error(err);\n    } else if (!user) {\n        this.fail(info);\n    } else {\n        this.success(user, info);\n    }\n}\nfunction OpenIDConnectStrategy({ client, params = {}, passReqToCallback = false, sessionKey, usePKCE = true, extras = {} } = {}, verify) {\n    if (!(client instanceof BaseClient)) {\n        throw new TypeError(\"client must be an instance of openid-client Client\");\n    }\n    if (typeof verify !== \"function\") {\n        throw new TypeError(\"verify callback must be a function\");\n    }\n    if (!client.issuer || !client.issuer.issuer) {\n        throw new TypeError(\"client must have an issuer with an identifier\");\n    }\n    this._client = client;\n    this._issuer = client.issuer;\n    this._verify = verify;\n    this._passReqToCallback = passReqToCallback;\n    this._usePKCE = usePKCE;\n    this._key = sessionKey || `oidc:${url.parse(this._issuer.issuer).hostname}`;\n    this._params = cloneDeep(params);\n    // state and nonce are handled in authenticate()\n    delete this._params.state;\n    delete this._params.nonce;\n    this._extras = cloneDeep(extras);\n    if (!this._params.response_type) this._params.response_type = resolveResponseType.call(client);\n    if (!this._params.redirect_uri) this._params.redirect_uri = resolveRedirectUri.call(client);\n    if (!this._params.scope) this._params.scope = \"openid\";\n    if (this._usePKCE === true) {\n        const supportedMethods = Array.isArray(this._issuer.code_challenge_methods_supported) ? this._issuer.code_challenge_methods_supported : false;\n        if (supportedMethods && supportedMethods.includes(\"S256\")) {\n            this._usePKCE = \"S256\";\n        } else if (supportedMethods && supportedMethods.includes(\"plain\")) {\n            this._usePKCE = \"plain\";\n        } else if (supportedMethods) {\n            throw new TypeError(\"neither code_challenge_method supported by the client is supported by the issuer\");\n        } else {\n            this._usePKCE = \"S256\";\n        }\n    } else if (typeof this._usePKCE === \"string\" && ![\n        \"plain\",\n        \"S256\"\n    ].includes(this._usePKCE)) {\n        throw new TypeError(`${this._usePKCE} is not valid/implemented PKCE code_challenge_method`);\n    }\n    this.name = url.parse(client.issuer.issuer).hostname;\n}\nOpenIDConnectStrategy.prototype.authenticate = function authenticate(req, options) {\n    (async ()=>{\n        const client = this._client;\n        if (!req.session) {\n            throw new TypeError(\"authentication requires session support\");\n        }\n        const reqParams = client.callbackParams(req);\n        const sessionKey = this._key;\n        const { 0: parameter, length } = Object.keys(reqParams);\n        /**\n     * Start authentication request if this has no authorization response parameters or\n     * this might a login initiated from a third party as per\n     * https://openid.net/specs/openid-connect-core-1_0.html#ThirdPartyInitiatedLogin.\n     */ if (length === 0 || length === 1 && parameter === \"iss\") {\n            // provide options object with extra authentication parameters\n            const params = {\n                state: random(),\n                ...this._params,\n                ...options\n            };\n            if (!params.nonce && params.response_type.includes(\"id_token\")) {\n                params.nonce = random();\n            }\n            req.session[sessionKey] = pick(params, \"nonce\", \"state\", \"max_age\", \"response_type\");\n            if (this._usePKCE && params.response_type.includes(\"code\")) {\n                const verifier = random();\n                req.session[sessionKey].code_verifier = verifier;\n                switch(this._usePKCE){\n                    case \"S256\":\n                        params.code_challenge = codeChallenge(verifier);\n                        params.code_challenge_method = \"S256\";\n                        break;\n                    case \"plain\":\n                        params.code_challenge = verifier;\n                        break;\n                }\n            }\n            this.redirect(client.authorizationUrl(params));\n            return;\n        }\n        /* end authentication request */ /* start authentication response */ const session = req.session[sessionKey];\n        if (Object.keys(session || {}).length === 0) {\n            throw new Error(format('did not find expected authorization request details in session, req.session[\"%s\"] is %j', sessionKey, session));\n        }\n        const { state, nonce, max_age: maxAge, code_verifier: codeVerifier, response_type: responseType } = session;\n        try {\n            delete req.session[sessionKey];\n        } catch (err) {}\n        const opts = {\n            redirect_uri: this._params.redirect_uri,\n            ...options\n        };\n        const checks = {\n            state,\n            nonce,\n            max_age: maxAge,\n            code_verifier: codeVerifier,\n            response_type: responseType\n        };\n        const tokenset = await client.callback(opts.redirect_uri, reqParams, checks, this._extras);\n        const passReq = this._passReqToCallback;\n        const loadUserinfo = this._verify.length > (passReq ? 3 : 2) && client.issuer.userinfo_endpoint;\n        const args = [\n            tokenset,\n            verified.bind(this)\n        ];\n        if (loadUserinfo) {\n            if (!tokenset.access_token) {\n                throw new RPError({\n                    message: \"expected access_token to be returned when asking for userinfo in verify callback\",\n                    tokenset\n                });\n            }\n            const userinfo = await client.userinfo(tokenset);\n            args.splice(1, 0, userinfo);\n        }\n        if (passReq) {\n            args.unshift(req);\n        }\n        this._verify(...args);\n    /* end authentication response */ })().catch((error)=>{\n        if (error instanceof OPError && error.error !== \"server_error\" && !error.error.startsWith(\"invalid\") || error instanceof RPError) {\n            this.fail(error);\n        } else {\n            this.error(error);\n        }\n    });\n};\nmodule.exports = OpenIDConnectStrategy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/passport_strategy.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/lib/token_set.js":
/*!*****************************************************!*\
  !*** ./node_modules/openid-client/lib/token_set.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst base64url = __webpack_require__(/*! ./helpers/base64url */ \"(sc_server)/./node_modules/openid-client/lib/helpers/base64url.js\");\nconst now = __webpack_require__(/*! ./helpers/unix_timestamp */ \"(sc_server)/./node_modules/openid-client/lib/helpers/unix_timestamp.js\");\nclass TokenSet {\n    constructor(values){\n        Object.assign(this, values);\n        const { constructor, ...properties } = Object.getOwnPropertyDescriptors(this.constructor.prototype);\n        Object.defineProperties(this, properties);\n    }\n    set expires_in(value) {\n        this.expires_at = now() + Number(value);\n    }\n    get expires_in() {\n        return Math.max.apply(null, [\n            this.expires_at - now(),\n            0\n        ]);\n    }\n    expired() {\n        return this.expires_in === 0;\n    }\n    claims() {\n        if (!this.id_token) {\n            throw new TypeError(\"id_token not present in TokenSet\");\n        }\n        return JSON.parse(base64url.decode(this.id_token.split(\".\")[1]));\n    }\n}\nmodule.exports = TokenSet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvdG9rZW5fc2V0LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxNQUFNQSxZQUFZQyxtQkFBT0EsQ0FBQztBQUMxQixNQUFNQyxNQUFNRCxtQkFBT0EsQ0FBQztBQUVwQixNQUFNRTtJQUNKQyxZQUFZQyxNQUFNLENBQUU7UUFDbEJDLE9BQU9DLE9BQU8sSUFBSSxFQUFFRjtRQUNwQixNQUFNLEVBQUVELFdBQVcsRUFBRSxHQUFHSSxZQUFZLEdBQUdGLE9BQU9HLDBCQUM1QyxJQUFJLENBQUNMLFlBQVlNO1FBR25CSixPQUFPSyxpQkFBaUIsSUFBSSxFQUFFSDtJQUNoQztJQUVBLElBQUlJLFdBQVdDLEtBQUssRUFBRTtRQUNwQixJQUFJLENBQUNDLGFBQWFaLFFBQVFhLE9BQU9GO0lBQ25DO0lBRUEsSUFBSUQsYUFBYTtRQUNmLE9BQU9JLEtBQUtDLElBQUlDLE1BQU0sTUFBTTtZQUFDLElBQUksQ0FBQ0osYUFBYVo7WUFBTztTQUFFO0lBQzFEO0lBRUFpQixVQUFVO1FBQ1IsT0FBTyxJQUFJLENBQUNQLGVBQWU7SUFDN0I7SUFFQVEsU0FBUztRQUNQLElBQUksQ0FBQyxJQUFJLENBQUNDLFVBQVU7WUFDbEIsTUFBTSxJQUFJQyxVQUFVO1FBQ3RCO1FBRUEsT0FBT0MsS0FBS0MsTUFBTXhCLFVBQVV5QixPQUFPLElBQUksQ0FBQ0osU0FBU0ssTUFBTSxJQUFJLENBQUMsRUFBRTtJQUNoRTtBQUNGO0FBRUFDLE9BQU9DLFVBQVV6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvb3BlbmlkLWNsaWVudC9saWIvdG9rZW5fc2V0LmpzPzI4M2IiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmFzZTY0dXJsID0gcmVxdWlyZSgnLi9oZWxwZXJzL2Jhc2U2NHVybCcpO1xuY29uc3Qgbm93ID0gcmVxdWlyZSgnLi9oZWxwZXJzL3VuaXhfdGltZXN0YW1wJyk7XG5cbmNsYXNzIFRva2VuU2V0IHtcbiAgY29uc3RydWN0b3IodmFsdWVzKSB7XG4gICAgT2JqZWN0LmFzc2lnbih0aGlzLCB2YWx1ZXMpO1xuICAgIGNvbnN0IHsgY29uc3RydWN0b3IsIC4uLnByb3BlcnRpZXMgfSA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKFxuICAgICAgdGhpcy5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsXG4gICAgKTtcblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRoaXMsIHByb3BlcnRpZXMpO1xuICB9XG5cbiAgc2V0IGV4cGlyZXNfaW4odmFsdWUpIHtcbiAgICB0aGlzLmV4cGlyZXNfYXQgPSBub3coKSArIE51bWJlcih2YWx1ZSk7XG4gIH1cblxuICBnZXQgZXhwaXJlc19pbigpIHtcbiAgICByZXR1cm4gTWF0aC5tYXguYXBwbHkobnVsbCwgW3RoaXMuZXhwaXJlc19hdCAtIG5vdygpLCAwXSk7XG4gIH1cblxuICBleHBpcmVkKCkge1xuICAgIHJldHVybiB0aGlzLmV4cGlyZXNfaW4gPT09IDA7XG4gIH1cblxuICBjbGFpbXMoKSB7XG4gICAgaWYgKCF0aGlzLmlkX3Rva2VuKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdpZF90b2tlbiBub3QgcHJlc2VudCBpbiBUb2tlblNldCcpO1xuICAgIH1cblxuICAgIHJldHVybiBKU09OLnBhcnNlKGJhc2U2NHVybC5kZWNvZGUodGhpcy5pZF90b2tlbi5zcGxpdCgnLicpWzFdKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBUb2tlblNldDtcbiJdLCJuYW1lcyI6WyJiYXNlNjR1cmwiLCJyZXF1aXJlIiwibm93IiwiVG9rZW5TZXQiLCJjb25zdHJ1Y3RvciIsInZhbHVlcyIsIk9iamVjdCIsImFzc2lnbiIsInByb3BlcnRpZXMiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwicHJvdG90eXBlIiwiZGVmaW5lUHJvcGVydGllcyIsImV4cGlyZXNfaW4iLCJ2YWx1ZSIsImV4cGlyZXNfYXQiLCJOdW1iZXIiLCJNYXRoIiwibWF4IiwiYXBwbHkiLCJleHBpcmVkIiwiY2xhaW1zIiwiaWRfdG9rZW4iLCJUeXBlRXJyb3IiLCJKU09OIiwicGFyc2UiLCJkZWNvZGUiLCJzcGxpdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/lib/token_set.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/node_modules/object-hash/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/openid-client/node_modules/object-hash/index.js ***!
  \**********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nvar crypto = __webpack_require__(/*! crypto */ \"crypto\");\n/**\n * Exported function\n *\n * Options:\n *\n *  - `algorithm` hash algo to be used by this instance: *'sha1', 'md5'\n *  - `excludeValues` {true|*false} hash object keys, values ignored\n *  - `encoding` hash encoding, supports 'buffer', '*hex', 'binary', 'base64'\n *  - `ignoreUnknown` {true|*false} ignore unknown object types\n *  - `replacer` optional function that replaces values before hashing\n *  - `respectFunctionProperties` {*true|false} consider function properties when hashing\n *  - `respectFunctionNames` {*true|false} consider 'name' property of functions for hashing\n *  - `respectType` {*true|false} Respect special properties (prototype, constructor)\n *    when hashing to distinguish between types\n *  - `unorderedArrays` {true|*false} Sort all arrays before hashing\n *  - `unorderedSets` {*true|false} Sort `Set` and `Map` instances before hashing\n *  * = default\n *\n * @param {object} object value to hash\n * @param {object} options hashing options\n * @return {string} hash value\n * @api public\n */ exports = module.exports = objectHash;\nfunction objectHash(object, options) {\n    options = applyDefaults(object, options);\n    return hash(object, options);\n}\n/**\n * Exported sugar methods\n *\n * @param {object} object value to hash\n * @return {string} hash value\n * @api public\n */ exports.sha1 = function(object) {\n    return objectHash(object);\n};\nexports.keys = function(object) {\n    return objectHash(object, {\n        excludeValues: true,\n        algorithm: \"sha1\",\n        encoding: \"hex\"\n    });\n};\nexports.MD5 = function(object) {\n    return objectHash(object, {\n        algorithm: \"md5\",\n        encoding: \"hex\"\n    });\n};\nexports.keysMD5 = function(object) {\n    return objectHash(object, {\n        algorithm: \"md5\",\n        encoding: \"hex\",\n        excludeValues: true\n    });\n};\n// Internals\nvar hashes = crypto.getHashes ? crypto.getHashes().slice() : [\n    \"sha1\",\n    \"md5\"\n];\nhashes.push(\"passthrough\");\nvar encodings = [\n    \"buffer\",\n    \"hex\",\n    \"binary\",\n    \"base64\"\n];\nfunction applyDefaults(object, sourceOptions) {\n    sourceOptions = sourceOptions || {};\n    // create a copy rather than mutating\n    var options = {};\n    options.algorithm = sourceOptions.algorithm || \"sha1\";\n    options.encoding = sourceOptions.encoding || \"hex\";\n    options.excludeValues = sourceOptions.excludeValues ? true : false;\n    options.algorithm = options.algorithm.toLowerCase();\n    options.encoding = options.encoding.toLowerCase();\n    options.ignoreUnknown = sourceOptions.ignoreUnknown !== true ? false : true; // default to false\n    options.respectType = sourceOptions.respectType === false ? false : true; // default to true\n    options.respectFunctionNames = sourceOptions.respectFunctionNames === false ? false : true;\n    options.respectFunctionProperties = sourceOptions.respectFunctionProperties === false ? false : true;\n    options.unorderedArrays = sourceOptions.unorderedArrays !== true ? false : true; // default to false\n    options.unorderedSets = sourceOptions.unorderedSets === false ? false : true; // default to false\n    options.unorderedObjects = sourceOptions.unorderedObjects === false ? false : true; // default to true\n    options.replacer = sourceOptions.replacer || undefined;\n    options.excludeKeys = sourceOptions.excludeKeys || undefined;\n    if (typeof object === \"undefined\") {\n        throw new Error(\"Object argument required.\");\n    }\n    // if there is a case-insensitive match in the hashes list, accept it\n    // (i.e. SHA256 for sha256)\n    for(var i = 0; i < hashes.length; ++i){\n        if (hashes[i].toLowerCase() === options.algorithm.toLowerCase()) {\n            options.algorithm = hashes[i];\n        }\n    }\n    if (hashes.indexOf(options.algorithm) === -1) {\n        throw new Error('Algorithm \"' + options.algorithm + '\"  not supported. ' + \"supported values: \" + hashes.join(\", \"));\n    }\n    if (encodings.indexOf(options.encoding) === -1 && options.algorithm !== \"passthrough\") {\n        throw new Error('Encoding \"' + options.encoding + '\"  not supported. ' + \"supported values: \" + encodings.join(\", \"));\n    }\n    return options;\n}\n/** Check if the given function is a native function */ function isNativeFunction(f) {\n    if (typeof f !== \"function\") {\n        return false;\n    }\n    var exp = /^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i;\n    return exp.exec(Function.prototype.toString.call(f)) != null;\n}\nfunction hash(object, options) {\n    var hashingStream;\n    if (options.algorithm !== \"passthrough\") {\n        hashingStream = crypto.createHash(options.algorithm);\n    } else {\n        hashingStream = new PassThrough();\n    }\n    if (typeof hashingStream.write === \"undefined\") {\n        hashingStream.write = hashingStream.update;\n        hashingStream.end = hashingStream.update;\n    }\n    var hasher = typeHasher(options, hashingStream);\n    hasher.dispatch(object);\n    if (!hashingStream.update) {\n        hashingStream.end(\"\");\n    }\n    if (hashingStream.digest) {\n        return hashingStream.digest(options.encoding === \"buffer\" ? undefined : options.encoding);\n    }\n    var buf = hashingStream.read();\n    if (options.encoding === \"buffer\") {\n        return buf;\n    }\n    return buf.toString(options.encoding);\n}\n/**\n * Expose streaming API\n *\n * @param {object} object  Value to serialize\n * @param {object} options  Options, as for hash()\n * @param {object} stream  A stream to write the serializiation to\n * @api public\n */ exports.writeToStream = function(object, options, stream) {\n    if (typeof stream === \"undefined\") {\n        stream = options;\n        options = {};\n    }\n    options = applyDefaults(object, options);\n    return typeHasher(options, stream).dispatch(object);\n};\nfunction typeHasher(options, writeTo, context) {\n    context = context || [];\n    var write = function(str) {\n        if (writeTo.update) {\n            return writeTo.update(str, \"utf8\");\n        } else {\n            return writeTo.write(str, \"utf8\");\n        }\n    };\n    return {\n        dispatch: function(value) {\n            if (options.replacer) {\n                value = options.replacer(value);\n            }\n            var type = typeof value;\n            if (value === null) {\n                type = \"null\";\n            }\n            //console.log(\"[DEBUG] Dispatch: \", value, \"->\", type, \" -> \", \"_\" + type);\n            return this[\"_\" + type](value);\n        },\n        _object: function(object) {\n            var pattern = /\\[object (.*)\\]/i;\n            var objString = Object.prototype.toString.call(object);\n            var objType = pattern.exec(objString);\n            if (!objType) {\n                objType = \"unknown:[\" + objString + \"]\";\n            } else {\n                objType = objType[1]; // take only the class name\n            }\n            objType = objType.toLowerCase();\n            var objectNumber = null;\n            if ((objectNumber = context.indexOf(object)) >= 0) {\n                return this.dispatch(\"[CIRCULAR:\" + objectNumber + \"]\");\n            } else {\n                context.push(object);\n            }\n            if (typeof Buffer !== \"undefined\" && Buffer.isBuffer && Buffer.isBuffer(object)) {\n                write(\"buffer:\");\n                return write(object);\n            }\n            if (objType !== \"object\" && objType !== \"function\" && objType !== \"asyncfunction\") {\n                if (this[\"_\" + objType]) {\n                    this[\"_\" + objType](object);\n                } else if (options.ignoreUnknown) {\n                    return write(\"[\" + objType + \"]\");\n                } else {\n                    throw new Error('Unknown object type \"' + objType + '\"');\n                }\n            } else {\n                var keys = Object.keys(object);\n                if (options.unorderedObjects) {\n                    keys = keys.sort();\n                }\n                // Make sure to incorporate special properties, so\n                // Types with different prototypes will produce\n                // a different hash and objects derived from\n                // different functions (`new Foo`, `new Bar`) will\n                // produce different hashes.\n                // We never do this for native functions since some\n                // seem to break because of that.\n                if (options.respectType !== false && !isNativeFunction(object)) {\n                    keys.splice(0, 0, \"prototype\", \"__proto__\", \"constructor\");\n                }\n                if (options.excludeKeys) {\n                    keys = keys.filter(function(key) {\n                        return !options.excludeKeys(key);\n                    });\n                }\n                write(\"object:\" + keys.length + \":\");\n                var self = this;\n                return keys.forEach(function(key) {\n                    self.dispatch(key);\n                    write(\":\");\n                    if (!options.excludeValues) {\n                        self.dispatch(object[key]);\n                    }\n                    write(\",\");\n                });\n            }\n        },\n        _array: function(arr, unordered) {\n            unordered = typeof unordered !== \"undefined\" ? unordered : options.unorderedArrays !== false; // default to options.unorderedArrays\n            var self = this;\n            write(\"array:\" + arr.length + \":\");\n            if (!unordered || arr.length <= 1) {\n                return arr.forEach(function(entry) {\n                    return self.dispatch(entry);\n                });\n            }\n            // the unordered case is a little more complicated:\n            // since there is no canonical ordering on objects,\n            // i.e. {a:1} < {a:2} and {a:1} > {a:2} are both false,\n            // we first serialize each entry using a PassThrough stream\n            // before sorting.\n            // also: we can’t use the same context array for all entries\n            // since the order of hashing should *not* matter. instead,\n            // we keep track of the additions to a copy of the context array\n            // and add all of them to the global context array when we’re done\n            var contextAdditions = [];\n            var entries = arr.map(function(entry) {\n                var strm = new PassThrough();\n                var localContext = context.slice(); // make copy\n                var hasher = typeHasher(options, strm, localContext);\n                hasher.dispatch(entry);\n                // take only what was added to localContext and append it to contextAdditions\n                contextAdditions = contextAdditions.concat(localContext.slice(context.length));\n                return strm.read().toString();\n            });\n            context = context.concat(contextAdditions);\n            entries.sort();\n            return this._array(entries, false);\n        },\n        _date: function(date) {\n            return write(\"date:\" + date.toJSON());\n        },\n        _symbol: function(sym) {\n            return write(\"symbol:\" + sym.toString());\n        },\n        _error: function(err) {\n            return write(\"error:\" + err.toString());\n        },\n        _boolean: function(bool) {\n            return write(\"bool:\" + bool.toString());\n        },\n        _string: function(string) {\n            write(\"string:\" + string.length + \":\");\n            write(string.toString());\n        },\n        _function: function(fn) {\n            write(\"fn:\");\n            if (isNativeFunction(fn)) {\n                this.dispatch(\"[native]\");\n            } else {\n                this.dispatch(fn.toString());\n            }\n            if (options.respectFunctionNames !== false) {\n                // Make sure we can still distinguish native functions\n                // by their name, otherwise String and Function will\n                // have the same hash\n                this.dispatch(\"function-name:\" + String(fn.name));\n            }\n            if (options.respectFunctionProperties) {\n                this._object(fn);\n            }\n        },\n        _number: function(number) {\n            return write(\"number:\" + number.toString());\n        },\n        _xml: function(xml) {\n            return write(\"xml:\" + xml.toString());\n        },\n        _null: function() {\n            return write(\"Null\");\n        },\n        _undefined: function() {\n            return write(\"Undefined\");\n        },\n        _regexp: function(regex) {\n            return write(\"regex:\" + regex.toString());\n        },\n        _uint8array: function(arr) {\n            write(\"uint8array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _uint8clampedarray: function(arr) {\n            write(\"uint8clampedarray:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _int8array: function(arr) {\n            write(\"uint8array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _uint16array: function(arr) {\n            write(\"uint16array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _int16array: function(arr) {\n            write(\"uint16array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _uint32array: function(arr) {\n            write(\"uint32array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _int32array: function(arr) {\n            write(\"uint32array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _float32array: function(arr) {\n            write(\"float32array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _float64array: function(arr) {\n            write(\"float64array:\");\n            return this.dispatch(Array.prototype.slice.call(arr));\n        },\n        _arraybuffer: function(arr) {\n            write(\"arraybuffer:\");\n            return this.dispatch(new Uint8Array(arr));\n        },\n        _url: function(url) {\n            return write(\"url:\" + url.toString(), \"utf8\");\n        },\n        _map: function(map) {\n            write(\"map:\");\n            var arr = Array.from(map);\n            return this._array(arr, options.unorderedSets !== false);\n        },\n        _set: function(set) {\n            write(\"set:\");\n            var arr = Array.from(set);\n            return this._array(arr, options.unorderedSets !== false);\n        },\n        _file: function(file) {\n            write(\"file:\");\n            return this.dispatch([\n                file.name,\n                file.size,\n                file.type,\n                file.lastModfied\n            ]);\n        },\n        _blob: function() {\n            if (options.ignoreUnknown) {\n                return write(\"[blob]\");\n            }\n            throw Error(\"Hashing Blob objects is currently not supported\\n\" + \"(see https://github.com/puleos/object-hash/issues/26)\\n\" + 'Use \"options.replacer\" or \"options.ignoreUnknown\"\\n');\n        },\n        _domwindow: function() {\n            return write(\"domwindow\");\n        },\n        _bigint: function(number) {\n            return write(\"bigint:\" + number.toString());\n        },\n        /* Node.js standard native objects */ _process: function() {\n            return write(\"process\");\n        },\n        _timer: function() {\n            return write(\"timer\");\n        },\n        _pipe: function() {\n            return write(\"pipe\");\n        },\n        _tcp: function() {\n            return write(\"tcp\");\n        },\n        _udp: function() {\n            return write(\"udp\");\n        },\n        _tty: function() {\n            return write(\"tty\");\n        },\n        _statwatcher: function() {\n            return write(\"statwatcher\");\n        },\n        _securecontext: function() {\n            return write(\"securecontext\");\n        },\n        _connection: function() {\n            return write(\"connection\");\n        },\n        _zlib: function() {\n            return write(\"zlib\");\n        },\n        _context: function() {\n            return write(\"context\");\n        },\n        _nodescript: function() {\n            return write(\"nodescript\");\n        },\n        _httpparser: function() {\n            return write(\"httpparser\");\n        },\n        _dataview: function() {\n            return write(\"dataview\");\n        },\n        _signal: function() {\n            return write(\"signal\");\n        },\n        _fsevent: function() {\n            return write(\"fsevent\");\n        },\n        _tlswrap: function() {\n            return write(\"tlswrap\");\n        }\n    };\n}\n// Mini-implementation of stream.PassThrough\n// We are far from having need for the full implementation, and we can\n// make assumptions like \"many writes, then only one final read\"\n// and we can ignore encoding specifics\nfunction PassThrough() {\n    return {\n        buf: \"\",\n        write: function(b) {\n            this.buf += b;\n        },\n        end: function(b) {\n            this.buf += b;\n        },\n        read: function() {\n            return this.buf;\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/openid-client/node_modules/object-hash/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/preact-render-to-string/dist/commonjs.js":
/*!***************************************************************!*\
  !*** ./node_modules/preact-render-to-string/dist/commonjs.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("!function(e, t) {\n     true ? t(exports, __webpack_require__(/*! preact */ \"(sc_server)/./node_modules/preact/dist/preact.js\")) : 0;\n}(this, function(e, t) {\n    var n = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i, r = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/, o = /[\\s\\n\\\\/='\"\\0<>]/, i = /^xlink:?./, s = /[\"&<]/;\n    function a(e) {\n        if (!1 === s.test(e += \"\")) return e;\n        for(var t = 0, n = 0, r = \"\", o = \"\"; n < e.length; n++){\n            switch(e.charCodeAt(n)){\n                case 34:\n                    o = \"&quot;\";\n                    break;\n                case 38:\n                    o = \"&amp;\";\n                    break;\n                case 60:\n                    o = \"&lt;\";\n                    break;\n                default:\n                    continue;\n            }\n            n !== t && (r += e.slice(t, n)), r += o, t = n + 1;\n        }\n        return n !== t && (r += e.slice(t, n)), r;\n    }\n    var l = function(e, t) {\n        return String(e).replace(/(\\n+)/g, \"$1\" + (t || \"\t\"));\n    }, f = function(e, t, n) {\n        return String(e).length > (t || 40) || !n && -1 !== String(e).indexOf(\"\\n\") || -1 !== String(e).indexOf(\"<\");\n    }, u = {}, p = /([A-Z])/g;\n    function c(e) {\n        var t = \"\";\n        for(var r in e){\n            var o = e[r];\n            null != o && \"\" !== o && (t && (t += \" \"), t += \"-\" == r[0] ? r : u[r] || (u[r] = r.replace(p, \"-$1\").toLowerCase()), t = \"number\" == typeof o && !1 === n.test(r) ? t + \": \" + o + \"px;\" : t + \": \" + o + \";\");\n        }\n        return t || void 0;\n    }\n    function _(e, t) {\n        return Array.isArray(t) ? t.reduce(_, e) : null != t && !1 !== t && e.push(t), e;\n    }\n    function d() {\n        this.__d = !0;\n    }\n    function v(e, t) {\n        return {\n            __v: e,\n            context: t,\n            props: e.props,\n            setState: d,\n            forceUpdate: d,\n            __d: !0,\n            __h: []\n        };\n    }\n    function g(e, t) {\n        var n = e.contextType, r = n && t[n.__c];\n        return null != n ? r ? r.props.value : n.__ : t;\n    }\n    var h = [];\n    function y(e, n, s, u, p, d) {\n        if (null == e || \"boolean\" == typeof e) return \"\";\n        if (\"object\" != typeof e) return \"function\" == typeof e ? \"\" : a(e);\n        var m = s.pretty, b = m && \"string\" == typeof m ? m : \"\t\";\n        if (Array.isArray(e)) {\n            for(var x = \"\", k = 0; k < e.length; k++)m && k > 0 && (x += \"\\n\"), x += y(e[k], n, s, u, p, d);\n            return x;\n        }\n        if (void 0 !== e.constructor) return \"\";\n        var S, w = e.type, C = e.props, O = !1;\n        if (\"function\" == typeof w) {\n            if (O = !0, !s.shallow || !u && !1 !== s.renderRootComponent) {\n                if (w === t.Fragment) {\n                    var j = [];\n                    return _(j, e.props.children), y(j, n, s, !1 !== s.shallowHighOrder, p, d);\n                }\n                var F, A = e.__c = v(e, n);\n                t.options.__b && t.options.__b(e);\n                var T = t.options.__r;\n                if (w.prototype && \"function\" == typeof w.prototype.render) {\n                    var H = g(w, n);\n                    (A = e.__c = new w(C, H)).__v = e, A._dirty = A.__d = !0, A.props = C, null == A.state && (A.state = {}), null == A._nextState && null == A.__s && (A._nextState = A.__s = A.state), A.context = H, w.getDerivedStateFromProps ? A.state = Object.assign({}, A.state, w.getDerivedStateFromProps(A.props, A.state)) : A.componentWillMount && (A.componentWillMount(), A.state = A._nextState !== A.state ? A._nextState : A.__s !== A.state ? A.__s : A.state), T && T(e), F = A.render(A.props, A.state, A.context);\n                } else for(var M = g(w, n), L = 0; A.__d && L++ < 25;)A.__d = !1, T && T(e), F = w.call(e.__c, C, M);\n                return A.getChildContext && (n = Object.assign({}, n, A.getChildContext())), t.options.diffed && t.options.diffed(e), y(F, n, s, !1 !== s.shallowHighOrder, p, d);\n            }\n            w = (S = w).displayName || S !== Function && S.name || function(e) {\n                var t = (Function.prototype.toString.call(e).match(/^\\s*function\\s+([^( ]+)/) || \"\")[1];\n                if (!t) {\n                    for(var n = -1, r = h.length; r--;)if (h[r] === e) {\n                        n = r;\n                        break;\n                    }\n                    n < 0 && (n = h.push(e) - 1), t = \"UnnamedComponent\" + n;\n                }\n                return t;\n            }(S);\n        }\n        var E, $, D = \"<\" + w;\n        if (C) {\n            var N = Object.keys(C);\n            s && !0 === s.sortAttributes && N.sort();\n            for(var P = 0; P < N.length; P++){\n                var R = N[P], W = C[R];\n                if (\"children\" !== R) {\n                    if (!o.test(R) && (s && s.allAttributes || \"key\" !== R && \"ref\" !== R && \"__self\" !== R && \"__source\" !== R)) {\n                        if (\"defaultValue\" === R) R = \"value\";\n                        else if (\"defaultChecked\" === R) R = \"checked\";\n                        else if (\"defaultSelected\" === R) R = \"selected\";\n                        else if (\"className\" === R) {\n                            if (void 0 !== C.class) continue;\n                            R = \"class\";\n                        } else p && i.test(R) && (R = R.toLowerCase().replace(/^xlink:?/, \"xlink:\"));\n                        if (\"htmlFor\" === R) {\n                            if (C.for) continue;\n                            R = \"for\";\n                        }\n                        \"style\" === R && W && \"object\" == typeof W && (W = c(W)), \"a\" === R[0] && \"r\" === R[1] && \"boolean\" == typeof W && (W = String(W));\n                        var q = s.attributeHook && s.attributeHook(R, W, n, s, O);\n                        if (q || \"\" === q) D += q;\n                        else if (\"dangerouslySetInnerHTML\" === R) $ = W && W.__html;\n                        else if (\"textarea\" === w && \"value\" === R) E = W;\n                        else if ((W || 0 === W || \"\" === W) && \"function\" != typeof W) {\n                            if (!(!0 !== W && \"\" !== W || (W = R, s && s.xml))) {\n                                D = D + \" \" + R;\n                                continue;\n                            }\n                            if (\"value\" === R) {\n                                if (\"select\" === w) {\n                                    d = W;\n                                    continue;\n                                }\n                                \"option\" === w && d == W && void 0 === C.selected && (D += \" selected\");\n                            }\n                            D = D + \" \" + R + '=\"' + a(W) + '\"';\n                        }\n                    }\n                } else E = W;\n            }\n        }\n        if (m) {\n            var I = D.replace(/\\n\\s*/, \" \");\n            I === D || ~I.indexOf(\"\\n\") ? m && ~D.indexOf(\"\\n\") && (D += \"\\n\") : D = I;\n        }\n        if (D += \">\", o.test(w)) throw new Error(w + \" is not a valid HTML tag name in \" + D);\n        var U, V = r.test(w) || s.voidElements && s.voidElements.test(w), z = [];\n        if ($) m && f($) && ($ = \"\\n\" + b + l($, b)), D += $;\n        else if (null != E && _(U = [], E).length) {\n            for(var Z = m && ~D.indexOf(\"\\n\"), B = !1, G = 0; G < U.length; G++){\n                var J = U[G];\n                if (null != J && !1 !== J) {\n                    var K = y(J, n, s, !0, \"svg\" === w || \"foreignObject\" !== w && p, d);\n                    if (m && !Z && f(K) && (Z = !0), K) if (m) {\n                        var Q = K.length > 0 && \"<\" != K[0];\n                        B && Q ? z[z.length - 1] += K : z.push(K), B = Q;\n                    } else z.push(K);\n                }\n            }\n            if (m && Z) for(var X = z.length; X--;)z[X] = \"\\n\" + b + l(z[X], b);\n        }\n        if (z.length || $) D += z.join(\"\");\n        else if (s && s.xml) return D.substring(0, D.length - 1) + \" />\";\n        return !V || U || $ ? (m && ~D.indexOf(\"\\n\") && (D += \"\\n\"), D = D + \"</\" + w + \">\") : D = D.replace(/>$/, \" />\"), D;\n    }\n    var m = {\n        shallow: !0\n    };\n    k.render = k;\n    var b = function(e, t) {\n        return k(e, t, m);\n    }, x = [];\n    function k(e, n, r) {\n        n = n || {};\n        var o = t.options.__s;\n        t.options.__s = !0;\n        var i, s = t.h(t.Fragment, null);\n        return s.__k = [\n            e\n        ], i = r && (r.pretty || r.voidElements || r.sortAttributes || r.shallow || r.allAttributes || r.xml || r.attributeHook) ? y(e, n, r) : F(e, n, !1, void 0, s), t.options.__c && t.options.__c(e, x), t.options.__s = o, x.length = 0, i;\n    }\n    function S(e) {\n        return null == e || \"boolean\" == typeof e ? null : \"string\" == typeof e || \"number\" == typeof e || \"bigint\" == typeof e ? t.h(null, null, e) : e;\n    }\n    function w(e, t) {\n        return \"className\" === e ? \"class\" : \"htmlFor\" === e ? \"for\" : \"defaultValue\" === e ? \"value\" : \"defaultChecked\" === e ? \"checked\" : \"defaultSelected\" === e ? \"selected\" : t && i.test(e) ? e.toLowerCase().replace(/^xlink:?/, \"xlink:\") : e;\n    }\n    function C(e, t) {\n        return \"style\" === e && null != t && \"object\" == typeof t ? c(t) : \"a\" === e[0] && \"r\" === e[1] && \"boolean\" == typeof t ? String(t) : t;\n    }\n    var O = Array.isArray, j = Object.assign;\n    function F(e, n, i, s, l) {\n        if (null == e || !0 === e || !1 === e || \"\" === e) return \"\";\n        if (\"object\" != typeof e) return \"function\" == typeof e ? \"\" : a(e);\n        if (O(e)) {\n            var f = \"\";\n            l.__k = e;\n            for(var u = 0; u < e.length; u++)f += F(e[u], n, i, s, l), e[u] = S(e[u]);\n            return f;\n        }\n        if (void 0 !== e.constructor) return \"\";\n        e.__ = l, t.options.__b && t.options.__b(e);\n        var p = e.type, c = e.props;\n        if (\"function\" == typeof p) {\n            var _;\n            if (p === t.Fragment) _ = c.children;\n            else {\n                _ = p.prototype && \"function\" == typeof p.prototype.render ? function(e, n) {\n                    var r = e.type, o = g(r, n), i = new r(e.props, o);\n                    e.__c = i, i.__v = e, i.__d = !0, i.props = e.props, null == i.state && (i.state = {}), null == i.__s && (i.__s = i.state), i.context = o, r.getDerivedStateFromProps ? i.state = j({}, i.state, r.getDerivedStateFromProps(i.props, i.state)) : i.componentWillMount && (i.componentWillMount(), i.state = i.__s !== i.state ? i.__s : i.state);\n                    var s = t.options.__r;\n                    return s && s(e), i.render(i.props, i.state, i.context);\n                }(e, n) : function(e, n) {\n                    var r, o = v(e, n), i = g(e.type, n);\n                    e.__c = o;\n                    for(var s = t.options.__r, a = 0; o.__d && a++ < 25;)o.__d = !1, s && s(e), r = e.type.call(o, e.props, i);\n                    return r;\n                }(e, n);\n                var d = e.__c;\n                d.getChildContext && (n = j({}, n, d.getChildContext()));\n            }\n            var h = F(_ = null != _ && _.type === t.Fragment && null == _.key ? _.props.children : _, n, i, s, e);\n            return t.options.diffed && t.options.diffed(e), e.__ = void 0, t.options.unmount && t.options.unmount(e), h;\n        }\n        var y, m, b = \"<\";\n        if (b += p, c) for(var x in y = c.children, c){\n            var k = c[x];\n            if (!(\"key\" === x || \"ref\" === x || \"__self\" === x || \"__source\" === x || \"children\" === x || \"className\" === x && \"class\" in c || \"htmlFor\" === x && \"for\" in c || o.test(x))) {\n                if (k = C(x = w(x, i), k), \"dangerouslySetInnerHTML\" === x) m = k && k.__html;\n                else if (\"textarea\" === p && \"value\" === x) y = k;\n                else if ((k || 0 === k || \"\" === k) && \"function\" != typeof k) {\n                    if (!0 === k || \"\" === k) {\n                        k = x, b = b + \" \" + x;\n                        continue;\n                    }\n                    if (\"value\" === x) {\n                        if (\"select\" === p) {\n                            s = k;\n                            continue;\n                        }\n                        \"option\" !== p || s != k || \"selected\" in c || (b += \" selected\");\n                    }\n                    b = b + \" \" + x + '=\"' + a(k) + '\"';\n                }\n            }\n        }\n        var A = b;\n        if (b += \">\", o.test(p)) throw new Error(p + \" is not a valid HTML tag name in \" + b);\n        var T = \"\", H = !1;\n        if (m) T += m, H = !0;\n        else if (\"string\" == typeof y) T += a(y), H = !0;\n        else if (O(y)) {\n            e.__k = y;\n            for(var M = 0; M < y.length; M++){\n                var L = y[M];\n                if (y[M] = S(L), null != L && !1 !== L) {\n                    var E = F(L, n, \"svg\" === p || \"foreignObject\" !== p && i, s, e);\n                    E && (T += E, H = !0);\n                }\n            }\n        } else if (null != y && !1 !== y && !0 !== y) {\n            e.__k = [\n                S(y)\n            ];\n            var $ = F(y, n, \"svg\" === p || \"foreignObject\" !== p && i, s, e);\n            $ && (T += $, H = !0);\n        }\n        if (t.options.diffed && t.options.diffed(e), e.__ = void 0, t.options.unmount && t.options.unmount(e), H) b += T;\n        else if (r.test(p)) return A + \" />\";\n        return b + \"</\" + p + \">\";\n    }\n    k.shallowRender = b, e.default = k, e.render = k, e.renderToStaticMarkup = k, e.renderToString = k, e.shallowRender = b;\n}); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/preact-render-to-string/dist/commonjs.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/preact-render-to-string/dist/index.js":
/*!************************************************************!*\
  !*** ./node_modules/preact-render-to-string/dist/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = __webpack_require__(/*! ./commonjs */ \"(sc_server)/./node_modules/preact-render-to-string/dist/commonjs.js\")[\"default\"];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvcHJlYWN0LXJlbmRlci10by1zdHJpbmcvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUFBLHdJQUE4Q0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL3ByZWFjdC1yZW5kZXItdG8tc3RyaW5nL2Rpc3QvaW5kZXguanM/YmM4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY29tbW9uanMnKS5kZWZhdWx0OyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/preact-render-to-string/dist/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/preact/dist/preact.js":
/*!********************************************!*\
  !*** ./node_modules/preact/dist/preact.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("var n, l, u, t, i, o, r, f, e, c = {}, s = [], p = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, a = Array.isArray;\nfunction v(n, l) {\n    for(var u in l)n[u] = l[u];\n    return n;\n}\nfunction h(n) {\n    var l = n.parentNode;\n    l && l.removeChild(n);\n}\nfunction y(l, u, t) {\n    var i, o, r, f = {};\n    for(r in u)\"key\" == r ? i = u[r] : \"ref\" == r ? o = u[r] : f[r] = u[r];\n    if (arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : t), \"function\" == typeof l && null != l.defaultProps) for(r in l.defaultProps)void 0 === f[r] && (f[r] = l.defaultProps[r]);\n    return d(l, f, i, o, null);\n}\nfunction d(n, t, i, o, r) {\n    var f = {\n        type: n,\n        props: t,\n        key: i,\n        ref: o,\n        __k: null,\n        __: null,\n        __b: 0,\n        __e: null,\n        __d: void 0,\n        __c: null,\n        __h: null,\n        constructor: void 0,\n        __v: null == r ? ++u : r\n    };\n    return null == r && null != l.vnode && l.vnode(f), f;\n}\nfunction _(n) {\n    return n.children;\n}\nfunction k(n, l) {\n    this.props = n, this.context = l;\n}\nfunction x(n, l) {\n    if (null == l) return n.__ ? x(n.__, n.__.__k.indexOf(n) + 1) : null;\n    for(var u; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) return u.__e;\n    return \"function\" == typeof n.type ? x(n) : null;\n}\nfunction b(n) {\n    var l, u;\n    if (null != (n = n.__) && null != n.__c) {\n        for(n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++)if (null != (u = n.__k[l]) && null != u.__e) {\n            n.__e = n.__c.base = u.__e;\n            break;\n        }\n        return b(n);\n    }\n}\nfunction g(n) {\n    (!n.__d && (n.__d = !0) && i.push(n) && !m.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || r)(m);\n}\nfunction m() {\n    var n, l, u, t, o, r, e, c;\n    for(i.sort(f); n = i.shift();)n.__d && (l = i.length, t = void 0, o = void 0, e = (r = (u = n).__v).__e, (c = u.__P) && (t = [], (o = v({}, r)).__v = r.__v + 1, j(c, r, o, u.__n, void 0 !== c.ownerSVGElement, null != r.__h ? [\n        e\n    ] : null, t, null == e ? x(r) : e, r.__h), z(t, r), r.__e != e && b(r)), i.length > l && i.sort(f));\n    m.__r = 0;\n}\nfunction w(n, l, u, t, i, o, r, f, e, p) {\n    var v, h, y, k, b, g, m, w = t && t.__k || s, $ = w.length;\n    for(u.__k = [], v = 0; v < l.length; v++)if (null != (k = u.__k[v] = null == (k = l[v]) || \"boolean\" == typeof k || \"function\" == typeof k ? null : \"string\" == typeof k || \"number\" == typeof k || \"bigint\" == typeof k ? d(null, k, null, null, k) : a(k) ? d(_, {\n        children: k\n    }, null, null, null) : k.__b > 0 ? d(k.type, k.props, k.key, k.ref ? k.ref : null, k.__v) : k)) {\n        if (k.__ = u, k.__b = u.__b + 1, null === (y = w[v]) || y && k.key == y.key && k.type === y.type) w[v] = void 0;\n        else for(h = 0; h < $; h++){\n            if ((y = w[h]) && k.key == y.key && k.type === y.type) {\n                w[h] = void 0;\n                break;\n            }\n            y = null;\n        }\n        j(n, k, y = y || c, i, o, r, f, e, p), b = k.__e, (h = k.ref) && y.ref != h && (m || (m = []), y.ref && m.push(y.ref, null, k), m.push(h, k.__c || b, k)), null != b ? (null == g && (g = b), \"function\" == typeof k.type && k.__k === y.__k ? k.__d = e = P(k, e, n) : e = C(n, k, y, w, b, e), \"function\" == typeof u.type && (u.__d = e)) : e && y.__e == e && e.parentNode != n && (e = x(y));\n    }\n    for(u.__e = g, v = $; v--;)null != w[v] && (\"function\" == typeof u.type && null != w[v].__e && w[v].__e == u.__d && (u.__d = S(t).nextSibling), N(w[v], w[v]));\n    if (m) for(v = 0; v < m.length; v++)M(m[v], m[++v], m[++v]);\n}\nfunction P(n, l, u) {\n    for(var t, i = n.__k, o = 0; i && o < i.length; o++)(t = i[o]) && (t.__ = n, l = \"function\" == typeof t.type ? P(t, l, u) : C(u, t, t, i, t.__e, l));\n    return l;\n}\nfunction C(n, l, u, t, i, o) {\n    var r, f, e;\n    if (void 0 !== l.__d) r = l.__d, l.__d = void 0;\n    else if (null == u || i != o || null == i.parentNode) n: if (null == o || o.parentNode !== n) n.appendChild(i), r = null;\n    else {\n        for(f = o, e = 0; (f = f.nextSibling) && e < t.length; e += 1)if (f == i) break n;\n        n.insertBefore(i, o), r = o;\n    }\n    return void 0 !== r ? r : i.nextSibling;\n}\nfunction S(n) {\n    var l, u, t;\n    if (null == n.type || \"string\" == typeof n.type) return n.__e;\n    if (n.__k) {\n        for(l = n.__k.length - 1; l >= 0; l--)if ((u = n.__k[l]) && (t = S(u))) return t;\n    }\n    return null;\n}\nfunction $(n, l, u, t, i) {\n    var o;\n    for(o in u)\"children\" === o || \"key\" === o || o in l || H(n, o, null, u[o], t);\n    for(o in l)i && \"function\" != typeof l[o] || \"children\" === o || \"key\" === o || \"value\" === o || \"checked\" === o || u[o] === l[o] || H(n, o, l[o], u[o], t);\n}\nfunction A(n, l, u) {\n    \"-\" === l[0] ? n.setProperty(l, null == u ? \"\" : u) : n[l] = null == u ? \"\" : \"number\" != typeof u || p.test(l) ? u : u + \"px\";\n}\nfunction H(n, l, u, t, i) {\n    var o;\n    n: if (\"style\" === l) if (\"string\" == typeof u) n.style.cssText = u;\n    else {\n        if (\"string\" == typeof t && (n.style.cssText = t = \"\"), t) for(l in t)u && l in u || A(n.style, l, \"\");\n        if (u) for(l in u)t && u[l] === t[l] || A(n.style, l, u[l]);\n    }\n    else if (\"o\" === l[0] && \"n\" === l[1]) o = l !== (l = l.replace(/Capture$/, \"\")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + o] = u, u ? t || n.addEventListener(l, o ? T : I, o) : n.removeEventListener(l, o ? T : I, o);\n    else if (\"dangerouslySetInnerHTML\" !== l) {\n        if (i) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");\n        else if (\"width\" !== l && \"height\" !== l && \"href\" !== l && \"list\" !== l && \"form\" !== l && \"tabIndex\" !== l && \"download\" !== l && \"rowSpan\" !== l && \"colSpan\" !== l && l in n) try {\n            n[l] = null == u ? \"\" : u;\n            break n;\n        } catch (n) {}\n        \"function\" == typeof u || (null == u || !1 === u && \"-\" !== l[4] ? n.removeAttribute(l) : n.setAttribute(l, u));\n    }\n}\nfunction I(n) {\n    return this.l[n.type + !1](l.event ? l.event(n) : n);\n}\nfunction T(n) {\n    return this.l[n.type + !0](l.event ? l.event(n) : n);\n}\nfunction j(n, u, t, i, o, r, f, e, c) {\n    var s, p, h, y, d, x, b, g, m, P, C, S, $, A, H, I = u.type;\n    if (void 0 !== u.constructor) return null;\n    null != t.__h && (c = t.__h, e = u.__e = t.__e, u.__h = null, r = [\n        e\n    ]), (s = l.__b) && s(u);\n    try {\n        n: if (\"function\" == typeof I) {\n            if (g = u.props, m = (s = I.contextType) && i[s.__c], P = s ? m ? m.props.value : s.__ : i, t.__c ? b = (p = u.__c = t.__c).__ = p.__E : (\"prototype\" in I && I.prototype.render ? u.__c = p = new I(g, P) : (u.__c = p = new k(g, P), p.constructor = I, p.render = O), m && m.sub(p), p.props = g, p.state || (p.state = {}), p.context = P, p.__n = i, h = p.__d = !0, p.__h = [], p._sb = []), null == p.__s && (p.__s = p.state), null != I.getDerivedStateFromProps && (p.__s == p.state && (p.__s = v({}, p.__s)), v(p.__s, I.getDerivedStateFromProps(g, p.__s))), y = p.props, d = p.state, p.__v = u, h) null == I.getDerivedStateFromProps && null != p.componentWillMount && p.componentWillMount(), null != p.componentDidMount && p.__h.push(p.componentDidMount);\n            else {\n                if (null == I.getDerivedStateFromProps && g !== y && null != p.componentWillReceiveProps && p.componentWillReceiveProps(g, P), !p.__e && null != p.shouldComponentUpdate && !1 === p.shouldComponentUpdate(g, p.__s, P) || u.__v === t.__v) {\n                    for(u.__v !== t.__v && (p.props = g, p.state = p.__s, p.__d = !1), p.__e = !1, u.__e = t.__e, u.__k = t.__k, u.__k.forEach(function(n) {\n                        n && (n.__ = u);\n                    }), C = 0; C < p._sb.length; C++)p.__h.push(p._sb[C]);\n                    p._sb = [], p.__h.length && f.push(p);\n                    break n;\n                }\n                null != p.componentWillUpdate && p.componentWillUpdate(g, p.__s, P), null != p.componentDidUpdate && p.__h.push(function() {\n                    p.componentDidUpdate(y, d, x);\n                });\n            }\n            if (p.context = P, p.props = g, p.__P = n, S = l.__r, $ = 0, \"prototype\" in I && I.prototype.render) {\n                for(p.state = p.__s, p.__d = !1, S && S(u), s = p.render(p.props, p.state, p.context), A = 0; A < p._sb.length; A++)p.__h.push(p._sb[A]);\n                p._sb = [];\n            } else do {\n                p.__d = !1, S && S(u), s = p.render(p.props, p.state, p.context), p.state = p.__s;\n            }while (p.__d && ++$ < 25);\n            p.state = p.__s, null != p.getChildContext && (i = v(v({}, i), p.getChildContext())), h || null == p.getSnapshotBeforeUpdate || (x = p.getSnapshotBeforeUpdate(y, d)), w(n, a(H = null != s && s.type === _ && null == s.key ? s.props.children : s) ? H : [\n                H\n            ], u, t, i, o, r, f, e, c), p.base = u.__e, u.__h = null, p.__h.length && f.push(p), b && (p.__E = p.__ = null), p.__e = !1;\n        } else null == r && u.__v === t.__v ? (u.__k = t.__k, u.__e = t.__e) : u.__e = L(t.__e, u, t, i, o, r, f, c);\n        (s = l.diffed) && s(u);\n    } catch (n) {\n        u.__v = null, (c || null != r) && (u.__e = e, u.__h = !!c, r[r.indexOf(e)] = null), l.__e(n, u, t);\n    }\n}\nfunction z(n, u) {\n    l.__c && l.__c(u, n), n.some(function(u) {\n        try {\n            n = u.__h, u.__h = [], n.some(function(n) {\n                n.call(u);\n            });\n        } catch (n) {\n            l.__e(n, u.__v);\n        }\n    });\n}\nfunction L(l, u, t, i, o, r, f, e) {\n    var s, p, v, y = t.props, d = u.props, _ = u.type, k = 0;\n    if (\"svg\" === _ && (o = !0), null != r) {\n        for(; k < r.length; k++)if ((s = r[k]) && \"setAttribute\" in s == !!_ && (_ ? s.localName === _ : 3 === s.nodeType)) {\n            l = s, r[k] = null;\n            break;\n        }\n    }\n    if (null == l) {\n        if (null === _) return document.createTextNode(d);\n        l = o ? document.createElementNS(\"http://www.w3.org/2000/svg\", _) : document.createElement(_, d.is && d), r = null, e = !1;\n    }\n    if (null === _) y === d || e && l.data === d || (l.data = d);\n    else {\n        if (r = r && n.call(l.childNodes), p = (y = t.props || c).dangerouslySetInnerHTML, v = d.dangerouslySetInnerHTML, !e) {\n            if (null != r) for(y = {}, k = 0; k < l.attributes.length; k++)y[l.attributes[k].name] = l.attributes[k].value;\n            (v || p) && (v && (p && v.__html == p.__html || v.__html === l.innerHTML) || (l.innerHTML = v && v.__html || \"\"));\n        }\n        if ($(l, d, y, o, e), v) u.__k = [];\n        else if (w(l, a(k = u.props.children) ? k : [\n            k\n        ], u, t, i, o && \"foreignObject\" !== _, r, f, r ? r[0] : t.__k && x(t, 0), e), null != r) for(k = r.length; k--;)null != r[k] && h(r[k]);\n        e || (\"value\" in d && void 0 !== (k = d.value) && (k !== l.value || \"progress\" === _ && !k || \"option\" === _ && k !== y.value) && H(l, \"value\", k, y.value, !1), \"checked\" in d && void 0 !== (k = d.checked) && k !== l.checked && H(l, \"checked\", k, y.checked, !1));\n    }\n    return l;\n}\nfunction M(n, u, t) {\n    try {\n        \"function\" == typeof n ? n(u) : n.current = u;\n    } catch (n) {\n        l.__e(n, t);\n    }\n}\nfunction N(n, u, t) {\n    var i, o;\n    if (l.unmount && l.unmount(n), (i = n.ref) && (i.current && i.current !== n.__e || M(i, null, u)), null != (i = n.__c)) {\n        if (i.componentWillUnmount) try {\n            i.componentWillUnmount();\n        } catch (n) {\n            l.__e(n, u);\n        }\n        i.base = i.__P = null, n.__c = void 0;\n    }\n    if (i = n.__k) for(o = 0; o < i.length; o++)i[o] && N(i[o], u, t || \"function\" != typeof n.type);\n    t || null == n.__e || h(n.__e), n.__ = n.__e = n.__d = void 0;\n}\nfunction O(n, l, u) {\n    return this.constructor(n, u);\n}\nfunction q(u, t, i) {\n    var o, r, f;\n    l.__ && l.__(u, t), r = (o = \"function\" == typeof i) ? null : i && i.__k || t.__k, f = [], j(t, u = (!o && i || t).__k = y(_, null, [\n        u\n    ]), r || c, c, void 0 !== t.ownerSVGElement, !o && i ? [\n        i\n    ] : r ? null : t.firstChild ? n.call(t.childNodes) : null, f, !o && i ? i : r ? r.__e : t.firstChild, o), z(f, u);\n}\nn = s.slice, l = {\n    __e: function(n, l, u, t) {\n        for(var i, o, r; l = l.__;)if ((i = l.__c) && !i.__) try {\n            if ((o = i.constructor) && null != o.getDerivedStateFromError && (i.setState(o.getDerivedStateFromError(n)), r = i.__d), null != i.componentDidCatch && (i.componentDidCatch(n, t || {}), r = i.__d), r) return i.__E = i;\n        } catch (l) {\n            n = l;\n        }\n        throw n;\n    }\n}, u = 0, t = function(n) {\n    return null != n && void 0 === n.constructor;\n}, k.prototype.setState = function(n, l) {\n    var u;\n    u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = v({}, this.state), \"function\" == typeof n && (n = n(v({}, u), this.props)), n && v(u, n), null != n && this.__v && (l && this._sb.push(l), g(this));\n}, k.prototype.forceUpdate = function(n) {\n    this.__v && (this.__e = !0, n && this.__h.push(n), g(this));\n}, k.prototype.render = _, i = [], r = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, f = function(n, l) {\n    return n.__v.__b - l.__v.__b;\n}, m.__r = 0, e = 0, exports.Component = k, exports.Fragment = _, exports.cloneElement = function(l, u, t) {\n    var i, o, r, f, e = v({}, l.props);\n    for(r in l.type && l.type.defaultProps && (f = l.type.defaultProps), u)\"key\" == r ? i = u[r] : \"ref\" == r ? o = u[r] : e[r] = void 0 === u[r] && void 0 !== f ? f[r] : u[r];\n    return arguments.length > 2 && (e.children = arguments.length > 3 ? n.call(arguments, 2) : t), d(l.type, e, i || l.key, o || l.ref, null);\n}, exports.createContext = function(n, l) {\n    var u = {\n        __c: l = \"__cC\" + e++,\n        __: n,\n        Consumer: function(n, l) {\n            return n.children(l);\n        },\n        Provider: function(n) {\n            var u, t;\n            return this.getChildContext || (u = [], (t = {})[l] = this, this.getChildContext = function() {\n                return t;\n            }, this.shouldComponentUpdate = function(n) {\n                this.props.value !== n.value && u.some(function(n) {\n                    n.__e = !0, g(n);\n                });\n            }, this.sub = function(n) {\n                u.push(n);\n                var l = n.componentWillUnmount;\n                n.componentWillUnmount = function() {\n                    u.splice(u.indexOf(n), 1), l && l.call(n);\n                };\n            }), n.children;\n        }\n    };\n    return u.Provider.__ = u.Consumer.contextType = u;\n}, exports.createElement = y, exports.createRef = function() {\n    return {\n        current: null\n    };\n}, exports.h = y, exports.hydrate = function n(l, u) {\n    q(l, u, n);\n}, exports.isValidElement = t, exports.options = l, exports.render = q, exports.toChildArray = function n(l, u) {\n    return u = u || [], null == l || \"boolean\" == typeof l || (a(l) ? l.some(function(l) {\n        n(l, u);\n    }) : u.push(l)), u;\n}; //# sourceMappingURL=preact.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/preact/dist/preact.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n        }\n        var React = __webpack_require__(/*! react */ \"(sc_server)/./node_modules/next/dist/compiled/react/react.shared-subset.js\");\n        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        /**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */ function is(x, y) {\n            return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n            ;\n        }\n        var objectIs = typeof Object.is === \"function\" ? Object.is : is;\n        // dispatch for CommonJS interop named imports.\n        var useState = React.useState, useEffect = React.useEffect, useLayoutEffect = React.useLayoutEffect, useDebugValue = React.useDebugValue;\n        var didWarnOld18Alpha = false;\n        var didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n        // because of a very particular set of implementation details and assumptions\n        // -- change any one of them and it will break. The most important assumption\n        // is that updates are always synchronous, because concurrent rendering is\n        // only available in versions of React that also have a built-in\n        // useSyncExternalStore API. And we only use this shim when the built-in API\n        // does not exist.\n        //\n        // Do not assume that the clever hacks used by this hook also work in general.\n        // The point of this shim is to replace the need for hacks by other libraries.\n        function useSyncExternalStore(subscribe, getSnapshot, // React do not expose a way to check if we're hydrating. So users of the shim\n        // will need to track that themselves and return the correct value\n        // from `getSnapshot`.\n        getServerSnapshot) {\n            {\n                if (!didWarnOld18Alpha) {\n                    if (React.startTransition !== undefined) {\n                        didWarnOld18Alpha = true;\n                        error(\"You are using an outdated, pre-release alpha of React 18 that \" + \"does not support useSyncExternalStore. The \" + \"use-sync-external-store shim will not work correctly. Upgrade \" + \"to a newer pre-release.\");\n                    }\n                }\n            }\n            // breaks the rules of React, and only works here because of specific\n            // implementation details, most importantly that updates are\n            // always synchronous.\n            var value = getSnapshot();\n            {\n                if (!didWarnUncachedGetSnapshot) {\n                    var cachedValue = getSnapshot();\n                    if (!objectIs(value, cachedValue)) {\n                        error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n                        didWarnUncachedGetSnapshot = true;\n                    }\n                }\n            }\n            // re-render whenever the subscribed state changes by updating an some\n            // arbitrary useState hook. Then, during render, we call getSnapshot to read\n            // the current value.\n            //\n            // Because we don't actually use the state returned by the useState hook, we\n            // can save a bit of memory by storing other stuff in that slot.\n            //\n            // To implement the early bailout, we need to track some things on a mutable\n            // object. Usually, we would put that in a useRef hook, but we can stash it in\n            // our useState hook instead.\n            //\n            // To force a re-render, we call forceUpdate({inst}). That works because the\n            // new object always fails an equality check.\n            var _useState = useState({\n                inst: {\n                    value: value,\n                    getSnapshot: getSnapshot\n                }\n            }), inst = _useState[0].inst, forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n            // in the layout phase so we can access it during the tearing check that\n            // happens on subscribe.\n            useLayoutEffect(function() {\n                inst.value = value;\n                inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n                // commit phase if there was an interleaved mutation. In concurrent mode\n                // this can happen all the time, but even in synchronous mode, an earlier\n                // effect may have mutated the store.\n                if (checkIfSnapshotChanged(inst)) {\n                    // Force a re-render.\n                    forceUpdate({\n                        inst: inst\n                    });\n                }\n            }, [\n                subscribe,\n                value,\n                getSnapshot\n            ]);\n            useEffect(function() {\n                // Check for changes right before subscribing. Subsequent changes will be\n                // detected in the subscription handler.\n                if (checkIfSnapshotChanged(inst)) {\n                    // Force a re-render.\n                    forceUpdate({\n                        inst: inst\n                    });\n                }\n                var handleStoreChange = function() {\n                    // TODO: Because there is no cross-renderer API for batching updates, it's\n                    // up to the consumer of this library to wrap their subscription event\n                    // with unstable_batchedUpdates. Should we try to detect when this isn't\n                    // the case and print a warning in development?\n                    // The store changed. Check if the snapshot changed since the last time we\n                    // read from the store.\n                    if (checkIfSnapshotChanged(inst)) {\n                        // Force a re-render.\n                        forceUpdate({\n                            inst: inst\n                        });\n                    }\n                }; // Subscribe to the store and return a clean-up function.\n                return subscribe(handleStoreChange);\n            }, [\n                subscribe\n            ]);\n            useDebugValue(value);\n            return value;\n        }\n        function checkIfSnapshotChanged(inst) {\n            var latestGetSnapshot = inst.getSnapshot;\n            var prevValue = inst.value;\n            try {\n                var nextValue = latestGetSnapshot();\n                return !objectIs(prevValue, nextValue);\n            } catch (error) {\n                return true;\n            }\n        }\n        function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n            // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n            // React do not expose a way to check if we're hydrating. So users of the shim\n            // will need to track that themselves and return the correct value\n            // from `getSnapshot`.\n            return getSnapshot();\n        }\n        var canUseDOM = !!( false && 0);\n        var isServerEnvironment = !canUseDOM;\n        var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\n        var useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n        exports.useSyncExternalStore = useSyncExternalStore$2;\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n        }\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/**\n * @license React\n * use-sync-external-store-shim/with-selector.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n        }\n        var React = __webpack_require__(/*! react */ \"(sc_server)/./node_modules/next/dist/compiled/react/react.shared-subset.js\");\n        var shim = __webpack_require__(/*! use-sync-external-store/shim */ \"(sc_server)/./node_modules/use-sync-external-store/shim/index.js\");\n        /**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */ function is(x, y) {\n            return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n            ;\n        }\n        var objectIs = typeof Object.is === \"function\" ? Object.is : is;\n        var useSyncExternalStore = shim.useSyncExternalStore;\n        // for CommonJS interop.\n        var useRef = React.useRef, useEffect = React.useEffect, useMemo = React.useMemo, useDebugValue = React.useDebugValue; // Same as useSyncExternalStore, but supports selector and isEqual arguments.\n        function useSyncExternalStoreWithSelector(subscribe, getSnapshot, getServerSnapshot, selector, isEqual) {\n            // Use this to track the rendered snapshot.\n            var instRef = useRef(null);\n            var inst;\n            if (instRef.current === null) {\n                inst = {\n                    hasValue: false,\n                    value: null\n                };\n                instRef.current = inst;\n            } else {\n                inst = instRef.current;\n            }\n            var _useMemo = useMemo(function() {\n                // Track the memoized state using closure variables that are local to this\n                // memoized instance of a getSnapshot function. Intentionally not using a\n                // useRef hook, because that state would be shared across all concurrent\n                // copies of the hook/component.\n                var hasMemo = false;\n                var memoizedSnapshot;\n                var memoizedSelection;\n                var memoizedSelector = function(nextSnapshot) {\n                    if (!hasMemo) {\n                        // The first time the hook is called, there is no memoized result.\n                        hasMemo = true;\n                        memoizedSnapshot = nextSnapshot;\n                        var _nextSelection = selector(nextSnapshot);\n                        if (isEqual !== undefined) {\n                            // Even if the selector has changed, the currently rendered selection\n                            // may be equal to the new selection. We should attempt to reuse the\n                            // current value if possible, to preserve downstream memoizations.\n                            if (inst.hasValue) {\n                                var currentSelection = inst.value;\n                                if (isEqual(currentSelection, _nextSelection)) {\n                                    memoizedSelection = currentSelection;\n                                    return currentSelection;\n                                }\n                            }\n                        }\n                        memoizedSelection = _nextSelection;\n                        return _nextSelection;\n                    } // We may be able to reuse the previous invocation's result.\n                    // We may be able to reuse the previous invocation's result.\n                    var prevSnapshot = memoizedSnapshot;\n                    var prevSelection = memoizedSelection;\n                    if (objectIs(prevSnapshot, nextSnapshot)) {\n                        // The snapshot is the same as last time. Reuse the previous selection.\n                        return prevSelection;\n                    } // The snapshot has changed, so we need to compute a new selection.\n                    // The snapshot has changed, so we need to compute a new selection.\n                    var nextSelection = selector(nextSnapshot); // If a custom isEqual function is provided, use that to check if the data\n                    // has changed. If it hasn't, return the previous selection. That signals\n                    // to React that the selections are conceptually equal, and we can bail\n                    // out of rendering.\n                    // If a custom isEqual function is provided, use that to check if the data\n                    // has changed. If it hasn't, return the previous selection. That signals\n                    // to React that the selections are conceptually equal, and we can bail\n                    // out of rendering.\n                    if (isEqual !== undefined && isEqual(prevSelection, nextSelection)) {\n                        return prevSelection;\n                    }\n                    memoizedSnapshot = nextSnapshot;\n                    memoizedSelection = nextSelection;\n                    return nextSelection;\n                }; // Assigning this to a constant so that Flow knows it can't change.\n                // Assigning this to a constant so that Flow knows it can't change.\n                var maybeGetServerSnapshot = getServerSnapshot === undefined ? null : getServerSnapshot;\n                var getSnapshotWithSelector = function() {\n                    return memoizedSelector(getSnapshot());\n                };\n                var getServerSnapshotWithSelector = maybeGetServerSnapshot === null ? undefined : function() {\n                    return memoizedSelector(maybeGetServerSnapshot());\n                };\n                return [\n                    getSnapshotWithSelector,\n                    getServerSnapshotWithSelector\n                ];\n            }, [\n                getSnapshot,\n                getServerSnapshot,\n                selector,\n                isEqual\n            ]), getSelection = _useMemo[0], getServerSelection = _useMemo[1];\n            var value = useSyncExternalStore(subscribe, getSelection, getServerSelection);\n            useEffect(function() {\n                inst.hasValue = true;\n                inst.value = value;\n            }, [\n                value\n            ]);\n            useDebugValue(value);\n            return value;\n        }\n        exports.useSyncExternalStoreWithSelector = useSyncExternalStoreWithSelector;\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n        }\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0vd2l0aC1zZWxlY3Rvci5kZXZlbG9wbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Q0FRQyxHQUVEO0FBRUEsSUFBSUEsSUFBcUMsRUFBRTtJQUN4QztRQUVPO1FBRVYseUNBQXlDLEdBQ3pDLElBQ0UsT0FBT0MsbUNBQW1DLGVBQzFDLE9BQU9BLCtCQUErQkMsZ0NBQ3BDLFlBQ0Y7WUFDQUQsK0JBQStCQyw0QkFBNEIsSUFBSUM7UUFDakU7UUFDVSxJQUFJQyxRQUFRQyxtQkFBT0EsQ0FBQztRQUM5QixJQUFJQyxPQUFPRCxtQkFBT0EsQ0FBQztRQUVuQjs7O0NBR0MsR0FDRCxTQUFTRSxHQUFHQyxDQUFDLEVBQUVDLENBQUM7WUFDZCxPQUFPRCxNQUFNQyxLQUFNRCxDQUFBQSxNQUFNLEtBQUssSUFBSUEsTUFBTSxJQUFJQyxDQUFBQSxLQUFNRCxNQUFNQSxLQUFLQyxNQUFNQSxFQUFFLHNDQUFzQzs7UUFFN0c7UUFFQSxJQUFJQyxXQUFXLE9BQU9DLE9BQU9KLE9BQU8sYUFBYUksT0FBT0osS0FBS0E7UUFFN0QsSUFBSUssdUJBQXVCTixLQUFLTTtRQUVoQyx3QkFBd0I7UUFFeEIsSUFBSUMsU0FBU1QsTUFBTVMsUUFDZkMsWUFBWVYsTUFBTVUsV0FDbEJDLFVBQVVYLE1BQU1XLFNBQ2hCQyxnQkFBZ0JaLE1BQU1ZLGVBQWUsNkVBQTZFO1FBRXRILFNBQVNDLGlDQUFpQ0MsU0FBUyxFQUFFQyxXQUFXLEVBQUVDLGlCQUFpQixFQUFFQyxRQUFRLEVBQUVDLE9BQU87WUFDcEcsMkNBQTJDO1lBQzNDLElBQUlDLFVBQVVWLE9BQU87WUFDckIsSUFBSVc7WUFFSixJQUFJRCxRQUFRRSxZQUFZLE1BQU07Z0JBQzVCRCxPQUFPO29CQUNMRSxVQUFVO29CQUNWQyxPQUFPO2dCQUNUO2dCQUNBSixRQUFRRSxVQUFVRDtZQUNwQixPQUFPO2dCQUNMQSxPQUFPRCxRQUFRRTtZQUNqQjtZQUVBLElBQUlHLFdBQVdiLFFBQVE7Z0JBQ3JCLDBFQUEwRTtnQkFDMUUseUVBQXlFO2dCQUN6RSx3RUFBd0U7Z0JBQ3hFLGdDQUFnQztnQkFDaEMsSUFBSWMsVUFBVTtnQkFDZCxJQUFJQztnQkFDSixJQUFJQztnQkFFSixJQUFJQyxtQkFBbUIsU0FBVUMsWUFBWTtvQkFDM0MsSUFBSSxDQUFDSixTQUFTO3dCQUNaLGtFQUFrRTt3QkFDbEVBLFVBQVU7d0JBQ1ZDLG1CQUFtQkc7d0JBRW5CLElBQUlDLGlCQUFpQmIsU0FBU1k7d0JBRTlCLElBQUlYLFlBQVlhLFdBQVc7NEJBQ3pCLHFFQUFxRTs0QkFDckUsb0VBQW9FOzRCQUNwRSxrRUFBa0U7NEJBQ2xFLElBQUlYLEtBQUtFLFVBQVU7Z0NBQ2pCLElBQUlVLG1CQUFtQlosS0FBS0c7Z0NBRTVCLElBQUlMLFFBQVFjLGtCQUFrQkYsaUJBQWlCO29DQUM3Q0gsb0JBQW9CSztvQ0FDcEIsT0FBT0E7Z0NBQ1Q7NEJBQ0Y7d0JBQ0Y7d0JBRUFMLG9CQUFvQkc7d0JBQ3BCLE9BQU9BO29CQUNULEVBQUUsNERBQTREO29CQUc5RCw0REFBNEQ7b0JBQzVELElBQUlHLGVBQWVQO29CQUNuQixJQUFJUSxnQkFBZ0JQO29CQUVwQixJQUFJckIsU0FBUzJCLGNBQWNKLGVBQWU7d0JBQ3hDLHVFQUF1RTt3QkFDdkUsT0FBT0s7b0JBQ1QsRUFBRSxtRUFBbUU7b0JBR3JFLG1FQUFtRTtvQkFDbkUsSUFBSUMsZ0JBQWdCbEIsU0FBU1ksZUFBZSwwRUFBMEU7b0JBQ3RILHlFQUF5RTtvQkFDekUsdUVBQXVFO29CQUN2RSxvQkFBb0I7b0JBRXBCLDBFQUEwRTtvQkFDMUUseUVBQXlFO29CQUN6RSx1RUFBdUU7b0JBQ3ZFLG9CQUFvQjtvQkFDcEIsSUFBSVgsWUFBWWEsYUFBYWIsUUFBUWdCLGVBQWVDLGdCQUFnQjt3QkFDbEUsT0FBT0Q7b0JBQ1Q7b0JBRUFSLG1CQUFtQkc7b0JBQ25CRixvQkFBb0JRO29CQUNwQixPQUFPQTtnQkFDVCxHQUFHLG1FQUFtRTtnQkFHdEUsbUVBQW1FO2dCQUNuRSxJQUFJQyx5QkFBeUJwQixzQkFBc0JlLFlBQVksT0FBT2Y7Z0JBRXRFLElBQUlxQiwwQkFBMEI7b0JBQzVCLE9BQU9ULGlCQUFpQmI7Z0JBQzFCO2dCQUVBLElBQUl1QixnQ0FBZ0NGLDJCQUEyQixPQUFPTCxZQUFZO29CQUNoRixPQUFPSCxpQkFBaUJRO2dCQUMxQjtnQkFDQSxPQUFPO29CQUFDQztvQkFBeUJDO2lCQUE4QjtZQUNqRSxHQUFHO2dCQUFDdkI7Z0JBQWFDO2dCQUFtQkM7Z0JBQVVDO2FBQVEsR0FDbERxQixlQUFlZixRQUFRLENBQUMsRUFBRSxFQUMxQmdCLHFCQUFxQmhCLFFBQVEsQ0FBQyxFQUFFO1lBRXBDLElBQUlELFFBQVFmLHFCQUFxQk0sV0FBV3lCLGNBQWNDO1lBQzFEOUIsVUFBVTtnQkFDUlUsS0FBS0UsV0FBVztnQkFDaEJGLEtBQUtHLFFBQVFBO1lBQ2YsR0FBRztnQkFBQ0E7YUFBTTtZQUNWWCxjQUFjVztZQUNkLE9BQU9BO1FBQ1Q7UUFFQWtCLHdDQUF3QzVCLEdBQUdBO1FBQ2pDLHlDQUF5QyxHQUNuRCxJQUNFLE9BQU9oQixtQ0FBbUMsZUFDMUMsT0FBT0EsK0JBQStCNkMsK0JBQ3BDLFlBQ0Y7WUFDQTdDLCtCQUErQjZDLDJCQUEyQixJQUFJM0M7UUFDaEU7SUFFRTtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9janMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLmRldmVsb3BtZW50LmpzPzc1YTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZSBSZWFjdFxuICogdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUtc2hpbS93aXRoLXNlbGVjdG9yLmRldmVsb3BtZW50LmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gIChmdW5jdGlvbigpIHtcblxuICAgICAgICAgICd1c2Ugc3RyaWN0JztcblxuLyogZ2xvYmFsIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyAqL1xuaWYgKFxuICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICE9PSAndW5kZWZpbmVkJyAmJlxuICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLnJlZ2lzdGVySW50ZXJuYWxNb2R1bGVTdGFydCA9PT1cbiAgICAnZnVuY3Rpb24nXG4pIHtcbiAgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fLnJlZ2lzdGVySW50ZXJuYWxNb2R1bGVTdGFydChuZXcgRXJyb3IoKSk7XG59XG4gICAgICAgICAgdmFyIFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbnZhciBzaGltID0gcmVxdWlyZSgndXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbScpO1xuXG4vKipcbiAqIGlubGluZWQgT2JqZWN0LmlzIHBvbHlmaWxsIHRvIGF2b2lkIHJlcXVpcmluZyBjb25zdW1lcnMgc2hpcCB0aGVpciBvd25cbiAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9pc1xuICovXG5mdW5jdGlvbiBpcyh4LCB5KSB7XG4gIHJldHVybiB4ID09PSB5ICYmICh4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geSkgfHwgeCAhPT0geCAmJiB5ICE9PSB5IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gIDtcbn1cblxudmFyIG9iamVjdElzID0gdHlwZW9mIE9iamVjdC5pcyA9PT0gJ2Z1bmN0aW9uJyA/IE9iamVjdC5pcyA6IGlzO1xuXG52YXIgdXNlU3luY0V4dGVybmFsU3RvcmUgPSBzaGltLnVzZVN5bmNFeHRlcm5hbFN0b3JlO1xuXG4vLyBmb3IgQ29tbW9uSlMgaW50ZXJvcC5cblxudmFyIHVzZVJlZiA9IFJlYWN0LnVzZVJlZixcbiAgICB1c2VFZmZlY3QgPSBSZWFjdC51c2VFZmZlY3QsXG4gICAgdXNlTWVtbyA9IFJlYWN0LnVzZU1lbW8sXG4gICAgdXNlRGVidWdWYWx1ZSA9IFJlYWN0LnVzZURlYnVnVmFsdWU7IC8vIFNhbWUgYXMgdXNlU3luY0V4dGVybmFsU3RvcmUsIGJ1dCBzdXBwb3J0cyBzZWxlY3RvciBhbmQgaXNFcXVhbCBhcmd1bWVudHMuXG5cbmZ1bmN0aW9uIHVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yKHN1YnNjcmliZSwgZ2V0U25hcHNob3QsIGdldFNlcnZlclNuYXBzaG90LCBzZWxlY3RvciwgaXNFcXVhbCkge1xuICAvLyBVc2UgdGhpcyB0byB0cmFjayB0aGUgcmVuZGVyZWQgc25hcHNob3QuXG4gIHZhciBpbnN0UmVmID0gdXNlUmVmKG51bGwpO1xuICB2YXIgaW5zdDtcblxuICBpZiAoaW5zdFJlZi5jdXJyZW50ID09PSBudWxsKSB7XG4gICAgaW5zdCA9IHtcbiAgICAgIGhhc1ZhbHVlOiBmYWxzZSxcbiAgICAgIHZhbHVlOiBudWxsXG4gICAgfTtcbiAgICBpbnN0UmVmLmN1cnJlbnQgPSBpbnN0O1xuICB9IGVsc2Uge1xuICAgIGluc3QgPSBpbnN0UmVmLmN1cnJlbnQ7XG4gIH1cblxuICB2YXIgX3VzZU1lbW8gPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBUcmFjayB0aGUgbWVtb2l6ZWQgc3RhdGUgdXNpbmcgY2xvc3VyZSB2YXJpYWJsZXMgdGhhdCBhcmUgbG9jYWwgdG8gdGhpc1xuICAgIC8vIG1lbW9pemVkIGluc3RhbmNlIG9mIGEgZ2V0U25hcHNob3QgZnVuY3Rpb24uIEludGVudGlvbmFsbHkgbm90IHVzaW5nIGFcbiAgICAvLyB1c2VSZWYgaG9vaywgYmVjYXVzZSB0aGF0IHN0YXRlIHdvdWxkIGJlIHNoYXJlZCBhY3Jvc3MgYWxsIGNvbmN1cnJlbnRcbiAgICAvLyBjb3BpZXMgb2YgdGhlIGhvb2svY29tcG9uZW50LlxuICAgIHZhciBoYXNNZW1vID0gZmFsc2U7XG4gICAgdmFyIG1lbW9pemVkU25hcHNob3Q7XG4gICAgdmFyIG1lbW9pemVkU2VsZWN0aW9uO1xuXG4gICAgdmFyIG1lbW9pemVkU2VsZWN0b3IgPSBmdW5jdGlvbiAobmV4dFNuYXBzaG90KSB7XG4gICAgICBpZiAoIWhhc01lbW8pIHtcbiAgICAgICAgLy8gVGhlIGZpcnN0IHRpbWUgdGhlIGhvb2sgaXMgY2FsbGVkLCB0aGVyZSBpcyBubyBtZW1vaXplZCByZXN1bHQuXG4gICAgICAgIGhhc01lbW8gPSB0cnVlO1xuICAgICAgICBtZW1vaXplZFNuYXBzaG90ID0gbmV4dFNuYXBzaG90O1xuXG4gICAgICAgIHZhciBfbmV4dFNlbGVjdGlvbiA9IHNlbGVjdG9yKG5leHRTbmFwc2hvdCk7XG5cbiAgICAgICAgaWYgKGlzRXF1YWwgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIC8vIEV2ZW4gaWYgdGhlIHNlbGVjdG9yIGhhcyBjaGFuZ2VkLCB0aGUgY3VycmVudGx5IHJlbmRlcmVkIHNlbGVjdGlvblxuICAgICAgICAgIC8vIG1heSBiZSBlcXVhbCB0byB0aGUgbmV3IHNlbGVjdGlvbi4gV2Ugc2hvdWxkIGF0dGVtcHQgdG8gcmV1c2UgdGhlXG4gICAgICAgICAgLy8gY3VycmVudCB2YWx1ZSBpZiBwb3NzaWJsZSwgdG8gcHJlc2VydmUgZG93bnN0cmVhbSBtZW1vaXphdGlvbnMuXG4gICAgICAgICAgaWYgKGluc3QuaGFzVmFsdWUpIHtcbiAgICAgICAgICAgIHZhciBjdXJyZW50U2VsZWN0aW9uID0gaW5zdC52YWx1ZTtcblxuICAgICAgICAgICAgaWYgKGlzRXF1YWwoY3VycmVudFNlbGVjdGlvbiwgX25leHRTZWxlY3Rpb24pKSB7XG4gICAgICAgICAgICAgIG1lbW9pemVkU2VsZWN0aW9uID0gY3VycmVudFNlbGVjdGlvbjtcbiAgICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRTZWxlY3Rpb247XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgbWVtb2l6ZWRTZWxlY3Rpb24gPSBfbmV4dFNlbGVjdGlvbjtcbiAgICAgICAgcmV0dXJuIF9uZXh0U2VsZWN0aW9uO1xuICAgICAgfSAvLyBXZSBtYXkgYmUgYWJsZSB0byByZXVzZSB0aGUgcHJldmlvdXMgaW52b2NhdGlvbidzIHJlc3VsdC5cblxuXG4gICAgICAvLyBXZSBtYXkgYmUgYWJsZSB0byByZXVzZSB0aGUgcHJldmlvdXMgaW52b2NhdGlvbidzIHJlc3VsdC5cbiAgICAgIHZhciBwcmV2U25hcHNob3QgPSBtZW1vaXplZFNuYXBzaG90O1xuICAgICAgdmFyIHByZXZTZWxlY3Rpb24gPSBtZW1vaXplZFNlbGVjdGlvbjtcblxuICAgICAgaWYgKG9iamVjdElzKHByZXZTbmFwc2hvdCwgbmV4dFNuYXBzaG90KSkge1xuICAgICAgICAvLyBUaGUgc25hcHNob3QgaXMgdGhlIHNhbWUgYXMgbGFzdCB0aW1lLiBSZXVzZSB0aGUgcHJldmlvdXMgc2VsZWN0aW9uLlxuICAgICAgICByZXR1cm4gcHJldlNlbGVjdGlvbjtcbiAgICAgIH0gLy8gVGhlIHNuYXBzaG90IGhhcyBjaGFuZ2VkLCBzbyB3ZSBuZWVkIHRvIGNvbXB1dGUgYSBuZXcgc2VsZWN0aW9uLlxuXG5cbiAgICAgIC8vIFRoZSBzbmFwc2hvdCBoYXMgY2hhbmdlZCwgc28gd2UgbmVlZCB0byBjb21wdXRlIGEgbmV3IHNlbGVjdGlvbi5cbiAgICAgIHZhciBuZXh0U2VsZWN0aW9uID0gc2VsZWN0b3IobmV4dFNuYXBzaG90KTsgLy8gSWYgYSBjdXN0b20gaXNFcXVhbCBmdW5jdGlvbiBpcyBwcm92aWRlZCwgdXNlIHRoYXQgdG8gY2hlY2sgaWYgdGhlIGRhdGFcbiAgICAgIC8vIGhhcyBjaGFuZ2VkLiBJZiBpdCBoYXNuJ3QsIHJldHVybiB0aGUgcHJldmlvdXMgc2VsZWN0aW9uLiBUaGF0IHNpZ25hbHNcbiAgICAgIC8vIHRvIFJlYWN0IHRoYXQgdGhlIHNlbGVjdGlvbnMgYXJlIGNvbmNlcHR1YWxseSBlcXVhbCwgYW5kIHdlIGNhbiBiYWlsXG4gICAgICAvLyBvdXQgb2YgcmVuZGVyaW5nLlxuXG4gICAgICAvLyBJZiBhIGN1c3RvbSBpc0VxdWFsIGZ1bmN0aW9uIGlzIHByb3ZpZGVkLCB1c2UgdGhhdCB0byBjaGVjayBpZiB0aGUgZGF0YVxuICAgICAgLy8gaGFzIGNoYW5nZWQuIElmIGl0IGhhc24ndCwgcmV0dXJuIHRoZSBwcmV2aW91cyBzZWxlY3Rpb24uIFRoYXQgc2lnbmFsc1xuICAgICAgLy8gdG8gUmVhY3QgdGhhdCB0aGUgc2VsZWN0aW9ucyBhcmUgY29uY2VwdHVhbGx5IGVxdWFsLCBhbmQgd2UgY2FuIGJhaWxcbiAgICAgIC8vIG91dCBvZiByZW5kZXJpbmcuXG4gICAgICBpZiAoaXNFcXVhbCAhPT0gdW5kZWZpbmVkICYmIGlzRXF1YWwocHJldlNlbGVjdGlvbiwgbmV4dFNlbGVjdGlvbikpIHtcbiAgICAgICAgcmV0dXJuIHByZXZTZWxlY3Rpb247XG4gICAgICB9XG5cbiAgICAgIG1lbW9pemVkU25hcHNob3QgPSBuZXh0U25hcHNob3Q7XG4gICAgICBtZW1vaXplZFNlbGVjdGlvbiA9IG5leHRTZWxlY3Rpb247XG4gICAgICByZXR1cm4gbmV4dFNlbGVjdGlvbjtcbiAgICB9OyAvLyBBc3NpZ25pbmcgdGhpcyB0byBhIGNvbnN0YW50IHNvIHRoYXQgRmxvdyBrbm93cyBpdCBjYW4ndCBjaGFuZ2UuXG5cblxuICAgIC8vIEFzc2lnbmluZyB0aGlzIHRvIGEgY29uc3RhbnQgc28gdGhhdCBGbG93IGtub3dzIGl0IGNhbid0IGNoYW5nZS5cbiAgICB2YXIgbWF5YmVHZXRTZXJ2ZXJTbmFwc2hvdCA9IGdldFNlcnZlclNuYXBzaG90ID09PSB1bmRlZmluZWQgPyBudWxsIDogZ2V0U2VydmVyU25hcHNob3Q7XG5cbiAgICB2YXIgZ2V0U25hcHNob3RXaXRoU2VsZWN0b3IgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbWVtb2l6ZWRTZWxlY3RvcihnZXRTbmFwc2hvdCgpKTtcbiAgICB9O1xuXG4gICAgdmFyIGdldFNlcnZlclNuYXBzaG90V2l0aFNlbGVjdG9yID0gbWF5YmVHZXRTZXJ2ZXJTbmFwc2hvdCA9PT0gbnVsbCA/IHVuZGVmaW5lZCA6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBtZW1vaXplZFNlbGVjdG9yKG1heWJlR2V0U2VydmVyU25hcHNob3QoKSk7XG4gICAgfTtcbiAgICByZXR1cm4gW2dldFNuYXBzaG90V2l0aFNlbGVjdG9yLCBnZXRTZXJ2ZXJTbmFwc2hvdFdpdGhTZWxlY3Rvcl07XG4gIH0sIFtnZXRTbmFwc2hvdCwgZ2V0U2VydmVyU25hcHNob3QsIHNlbGVjdG9yLCBpc0VxdWFsXSksXG4gICAgICBnZXRTZWxlY3Rpb24gPSBfdXNlTWVtb1swXSxcbiAgICAgIGdldFNlcnZlclNlbGVjdGlvbiA9IF91c2VNZW1vWzFdO1xuXG4gIHZhciB2YWx1ZSA9IHVzZVN5bmNFeHRlcm5hbFN0b3JlKHN1YnNjcmliZSwgZ2V0U2VsZWN0aW9uLCBnZXRTZXJ2ZXJTZWxlY3Rpb24pO1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGluc3QuaGFzVmFsdWUgPSB0cnVlO1xuICAgIGluc3QudmFsdWUgPSB2YWx1ZTtcbiAgfSwgW3ZhbHVlXSk7XG4gIHVzZURlYnVnVmFsdWUodmFsdWUpO1xuICByZXR1cm4gdmFsdWU7XG59XG5cbmV4cG9ydHMudXNlU3luY0V4dGVybmFsU3RvcmVXaXRoU2VsZWN0b3IgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3RvcjtcbiAgICAgICAgICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG5pZiAoXG4gIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gIT09ICd1bmRlZmluZWQnICYmXG4gIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18ucmVnaXN0ZXJJbnRlcm5hbE1vZHVsZVN0b3AgPT09XG4gICAgJ2Z1bmN0aW9uJ1xuKSB7XG4gIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5yZWdpc3RlckludGVybmFsTW9kdWxlU3RvcChuZXcgRXJyb3IoKSk7XG59XG4gICAgICAgIFxuICB9KSgpO1xufVxuIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJyZWdpc3RlckludGVybmFsTW9kdWxlU3RhcnQiLCJFcnJvciIsIlJlYWN0IiwicmVxdWlyZSIsInNoaW0iLCJpcyIsIngiLCJ5Iiwib2JqZWN0SXMiLCJPYmplY3QiLCJ1c2VTeW5jRXh0ZXJuYWxTdG9yZSIsInVzZVJlZiIsInVzZUVmZmVjdCIsInVzZU1lbW8iLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlU3luY0V4dGVybmFsU3RvcmVXaXRoU2VsZWN0b3IiLCJzdWJzY3JpYmUiLCJnZXRTbmFwc2hvdCIsImdldFNlcnZlclNuYXBzaG90Iiwic2VsZWN0b3IiLCJpc0VxdWFsIiwiaW5zdFJlZiIsImluc3QiLCJjdXJyZW50IiwiaGFzVmFsdWUiLCJ2YWx1ZSIsIl91c2VNZW1vIiwiaGFzTWVtbyIsIm1lbW9pemVkU25hcHNob3QiLCJtZW1vaXplZFNlbGVjdGlvbiIsIm1lbW9pemVkU2VsZWN0b3IiLCJuZXh0U25hcHNob3QiLCJfbmV4dFNlbGVjdGlvbiIsInVuZGVmaW5lZCIsImN1cnJlbnRTZWxlY3Rpb24iLCJwcmV2U25hcHNob3QiLCJwcmV2U2VsZWN0aW9uIiwibmV4dFNlbGVjdGlvbiIsIm1heWJlR2V0U2VydmVyU25hcHNob3QiLCJnZXRTbmFwc2hvdFdpdGhTZWxlY3RvciIsImdldFNlcnZlclNuYXBzaG90V2l0aFNlbGVjdG9yIiwiZ2V0U2VsZWN0aW9uIiwiZ2V0U2VydmVyU2VsZWN0aW9uIiwiZXhwb3J0cyIsInJlZ2lzdGVySW50ZXJuYWxNb2R1bGVTdG9wIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/use-sync-external-store/shim/index.js":
/*!************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim.development.js */ \"(sc_server)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLElBQUlBLEtBQXlCLEVBQWMsRUFFMUMsTUFBTTtJQUNMQyxvTUFBeUI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0vaW5kZXguanM/MmU4NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6WyJwcm9jZXNzIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/use-sync-external-store/shim/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/use-sync-external-store/shim/with-selector.js":
/*!********************************************************************!*\
  !*** ./node_modules/use-sync-external-store/shim/with-selector.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ../cjs/use-sync-external-store-shim/with-selector.development.js */ \"(sc_server)/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS93aXRoLXNlbGVjdG9yLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLGdPQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvc2hpbS93aXRoLXNlbGVjdG9yLmpzP2UzM2IiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltL3dpdGgtc2VsZWN0b3IucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0vd2l0aC1zZWxlY3Rvci5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/use-sync-external-store/shim/with-selector.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/index.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NIL: () => (/* reexport safe */ _nil_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   parse: () => (/* reexport safe */ _parse_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   stringify: () => (/* reexport safe */ _stringify_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   v1: () => (/* reexport safe */ _v1_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   v3: () => (/* reexport safe */ _v3_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   v4: () => (/* reexport safe */ _v4_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   v5: () => (/* reexport safe */ _v5_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   validate: () => (/* reexport safe */ _validate_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   version: () => (/* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/v1.js\");\n/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/v3.js\");\n/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/v5.js\");\n/* harmony import */ var _nil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nil.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/nil.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/version.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/validate.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stringify.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parse.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/parse.js\");\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF3QztBQUNBO0FBQ0E7QUFDQTtBQUNFO0FBQ1E7QUFDRTtBQUNFO0FBQ1IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9pbmRleC5qcz81Njk3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgYXMgdjEgfSBmcm9tICcuL3YxLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdjMgfSBmcm9tICcuL3YzLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdjQgfSBmcm9tICcuL3Y0LmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdjUgfSBmcm9tICcuL3Y1LmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgTklMIH0gZnJvbSAnLi9uaWwuanMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB2ZXJzaW9uIH0gZnJvbSAnLi92ZXJzaW9uLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdmFsaWRhdGUgfSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgc3RyaW5naWZ5IH0gZnJvbSAnLi9zdHJpbmdpZnkuanMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBwYXJzZSB9IGZyb20gJy4vcGFyc2UuanMnOyJdLCJuYW1lcyI6WyJkZWZhdWx0IiwidjEiLCJ2MyIsInY0IiwidjUiLCJOSUwiLCJ2ZXJzaW9uIiwidmFsaWRhdGUiLCJzdHJpbmdpZnkiLCJwYXJzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/md5.js":
/*!************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/md5.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction md5(bytes) {\n    if (Array.isArray(bytes)) {\n        bytes = Buffer.from(bytes);\n    } else if (typeof bytes === \"string\") {\n        bytes = Buffer.from(bytes, \"utf8\");\n    }\n    return crypto__WEBPACK_IMPORTED_MODULE_0___default().createHash(\"md5\").update(bytes).digest();\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (md5);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL21kNS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEI7QUFFNUIsU0FBU0MsSUFBSUMsS0FBSztJQUNoQixJQUFJQyxNQUFNQyxRQUFRRixRQUFRO1FBQ3hCQSxRQUFRRyxPQUFPQyxLQUFLSjtJQUN0QixPQUFPLElBQUksT0FBT0EsVUFBVSxVQUFVO1FBQ3BDQSxRQUFRRyxPQUFPQyxLQUFLSixPQUFPO0lBQzdCO0lBRUEsT0FBT0Ysd0RBQWlCTyxDQUFDLE9BQU9DLE9BQU9OLE9BQU9PO0FBQ2hEO0FBRUEsaUVBQWVSLEdBQUdBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9tZDUuanM/ZTIzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY3J5cHRvIGZyb20gJ2NyeXB0byc7XG5cbmZ1bmN0aW9uIG1kNShieXRlcykge1xuICBpZiAoQXJyYXkuaXNBcnJheShieXRlcykpIHtcbiAgICBieXRlcyA9IEJ1ZmZlci5mcm9tKGJ5dGVzKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgYnl0ZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgYnl0ZXMgPSBCdWZmZXIuZnJvbShieXRlcywgJ3V0ZjgnKTtcbiAgfVxuXG4gIHJldHVybiBjcnlwdG8uY3JlYXRlSGFzaCgnbWQ1JykudXBkYXRlKGJ5dGVzKS5kaWdlc3QoKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWQ1OyJdLCJuYW1lcyI6WyJjcnlwdG8iLCJtZDUiLCJieXRlcyIsIkFycmF5IiwiaXNBcnJheSIsIkJ1ZmZlciIsImZyb20iLCJjcmVhdGVIYXNoIiwidXBkYXRlIiwiZGlnZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/md5.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/nil.js":
/*!************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/nil.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"00000000-0000-0000-0000-000000000000\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL25pbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsd0NBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvbmlsLmpzPzVkZTEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgJzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCc7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/nil.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/parse.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/parse.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/validate.js\");\n\nfunction parse(uuid) {\n    if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n        throw TypeError(\"Invalid UUID\");\n    }\n    let v;\n    const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n    arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n    arr[1] = v >>> 16 & 0xff;\n    arr[2] = v >>> 8 & 0xff;\n    arr[3] = v & 0xff; // Parse ........-####-....-....-............\n    arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n    arr[5] = v & 0xff; // Parse ........-....-####-....-............\n    arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n    arr[7] = v & 0xff; // Parse ........-....-....-####-............\n    arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n    arr[9] = v & 0xff; // Parse ........-....-....-....-############\n    // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n    arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n    arr[11] = v / 0x100000000 & 0xff;\n    arr[12] = v >>> 24 & 0xff;\n    arr[13] = v >>> 16 & 0xff;\n    arr[14] = v >>> 8 & 0xff;\n    arr[15] = v & 0xff;\n    return arr;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3BhcnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFDO0FBRXJDLFNBQVNDLE1BQU1DLElBQUk7SUFDakIsSUFBSSxDQUFDRix3REFBUUEsQ0FBQ0UsT0FBTztRQUNuQixNQUFNQyxVQUFVO0lBQ2xCO0lBRUEsSUFBSUM7SUFDSixNQUFNQyxNQUFNLElBQUlDLFdBQVcsS0FBSyw2Q0FBNkM7SUFFN0VELEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQ0QsSUFBSUcsU0FBU0wsS0FBS00sTUFBTSxHQUFHLElBQUksR0FBRSxNQUFPO0lBQ2xESCxHQUFHLENBQUMsRUFBRSxHQUFHRCxNQUFNLEtBQUs7SUFDcEJDLEdBQUcsQ0FBQyxFQUFFLEdBQUdELE1BQU0sSUFBSTtJQUNuQkMsR0FBRyxDQUFDLEVBQUUsR0FBR0QsSUFBSSxNQUFNLDZDQUE2QztJQUVoRUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxDQUFDRCxJQUFJRyxTQUFTTCxLQUFLTSxNQUFNLEdBQUcsS0FBSyxHQUFFLE1BQU87SUFDbkRILEdBQUcsQ0FBQyxFQUFFLEdBQUdELElBQUksTUFBTSw2Q0FBNkM7SUFFaEVDLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQ0QsSUFBSUcsU0FBU0wsS0FBS00sTUFBTSxJQUFJLEtBQUssR0FBRSxNQUFPO0lBQ3BESCxHQUFHLENBQUMsRUFBRSxHQUFHRCxJQUFJLE1BQU0sNkNBQTZDO0lBRWhFQyxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUNELElBQUlHLFNBQVNMLEtBQUtNLE1BQU0sSUFBSSxLQUFLLEdBQUUsTUFBTztJQUNwREgsR0FBRyxDQUFDLEVBQUUsR0FBR0QsSUFBSSxNQUFNLDZDQUE2QztJQUNoRSwwRUFBMEU7SUFFMUVDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQ0QsSUFBSUcsU0FBU0wsS0FBS00sTUFBTSxJQUFJLEtBQUssR0FBRSxJQUFLLGdCQUFnQjtJQUNuRUgsR0FBRyxDQUFDLEdBQUcsR0FBR0QsSUFBSSxjQUFjO0lBQzVCQyxHQUFHLENBQUMsR0FBRyxHQUFHRCxNQUFNLEtBQUs7SUFDckJDLEdBQUcsQ0FBQyxHQUFHLEdBQUdELE1BQU0sS0FBSztJQUNyQkMsR0FBRyxDQUFDLEdBQUcsR0FBR0QsTUFBTSxJQUFJO0lBQ3BCQyxHQUFHLENBQUMsR0FBRyxHQUFHRCxJQUFJO0lBQ2QsT0FBT0M7QUFDVDtBQUVBLGlFQUFlSixLQUFLQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvcGFyc2UuanM/YmVhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmFsaWRhdGUgZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG5cbmZ1bmN0aW9uIHBhcnNlKHV1aWQpIHtcbiAgaWYgKCF2YWxpZGF0ZSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignSW52YWxpZCBVVUlEJyk7XG4gIH1cblxuICBsZXQgdjtcbiAgY29uc3QgYXJyID0gbmV3IFVpbnQ4QXJyYXkoMTYpOyAvLyBQYXJzZSAjIyMjIyMjIy0uLi4uLS4uLi4tLi4uLi0uLi4uLi4uLi4uLi5cblxuICBhcnJbMF0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMCwgOCksIDE2KSkgPj4+IDI0O1xuICBhcnJbMV0gPSB2ID4+PiAxNiAmIDB4ZmY7XG4gIGFyclsyXSA9IHYgPj4+IDggJiAweGZmO1xuICBhcnJbM10gPSB2ICYgMHhmZjsgLy8gUGFyc2UgLi4uLi4uLi4tIyMjIy0uLi4uLS4uLi4tLi4uLi4uLi4uLi4uXG5cbiAgYXJyWzRdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDksIDEzKSwgMTYpKSA+Pj4gODtcbiAgYXJyWzVdID0gdiAmIDB4ZmY7IC8vIFBhcnNlIC4uLi4uLi4uLS4uLi4tIyMjIy0uLi4uLS4uLi4uLi4uLi4uLlxuXG4gIGFycls2XSA9ICh2ID0gcGFyc2VJbnQodXVpZC5zbGljZSgxNCwgMTgpLCAxNikpID4+PiA4O1xuICBhcnJbN10gPSB2ICYgMHhmZjsgLy8gUGFyc2UgLi4uLi4uLi4tLi4uLi0uLi4uLSMjIyMtLi4uLi4uLi4uLi4uXG5cbiAgYXJyWzhdID0gKHYgPSBwYXJzZUludCh1dWlkLnNsaWNlKDE5LCAyMyksIDE2KSkgPj4+IDg7XG4gIGFycls5XSA9IHYgJiAweGZmOyAvLyBQYXJzZSAuLi4uLi4uLi0uLi4uLS4uLi4tLi4uLi0jIyMjIyMjIyMjIyNcbiAgLy8gKFVzZSBcIi9cIiB0byBhdm9pZCAzMi1iaXQgdHJ1bmNhdGlvbiB3aGVuIGJpdC1zaGlmdGluZyBoaWdoLW9yZGVyIGJ5dGVzKVxuXG4gIGFyclsxMF0gPSAodiA9IHBhcnNlSW50KHV1aWQuc2xpY2UoMjQsIDM2KSwgMTYpKSAvIDB4MTAwMDAwMDAwMDAgJiAweGZmO1xuICBhcnJbMTFdID0gdiAvIDB4MTAwMDAwMDAwICYgMHhmZjtcbiAgYXJyWzEyXSA9IHYgPj4+IDI0ICYgMHhmZjtcbiAgYXJyWzEzXSA9IHYgPj4+IDE2ICYgMHhmZjtcbiAgYXJyWzE0XSA9IHYgPj4+IDggJiAweGZmO1xuICBhcnJbMTVdID0gdiAmIDB4ZmY7XG4gIHJldHVybiBhcnI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlOyJdLCJuYW1lcyI6WyJ2YWxpZGF0ZSIsInBhcnNlIiwidXVpZCIsIlR5cGVFcnJvciIsInYiLCJhcnIiLCJVaW50OEFycmF5IiwicGFyc2VJbnQiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/parse.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/regex.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/regex.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3JlZ2V4LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxxSEFBcUgsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3JlZ2V4LmpzP2JmMWUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgL14oPzpbMC05YS1mXXs4fS1bMC05YS1mXXs0fS1bMS01XVswLTlhLWZdezN9LVs4OWFiXVswLTlhLWZdezN9LVswLTlhLWZdezEyfXwwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDApJC9pOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/regex.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/rng.js":
/*!************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/rng.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\nfunction rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        crypto__WEBPACK_IMPORTED_MODULE_0___default().randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3JuZy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEI7QUFDNUIsTUFBTUMsWUFBWSxJQUFJQyxXQUFXLE1BQU0scUNBQXFDO0FBRTVFLElBQUlDLFVBQVVGLFVBQVVHO0FBQ1QsU0FBU0M7SUFDdEIsSUFBSUYsVUFBVUYsVUFBVUcsU0FBUyxJQUFJO1FBQ25DSiw0REFBcUJNLENBQUNMO1FBQ3RCRSxVQUFVO0lBQ1o7SUFFQSxPQUFPRixVQUFVTSxNQUFNSixTQUFTQSxXQUFXO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvcm5nLmpzP2I3YzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuY29uc3Qgcm5kczhQb29sID0gbmV3IFVpbnQ4QXJyYXkoMjU2KTsgLy8gIyBvZiByYW5kb20gdmFsdWVzIHRvIHByZS1hbGxvY2F0ZVxuXG5sZXQgcG9vbFB0ciA9IHJuZHM4UG9vbC5sZW5ndGg7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBybmcoKSB7XG4gIGlmIChwb29sUHRyID4gcm5kczhQb29sLmxlbmd0aCAtIDE2KSB7XG4gICAgY3J5cHRvLnJhbmRvbUZpbGxTeW5jKHJuZHM4UG9vbCk7XG4gICAgcG9vbFB0ciA9IDA7XG4gIH1cblxuICByZXR1cm4gcm5kczhQb29sLnNsaWNlKHBvb2xQdHIsIHBvb2xQdHIgKz0gMTYpO1xufSJdLCJuYW1lcyI6WyJjcnlwdG8iLCJybmRzOFBvb2wiLCJVaW50OEFycmF5IiwicG9vbFB0ciIsImxlbmd0aCIsInJuZyIsInJhbmRvbUZpbGxTeW5jIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/rng.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/sha1.js":
/*!*************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/sha1.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction sha1(bytes) {\n    if (Array.isArray(bytes)) {\n        bytes = Buffer.from(bytes);\n    } else if (typeof bytes === \"string\") {\n        bytes = Buffer.from(bytes, \"utf8\");\n    }\n    return crypto__WEBPACK_IMPORTED_MODULE_0___default().createHash(\"sha1\").update(bytes).digest();\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3NoYTEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRCO0FBRTVCLFNBQVNDLEtBQUtDLEtBQUs7SUFDakIsSUFBSUMsTUFBTUMsUUFBUUYsUUFBUTtRQUN4QkEsUUFBUUcsT0FBT0MsS0FBS0o7SUFDdEIsT0FBTyxJQUFJLE9BQU9BLFVBQVUsVUFBVTtRQUNwQ0EsUUFBUUcsT0FBT0MsS0FBS0osT0FBTztJQUM3QjtJQUVBLE9BQU9GLHdEQUFpQk8sQ0FBQyxRQUFRQyxPQUFPTixPQUFPTztBQUNqRDtBQUVBLGlFQUFlUixJQUFJQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvc2hhMS5qcz8zODA0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcblxuZnVuY3Rpb24gc2hhMShieXRlcykge1xuICBpZiAoQXJyYXkuaXNBcnJheShieXRlcykpIHtcbiAgICBieXRlcyA9IEJ1ZmZlci5mcm9tKGJ5dGVzKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgYnl0ZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgYnl0ZXMgPSBCdWZmZXIuZnJvbShieXRlcywgJ3V0ZjgnKTtcbiAgfVxuXG4gIHJldHVybiBjcnlwdG8uY3JlYXRlSGFzaCgnc2hhMScpLnVwZGF0ZShieXRlcykuZGlnZXN0KCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHNoYTE7Il0sIm5hbWVzIjpbImNyeXB0byIsInNoYTEiLCJieXRlcyIsIkFycmF5IiwiaXNBcnJheSIsIkJ1ZmZlciIsImZyb20iLCJjcmVhdGVIYXNoIiwidXBkYXRlIiwiZGlnZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/sha1.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/stringify.js":
/*!******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/stringify.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */ const byteToHex = [];\nfor(let i = 0; i < 256; ++i){\n    byteToHex.push((i + 0x100).toString(16).substr(1));\n}\nfunction stringify(arr, offset = 0) {\n    // Note: Be careful editing this code!  It's been tuned for performance\n    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n    const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n    // of the following:\n    // - One or more input array values don't map to a hex octet (leading to\n    // \"undefined\" in the uuid)\n    // - Invalid input values for the RFC `version` or `variant` fields\n    if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n        throw TypeError(\"Stringified UUID is invalid\");\n    }\n    return uuid;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3N0cmluZ2lmeS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxQztBQUNyQzs7O0NBR0MsR0FFRCxNQUFNQyxZQUFZLEVBQUU7QUFFcEIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUksS0FBSyxFQUFFQSxFQUFHO0lBQzVCRCxVQUFVRSxLQUFLLENBQUNELElBQUksS0FBSSxFQUFHRSxTQUFTLElBQUlDLE9BQU87QUFDakQ7QUFFQSxTQUFTQyxVQUFVQyxHQUFHLEVBQUVDLFNBQVMsQ0FBQztJQUNoQyx1RUFBdUU7SUFDdkUsb0ZBQW9GO0lBQ3BGLE1BQU1DLE9BQU8sQ0FBQ1IsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUcsTUFBTVAsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxHQUFHLE1BQU1QLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBRyxNQUFNUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUcsTUFBTVAsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsR0FBRyxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEdBQUcsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsR0FBRyxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEdBQUcsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLENBQUMsRUFBRUUsZUFBZSw0RUFBNEU7SUFDdGxCLG9CQUFvQjtJQUNwQix3RUFBd0U7SUFDeEUsMkJBQTJCO0lBQzNCLG1FQUFtRTtJQUVuRSxJQUFJLENBQUNWLHdEQUFRQSxDQUFDUyxPQUFPO1FBQ25CLE1BQU1FLFVBQVU7SUFDbEI7SUFFQSxPQUFPRjtBQUNUO0FBRUEsaUVBQWVILFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9zdHJpbmdpZnkuanM/NTZhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmFsaWRhdGUgZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG4vKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cblxuY29uc3QgYnl0ZVRvSGV4ID0gW107XG5cbmZvciAobGV0IGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4LnB1c2goKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnN1YnN0cigxKSk7XG59XG5cbmZ1bmN0aW9uIHN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIGNvbnN0IHV1aWQgPSAoYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAzXV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA2XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDddXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA5XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEwXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDExXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDEzXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDE1XV0pLnRvTG93ZXJDYXNlKCk7IC8vIENvbnNpc3RlbmN5IGNoZWNrIGZvciB2YWxpZCBVVUlELiAgSWYgdGhpcyB0aHJvd3MsIGl0J3MgbGlrZWx5IGR1ZSB0byBvbmVcbiAgLy8gb2YgdGhlIGZvbGxvd2luZzpcbiAgLy8gLSBPbmUgb3IgbW9yZSBpbnB1dCBhcnJheSB2YWx1ZXMgZG9uJ3QgbWFwIHRvIGEgaGV4IG9jdGV0IChsZWFkaW5nIHRvXG4gIC8vIFwidW5kZWZpbmVkXCIgaW4gdGhlIHV1aWQpXG4gIC8vIC0gSW52YWxpZCBpbnB1dCB2YWx1ZXMgZm9yIHRoZSBSRkMgYHZlcnNpb25gIG9yIGB2YXJpYW50YCBmaWVsZHNcblxuICBpZiAoIXZhbGlkYXRlKHV1aWQpKSB7XG4gICAgdGhyb3cgVHlwZUVycm9yKCdTdHJpbmdpZmllZCBVVUlEIGlzIGludmFsaWQnKTtcbiAgfVxuXG4gIHJldHVybiB1dWlkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdHJpbmdpZnk7Il0sIm5hbWVzIjpbInZhbGlkYXRlIiwiYnl0ZVRvSGV4IiwiaSIsInB1c2giLCJ0b1N0cmluZyIsInN1YnN0ciIsInN0cmluZ2lmeSIsImFyciIsIm9mZnNldCIsInV1aWQiLCJ0b0xvd2VyQ2FzZSIsIlR5cGVFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/stringify.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/v1.js":
/*!***********************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/v1.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/stringify.js\");\n\n // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\nlet _clockseq; // Previous uuid creation time\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n    let i = buf && offset || 0;\n    const b = buf || new Array(16);\n    options = options || {};\n    let node = options.node || _nodeId;\n    let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n    // specified.  We do this lazily to minimize issues related to insufficient\n    // system entropy.  See #189\n    if (node == null || clockseq == null) {\n        const seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n        if (node == null) {\n            // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n            node = _nodeId = [\n                seedBytes[0] | 0x01,\n                seedBytes[1],\n                seedBytes[2],\n                seedBytes[3],\n                seedBytes[4],\n                seedBytes[5]\n            ];\n        }\n        if (clockseq == null) {\n            // Per 4.2.2, randomize (14 bit) clockseq\n            clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n        }\n    } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n    const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq === undefined) {\n        clockseq = clockseq + 1 & 0x3fff;\n    } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n        nsecs = 0;\n    } // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n        throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n    }\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000; // `time_low`\n    const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff; // `time_mid`\n    const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff; // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n    b[i++] = clockseq & 0xff; // `node`\n    for(let n = 0; n < 6; ++n){\n        b[i + n] = node[n];\n    }\n    return buf || (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(b);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v1);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3YxLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUNZLENBQUMsd0NBQXdDO0FBQ2hGLEVBQUU7QUFDRiwrQ0FBK0M7QUFDL0MsK0NBQStDO0FBRS9DLElBQUlFO0FBRUosSUFBSUMsV0FBVyw4QkFBOEI7QUFHN0MsSUFBSUMsYUFBYTtBQUNqQixJQUFJQyxhQUFhLEdBQUcscURBQXFEO0FBRXpFLFNBQVNDLEdBQUdDLE9BQU8sRUFBRUMsR0FBRyxFQUFFQyxNQUFNO0lBQzlCLElBQUlDLElBQUlGLE9BQU9DLFVBQVU7SUFDekIsTUFBTUUsSUFBSUgsT0FBTyxJQUFJSSxNQUFNO0lBQzNCTCxVQUFVQSxXQUFXLENBQUM7SUFDdEIsSUFBSU0sT0FBT04sUUFBUU0sUUFBUVg7SUFDM0IsSUFBSVksV0FBV1AsUUFBUU8sYUFBYUMsWUFBWVIsUUFBUU8sV0FBV1gsV0FBVywyRUFBMkU7SUFDekosMkVBQTJFO0lBQzNFLDRCQUE0QjtJQUU1QixJQUFJVSxRQUFRLFFBQVFDLFlBQVksTUFBTTtRQUNwQyxNQUFNRSxZQUFZVCxRQUFRVSxVQUFVLENBQUNWLFFBQVFQLE9BQU9BLCtDQUFFO1FBRXRELElBQUlhLFFBQVEsTUFBTTtZQUNoQiwyRUFBMkU7WUFDM0VBLE9BQU9YLFVBQVU7Z0JBQUNjLFNBQVMsQ0FBQyxFQUFFLEdBQUc7Z0JBQU1BLFNBQVMsQ0FBQyxFQUFFO2dCQUFFQSxTQUFTLENBQUMsRUFBRTtnQkFBRUEsU0FBUyxDQUFDLEVBQUU7Z0JBQUVBLFNBQVMsQ0FBQyxFQUFFO2dCQUFFQSxTQUFTLENBQUMsRUFBRTthQUFDO1FBQzlHO1FBRUEsSUFBSUYsWUFBWSxNQUFNO1lBQ3BCLHlDQUF5QztZQUN6Q0EsV0FBV1gsWUFBWSxDQUFDYSxTQUFTLENBQUMsRUFBRSxJQUFJLElBQUlBLFNBQVMsQ0FBQyxFQUFFLElBQUk7UUFDOUQ7SUFDRixFQUFFLHVFQUF1RTtJQUN6RSxvRUFBb0U7SUFDcEUsMkVBQTJFO0lBQzNFLDBFQUEwRTtJQUcxRSxJQUFJRSxRQUFRWCxRQUFRVyxVQUFVSCxZQUFZUixRQUFRVyxRQUFRQyxLQUFLQyxPQUFPLHNFQUFzRTtJQUM1SSw0Q0FBNEM7SUFFNUMsSUFBSUMsUUFBUWQsUUFBUWMsVUFBVU4sWUFBWVIsUUFBUWMsUUFBUWhCLGFBQWEsR0FBRywyQ0FBMkM7SUFFckgsTUFBTWlCLEtBQUtKLFFBQVFkLGFBQWEsQ0FBQ2lCLFFBQVFoQixVQUFTLElBQUssT0FBTyxpREFBaUQ7SUFFL0csSUFBSWlCLEtBQUssS0FBS2YsUUFBUU8sYUFBYUMsV0FBVztRQUM1Q0QsV0FBV0EsV0FBVyxJQUFJO0lBQzVCLEVBQUUsMEVBQTBFO0lBQzVFLGdCQUFnQjtJQUdoQixJQUFJLENBQUNRLEtBQUssS0FBS0osUUFBUWQsVUFBUyxLQUFNRyxRQUFRYyxVQUFVTixXQUFXO1FBQ2pFTSxRQUFRO0lBQ1YsRUFBRSwwREFBMEQ7SUFHNUQsSUFBSUEsU0FBUyxPQUFPO1FBQ2xCLE1BQU0sSUFBSUUsTUFBTTtJQUNsQjtJQUVBbkIsYUFBYWM7SUFDYmIsYUFBYWdCO0lBQ2JsQixZQUFZVyxVQUFVLHlEQUF5RDtJQUUvRUksU0FBUyxnQkFBZ0IsYUFBYTtJQUV0QyxNQUFNTSxLQUFLLENBQUMsQ0FBQ04sUUFBUSxTQUFRLElBQUssUUFBUUcsS0FBSSxJQUFLO0lBQ25EVixDQUFDLENBQUNELElBQUksR0FBR2MsT0FBTyxLQUFLO0lBQ3JCYixDQUFDLENBQUNELElBQUksR0FBR2MsT0FBTyxLQUFLO0lBQ3JCYixDQUFDLENBQUNELElBQUksR0FBR2MsT0FBTyxJQUFJO0lBQ3BCYixDQUFDLENBQUNELElBQUksR0FBR2MsS0FBSyxNQUFNLGFBQWE7SUFFakMsTUFBTUMsTUFBTVAsUUFBUSxjQUFjLFFBQVE7SUFDMUNQLENBQUMsQ0FBQ0QsSUFBSSxHQUFHZSxRQUFRLElBQUk7SUFDckJkLENBQUMsQ0FBQ0QsSUFBSSxHQUFHZSxNQUFNLE1BQU0sMEJBQTBCO0lBRS9DZCxDQUFDLENBQUNELElBQUksR0FBR2UsUUFBUSxLQUFLLE1BQU0sTUFBTSxrQkFBa0I7SUFFcERkLENBQUMsQ0FBQ0QsSUFBSSxHQUFHZSxRQUFRLEtBQUssTUFBTSw0REFBNEQ7SUFFeEZkLENBQUMsQ0FBQ0QsSUFBSSxHQUFHSSxhQUFhLElBQUksTUFBTSxrQkFBa0I7SUFFbERILENBQUMsQ0FBQ0QsSUFBSSxHQUFHSSxXQUFXLE1BQU0sU0FBUztJQUVuQyxJQUFLLElBQUlZLElBQUksR0FBR0EsSUFBSSxHQUFHLEVBQUVBLEVBQUc7UUFDMUJmLENBQUMsQ0FBQ0QsSUFBSWdCLEVBQUUsR0FBR2IsSUFBSSxDQUFDYSxFQUFFO0lBQ3BCO0lBRUEsT0FBT2xCLE9BQU9QLHlEQUFTQSxDQUFDVTtBQUMxQjtBQUVBLGlFQUFlTCxFQUFFQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvdjEuanM/ZTdkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcm5nIGZyb20gJy4vcm5nLmpzJztcbmltcG9ydCBzdHJpbmdpZnkgZnJvbSAnLi9zdHJpbmdpZnkuanMnOyAvLyAqKmB2MSgpYCAtIEdlbmVyYXRlIHRpbWUtYmFzZWQgVVVJRCoqXG4vL1xuLy8gSW5zcGlyZWQgYnkgaHR0cHM6Ly9naXRodWIuY29tL0xpb3NLL1VVSUQuanNcbi8vIGFuZCBodHRwOi8vZG9jcy5weXRob24ub3JnL2xpYnJhcnkvdXVpZC5odG1sXG5cbmxldCBfbm9kZUlkO1xuXG5sZXQgX2Nsb2Nrc2VxOyAvLyBQcmV2aW91cyB1dWlkIGNyZWF0aW9uIHRpbWVcblxuXG5sZXQgX2xhc3RNU2VjcyA9IDA7XG5sZXQgX2xhc3ROU2VjcyA9IDA7IC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQgZm9yIEFQSSBkZXRhaWxzXG5cbmZ1bmN0aW9uIHYxKG9wdGlvbnMsIGJ1Ziwgb2Zmc2V0KSB7XG4gIGxldCBpID0gYnVmICYmIG9mZnNldCB8fCAwO1xuICBjb25zdCBiID0gYnVmIHx8IG5ldyBBcnJheSgxNik7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsZXQgbm9kZSA9IG9wdGlvbnMubm9kZSB8fCBfbm9kZUlkO1xuICBsZXQgY2xvY2tzZXEgPSBvcHRpb25zLmNsb2Nrc2VxICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLmNsb2Nrc2VxIDogX2Nsb2Nrc2VxOyAvLyBub2RlIGFuZCBjbG9ja3NlcSBuZWVkIHRvIGJlIGluaXRpYWxpemVkIHRvIHJhbmRvbSB2YWx1ZXMgaWYgdGhleSdyZSBub3RcbiAgLy8gc3BlY2lmaWVkLiAgV2UgZG8gdGhpcyBsYXppbHkgdG8gbWluaW1pemUgaXNzdWVzIHJlbGF0ZWQgdG8gaW5zdWZmaWNpZW50XG4gIC8vIHN5c3RlbSBlbnRyb3B5LiAgU2VlICMxODlcblxuICBpZiAobm9kZSA9PSBudWxsIHx8IGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICBjb25zdCBzZWVkQnl0ZXMgPSBvcHRpb25zLnJhbmRvbSB8fCAob3B0aW9ucy5ybmcgfHwgcm5nKSgpO1xuXG4gICAgaWYgKG5vZGUgPT0gbnVsbCkge1xuICAgICAgLy8gUGVyIDQuNSwgY3JlYXRlIGFuZCA0OC1iaXQgbm9kZSBpZCwgKDQ3IHJhbmRvbSBiaXRzICsgbXVsdGljYXN0IGJpdCA9IDEpXG4gICAgICBub2RlID0gX25vZGVJZCA9IFtzZWVkQnl0ZXNbMF0gfCAweDAxLCBzZWVkQnl0ZXNbMV0sIHNlZWRCeXRlc1syXSwgc2VlZEJ5dGVzWzNdLCBzZWVkQnl0ZXNbNF0sIHNlZWRCeXRlc1s1XV07XG4gICAgfVxuXG4gICAgaWYgKGNsb2Nrc2VxID09IG51bGwpIHtcbiAgICAgIC8vIFBlciA0LjIuMiwgcmFuZG9taXplICgxNCBiaXQpIGNsb2Nrc2VxXG4gICAgICBjbG9ja3NlcSA9IF9jbG9ja3NlcSA9IChzZWVkQnl0ZXNbNl0gPDwgOCB8IHNlZWRCeXRlc1s3XSkgJiAweDNmZmY7XG4gICAgfVxuICB9IC8vIFVVSUQgdGltZXN0YW1wcyBhcmUgMTAwIG5hbm8tc2Vjb25kIHVuaXRzIHNpbmNlIHRoZSBHcmVnb3JpYW4gZXBvY2gsXG4gIC8vICgxNTgyLTEwLTE1IDAwOjAwKS4gIEpTTnVtYmVycyBhcmVuJ3QgcHJlY2lzZSBlbm91Z2ggZm9yIHRoaXMsIHNvXG4gIC8vIHRpbWUgaXMgaGFuZGxlZCBpbnRlcm5hbGx5IGFzICdtc2VjcycgKGludGVnZXIgbWlsbGlzZWNvbmRzKSBhbmQgJ25zZWNzJ1xuICAvLyAoMTAwLW5hbm9zZWNvbmRzIG9mZnNldCBmcm9tIG1zZWNzKSBzaW5jZSB1bml4IGVwb2NoLCAxOTcwLTAxLTAxIDAwOjAwLlxuXG5cbiAgbGV0IG1zZWNzID0gb3B0aW9ucy5tc2VjcyAhPT0gdW5kZWZpbmVkID8gb3B0aW9ucy5tc2VjcyA6IERhdGUubm93KCk7IC8vIFBlciA0LjIuMS4yLCB1c2UgY291bnQgb2YgdXVpZCdzIGdlbmVyYXRlZCBkdXJpbmcgdGhlIGN1cnJlbnQgY2xvY2tcbiAgLy8gY3ljbGUgdG8gc2ltdWxhdGUgaGlnaGVyIHJlc29sdXRpb24gY2xvY2tcblxuICBsZXQgbnNlY3MgPSBvcHRpb25zLm5zZWNzICE9PSB1bmRlZmluZWQgPyBvcHRpb25zLm5zZWNzIDogX2xhc3ROU2VjcyArIDE7IC8vIFRpbWUgc2luY2UgbGFzdCB1dWlkIGNyZWF0aW9uIChpbiBtc2VjcylcblxuICBjb25zdCBkdCA9IG1zZWNzIC0gX2xhc3RNU2VjcyArIChuc2VjcyAtIF9sYXN0TlNlY3MpIC8gMTAwMDA7IC8vIFBlciA0LjIuMS4yLCBCdW1wIGNsb2Nrc2VxIG9uIGNsb2NrIHJlZ3Jlc3Npb25cblxuICBpZiAoZHQgPCAwICYmIG9wdGlvbnMuY2xvY2tzZXEgPT09IHVuZGVmaW5lZCkge1xuICAgIGNsb2Nrc2VxID0gY2xvY2tzZXEgKyAxICYgMHgzZmZmO1xuICB9IC8vIFJlc2V0IG5zZWNzIGlmIGNsb2NrIHJlZ3Jlc3NlcyAobmV3IGNsb2Nrc2VxKSBvciB3ZSd2ZSBtb3ZlZCBvbnRvIGEgbmV3XG4gIC8vIHRpbWUgaW50ZXJ2YWxcblxuXG4gIGlmICgoZHQgPCAwIHx8IG1zZWNzID4gX2xhc3RNU2VjcykgJiYgb3B0aW9ucy5uc2VjcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgbnNlY3MgPSAwO1xuICB9IC8vIFBlciA0LjIuMS4yIFRocm93IGVycm9yIGlmIHRvbyBtYW55IHV1aWRzIGFyZSByZXF1ZXN0ZWRcblxuXG4gIGlmIChuc2VjcyA+PSAxMDAwMCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcInV1aWQudjEoKTogQ2FuJ3QgY3JlYXRlIG1vcmUgdGhhbiAxME0gdXVpZHMvc2VjXCIpO1xuICB9XG5cbiAgX2xhc3RNU2VjcyA9IG1zZWNzO1xuICBfbGFzdE5TZWNzID0gbnNlY3M7XG4gIF9jbG9ja3NlcSA9IGNsb2Nrc2VxOyAvLyBQZXIgNC4xLjQgLSBDb252ZXJ0IGZyb20gdW5peCBlcG9jaCB0byBHcmVnb3JpYW4gZXBvY2hcblxuICBtc2VjcyArPSAxMjIxOTI5MjgwMDAwMDsgLy8gYHRpbWVfbG93YFxuXG4gIGNvbnN0IHRsID0gKChtc2VjcyAmIDB4ZmZmZmZmZikgKiAxMDAwMCArIG5zZWNzKSAlIDB4MTAwMDAwMDAwO1xuICBiW2krK10gPSB0bCA+Pj4gMjQgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gMTYgJiAweGZmO1xuICBiW2krK10gPSB0bCA+Pj4gOCAmIDB4ZmY7XG4gIGJbaSsrXSA9IHRsICYgMHhmZjsgLy8gYHRpbWVfbWlkYFxuXG4gIGNvbnN0IHRtaCA9IG1zZWNzIC8gMHgxMDAwMDAwMDAgKiAxMDAwMCAmIDB4ZmZmZmZmZjtcbiAgYltpKytdID0gdG1oID4+PiA4ICYgMHhmZjtcbiAgYltpKytdID0gdG1oICYgMHhmZjsgLy8gYHRpbWVfaGlnaF9hbmRfdmVyc2lvbmBcblxuICBiW2krK10gPSB0bWggPj4+IDI0ICYgMHhmIHwgMHgxMDsgLy8gaW5jbHVkZSB2ZXJzaW9uXG5cbiAgYltpKytdID0gdG1oID4+PiAxNiAmIDB4ZmY7IC8vIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYCAoUGVyIDQuMi4yIC0gaW5jbHVkZSB2YXJpYW50KVxuXG4gIGJbaSsrXSA9IGNsb2Nrc2VxID4+PiA4IHwgMHg4MDsgLy8gYGNsb2NrX3NlcV9sb3dgXG5cbiAgYltpKytdID0gY2xvY2tzZXEgJiAweGZmOyAvLyBgbm9kZWBcblxuICBmb3IgKGxldCBuID0gMDsgbiA8IDY7ICsrbikge1xuICAgIGJbaSArIG5dID0gbm9kZVtuXTtcbiAgfVxuXG4gIHJldHVybiBidWYgfHwgc3RyaW5naWZ5KGIpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2MTsiXSwibmFtZXMiOlsicm5nIiwic3RyaW5naWZ5IiwiX25vZGVJZCIsIl9jbG9ja3NlcSIsIl9sYXN0TVNlY3MiLCJfbGFzdE5TZWNzIiwidjEiLCJvcHRpb25zIiwiYnVmIiwib2Zmc2V0IiwiaSIsImIiLCJBcnJheSIsIm5vZGUiLCJjbG9ja3NlcSIsInVuZGVmaW5lZCIsInNlZWRCeXRlcyIsInJhbmRvbSIsIm1zZWNzIiwiRGF0ZSIsIm5vdyIsIm5zZWNzIiwiZHQiLCJFcnJvciIsInRsIiwidG1oIiwibiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/v1.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/v3.js":
/*!***********************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/v3.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/v35.js\");\n/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/md5.js\");\n\n\nconst v3 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"v3\", 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v3);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3YzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUNBO0FBQzNCLE1BQU1FLEtBQUtGLG1EQUFHQSxDQUFDLE1BQU0sTUFBTUMsK0NBQUdBO0FBQzlCLGlFQUFlQyxFQUFFQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvdjMuanM/MDRkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdjM1IGZyb20gJy4vdjM1LmpzJztcbmltcG9ydCBtZDUgZnJvbSAnLi9tZDUuanMnO1xuY29uc3QgdjMgPSB2MzUoJ3YzJywgMHgzMCwgbWQ1KTtcbmV4cG9ydCBkZWZhdWx0IHYzOyJdLCJuYW1lcyI6WyJ2MzUiLCJtZDUiLCJ2MyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/v3.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/v35.js":
/*!************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/v35.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DNS: () => (/* binding */ DNS),\n/* harmony export */   URL: () => (/* binding */ URL),\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/parse.js\");\n\n\nfunction stringToBytes(str) {\n    str = unescape(encodeURIComponent(str)); // UTF8 escape\n    const bytes = [];\n    for(let i = 0; i < str.length; ++i){\n        bytes.push(str.charCodeAt(i));\n    }\n    return bytes;\n}\nconst DNS = \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\";\nconst URL = \"6ba7b811-9dad-11d1-80b4-00c04fd430c8\";\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, version, hashfunc) {\n    function generateUUID(value, namespace, buf, offset) {\n        if (typeof value === \"string\") {\n            value = stringToBytes(value);\n        }\n        if (typeof namespace === \"string\") {\n            namespace = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(namespace);\n        }\n        if (namespace.length !== 16) {\n            throw TypeError(\"Namespace must be array-like (16 iterable integer values, 0-255)\");\n        } // Compute hash of namespace and value, Per 4.3\n        // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n        // hashfunc([...namespace, ... value])`\n        let bytes = new Uint8Array(16 + value.length);\n        bytes.set(namespace);\n        bytes.set(value, namespace.length);\n        bytes = hashfunc(bytes);\n        bytes[6] = bytes[6] & 0x0f | version;\n        bytes[8] = bytes[8] & 0x3f | 0x80;\n        if (buf) {\n            offset = offset || 0;\n            for(let i = 0; i < 16; ++i){\n                buf[offset + i] = bytes[i];\n            }\n            return buf;\n        }\n        return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(bytes);\n    } // Function#name is not settable on some platforms (#270)\n    try {\n        generateUUID.name = name; // eslint-disable-next-line no-empty\n    } catch (err) {} // For CommonJS default export support\n    generateUUID.DNS = DNS;\n    generateUUID.URL = URL;\n    return generateUUID;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3YzNS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF1QztBQUNSO0FBRS9CLFNBQVNFLGNBQWNDLEdBQUc7SUFDeEJBLE1BQU1DLFNBQVNDLG1CQUFtQkYsT0FBTyxjQUFjO0lBRXZELE1BQU1HLFFBQVEsRUFBRTtJQUVoQixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUosSUFBSUssUUFBUSxFQUFFRCxFQUFHO1FBQ25DRCxNQUFNRyxLQUFLTixJQUFJTyxXQUFXSDtJQUM1QjtJQUVBLE9BQU9EO0FBQ1Q7QUFFTyxNQUFNSyxNQUFNLHVDQUF1QztBQUNuRCxNQUFNQyxNQUFNLHVDQUF1QztBQUMxRCw2QkFBZSxvQ0FBVUMsSUFBSSxFQUFFQyxPQUFPLEVBQUVDLFFBQVE7SUFDOUMsU0FBU0MsYUFBYUMsS0FBSyxFQUFFQyxTQUFTLEVBQUVDLEdBQUcsRUFBRUMsTUFBTTtRQUNqRCxJQUFJLE9BQU9ILFVBQVUsVUFBVTtZQUM3QkEsUUFBUWYsY0FBY2U7UUFDeEI7UUFFQSxJQUFJLE9BQU9DLGNBQWMsVUFBVTtZQUNqQ0EsWUFBWWpCLHFEQUFLQSxDQUFDaUI7UUFDcEI7UUFFQSxJQUFJQSxVQUFVVixXQUFXLElBQUk7WUFDM0IsTUFBTWEsVUFBVTtRQUNsQixFQUFFLCtDQUErQztRQUNqRCwyRUFBMkU7UUFDM0UsdUNBQXVDO1FBR3ZDLElBQUlmLFFBQVEsSUFBSWdCLFdBQVcsS0FBS0wsTUFBTVQ7UUFDdENGLE1BQU1pQixJQUFJTDtRQUNWWixNQUFNaUIsSUFBSU4sT0FBT0MsVUFBVVY7UUFDM0JGLFFBQVFTLFNBQVNUO1FBQ2pCQSxLQUFLLENBQUMsRUFBRSxHQUFHQSxLQUFLLENBQUMsRUFBRSxHQUFHLE9BQU9RO1FBQzdCUixLQUFLLENBQUMsRUFBRSxHQUFHQSxLQUFLLENBQUMsRUFBRSxHQUFHLE9BQU87UUFFN0IsSUFBSWEsS0FBSztZQUNQQyxTQUFTQSxVQUFVO1lBRW5CLElBQUssSUFBSWIsSUFBSSxHQUFHQSxJQUFJLElBQUksRUFBRUEsRUFBRztnQkFDM0JZLEdBQUcsQ0FBQ0MsU0FBU2IsRUFBRSxHQUFHRCxLQUFLLENBQUNDLEVBQUU7WUFDNUI7WUFFQSxPQUFPWTtRQUNUO1FBRUEsT0FBT25CLHlEQUFTQSxDQUFDTTtJQUNuQixFQUFFLHlEQUF5RDtJQUczRCxJQUFJO1FBQ0ZVLGFBQWFILE9BQU9BLE1BQU0sb0NBQW9DO0lBQ2hFLEVBQUUsT0FBT1csS0FBSyxDQUFDLEVBQUUsc0NBQXNDO0lBR3ZEUixhQUFhTCxNQUFNQTtJQUNuQkssYUFBYUosTUFBTUE7SUFDbkIsT0FBT0k7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3YzNS5qcz83MjhlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHJpbmdpZnkgZnJvbSAnLi9zdHJpbmdpZnkuanMnO1xuaW1wb3J0IHBhcnNlIGZyb20gJy4vcGFyc2UuanMnO1xuXG5mdW5jdGlvbiBzdHJpbmdUb0J5dGVzKHN0cikge1xuICBzdHIgPSB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoc3RyKSk7IC8vIFVURjggZXNjYXBlXG5cbiAgY29uc3QgYnl0ZXMgPSBbXTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7ICsraSkge1xuICAgIGJ5dGVzLnB1c2goc3RyLmNoYXJDb2RlQXQoaSkpO1xuICB9XG5cbiAgcmV0dXJuIGJ5dGVzO1xufVxuXG5leHBvcnQgY29uc3QgRE5TID0gJzZiYTdiODEwLTlkYWQtMTFkMS04MGI0LTAwYzA0ZmQ0MzBjOCc7XG5leHBvcnQgY29uc3QgVVJMID0gJzZiYTdiODExLTlkYWQtMTFkMS04MGI0LTAwYzA0ZmQ0MzBjOCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAobmFtZSwgdmVyc2lvbiwgaGFzaGZ1bmMpIHtcbiAgZnVuY3Rpb24gZ2VuZXJhdGVVVUlEKHZhbHVlLCBuYW1lc3BhY2UsIGJ1Ziwgb2Zmc2V0KSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHZhbHVlID0gc3RyaW5nVG9CeXRlcyh2YWx1ZSk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBuYW1lc3BhY2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICBuYW1lc3BhY2UgPSBwYXJzZShuYW1lc3BhY2UpO1xuICAgIH1cblxuICAgIGlmIChuYW1lc3BhY2UubGVuZ3RoICE9PSAxNikge1xuICAgICAgdGhyb3cgVHlwZUVycm9yKCdOYW1lc3BhY2UgbXVzdCBiZSBhcnJheS1saWtlICgxNiBpdGVyYWJsZSBpbnRlZ2VyIHZhbHVlcywgMC0yNTUpJyk7XG4gICAgfSAvLyBDb21wdXRlIGhhc2ggb2YgbmFtZXNwYWNlIGFuZCB2YWx1ZSwgUGVyIDQuM1xuICAgIC8vIEZ1dHVyZTogVXNlIHNwcmVhZCBzeW50YXggd2hlbiBzdXBwb3J0ZWQgb24gYWxsIHBsYXRmb3JtcywgZS5nLiBgYnl0ZXMgPVxuICAgIC8vIGhhc2hmdW5jKFsuLi5uYW1lc3BhY2UsIC4uLiB2YWx1ZV0pYFxuXG5cbiAgICBsZXQgYnl0ZXMgPSBuZXcgVWludDhBcnJheSgxNiArIHZhbHVlLmxlbmd0aCk7XG4gICAgYnl0ZXMuc2V0KG5hbWVzcGFjZSk7XG4gICAgYnl0ZXMuc2V0KHZhbHVlLCBuYW1lc3BhY2UubGVuZ3RoKTtcbiAgICBieXRlcyA9IGhhc2hmdW5jKGJ5dGVzKTtcbiAgICBieXRlc1s2XSA9IGJ5dGVzWzZdICYgMHgwZiB8IHZlcnNpb247XG4gICAgYnl0ZXNbOF0gPSBieXRlc1s4XSAmIDB4M2YgfCAweDgwO1xuXG4gICAgaWYgKGJ1Zikge1xuICAgICAgb2Zmc2V0ID0gb2Zmc2V0IHx8IDA7XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgICBidWZbb2Zmc2V0ICsgaV0gPSBieXRlc1tpXTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGJ1ZjtcbiAgICB9XG5cbiAgICByZXR1cm4gc3RyaW5naWZ5KGJ5dGVzKTtcbiAgfSAvLyBGdW5jdGlvbiNuYW1lIGlzIG5vdCBzZXR0YWJsZSBvbiBzb21lIHBsYXRmb3JtcyAoIzI3MClcblxuXG4gIHRyeSB7XG4gICAgZ2VuZXJhdGVVVUlELm5hbWUgPSBuYW1lOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZW1wdHlcbiAgfSBjYXRjaCAoZXJyKSB7fSAvLyBGb3IgQ29tbW9uSlMgZGVmYXVsdCBleHBvcnQgc3VwcG9ydFxuXG5cbiAgZ2VuZXJhdGVVVUlELkROUyA9IEROUztcbiAgZ2VuZXJhdGVVVUlELlVSTCA9IFVSTDtcbiAgcmV0dXJuIGdlbmVyYXRlVVVJRDtcbn0iXSwibmFtZXMiOlsic3RyaW5naWZ5IiwicGFyc2UiLCJzdHJpbmdUb0J5dGVzIiwic3RyIiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJieXRlcyIsImkiLCJsZW5ndGgiLCJwdXNoIiwiY2hhckNvZGVBdCIsIkROUyIsIlVSTCIsIm5hbWUiLCJ2ZXJzaW9uIiwiaGFzaGZ1bmMiLCJnZW5lcmF0ZVVVSUQiLCJ2YWx1ZSIsIm5hbWVzcGFjZSIsImJ1ZiIsIm9mZnNldCIsIlR5cGVFcnJvciIsIlVpbnQ4QXJyYXkiLCJzZXQiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/v35.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/v4.js":
/*!***********************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/v4.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/stringify.js\");\n\n\nfunction v4(options, buf, offset) {\n    options = options || {};\n    const rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = rnds[6] & 0x0f | 0x40;\n    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n    if (buf) {\n        offset = offset || 0;\n        for(let i = 0; i < 16; ++i){\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rnds);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3Y0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUNZO0FBRXZDLFNBQVNFLEdBQUdDLE9BQU8sRUFBRUMsR0FBRyxFQUFFQyxNQUFNO0lBQzlCRixVQUFVQSxXQUFXLENBQUM7SUFDdEIsTUFBTUcsT0FBT0gsUUFBUUksVUFBVSxDQUFDSixRQUFRSCxPQUFPQSwrQ0FBRSxLQUFNLGdFQUFnRTtJQUV2SE0sSUFBSSxDQUFDLEVBQUUsR0FBR0EsSUFBSSxDQUFDLEVBQUUsR0FBRyxPQUFPO0lBQzNCQSxJQUFJLENBQUMsRUFBRSxHQUFHQSxJQUFJLENBQUMsRUFBRSxHQUFHLE9BQU8sTUFBTSxvQ0FBb0M7SUFFckUsSUFBSUYsS0FBSztRQUNQQyxTQUFTQSxVQUFVO1FBRW5CLElBQUssSUFBSUcsSUFBSSxHQUFHQSxJQUFJLElBQUksRUFBRUEsRUFBRztZQUMzQkosR0FBRyxDQUFDQyxTQUFTRyxFQUFFLEdBQUdGLElBQUksQ0FBQ0UsRUFBRTtRQUMzQjtRQUVBLE9BQU9KO0lBQ1Q7SUFFQSxPQUFPSCx5REFBU0EsQ0FBQ0s7QUFDbkI7QUFFQSxpRUFBZUosRUFBRUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3Y0LmpzPzJiN2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJuZyBmcm9tICcuL3JuZy5qcyc7XG5pbXBvcnQgc3RyaW5naWZ5IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIGNvbnN0IHJuZHMgPSBvcHRpb25zLnJhbmRvbSB8fCAob3B0aW9ucy5ybmcgfHwgcm5nKSgpOyAvLyBQZXIgNC40LCBzZXQgYml0cyBmb3IgdmVyc2lvbiBhbmQgYGNsb2NrX3NlcV9oaV9hbmRfcmVzZXJ2ZWRgXG5cbiAgcm5kc1s2XSA9IHJuZHNbNl0gJiAweDBmIHwgMHg0MDtcbiAgcm5kc1s4XSA9IHJuZHNbOF0gJiAweDNmIHwgMHg4MDsgLy8gQ29weSBieXRlcyB0byBidWZmZXIsIGlmIHByb3ZpZGVkXG5cbiAgaWYgKGJ1Zikge1xuICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxNjsgKytpKSB7XG4gICAgICBidWZbb2Zmc2V0ICsgaV0gPSBybmRzW2ldO1xuICAgIH1cblxuICAgIHJldHVybiBidWY7XG4gIH1cblxuICByZXR1cm4gc3RyaW5naWZ5KHJuZHMpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2NDsiXSwibmFtZXMiOlsicm5nIiwic3RyaW5naWZ5IiwidjQiLCJvcHRpb25zIiwiYnVmIiwib2Zmc2V0Iiwicm5kcyIsInJhbmRvbSIsImkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/v4.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/v5.js":
/*!***********************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/v5.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/v35.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/sha1.js\");\n\n\nconst v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"v5\", 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3Y1LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQjtBQUNFO0FBQzdCLE1BQU1FLEtBQUtGLG1EQUFHQSxDQUFDLE1BQU0sTUFBTUMsZ0RBQUlBO0FBQy9CLGlFQUFlQyxFQUFFQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvdjUuanM/ZWQzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdjM1IGZyb20gJy4vdjM1LmpzJztcbmltcG9ydCBzaGExIGZyb20gJy4vc2hhMS5qcyc7XG5jb25zdCB2NSA9IHYzNSgndjUnLCAweDUwLCBzaGExKTtcbmV4cG9ydCBkZWZhdWx0IHY1OyJdLCJuYW1lcyI6WyJ2MzUiLCJzaGExIiwidjUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/v5.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/validate.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/validate.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/regex.js\");\n\nfunction validate(uuid) {\n    return typeof uuid === \"string\" && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3ZhbGlkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStCO0FBRS9CLFNBQVNDLFNBQVNDLElBQUk7SUFDcEIsT0FBTyxPQUFPQSxTQUFTLFlBQVlGLGlEQUFLQSxDQUFDRyxLQUFLRDtBQUNoRDtBQUVBLGlFQUFlRCxRQUFRQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvdmFsaWRhdGUuanM/MzE2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUkVHRVggZnJvbSAnLi9yZWdleC5qcyc7XG5cbmZ1bmN0aW9uIHZhbGlkYXRlKHV1aWQpIHtcbiAgcmV0dXJuIHR5cGVvZiB1dWlkID09PSAnc3RyaW5nJyAmJiBSRUdFWC50ZXN0KHV1aWQpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2YWxpZGF0ZTsiXSwibmFtZXMiOlsiUkVHRVgiLCJ2YWxpZGF0ZSIsInV1aWQiLCJ0ZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/validate.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/uuid/dist/esm-node/version.js":
/*!****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-node/version.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(sc_server)/./node_modules/uuid/dist/esm-node/validate.js\");\n\nfunction version(uuid) {\n    if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n        throw TypeError(\"Invalid UUID\");\n    }\n    return parseInt(uuid.substr(14, 1), 16);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUM7QUFFckMsU0FBU0MsUUFBUUMsSUFBSTtJQUNuQixJQUFJLENBQUNGLHdEQUFRQSxDQUFDRSxPQUFPO1FBQ25CLE1BQU1DLFVBQVU7SUFDbEI7SUFFQSxPQUFPQyxTQUFTRixLQUFLRyxPQUFPLElBQUksSUFBSTtBQUN0QztBQUVBLGlFQUFlSixPQUFPQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvdmVyc2lvbi5qcz9iZTJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcblxuZnVuY3Rpb24gdmVyc2lvbih1dWlkKSB7XG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ0ludmFsaWQgVVVJRCcpO1xuICB9XG5cbiAgcmV0dXJuIHBhcnNlSW50KHV1aWQuc3Vic3RyKDE0LCAxKSwgMTYpO1xufVxuXG5leHBvcnQgZGVmYXVsdCB2ZXJzaW9uOyJdLCJuYW1lcyI6WyJ2YWxpZGF0ZSIsInZlcnNpb24iLCJ1dWlkIiwiVHlwZUVycm9yIiwicGFyc2VJbnQiLCJzdWJzdHIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/uuid/dist/esm-node/version.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/yallist/iterator.js":
/*!******************************************!*\
  !*** ./node_modules/yallist/iterator.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = function(Yallist) {\n    Yallist.prototype[Symbol.iterator] = function*() {\n        for(let walker = this.head; walker; walker = walker.next){\n            yield walker.value;\n        }\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMveWFsbGlzdC9pdGVyYXRvci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBQSxPQUFPQyxVQUFVLFNBQVVDLE9BQU87SUFDaENBLFFBQVFDLFNBQVMsQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHO1FBQ25DLElBQUssSUFBSUMsU0FBUyxJQUFJLENBQUNDLE1BQU1ELFFBQVFBLFNBQVNBLE9BQU9FLEtBQU07WUFDekQsTUFBTUYsT0FBT0c7UUFDZjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL3lhbGxpc3QvaXRlcmF0b3IuanM/NmZlYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFlhbGxpc3QpIHtcbiAgWWFsbGlzdC5wcm90b3R5cGVbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKiAoKSB7XG4gICAgZm9yIChsZXQgd2Fsa2VyID0gdGhpcy5oZWFkOyB3YWxrZXI7IHdhbGtlciA9IHdhbGtlci5uZXh0KSB7XG4gICAgICB5aWVsZCB3YWxrZXIudmFsdWVcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiWWFsbGlzdCIsInByb3RvdHlwZSIsIlN5bWJvbCIsIml0ZXJhdG9yIiwid2Fsa2VyIiwiaGVhZCIsIm5leHQiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/yallist/iterator.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/yallist/yallist.js":
/*!*****************************************!*\
  !*** ./node_modules/yallist/yallist.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = Yallist;\nYallist.Node = Node;\nYallist.create = Yallist;\nfunction Yallist(list) {\n    var self = this;\n    if (!(self instanceof Yallist)) {\n        self = new Yallist();\n    }\n    self.tail = null;\n    self.head = null;\n    self.length = 0;\n    if (list && typeof list.forEach === \"function\") {\n        list.forEach(function(item) {\n            self.push(item);\n        });\n    } else if (arguments.length > 0) {\n        for(var i = 0, l = arguments.length; i < l; i++){\n            self.push(arguments[i]);\n        }\n    }\n    return self;\n}\nYallist.prototype.removeNode = function(node) {\n    if (node.list !== this) {\n        throw new Error(\"removing node which does not belong to this list\");\n    }\n    var next = node.next;\n    var prev = node.prev;\n    if (next) {\n        next.prev = prev;\n    }\n    if (prev) {\n        prev.next = next;\n    }\n    if (node === this.head) {\n        this.head = next;\n    }\n    if (node === this.tail) {\n        this.tail = prev;\n    }\n    node.list.length--;\n    node.next = null;\n    node.prev = null;\n    node.list = null;\n    return next;\n};\nYallist.prototype.unshiftNode = function(node) {\n    if (node === this.head) {\n        return;\n    }\n    if (node.list) {\n        node.list.removeNode(node);\n    }\n    var head = this.head;\n    node.list = this;\n    node.next = head;\n    if (head) {\n        head.prev = node;\n    }\n    this.head = node;\n    if (!this.tail) {\n        this.tail = node;\n    }\n    this.length++;\n};\nYallist.prototype.pushNode = function(node) {\n    if (node === this.tail) {\n        return;\n    }\n    if (node.list) {\n        node.list.removeNode(node);\n    }\n    var tail = this.tail;\n    node.list = this;\n    node.prev = tail;\n    if (tail) {\n        tail.next = node;\n    }\n    this.tail = node;\n    if (!this.head) {\n        this.head = node;\n    }\n    this.length++;\n};\nYallist.prototype.push = function() {\n    for(var i = 0, l = arguments.length; i < l; i++){\n        push(this, arguments[i]);\n    }\n    return this.length;\n};\nYallist.prototype.unshift = function() {\n    for(var i = 0, l = arguments.length; i < l; i++){\n        unshift(this, arguments[i]);\n    }\n    return this.length;\n};\nYallist.prototype.pop = function() {\n    if (!this.tail) {\n        return undefined;\n    }\n    var res = this.tail.value;\n    this.tail = this.tail.prev;\n    if (this.tail) {\n        this.tail.next = null;\n    } else {\n        this.head = null;\n    }\n    this.length--;\n    return res;\n};\nYallist.prototype.shift = function() {\n    if (!this.head) {\n        return undefined;\n    }\n    var res = this.head.value;\n    this.head = this.head.next;\n    if (this.head) {\n        this.head.prev = null;\n    } else {\n        this.tail = null;\n    }\n    this.length--;\n    return res;\n};\nYallist.prototype.forEach = function(fn, thisp) {\n    thisp = thisp || this;\n    for(var walker = this.head, i = 0; walker !== null; i++){\n        fn.call(thisp, walker.value, i, this);\n        walker = walker.next;\n    }\n};\nYallist.prototype.forEachReverse = function(fn, thisp) {\n    thisp = thisp || this;\n    for(var walker = this.tail, i = this.length - 1; walker !== null; i--){\n        fn.call(thisp, walker.value, i, this);\n        walker = walker.prev;\n    }\n};\nYallist.prototype.get = function(n) {\n    for(var i = 0, walker = this.head; walker !== null && i < n; i++){\n        // abort out of the list early if we hit a cycle\n        walker = walker.next;\n    }\n    if (i === n && walker !== null) {\n        return walker.value;\n    }\n};\nYallist.prototype.getReverse = function(n) {\n    for(var i = 0, walker = this.tail; walker !== null && i < n; i++){\n        // abort out of the list early if we hit a cycle\n        walker = walker.prev;\n    }\n    if (i === n && walker !== null) {\n        return walker.value;\n    }\n};\nYallist.prototype.map = function(fn, thisp) {\n    thisp = thisp || this;\n    var res = new Yallist();\n    for(var walker = this.head; walker !== null;){\n        res.push(fn.call(thisp, walker.value, this));\n        walker = walker.next;\n    }\n    return res;\n};\nYallist.prototype.mapReverse = function(fn, thisp) {\n    thisp = thisp || this;\n    var res = new Yallist();\n    for(var walker = this.tail; walker !== null;){\n        res.push(fn.call(thisp, walker.value, this));\n        walker = walker.prev;\n    }\n    return res;\n};\nYallist.prototype.reduce = function(fn, initial) {\n    var acc;\n    var walker = this.head;\n    if (arguments.length > 1) {\n        acc = initial;\n    } else if (this.head) {\n        walker = this.head.next;\n        acc = this.head.value;\n    } else {\n        throw new TypeError(\"Reduce of empty list with no initial value\");\n    }\n    for(var i = 0; walker !== null; i++){\n        acc = fn(acc, walker.value, i);\n        walker = walker.next;\n    }\n    return acc;\n};\nYallist.prototype.reduceReverse = function(fn, initial) {\n    var acc;\n    var walker = this.tail;\n    if (arguments.length > 1) {\n        acc = initial;\n    } else if (this.tail) {\n        walker = this.tail.prev;\n        acc = this.tail.value;\n    } else {\n        throw new TypeError(\"Reduce of empty list with no initial value\");\n    }\n    for(var i = this.length - 1; walker !== null; i--){\n        acc = fn(acc, walker.value, i);\n        walker = walker.prev;\n    }\n    return acc;\n};\nYallist.prototype.toArray = function() {\n    var arr = new Array(this.length);\n    for(var i = 0, walker = this.head; walker !== null; i++){\n        arr[i] = walker.value;\n        walker = walker.next;\n    }\n    return arr;\n};\nYallist.prototype.toArrayReverse = function() {\n    var arr = new Array(this.length);\n    for(var i = 0, walker = this.tail; walker !== null; i++){\n        arr[i] = walker.value;\n        walker = walker.prev;\n    }\n    return arr;\n};\nYallist.prototype.slice = function(from, to) {\n    to = to || this.length;\n    if (to < 0) {\n        to += this.length;\n    }\n    from = from || 0;\n    if (from < 0) {\n        from += this.length;\n    }\n    var ret = new Yallist();\n    if (to < from || to < 0) {\n        return ret;\n    }\n    if (from < 0) {\n        from = 0;\n    }\n    if (to > this.length) {\n        to = this.length;\n    }\n    for(var i = 0, walker = this.head; walker !== null && i < from; i++){\n        walker = walker.next;\n    }\n    for(; walker !== null && i < to; i++, walker = walker.next){\n        ret.push(walker.value);\n    }\n    return ret;\n};\nYallist.prototype.sliceReverse = function(from, to) {\n    to = to || this.length;\n    if (to < 0) {\n        to += this.length;\n    }\n    from = from || 0;\n    if (from < 0) {\n        from += this.length;\n    }\n    var ret = new Yallist();\n    if (to < from || to < 0) {\n        return ret;\n    }\n    if (from < 0) {\n        from = 0;\n    }\n    if (to > this.length) {\n        to = this.length;\n    }\n    for(var i = this.length, walker = this.tail; walker !== null && i > to; i--){\n        walker = walker.prev;\n    }\n    for(; walker !== null && i > from; i--, walker = walker.prev){\n        ret.push(walker.value);\n    }\n    return ret;\n};\nYallist.prototype.splice = function(start, deleteCount, ...nodes) {\n    if (start > this.length) {\n        start = this.length - 1;\n    }\n    if (start < 0) {\n        start = this.length + start;\n    }\n    for(var i = 0, walker = this.head; walker !== null && i < start; i++){\n        walker = walker.next;\n    }\n    var ret = [];\n    for(var i = 0; walker && i < deleteCount; i++){\n        ret.push(walker.value);\n        walker = this.removeNode(walker);\n    }\n    if (walker === null) {\n        walker = this.tail;\n    }\n    if (walker !== this.head && walker !== this.tail) {\n        walker = walker.prev;\n    }\n    for(var i = 0; i < nodes.length; i++){\n        walker = insert(this, walker, nodes[i]);\n    }\n    return ret;\n};\nYallist.prototype.reverse = function() {\n    var head = this.head;\n    var tail = this.tail;\n    for(var walker = head; walker !== null; walker = walker.prev){\n        var p = walker.prev;\n        walker.prev = walker.next;\n        walker.next = p;\n    }\n    this.head = tail;\n    this.tail = head;\n    return this;\n};\nfunction insert(self, node, value) {\n    var inserted = node === self.head ? new Node(value, null, node, self) : new Node(value, node, node.next, self);\n    if (inserted.next === null) {\n        self.tail = inserted;\n    }\n    if (inserted.prev === null) {\n        self.head = inserted;\n    }\n    self.length++;\n    return inserted;\n}\nfunction push(self, item) {\n    self.tail = new Node(item, self.tail, null, self);\n    if (!self.head) {\n        self.head = self.tail;\n    }\n    self.length++;\n}\nfunction unshift(self, item) {\n    self.head = new Node(item, null, self.head, self);\n    if (!self.tail) {\n        self.tail = self.head;\n    }\n    self.length++;\n}\nfunction Node(value, prev, next, list) {\n    if (!(this instanceof Node)) {\n        return new Node(value, prev, next, list);\n    }\n    this.list = list;\n    this.value = value;\n    if (prev) {\n        prev.next = this;\n        this.prev = prev;\n    } else {\n        this.prev = null;\n    }\n    if (next) {\n        next.prev = this;\n        this.next = next;\n    } else {\n        this.next = null;\n    }\n}\ntry {\n    // add if support for Symbol.iterator is present\n    __webpack_require__(/*! ./iterator.js */ \"(sc_server)/./node_modules/yallist/iterator.js\")(Yallist);\n} catch (er) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/yallist/yallist.js\n");

/***/ }),

/***/ "(sc_server)/./src/app/api/auth/[...nextauth]/route.tsx":
/*!**************************************************!*\
  !*** ./src/app/api/auth/[...nextauth]/route.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ handler),\n/* harmony export */   POST: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"(sc_server)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../options */ \"(sc_server)/./src/app/options.tsx\");\n\n\nconst handler = next_auth__WEBPACK_IMPORTED_MODULE_0___default()(_options__WEBPACK_IMPORTED_MODULE_1__.options);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9zcmMvYXBwL2FwaS9hdXRoL1suLi5uZXh0YXV0aF0vcm91dGUudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdDO0FBQ1E7QUFFeEMsTUFBTUUsVUFBVUYsZ0RBQVFBLENBQUNDLDZDQUFPQTtBQUVRIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL3NyYy9hcHAvYXBpL2F1dGgvWy4uLm5leHRhdXRoXS9yb3V0ZS50c3g/YjFiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTmV4dEF1dGggZnJvbSAnbmV4dC1hdXRoJ1xuaW1wb3J0IHtvcHRpb25zfSBmcm9tICcuLi8uLi8uLi9vcHRpb25zJ1xuXG5jb25zdCBoYW5kbGVyID0gTmV4dEF1dGgob3B0aW9ucylcblxuZXhwb3J0IHtoYW5kbGVyIGFzIEdFVCwgaGFuZGxlciBhcyBQT1NUfVxuIl0sIm5hbWVzIjpbIk5leHRBdXRoIiwib3B0aW9ucyIsImhhbmRsZXIiLCJHRVQiLCJQT1NUIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./src/app/api/auth/[...nextauth]/route.tsx\n");

/***/ }),

/***/ "(sc_server)/./src/app/options.tsx":
/*!*****************************!*\
  !*** ./src/app/options.tsx ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   options: () => (/* binding */ options)\n/* harmony export */ });\n/* harmony import */ var next_auth_providers_kakao__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/providers/kakao */ \"(sc_server)/./node_modules/next-auth/providers/kakao.js\");\n/* harmony import */ var next_auth_providers_naver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/naver */ \"(sc_server)/./node_modules/next-auth/providers/naver.js\");\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! process */ \"process\");\n/* harmony import */ var process__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(process__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utility_zustand_UserZustand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utility/zustand/UserZustand */ \"(sc_server)/./src/utility/zustand/UserZustand.tsx\");\n\n\n\n\nconst options = {\n    providers: [\n        (0,next_auth_providers_kakao__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n            clientId: \"e1610e7956117e415e82be6807b0cfac\",\n            clientSecret: \"Rea3l1kk3ItNsg1DGu6EBdPtVfI6pQ6P\"\n        }),\n        (0,next_auth_providers_naver__WEBPACK_IMPORTED_MODULE_1__[\"default\"])({\n            clientId: \"YdzCpNSAHUyHcMI3RnR_\",\n            clientSecret: \"zUo8OmdDze\"\n        })\n    ],\n    events: {\n        async signIn (data) {\n            const { logIn } = (0,_utility_zustand_UserZustand__WEBPACK_IMPORTED_MODULE_3__.loginUser)();\n            console.log(data, logIn);\n            logIn({\n                ...data.user,\n                ...data.account\n            });\n        },\n        async signOut (message) {},\n        async session (message) {}\n    },\n    session: {\n        strategy: \"jwt\"\n    },\n    callbacks: {\n        async jwt ({ token }) {\n            return token;\n        },\n        async session ({ session, user, token }) {\n            return session;\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9zcmMvYXBwL29wdGlvbnMudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxRDtBQUNBO0FBRW5CO0FBQ3NCO0FBRWpELE1BQU1JLFVBQTJCO0lBQ3RDQyxXQUFXO1FBQ1RMLHFFQUFhQSxDQUFDO1lBQ1pNLFVBQVVKLGtDQUEyQ007WUFDckRDLGNBQWNQLGtDQUEyQ1E7UUFDM0Q7UUFDQVQscUVBQWFBLENBQUM7WUFDWkssVUFBVUosc0JBQTJDUztZQUNyREYsY0FBY1AsWUFBMkNVO1FBQzNEO0tBQ0Q7SUFDREMsUUFBUTtRQUNOLE1BQU1DLFFBQU9DLElBQUk7WUFDZixNQUFNLEVBQUNDLEtBQUssRUFBQyxHQUFHYix1RUFBU0E7WUFDekJjLFFBQVFDLElBQUlILE1BQU1DO1lBQ2xCQSxNQUFNO2dCQUFDLEdBQUdELEtBQUtJLElBQUk7Z0JBQUUsR0FBR0osS0FBS0ssT0FBTztZQUFBO1FBQ3RDO1FBQ0EsTUFBTUMsU0FBUUMsT0FBTyxHQUFHO1FBQ3hCLE1BQU1DLFNBQVFELE9BQU8sR0FBRztJQUMxQjtJQUNBQyxTQUFTO1FBQ1BDLFVBQVU7SUFDWjtJQUVBQyxXQUFXO1FBQ1QsTUFBTUMsS0FBSSxFQUFDQyxLQUFLLEVBQUM7WUFDZixPQUFPQTtRQUNUO1FBQ0EsTUFBTUosU0FBUSxFQUFDQSxPQUFPLEVBQUVKLElBQUksRUFBRVEsS0FBSyxFQUFDO1lBQ2xDLE9BQU9KO1FBQ1Q7SUFDRjtBQUNGLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vc3JjL2FwcC9vcHRpb25zLnRzeD8yYzI1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBLYWthb1Byb3ZpZGVyIGZyb20gJ25leHQtYXV0aC9wcm92aWRlcnMva2FrYW8nXG5pbXBvcnQgTmF2ZXJQcm92aWRlciBmcm9tICduZXh0LWF1dGgvcHJvdmlkZXJzL25hdmVyJ1xuaW1wb3J0IHtOZXh0QXV0aE9wdGlvbnN9IGZyb20gJ25leHQtYXV0aCdcbmltcG9ydCAqIGFzIHByb2Nlc3MgZnJvbSAncHJvY2VzcydcbmltcG9ydCB7bG9naW5Vc2VyfSBmcm9tICcuLi91dGlsaXR5L3p1c3RhbmQvVXNlclp1c3RhbmQnXG5cbmV4cG9ydCBjb25zdCBvcHRpb25zOiBOZXh0QXV0aE9wdGlvbnMgPSB7XG4gIHByb3ZpZGVyczogW1xuICAgIEtha2FvUHJvdmlkZXIoe1xuICAgICAgY2xpZW50SWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0tBS0FPX0xPR0lOX0FQSV9LRVkhLFxuICAgICAgY2xpZW50U2VjcmV0OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19LQUtBT19DTElFTlRfU0VDUkVUISxcbiAgICB9KSxcbiAgICBOYXZlclByb3ZpZGVyKHtcbiAgICAgIGNsaWVudElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19OQVZFUl9MT0dJTl9BUElfS0VZISxcbiAgICAgIGNsaWVudFNlY3JldDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfTkFWRVJfQ0xJRU5UX1NFQ1JFVCEsXG4gICAgfSksXG4gIF0sXG4gIGV2ZW50czoge1xuICAgIGFzeW5jIHNpZ25JbihkYXRhKSB7XG4gICAgICBjb25zdCB7bG9nSW59ID0gbG9naW5Vc2VyKClcbiAgICAgIGNvbnNvbGUubG9nKGRhdGEsIGxvZ0luKVxuICAgICAgbG9nSW4oey4uLmRhdGEudXNlciwgLi4uZGF0YS5hY2NvdW50fSlcbiAgICB9LFxuICAgIGFzeW5jIHNpZ25PdXQobWVzc2FnZSkge30sXG4gICAgYXN5bmMgc2Vzc2lvbihtZXNzYWdlKSB7fSxcbiAgfSxcbiAgc2Vzc2lvbjoge1xuICAgIHN0cmF0ZWd5OiAnand0JyxcbiAgfSxcblxuICBjYWxsYmFja3M6IHtcbiAgICBhc3luYyBqd3Qoe3Rva2VufSkge1xuICAgICAgcmV0dXJuIHRva2VuXG4gICAgfSxcbiAgICBhc3luYyBzZXNzaW9uKHtzZXNzaW9uLCB1c2VyLCB0b2tlbn0pIHtcbiAgICAgIHJldHVybiBzZXNzaW9uXG4gICAgfSxcbiAgfSxcbn1cbiJdLCJuYW1lcyI6WyJLYWthb1Byb3ZpZGVyIiwiTmF2ZXJQcm92aWRlciIsInByb2Nlc3MiLCJsb2dpblVzZXIiLCJvcHRpb25zIiwicHJvdmlkZXJzIiwiY2xpZW50SWQiLCJlbnYiLCJORVhUX1BVQkxJQ19LQUtBT19MT0dJTl9BUElfS0VZIiwiY2xpZW50U2VjcmV0IiwiTkVYVF9QVUJMSUNfS0FLQU9fQ0xJRU5UX1NFQ1JFVCIsIk5FWFRfUFVCTElDX05BVkVSX0xPR0lOX0FQSV9LRVkiLCJORVhUX1BVQkxJQ19OQVZFUl9DTElFTlRfU0VDUkVUIiwiZXZlbnRzIiwic2lnbkluIiwiZGF0YSIsImxvZ0luIiwiY29uc29sZSIsImxvZyIsInVzZXIiLCJhY2NvdW50Iiwic2lnbk91dCIsIm1lc3NhZ2UiLCJzZXNzaW9uIiwic3RyYXRlZ3kiLCJjYWxsYmFja3MiLCJqd3QiLCJ0b2tlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./src/app/options.tsx\n");

/***/ }),

/***/ "(sc_server)/./src/utility/zustand/UserZustand.tsx":
/*!*********************************************!*\
  !*** ./src/utility/zustand/UserZustand.tsx ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   loginUser: () => (/* binding */ loginUser)\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"(sc_server)/./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var zustand_middleware__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! zustand/middleware */ \"(sc_server)/./node_modules/zustand/esm/middleware.mjs\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/react */ \"(sc_server)/./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\nconst useUserStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((set)=>({\n        isLoggedIn: false,\n        account: {},\n        user: {\n            platform: \"\",\n            name: \"\",\n            email: \"\",\n            picture: \"\",\n            sub: \"\",\n            iat: 0,\n            exp: 0,\n            jti: \"\"\n        },\n        logIn: (data)=>set({\n                isLoggedIn: true,\n                user: data.user,\n                account: data.account\n            }),\n        logOut: ()=>set({\n                isLoggedIn: false\n            }),\n        setUser: (userData)=>{\n            if (userData) {\n                set({\n                    isLoggedIn: true,\n                    user: userData\n                });\n            }\n        }\n    }));\nconst loginUser = (0,zustand__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.persist)((set)=>({\n        user: null,\n        isLoggedIn: false,\n        logIn: (data)=>set({\n                user: data,\n                isLoggedIn: true\n            }),\n        logOut: ()=>{\n            set({\n                user: null,\n                isLoggedIn: false\n            });\n            localStorage.removeItem(\"user\");\n            (0,next_auth_react__WEBPACK_IMPORTED_MODULE_0__.signOut)();\n        }\n    }), {\n    name: \"user\",\n    storage: (0,zustand_middleware__WEBPACK_IMPORTED_MODULE_2__.createJSONStorage)(()=>localStorage)\n}));\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useUserStore);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9zcmMvdXRpbGl0eS96dXN0YW5kL1VzZXJadXN0YW5kLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNEI7QUFFaUM7QUFDdEI7QUFXdkMsTUFBTUksZUFBZUosbURBQU1BLENBQVlLLENBQUFBLE1BQVE7UUFDN0NDLFlBQVk7UUFDWkMsU0FBUyxDQUFDO1FBQ1ZDLE1BQU07WUFDSkMsVUFBVTtZQUNWQyxNQUFNO1lBQ05DLE9BQU87WUFDUEMsU0FBUztZQUNUQyxLQUFLO1lBQ0xDLEtBQUs7WUFDTEMsS0FBSztZQUNMQyxLQUFLO1FBQ1A7UUFDQUMsT0FBT0MsQ0FBQUEsT0FDTGIsSUFBSTtnQkFBQ0MsWUFBWTtnQkFBTUUsTUFBTVUsS0FBS1Y7Z0JBQU1ELFNBQVNXLEtBQUtYO1lBQU87UUFDL0RZLFFBQVEsSUFBTWQsSUFBSTtnQkFBQ0MsWUFBWTtZQUFLO1FBQ3BDYyxTQUFTQyxDQUFBQTtZQUNQLElBQUlBLFVBQVU7Z0JBQ1poQixJQUFJO29CQUFDQyxZQUFZO29CQUFNRSxNQUFNYTtnQkFBUTtZQUN2QztRQUNGO0lBQ0Y7QUFFTyxNQUFNQyxZQUFZdEIsbURBQU1BLENBQzdCRSwyREFBT0EsQ0FDTEcsQ0FBQUEsTUFBUTtRQUNORyxNQUFNO1FBQ05GLFlBQVk7UUFDWlcsT0FBT0MsQ0FBQUEsT0FBUWIsSUFBSTtnQkFBQ0csTUFBTVU7Z0JBQU1aLFlBQVk7WUFBSTtRQUNoRGEsUUFBUTtZQUNOZCxJQUFJO2dCQUFDRyxNQUFNO2dCQUFNRixZQUFZO1lBQUs7WUFDbENpQixhQUFhQyxXQUFXO1lBQ3hCckIsd0RBQU9BO1FBQ1Q7SUFDRixJQUNBO0lBQ0VPLE1BQU07SUFDTmUsU0FBU3hCLHFFQUFpQkEsQ0FBQyxJQUFNc0I7QUFDbkMsSUFFSDtBQUVELGlFQUFlbkIsWUFBWUEsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9zcmMvdXRpbGl0eS96dXN0YW5kL1VzZXJadXN0YW5kLnRzeD83ZTI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcmVhdGUgZnJvbSAnenVzdGFuZCdcbmltcG9ydCB7VXNlclR5cGVzfSBmcm9tICdsb2Rhc2gnXG5pbXBvcnQge2NyZWF0ZUpTT05TdG9yYWdlLCBwZXJzaXN0fSBmcm9tICd6dXN0YW5kL21pZGRsZXdhcmUnXG5pbXBvcnQge3NpZ25PdXR9IGZyb20gJ25leHQtYXV0aC9yZWFjdCdcblxuaW50ZXJmYWNlIFVzZXJTdGF0ZSB7XG4gIGlzTG9nZ2VkSW46IGJvb2xlYW5cbiAgdXNlcjogVXNlclR5cGVzXG4gIGFjY291bnQ6IGFueVxuICBsb2dJbjogKGRhdGE6IGFueSkgPT4gdm9pZFxuICBsb2dPdXQ6ICgpID0+IHZvaWRcbiAgc2V0VXNlcjogKHVzZXI6IGFueSkgPT4gdm9pZFxufVxuXG5jb25zdCB1c2VVc2VyU3RvcmUgPSBjcmVhdGU8VXNlclN0YXRlPihzZXQgPT4gKHtcbiAgaXNMb2dnZWRJbjogZmFsc2UsXG4gIGFjY291bnQ6IHt9LFxuICB1c2VyOiB7XG4gICAgcGxhdGZvcm06ICcnLFxuICAgIG5hbWU6ICcnLFxuICAgIGVtYWlsOiAnJyxcbiAgICBwaWN0dXJlOiAnJyxcbiAgICBzdWI6ICcnLFxuICAgIGlhdDogMCxcbiAgICBleHA6IDAsXG4gICAganRpOiAnJyxcbiAgfSxcbiAgbG9nSW46IGRhdGEgPT5cbiAgICBzZXQoe2lzTG9nZ2VkSW46IHRydWUsIHVzZXI6IGRhdGEudXNlciwgYWNjb3VudDogZGF0YS5hY2NvdW50fSksXG4gIGxvZ091dDogKCkgPT4gc2V0KHtpc0xvZ2dlZEluOiBmYWxzZX0pLFxuICBzZXRVc2VyOiB1c2VyRGF0YSA9PiB7XG4gICAgaWYgKHVzZXJEYXRhKSB7XG4gICAgICBzZXQoe2lzTG9nZ2VkSW46IHRydWUsIHVzZXI6IHVzZXJEYXRhfSlcbiAgICB9XG4gIH0sXG59KSlcblxuZXhwb3J0IGNvbnN0IGxvZ2luVXNlciA9IGNyZWF0ZShcbiAgcGVyc2lzdChcbiAgICBzZXQgPT4gKHtcbiAgICAgIHVzZXI6IG51bGwsXG4gICAgICBpc0xvZ2dlZEluOiBmYWxzZSxcbiAgICAgIGxvZ0luOiBkYXRhID0+IHNldCh7dXNlcjogZGF0YSwgaXNMb2dnZWRJbjogdHJ1ZX0pLFxuICAgICAgbG9nT3V0OiAoKSA9PiB7XG4gICAgICAgIHNldCh7dXNlcjogbnVsbCwgaXNMb2dnZWRJbjogZmFsc2V9KVxuICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlcicpXG4gICAgICAgIHNpZ25PdXQoKVxuICAgICAgfSxcbiAgICB9KSxcbiAgICB7XG4gICAgICBuYW1lOiAndXNlcicsXG4gICAgICBzdG9yYWdlOiBjcmVhdGVKU09OU3RvcmFnZSgoKSA9PiBsb2NhbFN0b3JhZ2UpLFxuICAgIH0sXG4gICksXG4pXG5cbmV4cG9ydCBkZWZhdWx0IHVzZVVzZXJTdG9yZVxuXG4vL3tcbi8vICAgdXNlcjoge1xuLy8gICAgIGlkOiAnMjgwNjAxMzQ2OCcsXG4vLyAgICAgbmFtZTogJ+ydtOyKueynhCcsXG4vLyAgICAgZW1haWw6ICdkbHRtZHdsczE1NEBrYWthby5jb20nLFxuLy8gICAgIGltYWdlOiAnaHR0cDovL2sua2FrYW9jZG4ubmV0L2RuL2JGYkE2eC9idHJHOEhaUEg2OS85RFNPN29vMzFJNEZkcWNrbHppcHQwL2ltZ182NDB4NjQwLmpwZydcbi8vICAgfSxcbi8vICAgYWNjb3VudDoge1xuLy8gICAgIHByb3ZpZGVyOiAna2FrYW8nLFxuLy8gICAgIHR5cGU6ICdvYXV0aCcsXG4vLyAgICAgcHJvdmlkZXJBY2NvdW50SWQ6ICcyODA2MDEzNDY4Jyxcbi8vICAgICBhY2Nlc3NfdG9rZW46ICdWTEdCWnJYcUxHUnNDalJnWXRyd194T3JBbDdjTENIWndhajFnbmQtQ2lvbFVRQUFBWWtDbTA3bicsXG4vLyAgICAgdG9rZW5fdHlwZTogJ2JlYXJlcicsXG4vLyAgICAgcmVmcmVzaF90b2tlbjogJ3RJYkFPVUpMRXJzcTVHTkduRFVzVmJUR05sZGJqSzVSbHhxa3pNUUNDaW9sVVFBQUFZa0NtMDdsJyxcbi8vICAgICBleHBpcmVzX2F0OiAxNjg3OTg3NDc4LFxuLy8gICAgIHNjb3BlOiAnYWdlX3JhbmdlIGJpcnRoZGF5IGFjY291bnRfZW1haWwgcHJvZmlsZV9pbWFnZSBnZW5kZXIgcHJvZmlsZV9uaWNrbmFtZSBzdG9yeV9wZXJtYWxpbmsnLFxuLy8gICAgIHJlZnJlc2hfdG9rZW5fZXhwaXJlc19pbjogNTE4Mzk5OVxuLy8gICB9LFxuLy8gICBwcm9maWxlOiB7XG4vLyAgICAgaWQ6ICcyODA2MDEzNDY4Jyxcbi8vICAgICBuYW1lOiAn7J207Iq57KeEJyxcbi8vICAgICBlbWFpbDogJ2RsdG1kd2xzMTU0QGtha2FvLmNvbScsXG4vLyAgICAgaW1hZ2U6ICdodHRwOi8vay5rYWthb2Nkbi5uZXQvZG4vYkZiQTZ4L2J0ckc4SFpQSDY5LzlEU083b28zMUk0RmRxY2tsemlwdDAvaW1nXzY0MHg2NDAuanBnJ1xuLy8gICB9LFxuLy8gICBpc05ld1VzZXI6IHVuZGVmaW5lZFxuLy8gfVxuIl0sIm5hbWVzIjpbImNyZWF0ZSIsImNyZWF0ZUpTT05TdG9yYWdlIiwicGVyc2lzdCIsInNpZ25PdXQiLCJ1c2VVc2VyU3RvcmUiLCJzZXQiLCJpc0xvZ2dlZEluIiwiYWNjb3VudCIsInVzZXIiLCJwbGF0Zm9ybSIsIm5hbWUiLCJlbWFpbCIsInBpY3R1cmUiLCJzdWIiLCJpYXQiLCJleHAiLCJqdGkiLCJsb2dJbiIsImRhdGEiLCJsb2dPdXQiLCJzZXRVc2VyIiwidXNlckRhdGEiLCJsb2dpblVzZXIiLCJsb2NhbFN0b3JhZ2UiLCJyZW1vdmVJdGVtIiwic3RvcmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./src/utility/zustand/UserZustand.tsx\n");

/***/ }),

/***/ "(sc_shared)/./node_modules/next/dist/client/components/action-async-storage.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/action-async-storage.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"actionAsyncStorage\", ({\n    enumerable: true,\n    get: function() {\n        return actionAsyncStorage;\n    }\n}));\nconst _asynclocalstorage = __webpack_require__(/*! ./async-local-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/async-local-storage.js\");\nconst actionAsyncStorage = (0, _asynclocalstorage.createAsyncLocalStorage)();\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=action-async-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2FjdGlvbi1hc3luYy1zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTztBQUNYLENBQUMsRUFBQztBQUNGSCxzREFBcUQ7SUFDakRJLFlBQVk7SUFDWkMsS0FBSztRQUNELE9BQU9DO0lBQ1g7QUFDSixDQUFDLEVBQUM7QUFDRixNQUFNQyxxQkFBcUJDLG1CQUFPQSxDQUFDLDRHQUF1QjtBQUMxRCxNQUFNRixxQkFBcUIsQ0FBQyxHQUFHQyxtQkFBbUJFLHVCQUFzQjtBQUV4RSxJQUFJLENBQUMsT0FBT1AsUUFBUVEsWUFBWSxjQUFlLE9BQU9SLFFBQVFRLFlBQVksWUFBWVIsUUFBUVEsWUFBWSxJQUFJLEtBQU0sT0FBT1IsUUFBUVEsUUFBUUMsZUFBZSxhQUFhO0lBQ3JLWCxPQUFPQyxlQUFlQyxRQUFRUSxTQUFTLGNBQWM7UUFBRVAsT0FBTztJQUFLO0lBQ25FSCxPQUFPWSxPQUFPVixRQUFRUSxTQUFTUjtJQUMvQlcsT0FBT1gsVUFBVUEsUUFBUVE7QUFDM0IsRUFFQSxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9hY3Rpb24tYXN5bmMtc3RvcmFnZS5qcz8xOTAzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYWN0aW9uQXN5bmNTdG9yYWdlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBhY3Rpb25Bc3luY1N0b3JhZ2U7XG4gICAgfVxufSk7XG5jb25zdCBfYXN5bmNsb2NhbHN0b3JhZ2UgPSByZXF1aXJlKFwiLi9hc3luYy1sb2NhbC1zdG9yYWdlXCIpO1xuY29uc3QgYWN0aW9uQXN5bmNTdG9yYWdlID0gKDAsIF9hc3luY2xvY2Fsc3RvcmFnZS5jcmVhdGVBc3luY0xvY2FsU3RvcmFnZSkoKTtcblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWN0aW9uLWFzeW5jLXN0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsImFjdGlvbkFzeW5jU3RvcmFnZSIsIl9hc3luY2xvY2Fsc3RvcmFnZSIsInJlcXVpcmUiLCJjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_shared)/./node_modules/next/dist/client/components/action-async-storage.js\n");

/***/ }),

/***/ "(sc_shared)/./node_modules/next/dist/client/components/async-local-storage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/async-local-storage.js ***!
  \*************************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"createAsyncLocalStorage\", ({\n    enumerable: true,\n    get: function() {\n        return createAsyncLocalStorage;\n    }\n}));\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\n    }\n    exit() {\n        throw new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\n    }\n    enterWith() {\n        throw new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\n    }\n}\nfunction createAsyncLocalStorage() {\n    if (globalThis.AsyncLocalStorage) {\n        return new globalThis.AsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=async-local-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2FzeW5jLWxvY2FsLXN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILDJEQUEwRDtJQUN0REksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DO0lBQ0ZDLFVBQVU7UUFDTixNQUFNLElBQUlDLE1BQU07SUFDcEI7SUFDQUMsV0FBVztRQUNQLDRFQUE0RTtRQUM1RSxPQUFPQztJQUNYO0lBQ0FDLE1BQU07UUFDRixNQUFNLElBQUlILE1BQU07SUFDcEI7SUFDQUksT0FBTztRQUNILE1BQU0sSUFBSUosTUFBTTtJQUNwQjtJQUNBSyxZQUFZO1FBQ1IsTUFBTSxJQUFJTCxNQUFNO0lBQ3BCO0FBQ0o7QUFDQSxTQUFTSDtJQUNMLElBQUlTLFdBQVdDLG1CQUFtQjtRQUM5QixPQUFPLElBQUlELFdBQVdDO0lBQzFCO0lBQ0EsT0FBTyxJQUFJVDtBQUNmO0FBRUEsSUFBSSxDQUFDLE9BQU9MLFFBQVFlLFlBQVksY0FBZSxPQUFPZixRQUFRZSxZQUFZLFlBQVlmLFFBQVFlLFlBQVksSUFBSSxLQUFNLE9BQU9mLFFBQVFlLFFBQVFDLGVBQWUsYUFBYTtJQUNyS2xCLE9BQU9DLGVBQWVDLFFBQVFlLFNBQVMsY0FBYztRQUFFZCxPQUFPO0lBQUs7SUFDbkVILE9BQU9tQixPQUFPakIsUUFBUWUsU0FBU2Y7SUFDL0JrQixPQUFPbEIsVUFBVUEsUUFBUWU7QUFDM0IsRUFFQSwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9hc3luYy1sb2NhbC1zdG9yYWdlLmpzP2FmNDMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVBc3luY0xvY2FsU3RvcmFnZVwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2U7XG4gICAgfVxufSk7XG5jbGFzcyBGYWtlQXN5bmNMb2NhbFN0b3JhZ2Uge1xuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogQXN5bmNMb2NhbFN0b3JhZ2UgYWNjZXNzZWQgaW4gcnVudGltZSB3aGVyZSBpdCBpcyBub3QgYXZhaWxhYmxlXCIpO1xuICAgIH1cbiAgICBnZXRTdG9yZSgpIHtcbiAgICAgICAgLy8gVGhpcyBmYWtlIGltcGxlbWVudGF0aW9uIG9mIEFzeW5jTG9jYWxTdG9yYWdlIGFsd2F5cyByZXR1cm5zIGB1bmRlZmluZWRgLlxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBydW4oKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogQXN5bmNMb2NhbFN0b3JhZ2UgYWNjZXNzZWQgaW4gcnVudGltZSB3aGVyZSBpdCBpcyBub3QgYXZhaWxhYmxlXCIpO1xuICAgIH1cbiAgICBleGl0KCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IEFzeW5jTG9jYWxTdG9yYWdlIGFjY2Vzc2VkIGluIHJ1bnRpbWUgd2hlcmUgaXQgaXMgbm90IGF2YWlsYWJsZVwiKTtcbiAgICB9XG4gICAgZW50ZXJXaXRoKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IEFzeW5jTG9jYWxTdG9yYWdlIGFjY2Vzc2VkIGluIHJ1bnRpbWUgd2hlcmUgaXQgaXMgbm90IGF2YWlsYWJsZVwiKTtcbiAgICB9XG59XG5mdW5jdGlvbiBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSgpIHtcbiAgICBpZiAoZ2xvYmFsVGhpcy5Bc3luY0xvY2FsU3RvcmFnZSkge1xuICAgICAgICByZXR1cm4gbmV3IGdsb2JhbFRoaXMuQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBGYWtlQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbn1cblxuaWYgKCh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnZnVuY3Rpb24nIHx8ICh0eXBlb2YgZXhwb3J0cy5kZWZhdWx0ID09PSAnb2JqZWN0JyAmJiBleHBvcnRzLmRlZmF1bHQgIT09IG51bGwpKSAmJiB0eXBlb2YgZXhwb3J0cy5kZWZhdWx0Ll9fZXNNb2R1bGUgPT09ICd1bmRlZmluZWQnKSB7XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLmRlZmF1bHQsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiAgT2JqZWN0LmFzc2lnbihleHBvcnRzLmRlZmF1bHQsIGV4cG9ydHMpO1xuICBtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMuZGVmYXVsdDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXN5bmMtbG9jYWwtc3RvcmFnZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UiLCJGYWtlQXN5bmNMb2NhbFN0b3JhZ2UiLCJkaXNhYmxlIiwiRXJyb3IiLCJnZXRTdG9yZSIsInVuZGVmaW5lZCIsInJ1biIsImV4aXQiLCJlbnRlcldpdGgiLCJnbG9iYWxUaGlzIiwiQXN5bmNMb2NhbFN0b3JhZ2UiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_shared)/./node_modules/next/dist/client/components/async-local-storage.js\n");

/***/ }),

/***/ "(sc_shared)/./node_modules/next/dist/client/components/request-async-storage.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/request-async-storage.js ***!
  \***************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"requestAsyncStorage\", ({\n    enumerable: true,\n    get: function() {\n        return requestAsyncStorage;\n    }\n}));\nconst _asynclocalstorage = __webpack_require__(/*! ./async-local-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/async-local-storage.js\");\nconst requestAsyncStorage = (0, _asynclocalstorage.createAsyncLocalStorage)();\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=request-async-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRkgsdURBQXNEO0lBQ2xESSxZQUFZO0lBQ1pDLEtBQUs7UUFDRCxPQUFPQztJQUNYO0FBQ0osQ0FBQyxFQUFDO0FBQ0YsTUFBTUMscUJBQXFCQyxtQkFBT0EsQ0FBQyw0R0FBdUI7QUFDMUQsTUFBTUYsc0JBQXNCLENBQUMsR0FBR0MsbUJBQW1CRSx1QkFBc0I7QUFFekUsSUFBSSxDQUFDLE9BQU9QLFFBQVFRLFlBQVksY0FBZSxPQUFPUixRQUFRUSxZQUFZLFlBQVlSLFFBQVFRLFlBQVksSUFBSSxLQUFNLE9BQU9SLFFBQVFRLFFBQVFDLGVBQWUsYUFBYTtJQUNyS1gsT0FBT0MsZUFBZUMsUUFBUVEsU0FBUyxjQUFjO1FBQUVQLE9BQU87SUFBSztJQUNuRUgsT0FBT1ksT0FBT1YsUUFBUVEsU0FBU1I7SUFDL0JXLE9BQU9YLFVBQVVBLFFBQVFRO0FBQzNCLEVBRUEsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvcmVxdWVzdC1hc3luYy1zdG9yYWdlLmpzPzMzOWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJyZXF1ZXN0QXN5bmNTdG9yYWdlXCIsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiByZXF1ZXN0QXN5bmNTdG9yYWdlO1xuICAgIH1cbn0pO1xuY29uc3QgX2FzeW5jbG9jYWxzdG9yYWdlID0gcmVxdWlyZShcIi4vYXN5bmMtbG9jYWwtc3RvcmFnZVwiKTtcbmNvbnN0IHJlcXVlc3RBc3luY1N0b3JhZ2UgPSAoMCwgX2FzeW5jbG9jYWxzdG9yYWdlLmNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlKSgpO1xuXG5pZiAoKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdmdW5jdGlvbicgfHwgKHR5cGVvZiBleHBvcnRzLmRlZmF1bHQgPT09ICdvYmplY3QnICYmIGV4cG9ydHMuZGVmYXVsdCAhPT0gbnVsbCkpICYmIHR5cGVvZiBleHBvcnRzLmRlZmF1bHQuX19lc01vZHVsZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMuZGVmYXVsdCwgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuICBPYmplY3QuYXNzaWduKGV4cG9ydHMuZGVmYXVsdCwgZXhwb3J0cyk7XG4gIG1vZHVsZS5leHBvcnRzID0gZXhwb3J0cy5kZWZhdWx0O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsInJlcXVlc3RBc3luY1N0b3JhZ2UiLCJfYXN5bmNsb2NhbHN0b3JhZ2UiLCJyZXF1aXJlIiwiY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_shared)/./node_modules/next/dist/client/components/request-async-storage.js\n");

/***/ }),

/***/ "(sc_shared)/./node_modules/next/dist/client/components/static-generation-async-storage.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/client/components/static-generation-async-storage.js ***!
  \*************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"staticGenerationAsyncStorage\", ({\n    enumerable: true,\n    get: function() {\n        return staticGenerationAsyncStorage;\n    }\n}));\nconst _asynclocalstorage = __webpack_require__(/*! ./async-local-storage */ \"(sc_shared)/./node_modules/next/dist/client/components/async-local-storage.js\");\nconst staticGenerationAsyncStorage = (0, _asynclocalstorage.createAsyncLocalStorage)();\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=static-generation-async-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3N0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0ZILGdFQUErRDtJQUMzREksWUFBWTtJQUNaQyxLQUFLO1FBQ0QsT0FBT0M7SUFDWDtBQUNKLENBQUMsRUFBQztBQUNGLE1BQU1DLHFCQUFxQkMsbUJBQU9BLENBQUMsNEdBQXVCO0FBQzFELE1BQU1GLCtCQUErQixDQUFDLEdBQUdDLG1CQUFtQkUsdUJBQXNCO0FBRWxGLElBQUksQ0FBQyxPQUFPUCxRQUFRUSxZQUFZLGNBQWUsT0FBT1IsUUFBUVEsWUFBWSxZQUFZUixRQUFRUSxZQUFZLElBQUksS0FBTSxPQUFPUixRQUFRUSxRQUFRQyxlQUFlLGFBQWE7SUFDcktYLE9BQU9DLGVBQWVDLFFBQVFRLFNBQVMsY0FBYztRQUFFUCxPQUFPO0lBQUs7SUFDbkVILE9BQU9ZLE9BQU9WLFFBQVFRLFNBQVNSO0lBQy9CVyxPQUFPWCxVQUFVQSxRQUFRUTtBQUMzQixFQUVBLDJEQUEyRCIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3N0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2UuanM/MmIyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcIiwge1xuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgZ2V0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2U7XG4gICAgfVxufSk7XG5jb25zdCBfYXN5bmNsb2NhbHN0b3JhZ2UgPSByZXF1aXJlKFwiLi9hc3luYy1sb2NhbC1zdG9yYWdlXCIpO1xuY29uc3Qgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSA9ICgwLCBfYXN5bmNsb2NhbHN0b3JhZ2UuY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UpKCk7XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2UuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZW51bWVyYWJsZSIsImdldCIsInN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UiLCJfYXN5bmNsb2NhbHN0b3JhZ2UiLCJyZXF1aXJlIiwiY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UiLCJkZWZhdWx0IiwiX19lc01vZHVsZSIsImFzc2lnbiIsIm1vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_shared)/./node_modules/next/dist/client/components/static-generation-async-storage.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hcnJheUxpa2VUb0FycmF5LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxTQUFTQSxrQkFBa0JDLEdBQUcsRUFBRUMsR0FBRztJQUNqQyxJQUFJQSxPQUFPLFFBQVFBLE1BQU1ELElBQUlFLFFBQVFELE1BQU1ELElBQUlFO0lBQy9DLElBQUssSUFBSUMsSUFBSSxHQUFHQyxPQUFPLElBQUlDLE1BQU1KLE1BQU1FLElBQUlGLEtBQUtFLElBQUtDLElBQUksQ0FBQ0QsRUFBRSxHQUFHSCxHQUFHLENBQUNHLEVBQUU7SUFDckUsT0FBT0M7QUFDVDtBQUNBRSxPQUFPQyxVQUFVUixtQkFBbUJPLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXJyYXlMaWtlVG9BcnJheS5qcz9jZjA5Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gIGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoO1xuICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIGFycjJbaV0gPSBhcnJbaV07XG4gIHJldHVybiBhcnIyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfYXJyYXlMaWtlVG9BcnJheSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJfYXJyYXlMaWtlVG9BcnJheSIsImFyciIsImxlbiIsImxlbmd0aCIsImkiLCJhcnIyIiwiQXJyYXkiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hcnJheVdpdGhIb2xlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EsZ0JBQWdCQyxHQUFHO0lBQzFCLElBQUlDLE1BQU1DLFFBQVFGLE1BQU0sT0FBT0E7QUFDakM7QUFDQUcsT0FBT0MsVUFBVUwsaUJBQWlCSSx5QkFBeUJFLEdBQUcsTUFBTUYseUJBQXlCLEdBQUdBLE9BQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2FycmF5V2l0aEhvbGVzLmpzP2E1MjUiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfYXJyYXlXaXRoSG9sZXMsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX2FycmF5V2l0aEhvbGVzIiwiYXJyIiwiQXJyYXkiLCJpc0FycmF5IiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/arrayWithHoles.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _assertThisInitialized(self) {\n    if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLHVCQUF1QkMsSUFBSTtJQUNsQyxJQUFJQSxTQUFTLEtBQUssR0FBRztRQUNuQixNQUFNLElBQUlDLGVBQWU7SUFDM0I7SUFDQSxPQUFPRDtBQUNUO0FBQ0FFLE9BQU9DLFVBQVVKLHdCQUF3QkcseUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanM/MjAxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuICByZXR1cm4gc2VsZjtcbn1cbm1vZHVsZS5leHBvcnRzID0gX2Fzc2VydFRoaXNJbml0aWFsaXplZCwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJfYXNzZXJ0VGhpc0luaXRpYWxpemVkIiwic2VsZiIsIlJlZmVyZW5jZUVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxTQUFTQSxtQkFBbUJDLEdBQUcsRUFBRUMsT0FBTyxFQUFFQyxNQUFNLEVBQUVDLEtBQUssRUFBRUMsTUFBTSxFQUFFQyxHQUFHLEVBQUVDLEdBQUc7SUFDdkUsSUFBSTtRQUNGLElBQUlDLE9BQU9QLEdBQUcsQ0FBQ0ssSUFBSSxDQUFDQztRQUNwQixJQUFJRSxRQUFRRCxLQUFLQztJQUNuQixFQUFFLE9BQU9DLE9BQU87UUFDZFAsT0FBT087UUFDUDtJQUNGO0lBQ0EsSUFBSUYsS0FBS0csTUFBTTtRQUNiVCxRQUFRTztJQUNWLE9BQU87UUFDTEcsUUFBUVYsUUFBUU8sT0FBT0ksS0FBS1QsT0FBT0M7SUFDckM7QUFDRjtBQUNBLFNBQVNTLGtCQUFrQkMsRUFBRTtJQUMzQixPQUFPO1FBQ0wsSUFBSUMsT0FBTyxJQUFJLEVBQ2JDLE9BQU9DO1FBQ1QsT0FBTyxJQUFJTixRQUFRLFNBQVVWLE9BQU8sRUFBRUMsTUFBTTtZQUMxQyxJQUFJRixNQUFNYyxHQUFHSSxNQUFNSCxNQUFNQztZQUN6QixTQUFTYixNQUFNSyxLQUFLO2dCQUNsQlQsbUJBQW1CQyxLQUFLQyxTQUFTQyxRQUFRQyxPQUFPQyxRQUFRLFFBQVFJO1lBQ2xFO1lBQ0EsU0FBU0osT0FBT2UsR0FBRztnQkFDakJwQixtQkFBbUJDLEtBQUtDLFNBQVNDLFFBQVFDLE9BQU9DLFFBQVEsU0FBU2U7WUFDbkU7WUFDQWhCLE1BQU1pQjtRQUNSO0lBQ0Y7QUFDRjtBQUNBQyxPQUFPQyxVQUFVVCxtQkFBbUJRLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvci5qcz9kMzEyIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHtcbiAgdHJ5IHtcbiAgICB2YXIgaW5mbyA9IGdlbltrZXldKGFyZyk7XG4gICAgdmFyIHZhbHVlID0gaW5mby52YWx1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZWplY3QoZXJyb3IpO1xuICAgIHJldHVybjtcbiAgfVxuICBpZiAoaW5mby5kb25lKSB7XG4gICAgcmVzb2x2ZSh2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpO1xuICB9XG59XG5mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihmbikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBzZWxmID0gdGhpcyxcbiAgICAgIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBnZW4gPSBmbi5hcHBseShzZWxmLCBhcmdzKTtcbiAgICAgIGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7XG4gICAgICAgIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgXCJuZXh0XCIsIHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIF90aHJvdyhlcnIpIHtcbiAgICAgICAgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCBcInRocm93XCIsIGVycik7XG4gICAgICB9XG4gICAgICBfbmV4dCh1bmRlZmluZWQpO1xuICAgIH0pO1xuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBfYXN5bmNUb0dlbmVyYXRvciwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJhc3luY0dlbmVyYXRvclN0ZXAiLCJnZW4iLCJyZXNvbHZlIiwicmVqZWN0IiwiX25leHQiLCJfdGhyb3ciLCJrZXkiLCJhcmciLCJpbmZvIiwidmFsdWUiLCJlcnJvciIsImRvbmUiLCJQcm9taXNlIiwidGhlbiIsIl9hc3luY1RvR2VuZXJhdG9yIiwiZm4iLCJzZWxmIiwiYXJncyIsImFyZ3VtZW50cyIsImFwcGx5IiwiZXJyIiwidW5kZWZpbmVkIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/asyncToGenerator.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/classApplyDescriptorGet.js":
/*!************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classApplyDescriptorGet.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n        return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n}\nmodule.exports = _classApplyDescriptorGet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0FwcGx5RGVzY3JpcHRvckdldC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EseUJBQXlCQyxRQUFRLEVBQUVDLFVBQVU7SUFDcEQsSUFBSUEsV0FBV0MsS0FBSztRQUNsQixPQUFPRCxXQUFXQyxJQUFJQyxLQUFLSDtJQUM3QjtJQUNBLE9BQU9DLFdBQVdHO0FBQ3BCO0FBQ0FDLE9BQU9DLFVBQVVQLDBCQUEwQk0seUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0FwcGx5RGVzY3JpcHRvckdldC5qcz9mMDRjIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9jbGFzc0FwcGx5RGVzY3JpcHRvckdldChyZWNlaXZlciwgZGVzY3JpcHRvcikge1xuICBpZiAoZGVzY3JpcHRvci5nZXQpIHtcbiAgICByZXR1cm4gZGVzY3JpcHRvci5nZXQuY2FsbChyZWNlaXZlcik7XG4gIH1cbiAgcmV0dXJuIGRlc2NyaXB0b3IudmFsdWU7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9jbGFzc0FwcGx5RGVzY3JpcHRvckdldCwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJfY2xhc3NBcHBseURlc2NyaXB0b3JHZXQiLCJyZWNlaXZlciIsImRlc2NyaXB0b3IiLCJnZXQiLCJjYWxsIiwidmFsdWUiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/classApplyDescriptorGet.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/classApplyDescriptorSet.js":
/*!************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classApplyDescriptorSet.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n        descriptor.set.call(receiver, value);\n    } else {\n        if (!descriptor.writable) {\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\nmodule.exports = _classApplyDescriptorSet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0FwcGx5RGVzY3JpcHRvclNldC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EseUJBQXlCQyxRQUFRLEVBQUVDLFVBQVUsRUFBRUMsS0FBSztJQUMzRCxJQUFJRCxXQUFXRSxLQUFLO1FBQ2xCRixXQUFXRSxJQUFJQyxLQUFLSixVQUFVRTtJQUNoQyxPQUFPO1FBQ0wsSUFBSSxDQUFDRCxXQUFXSSxVQUFVO1lBQ3hCLE1BQU0sSUFBSUMsVUFBVTtRQUN0QjtRQUNBTCxXQUFXQyxRQUFRQTtJQUNyQjtBQUNGO0FBQ0FLLE9BQU9DLFVBQVVULDBCQUEwQlEseUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0FwcGx5RGVzY3JpcHRvclNldC5qcz9iMDRmIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9jbGFzc0FwcGx5RGVzY3JpcHRvclNldChyZWNlaXZlciwgZGVzY3JpcHRvciwgdmFsdWUpIHtcbiAgaWYgKGRlc2NyaXB0b3Iuc2V0KSB7XG4gICAgZGVzY3JpcHRvci5zZXQuY2FsbChyZWNlaXZlciwgdmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIGlmICghZGVzY3JpcHRvci53cml0YWJsZSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcImF0dGVtcHRlZCB0byBzZXQgcmVhZCBvbmx5IHByaXZhdGUgZmllbGRcIik7XG4gICAgfVxuICAgIGRlc2NyaXB0b3IudmFsdWUgPSB2YWx1ZTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBfY2xhc3NBcHBseURlc2NyaXB0b3JTZXQsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX2NsYXNzQXBwbHlEZXNjcmlwdG9yU2V0IiwicmVjZWl2ZXIiLCJkZXNjcmlwdG9yIiwidmFsdWUiLCJzZXQiLCJjYWxsIiwid3JpdGFibGUiLCJUeXBlRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/classApplyDescriptorSet.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EsZ0JBQWdCQyxRQUFRLEVBQUVDLFdBQVc7SUFDNUMsSUFBSSxDQUFFRCxDQUFBQSxvQkFBb0JDLFdBQVUsR0FBSTtRQUN0QyxNQUFNLElBQUlDLFVBQVU7SUFDdEI7QUFDRjtBQUNBQyxPQUFPQyxVQUFVTCxpQkFBaUJJLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2suanM/YjdhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBfY2xhc3NDYWxsQ2hlY2ssIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/classCallCheck.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/classExtractFieldDescriptor.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classExtractFieldDescriptor.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\nmodule.exports = _classExtractFieldDescriptor, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0V4dHJhY3RGaWVsZERlc2NyaXB0b3IuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLDZCQUE2QkMsUUFBUSxFQUFFQyxVQUFVLEVBQUVDLE1BQU07SUFDaEUsSUFBSSxDQUFDRCxXQUFXRSxJQUFJSCxXQUFXO1FBQzdCLE1BQU0sSUFBSUksVUFBVSxrQkFBa0JGLFNBQVM7SUFDakQ7SUFDQSxPQUFPRCxXQUFXSSxJQUFJTDtBQUN4QjtBQUNBTSxPQUFPQyxVQUFVUiw4QkFBOEJPLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NFeHRyYWN0RmllbGREZXNjcmlwdG9yLmpzP2ZjNzkiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2NsYXNzRXh0cmFjdEZpZWxkRGVzY3JpcHRvcihyZWNlaXZlciwgcHJpdmF0ZU1hcCwgYWN0aW9uKSB7XG4gIGlmICghcHJpdmF0ZU1hcC5oYXMocmVjZWl2ZXIpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcImF0dGVtcHRlZCB0byBcIiArIGFjdGlvbiArIFwiIHByaXZhdGUgZmllbGQgb24gbm9uLWluc3RhbmNlXCIpO1xuICB9XG4gIHJldHVybiBwcml2YXRlTWFwLmdldChyZWNlaXZlcik7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9jbGFzc0V4dHJhY3RGaWVsZERlc2NyaXB0b3IsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX2NsYXNzRXh0cmFjdEZpZWxkRGVzY3JpcHRvciIsInJlY2VpdmVyIiwicHJpdmF0ZU1hcCIsImFjdGlvbiIsImhhcyIsIlR5cGVFcnJvciIsImdldCIsIm1vZHVsZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/classExtractFieldDescriptor.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/classPrivateFieldGet.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classPrivateFieldGet.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar classApplyDescriptorGet = __webpack_require__(/*! ./classApplyDescriptorGet.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classApplyDescriptorGet.js\");\nvar classExtractFieldDescriptor = __webpack_require__(/*! ./classExtractFieldDescriptor.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classExtractFieldDescriptor.js\");\nfunction _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n    return classApplyDescriptorGet(receiver, descriptor);\n}\nmodule.exports = _classPrivateFieldGet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc1ByaXZhdGVGaWVsZEdldC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsMEJBQTBCQyxtQkFBT0EsQ0FBQyxrSEFBOEI7QUFDcEUsSUFBSUMsOEJBQThCRCxtQkFBT0EsQ0FBQywwSEFBa0M7QUFDNUUsU0FBU0Usc0JBQXNCQyxRQUFRLEVBQUVDLFVBQVU7SUFDakQsSUFBSUMsYUFBYUosNEJBQTRCRSxVQUFVQyxZQUFZO0lBQ25FLE9BQU9MLHdCQUF3QkksVUFBVUU7QUFDM0M7QUFDQUMsT0FBT0MsVUFBVUwsdUJBQXVCSSx5QkFBeUJFLEdBQUcsTUFBTUYseUJBQXlCLEdBQUdBLE9BQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzUHJpdmF0ZUZpZWxkR2V0LmpzPzA2ODAiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNsYXNzQXBwbHlEZXNjcmlwdG9yR2V0ID0gcmVxdWlyZShcIi4vY2xhc3NBcHBseURlc2NyaXB0b3JHZXQuanNcIik7XG52YXIgY2xhc3NFeHRyYWN0RmllbGREZXNjcmlwdG9yID0gcmVxdWlyZShcIi4vY2xhc3NFeHRyYWN0RmllbGREZXNjcmlwdG9yLmpzXCIpO1xuZnVuY3Rpb24gX2NsYXNzUHJpdmF0ZUZpZWxkR2V0KHJlY2VpdmVyLCBwcml2YXRlTWFwKSB7XG4gIHZhciBkZXNjcmlwdG9yID0gY2xhc3NFeHRyYWN0RmllbGREZXNjcmlwdG9yKHJlY2VpdmVyLCBwcml2YXRlTWFwLCBcImdldFwiKTtcbiAgcmV0dXJuIGNsYXNzQXBwbHlEZXNjcmlwdG9yR2V0KHJlY2VpdmVyLCBkZXNjcmlwdG9yKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX2NsYXNzUHJpdmF0ZUZpZWxkR2V0LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbImNsYXNzQXBwbHlEZXNjcmlwdG9yR2V0IiwicmVxdWlyZSIsImNsYXNzRXh0cmFjdEZpZWxkRGVzY3JpcHRvciIsIl9jbGFzc1ByaXZhdGVGaWVsZEdldCIsInJlY2VpdmVyIiwicHJpdmF0ZU1hcCIsImRlc2NyaXB0b3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/classPrivateFieldGet.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/classPrivateFieldSet.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classPrivateFieldSet.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar classApplyDescriptorSet = __webpack_require__(/*! ./classApplyDescriptorSet.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classApplyDescriptorSet.js\");\nvar classExtractFieldDescriptor = __webpack_require__(/*! ./classExtractFieldDescriptor.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/classExtractFieldDescriptor.js\");\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n    classApplyDescriptorSet(receiver, descriptor, value);\n    return value;\n}\nmodule.exports = _classPrivateFieldSet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc1ByaXZhdGVGaWVsZFNldC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsMEJBQTBCQyxtQkFBT0EsQ0FBQyxrSEFBOEI7QUFDcEUsSUFBSUMsOEJBQThCRCxtQkFBT0EsQ0FBQywwSEFBa0M7QUFDNUUsU0FBU0Usc0JBQXNCQyxRQUFRLEVBQUVDLFVBQVUsRUFBRUMsS0FBSztJQUN4RCxJQUFJQyxhQUFhTCw0QkFBNEJFLFVBQVVDLFlBQVk7SUFDbkVMLHdCQUF3QkksVUFBVUcsWUFBWUQ7SUFDOUMsT0FBT0E7QUFDVDtBQUNBRSxPQUFPQyxVQUFVTix1QkFBdUJLLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NQcml2YXRlRmllbGRTZXQuanM/YTRmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgY2xhc3NBcHBseURlc2NyaXB0b3JTZXQgPSByZXF1aXJlKFwiLi9jbGFzc0FwcGx5RGVzY3JpcHRvclNldC5qc1wiKTtcbnZhciBjbGFzc0V4dHJhY3RGaWVsZERlc2NyaXB0b3IgPSByZXF1aXJlKFwiLi9jbGFzc0V4dHJhY3RGaWVsZERlc2NyaXB0b3IuanNcIik7XG5mdW5jdGlvbiBfY2xhc3NQcml2YXRlRmllbGRTZXQocmVjZWl2ZXIsIHByaXZhdGVNYXAsIHZhbHVlKSB7XG4gIHZhciBkZXNjcmlwdG9yID0gY2xhc3NFeHRyYWN0RmllbGREZXNjcmlwdG9yKHJlY2VpdmVyLCBwcml2YXRlTWFwLCBcInNldFwiKTtcbiAgY2xhc3NBcHBseURlc2NyaXB0b3JTZXQocmVjZWl2ZXIsIGRlc2NyaXB0b3IsIHZhbHVlKTtcbiAgcmV0dXJuIHZhbHVlO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfY2xhc3NQcml2YXRlRmllbGRTZXQsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiY2xhc3NBcHBseURlc2NyaXB0b3JTZXQiLCJyZXF1aXJlIiwiY2xhc3NFeHRyYWN0RmllbGREZXNjcmlwdG9yIiwiX2NsYXNzUHJpdmF0ZUZpZWxkU2V0IiwicmVjZWl2ZXIiLCJwcml2YXRlTWFwIiwidmFsdWUiLCJkZXNjcmlwdG9yIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/classPrivateFieldSet.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/construct.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\nvar isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js\");\nfunction _construct(Parent, args, Class) {\n    if (isNativeReflectConstruct()) {\n        module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    } else {\n        module.exports = _construct = function _construct(Parent, args, Class) {\n            var a = [\n                null\n            ];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n            if (Class) setPrototypeOf(instance, Class.prototype);\n            return instance;\n        }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    }\n    return _construct.apply(null, arguments);\n}\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jb25zdHJ1Y3QuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGlCQUFpQkMsbUJBQU9BLENBQUMsZ0dBQXFCO0FBQ2xELElBQUlDLDJCQUEyQkQsbUJBQU9BLENBQUMsb0hBQStCO0FBQ3RFLFNBQVNFLFdBQVdDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLO0lBQ3JDLElBQUlKLDRCQUE0QjtRQUM5QkssT0FBT0MsVUFBVUwsYUFBYU0sUUFBUUMsVUFBVUMsUUFBUUoseUJBQXlCSyxHQUFHLE1BQU1MLHlCQUF5QixHQUFHQSxPQUFPQztJQUMvSCxPQUFPO1FBQ0xELE9BQU9DLFVBQVVMLGFBQWEsU0FBU0EsV0FBV0MsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEtBQUs7WUFDbkUsSUFBSU8sSUFBSTtnQkFBQzthQUFLO1lBQ2RBLEVBQUVDLEtBQUtDLE1BQU1GLEdBQUdSO1lBQ2hCLElBQUlXLGNBQWNDLFNBQVNOLEtBQUtJLE1BQU1YLFFBQVFTO1lBQzlDLElBQUlLLFdBQVcsSUFBSUY7WUFDbkIsSUFBSVYsT0FBT04sZUFBZWtCLFVBQVVaLE1BQU1hO1lBQzFDLE9BQU9EO1FBQ1QsR0FBR1gseUJBQXlCSyxHQUFHLE1BQU1MLHlCQUF5QixHQUFHQSxPQUFPQztJQUMxRTtJQUNBLE9BQU9MLFdBQVdZLE1BQU0sTUFBTUs7QUFDaEM7QUFDQWIsT0FBT0MsVUFBVUwsWUFBWUkseUJBQXlCSyxHQUFHLE1BQU1MLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jb25zdHJ1Y3QuanM/MjkxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKFwiLi9zZXRQcm90b3R5cGVPZi5qc1wiKTtcbnZhciBpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSByZXF1aXJlKFwiLi9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QuanNcIik7XG5mdW5jdGlvbiBfY29uc3RydWN0KFBhcmVudCwgYXJncywgQ2xhc3MpIHtcbiAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfY29uc3RydWN0ID0gUmVmbGVjdC5jb25zdHJ1Y3QuYmluZCgpLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7XG4gIH0gZWxzZSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBfY29uc3RydWN0ID0gZnVuY3Rpb24gX2NvbnN0cnVjdChQYXJlbnQsIGFyZ3MsIENsYXNzKSB7XG4gICAgICB2YXIgYSA9IFtudWxsXTtcbiAgICAgIGEucHVzaC5hcHBseShhLCBhcmdzKTtcbiAgICAgIHZhciBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoUGFyZW50LCBhKTtcbiAgICAgIHZhciBpbnN0YW5jZSA9IG5ldyBDb25zdHJ1Y3RvcigpO1xuICAgICAgaWYgKENsYXNzKSBzZXRQcm90b3R5cGVPZihpbnN0YW5jZSwgQ2xhc3MucHJvdG90eXBlKTtcbiAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICB9LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7XG4gIH1cbiAgcmV0dXJuIF9jb25zdHJ1Y3QuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX2NvbnN0cnVjdCwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJzZXRQcm90b3R5cGVPZiIsInJlcXVpcmUiLCJpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QiLCJfY29uc3RydWN0IiwiUGFyZW50IiwiYXJncyIsIkNsYXNzIiwibW9kdWxlIiwiZXhwb3J0cyIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJiaW5kIiwiX19lc01vZHVsZSIsImEiLCJwdXNoIiwiYXBwbHkiLCJDb25zdHJ1Y3RvciIsIkZ1bmN0aW9uIiwiaW5zdGFuY2UiLCJwcm90b3R5cGUiLCJhcmd1bWVudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/construct.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/createClass.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n        writable: false\n    });\n    return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQyw4RkFBb0I7QUFDaEQsU0FBU0Msa0JBQWtCQyxNQUFNLEVBQUVDLEtBQUs7SUFDdEMsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlELE1BQU1FLFFBQVFELElBQUs7UUFDckMsSUFBSUUsYUFBYUgsS0FBSyxDQUFDQyxFQUFFO1FBQ3pCRSxXQUFXQyxhQUFhRCxXQUFXQyxjQUFjO1FBQ2pERCxXQUFXRSxlQUFlO1FBQzFCLElBQUksV0FBV0YsWUFBWUEsV0FBV0csV0FBVztRQUNqREMsT0FBT0MsZUFBZVQsUUFBUUgsY0FBY08sV0FBV00sTUFBTU47SUFDL0Q7QUFDRjtBQUNBLFNBQVNPLGFBQWFDLFdBQVcsRUFBRUMsVUFBVSxFQUFFQyxXQUFXO0lBQ3hELElBQUlELFlBQVlkLGtCQUFrQmEsWUFBWUcsV0FBV0Y7SUFDekQsSUFBSUMsYUFBYWYsa0JBQWtCYSxhQUFhRTtJQUNoRE4sT0FBT0MsZUFBZUcsYUFBYSxhQUFhO1FBQzlDTCxVQUFVO0lBQ1o7SUFDQSxPQUFPSztBQUNUO0FBQ0FJLE9BQU9DLFVBQVVOLGNBQWNLLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MuanM/NTQ2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdG9Qcm9wZXJ0eUtleSA9IHJlcXVpcmUoXCIuL3RvUHJvcGVydHlLZXkuanNcIik7XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgIGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTtcbiAgICBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7XG4gICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCB0b1Byb3BlcnR5S2V5KGRlc2NyaXB0b3Iua2V5KSwgZGVzY3JpcHRvcik7XG4gIH1cbn1cbmZ1bmN0aW9uIF9jcmVhdGVDbGFzcyhDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHtcbiAgaWYgKHByb3RvUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLnByb3RvdHlwZSwgcHJvdG9Qcm9wcyk7XG4gIGlmIChzdGF0aWNQcm9wcykgX2RlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KENvbnN0cnVjdG9yLCBcInByb3RvdHlwZVwiLCB7XG4gICAgd3JpdGFibGU6IGZhbHNlXG4gIH0pO1xuICByZXR1cm4gQ29uc3RydWN0b3I7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9jcmVhdGVDbGFzcywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJ0b1Byb3BlcnR5S2V5IiwicmVxdWlyZSIsIl9kZWZpbmVQcm9wZXJ0aWVzIiwidGFyZ2V0IiwicHJvcHMiLCJpIiwibGVuZ3RoIiwiZGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJjb25maWd1cmFibGUiLCJ3cml0YWJsZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5Iiwia2V5IiwiX2NyZWF0ZUNsYXNzIiwiQ29uc3RydWN0b3IiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJwcm90b3R5cGUiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/createClass.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/defineProperty.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n    key = toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQyw4RkFBb0I7QUFDaEQsU0FBU0MsZ0JBQWdCQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsS0FBSztJQUN0Q0QsTUFBTUosY0FBY0k7SUFDcEIsSUFBSUEsT0FBT0QsS0FBSztRQUNkRyxPQUFPQyxlQUFlSixLQUFLQyxLQUFLO1lBQzlCQyxPQUFPQTtZQUNQRyxZQUFZO1lBQ1pDLGNBQWM7WUFDZEMsVUFBVTtRQUNaO0lBQ0YsT0FBTztRQUNMUCxHQUFHLENBQUNDLElBQUksR0FBR0M7SUFDYjtJQUNBLE9BQU9GO0FBQ1Q7QUFDQVEsT0FBT0MsVUFBVVYsaUJBQWlCUyx5QkFBeUJFLEdBQUcsTUFBTUYseUJBQXlCLEdBQUdBLE9BQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5LmpzP2Q5NDYiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHRvUHJvcGVydHlLZXkgPSByZXF1aXJlKFwiLi90b1Byb3BlcnR5S2V5LmpzXCIpO1xuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBrZXkgPSB0b1Byb3BlcnR5S2V5KGtleSk7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiBvYmo7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9kZWZpbmVQcm9wZXJ0eSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJ0b1Byb3BlcnR5S2V5IiwicmVxdWlyZSIsIl9kZWZpbmVQcm9wZXJ0eSIsIm9iaiIsImtleSIsInZhbHVlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/defineProperty.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/extends.js":
/*!********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/extends.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _extends() {\n    module.exports = _extends = Object.assign ? Object.assign.bind() : function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9leHRlbmRzLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxTQUFTQTtJQUNQQyxPQUFPQyxVQUFVRixXQUFXRyxPQUFPQyxTQUFTRCxPQUFPQyxPQUFPQyxTQUFTLFNBQVVDLE1BQU07UUFDakYsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlDLFVBQVVDLFFBQVFGLElBQUs7WUFDekMsSUFBSUcsU0FBU0YsU0FBUyxDQUFDRCxFQUFFO1lBQ3pCLElBQUssSUFBSUksT0FBT0QsT0FBUTtnQkFDdEIsSUFBSVAsT0FBT1MsVUFBVUMsZUFBZUMsS0FBS0osUUFBUUMsTUFBTTtvQkFDckRMLE1BQU0sQ0FBQ0ssSUFBSSxHQUFHRCxNQUFNLENBQUNDLElBQUk7Z0JBQzNCO1lBQ0Y7UUFDRjtRQUNBLE9BQU9MO0lBQ1QsR0FBR0wseUJBQXlCYyxHQUFHLE1BQU1kLHlCQUF5QixHQUFHQSxPQUFPQztJQUN4RSxPQUFPRixTQUFTZ0IsTUFBTSxJQUFJLEVBQUVSO0FBQzlCO0FBQ0FQLE9BQU9DLFVBQVVGLFVBQVVDLHlCQUF5QmMsR0FBRyxNQUFNZCx5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXh0ZW5kcy5qcz9kMTFkIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBtb2R1bGUuZXhwb3J0cyA9IF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiA/IE9iamVjdC5hc3NpZ24uYmluZCgpIDogZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xuICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX2V4dGVuZHMsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX2V4dGVuZHMiLCJtb2R1bGUiLCJleHBvcnRzIiwiT2JqZWN0IiwiYXNzaWduIiwiYmluZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJfX2VzTW9kdWxlIiwiYXBwbHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/extends.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _getPrototypeOf(o) {\n    module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EsZ0JBQWdCQyxDQUFDO0lBQ3hCQyxPQUFPQyxVQUFVSCxrQkFBa0JJLE9BQU9DLGlCQUFpQkQsT0FBT0UsZUFBZUMsU0FBUyxTQUFTUCxnQkFBZ0JDLENBQUM7UUFDbEgsT0FBT0EsRUFBRU8sYUFBYUosT0FBT0UsZUFBZUw7SUFDOUMsR0FBR0MseUJBQXlCTyxHQUFHLE1BQU1QLHlCQUF5QixHQUFHQSxPQUFPQztJQUN4RSxPQUFPSCxnQkFBZ0JDO0FBQ3pCO0FBQ0FDLE9BQU9DLFVBQVVILGlCQUFpQkUseUJBQXlCTyxHQUFHLE1BQU1QLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZi5qcz85MDAzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgfSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xuICByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfZ2V0UHJvdG90eXBlT2YsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX2dldFByb3RvdHlwZU9mIiwibyIsIm1vZHVsZSIsImV4cG9ydHMiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsImdldFByb3RvdHlwZU9mIiwiYmluZCIsIl9fcHJvdG9fXyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/inherits.js":
/*!*********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    Object.defineProperty(subClass, \"prototype\", {\n        writable: false\n    });\n    if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0cy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsaUJBQWlCQyxtQkFBT0EsQ0FBQyxnR0FBcUI7QUFDbEQsU0FBU0MsVUFBVUMsUUFBUSxFQUFFQyxVQUFVO0lBQ3JDLElBQUksT0FBT0EsZUFBZSxjQUFjQSxlQUFlLE1BQU07UUFDM0QsTUFBTSxJQUFJQyxVQUFVO0lBQ3RCO0lBQ0FGLFNBQVNHLFlBQVlDLE9BQU9DLE9BQU9KLGNBQWNBLFdBQVdFLFdBQVc7UUFDckVHLGFBQWE7WUFDWEMsT0FBT1A7WUFDUFEsVUFBVTtZQUNWQyxjQUFjO1FBQ2hCO0lBQ0Y7SUFDQUwsT0FBT00sZUFBZVYsVUFBVSxhQUFhO1FBQzNDUSxVQUFVO0lBQ1o7SUFDQSxJQUFJUCxZQUFZSixlQUFlRyxVQUFVQztBQUMzQztBQUNBVSxPQUFPQyxVQUFVYixXQUFXWSx5QkFBeUJFLEdBQUcsTUFBTUYseUJBQXlCLEdBQUdBLE9BQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzLmpzP2YzNWIiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIHNldFByb3RvdHlwZU9mID0gcmVxdWlyZShcIi4vc2V0UHJvdG90eXBlT2YuanNcIik7XG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHtcbiAgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgfVxuICBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHtcbiAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgdmFsdWU6IHN1YkNsYXNzLFxuICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9XG4gIH0pO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoc3ViQ2xhc3MsIFwicHJvdG90eXBlXCIsIHtcbiAgICB3cml0YWJsZTogZmFsc2VcbiAgfSk7XG4gIGlmIChzdXBlckNsYXNzKSBzZXRQcm90b3R5cGVPZihzdWJDbGFzcywgc3VwZXJDbGFzcyk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9pbmhlcml0cywgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJzZXRQcm90b3R5cGVPZiIsInJlcXVpcmUiLCJfaW5oZXJpdHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJUeXBlRXJyb3IiLCJwcm90b3R5cGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInZhbHVlIiwid3JpdGFibGUiLCJjb25maWd1cmFibGUiLCJkZWZpbmVQcm9wZXJ0eSIsIm1vZHVsZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/inherits.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        \"default\": obj\n    };\n}\nmodule.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLHVCQUF1QkMsR0FBRztJQUNqQyxPQUFPQSxPQUFPQSxJQUFJQyxhQUFhRCxNQUFNO1FBQ25DLFdBQVdBO0lBQ2I7QUFDRjtBQUNBRSxPQUFPQyxVQUFVSix3QkFBd0JHLHlCQUF5QkQsR0FBRyxNQUFNQyx5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzP2VlOGMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICBcImRlZmF1bHRcIjogb2JqXG4gIH07XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/interopRequireDefault.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/isNativeFunction.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeFunction.js ***!
  \*****************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _isNativeFunction(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nmodule.exports = _isNativeFunction, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pc05hdGl2ZUZ1bmN0aW9uLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxTQUFTQSxrQkFBa0JDLEVBQUU7SUFDM0IsT0FBT0MsU0FBU0MsU0FBU0MsS0FBS0gsSUFBSUksUUFBUSxxQkFBcUIsQ0FBQztBQUNsRTtBQUNBQyxPQUFPQyxVQUFVUCxtQkFBbUJNLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvaXNOYXRpdmVGdW5jdGlvbi5qcz84Yzg1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9pc05hdGl2ZUZ1bmN0aW9uKGZuKSB7XG4gIHJldHVybiBGdW5jdGlvbi50b1N0cmluZy5jYWxsKGZuKS5pbmRleE9mKFwiW25hdGl2ZSBjb2RlXVwiKSAhPT0gLTE7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9pc05hdGl2ZUZ1bmN0aW9uLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbIl9pc05hdGl2ZUZ1bmN0aW9uIiwiZm4iLCJGdW5jdGlvbiIsInRvU3RyaW5nIiwiY2FsbCIsImluZGV4T2YiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/isNativeFunction.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBO0lBQ1AsSUFBSSxPQUFPQyxZQUFZLGVBQWUsQ0FBQ0EsUUFBUUMsV0FBVyxPQUFPO0lBQ2pFLElBQUlELFFBQVFDLFVBQVVDLE1BQU0sT0FBTztJQUNuQyxJQUFJLE9BQU9DLFVBQVUsWUFBWSxPQUFPO0lBQ3hDLElBQUk7UUFDRkMsUUFBUUMsVUFBVUMsUUFBUUMsS0FBS1AsUUFBUUMsVUFBVUcsU0FBUyxFQUFFLEVBQUUsWUFBYTtRQUMzRSxPQUFPO0lBQ1QsRUFBRSxPQUFPSSxHQUFHO1FBQ1YsT0FBTztJQUNUO0FBQ0Y7QUFDQUMsT0FBT0MsVUFBVVgsMkJBQTJCVSx5QkFBeUJFLEdBQUcsTUFBTUYseUJBQXlCLEdBQUdBLE9BQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdC5qcz8xZDU0Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTtcbiAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcbiAgdHJ5IHtcbiAgICBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsInNoYW0iLCJQcm94eSIsIkJvb2xlYW4iLCJwcm90b3R5cGUiLCJ2YWx1ZU9mIiwiY2FsbCIsImUiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (null != _i) {\n        var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1;\n        try {\n            if (_x = (_i = _i.call(arr)).next, 0 === i) {\n                if (Object(_i) !== _i) return;\n                _n = !1;\n            } else for(; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n        } catch (err) {\n            _d = !0, _e = err;\n        } finally{\n            try {\n                if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n            } finally{\n                if (_d) throw _e;\n            }\n        }\n        return _arr;\n    }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0Esc0JBQXNCQyxHQUFHLEVBQUVDLENBQUM7SUFDbkMsSUFBSUMsS0FBSyxRQUFRRixNQUFNLE9BQU8sZUFBZSxPQUFPRyxVQUFVSCxHQUFHLENBQUNHLE9BQU9DLFNBQVMsSUFBSUosR0FBRyxDQUFDLGFBQWE7SUFDdkcsSUFBSSxRQUFRRSxJQUFJO1FBQ2QsSUFBSUcsSUFDRkMsSUFDQUMsSUFDQUMsSUFDQUMsT0FBTyxFQUFFLEVBQ1RDLEtBQUssQ0FBQyxHQUNOQyxLQUFLLENBQUM7UUFDUixJQUFJO1lBQ0YsSUFBSUosS0FBSyxDQUFDTCxLQUFLQSxHQUFHVSxLQUFLWixJQUFHLEVBQUdhLE1BQU0sTUFBTVosR0FBRztnQkFDMUMsSUFBSWEsT0FBT1osUUFBUUEsSUFBSTtnQkFDdkJRLEtBQUssQ0FBQztZQUNSLE9BQU8sTUFBTyxDQUFFQSxDQUFBQSxLQUFLLENBQUNMLEtBQUtFLEdBQUdLLEtBQUtWLEdBQUUsRUFBR2EsSUFBRyxLQUFPTixDQUFBQSxLQUFLTyxLQUFLWCxHQUFHWSxRQUFRUixLQUFLUyxXQUFXakIsQ0FBQUEsR0FBSVMsS0FBSyxDQUFDO1FBQ25HLEVBQUUsT0FBT1MsS0FBSztZQUNaUixLQUFLLENBQUMsR0FBR0wsS0FBS2E7UUFDaEIsU0FBVTtZQUNSLElBQUk7Z0JBQ0YsSUFBSSxDQUFDVCxNQUFNLFFBQVFSLEVBQUUsQ0FBQyxTQUFTLElBQUtNLENBQUFBLEtBQUtOLEVBQUUsQ0FBQyxTQUFTLElBQUlZLE9BQU9OLFFBQVFBLEVBQUMsR0FBSTtZQUMvRSxTQUFVO2dCQUNSLElBQUlHLElBQUksTUFBTUw7WUFDaEI7UUFDRjtRQUNBLE9BQU9HO0lBQ1Q7QUFDRjtBQUNBVyxPQUFPQyxVQUFVdEIsdUJBQXVCcUIseUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qcz9hZmU3Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHtcbiAgdmFyIF9pID0gbnVsbCA9PSBhcnIgPyBudWxsIDogXCJ1bmRlZmluZWRcIiAhPSB0eXBlb2YgU3ltYm9sICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFycltcIkBAaXRlcmF0b3JcIl07XG4gIGlmIChudWxsICE9IF9pKSB7XG4gICAgdmFyIF9zLFxuICAgICAgX2UsXG4gICAgICBfeCxcbiAgICAgIF9yLFxuICAgICAgX2FyciA9IFtdLFxuICAgICAgX24gPSAhMCxcbiAgICAgIF9kID0gITE7XG4gICAgdHJ5IHtcbiAgICAgIGlmIChfeCA9IChfaSA9IF9pLmNhbGwoYXJyKSkubmV4dCwgMCA9PT0gaSkge1xuICAgICAgICBpZiAoT2JqZWN0KF9pKSAhPT0gX2kpIHJldHVybjtcbiAgICAgICAgX24gPSAhMTtcbiAgICAgIH0gZWxzZSBmb3IgKDsgIShfbiA9IChfcyA9IF94LmNhbGwoX2kpKS5kb25lKSAmJiAoX2Fyci5wdXNoKF9zLnZhbHVlKSwgX2Fyci5sZW5ndGggIT09IGkpOyBfbiA9ICEwKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIF9kID0gITAsIF9lID0gZXJyO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoIV9uICYmIG51bGwgIT0gX2lbXCJyZXR1cm5cIl0gJiYgKF9yID0gX2lbXCJyZXR1cm5cIl0oKSwgT2JqZWN0KF9yKSAhPT0gX3IpKSByZXR1cm47XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBpZiAoX2QpIHRocm93IF9lO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gX2FycjtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBfaXRlcmFibGVUb0FycmF5TGltaXQsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX2l0ZXJhYmxlVG9BcnJheUxpbWl0IiwiYXJyIiwiaSIsIl9pIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJfcyIsIl9lIiwiX3giLCJfciIsIl9hcnIiLCJfbiIsIl9kIiwiY2FsbCIsIm5leHQiLCJPYmplY3QiLCJkb25lIiwicHVzaCIsInZhbHVlIiwibGVuZ3RoIiwiZXJyIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9ub25JdGVyYWJsZVJlc3QuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBO0lBQ1AsTUFBTSxJQUFJQyxVQUFVO0FBQ3RCO0FBQ0FDLE9BQU9DLFVBQVVILGtCQUFrQkUseUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9ub25JdGVyYWJsZVJlc3QuanM/NGMyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfbm9uSXRlcmFibGVSZXN0LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbIl9ub25JdGVyYWJsZVJlc3QiLCJUeXBlRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/nonIterableRest.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar _typeof = (__webpack_require__(/*! ./typeof.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nvar assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n    if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n    } else if (call !== void 0) {\n        throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxVQUFVQyxrSEFBaUM7QUFDL0MsSUFBSUMsd0JBQXdCRCxtQkFBT0EsQ0FBQyw4R0FBNEI7QUFDaEUsU0FBU0UsMkJBQTJCQyxJQUFJLEVBQUVDLElBQUk7SUFDNUMsSUFBSUEsUUFBU0wsQ0FBQUEsUUFBUUssVUFBVSxZQUFZLE9BQU9BLFNBQVMsVUFBUyxHQUFJO1FBQ3RFLE9BQU9BO0lBQ1QsT0FBTyxJQUFJQSxTQUFTLEtBQUssR0FBRztRQUMxQixNQUFNLElBQUlDLFVBQVU7SUFDdEI7SUFDQSxPQUFPSixzQkFBc0JFO0FBQy9CO0FBQ0FHLE9BQU9DLFVBQVVMLDRCQUE0QkkseUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuLmpzPzBlYjkiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF90eXBlb2YgPSByZXF1aXJlKFwiLi90eXBlb2YuanNcIilbXCJkZWZhdWx0XCJdO1xudmFyIGFzc2VydFRoaXNJbml0aWFsaXplZCA9IHJlcXVpcmUoXCIuL2Fzc2VydFRoaXNJbml0aWFsaXplZC5qc1wiKTtcbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHtcbiAgaWYgKGNhbGwgJiYgKF90eXBlb2YoY2FsbCkgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikpIHtcbiAgICByZXR1cm4gY2FsbDtcbiAgfSBlbHNlIGlmIChjYWxsICE9PSB2b2lkIDApIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7XG4gIH1cbiAgcmV0dXJuIGFzc2VydFRoaXNJbml0aWFsaXplZChzZWxmKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4sIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX3R5cGVvZiIsInJlcXVpcmUiLCJhc3NlcnRUaGlzSW5pdGlhbGl6ZWQiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiIsInNlbGYiLCJjYWxsIiwiVHlwZUVycm9yIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/regeneratorRuntime.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar _typeof = (__webpack_require__(/*! ./typeof.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nfunction _regeneratorRuntime() {\n    \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ \n    module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n        return exports;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function(obj, key, desc) {\n        obj[key] = desc.value;\n    }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n    function define(obj, key, value) {\n        return Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: !0,\n            configurable: !0,\n            writable: !0\n        }), obj[key];\n    }\n    try {\n        define({}, \"\");\n    } catch (err) {\n        define = function define(obj, key, value) {\n            return obj[key] = value;\n        };\n    }\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n        var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []);\n        return defineProperty(generator, \"_invoke\", {\n            value: makeInvokeMethod(innerFn, self, context)\n        }), generator;\n    }\n    function tryCatch(fn, obj, arg) {\n        try {\n            return {\n                type: \"normal\",\n                arg: fn.call(obj, arg)\n            };\n        } catch (err) {\n            return {\n                type: \"throw\",\n                arg: err\n            };\n        }\n    }\n    exports.wrap = wrap;\n    var ContinueSentinel = {};\n    function Generator() {}\n    function GeneratorFunction() {}\n    function GeneratorFunctionPrototype() {}\n    var IteratorPrototype = {};\n    define(IteratorPrototype, iteratorSymbol, function() {\n        return this;\n    });\n    var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n    NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    function defineIteratorMethods(prototype) {\n        [\n            \"next\",\n            \"throw\",\n            \"return\"\n        ].forEach(function(method) {\n            define(prototype, method, function(arg) {\n                return this._invoke(method, arg);\n            });\n        });\n    }\n    function AsyncIterator(generator, PromiseImpl) {\n        function invoke(method, arg, resolve, reject) {\n            var record = tryCatch(generator[method], generator, arg);\n            if (\"throw\" !== record.type) {\n                var result = record.arg, value = result.value;\n                return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function(value) {\n                    invoke(\"next\", value, resolve, reject);\n                }, function(err) {\n                    invoke(\"throw\", err, resolve, reject);\n                }) : PromiseImpl.resolve(value).then(function(unwrapped) {\n                    result.value = unwrapped, resolve(result);\n                }, function(error) {\n                    return invoke(\"throw\", error, resolve, reject);\n                });\n            }\n            reject(record.arg);\n        }\n        var previousPromise;\n        defineProperty(this, \"_invoke\", {\n            value: function value(method, arg) {\n                function callInvokeWithMethodAndArg() {\n                    return new PromiseImpl(function(resolve, reject) {\n                        invoke(method, arg, resolve, reject);\n                    });\n                }\n                return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n            }\n        });\n    }\n    function makeInvokeMethod(innerFn, self, context) {\n        var state = \"suspendedStart\";\n        return function(method, arg) {\n            if (\"executing\" === state) throw new Error(\"Generator is already running\");\n            if (\"completed\" === state) {\n                if (\"throw\" === method) throw arg;\n                return doneResult();\n            }\n            for(context.method = method, context.arg = arg;;){\n                var delegate = context.delegate;\n                if (delegate) {\n                    var delegateResult = maybeInvokeDelegate(delegate, context);\n                    if (delegateResult) {\n                        if (delegateResult === ContinueSentinel) continue;\n                        return delegateResult;\n                    }\n                }\n                if (\"next\" === context.method) context.sent = context._sent = context.arg;\n                else if (\"throw\" === context.method) {\n                    if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n                    context.dispatchException(context.arg);\n                } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n                state = \"executing\";\n                var record = tryCatch(innerFn, self, context);\n                if (\"normal\" === record.type) {\n                    if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n                    return {\n                        value: record.arg,\n                        done: context.done\n                    };\n                }\n                \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n            }\n        };\n    }\n    function maybeInvokeDelegate(delegate, context) {\n        var methodName = context.method, method = delegate.iterator[methodName];\n        if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n        var record = tryCatch(method, delegate.iterator, context.arg);\n        if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n        var info = record.arg;\n        return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n    }\n    function pushTryEntry(locs) {\n        var entry = {\n            tryLoc: locs[0]\n        };\n        1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n    }\n    function resetTryEntry(entry) {\n        var record = entry.completion || {};\n        record.type = \"normal\", delete record.arg, entry.completion = record;\n    }\n    function Context(tryLocsList) {\n        this.tryEntries = [\n            {\n                tryLoc: \"root\"\n            }\n        ], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n    }\n    function values(iterable) {\n        if (iterable) {\n            var iteratorMethod = iterable[iteratorSymbol];\n            if (iteratorMethod) return iteratorMethod.call(iterable);\n            if (\"function\" == typeof iterable.next) return iterable;\n            if (!isNaN(iterable.length)) {\n                var i = -1, next = function next() {\n                    for(; ++i < iterable.length;)if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n                    return next.value = undefined, next.done = !0, next;\n                };\n                return next.next = next;\n            }\n        }\n        return {\n            next: doneResult\n        };\n    }\n    function doneResult() {\n        return {\n            value: undefined,\n            done: !0\n        };\n    }\n    return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n        value: GeneratorFunctionPrototype,\n        configurable: !0\n    }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n        value: GeneratorFunction,\n        configurable: !0\n    }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function(genFun) {\n        var ctor = \"function\" == typeof genFun && genFun.constructor;\n        return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n    }, exports.mark = function(genFun) {\n        return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n    }, exports.awrap = function(arg) {\n        return {\n            __await: arg\n        };\n    }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function() {\n        return this;\n    }), exports.AsyncIterator = AsyncIterator, exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n        void 0 === PromiseImpl && (PromiseImpl = Promise);\n        var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n        return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {\n            return result.done ? result.value : iter.next();\n        });\n    }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function() {\n        return this;\n    }), define(Gp, \"toString\", function() {\n        return \"[object Generator]\";\n    }), exports.keys = function(val) {\n        var object = Object(val), keys = [];\n        for(var key in object)keys.push(key);\n        return keys.reverse(), function next() {\n            for(; keys.length;){\n                var key = keys.pop();\n                if (key in object) return next.value = key, next.done = !1, next;\n            }\n            return next.done = !0, next;\n        };\n    }, exports.values = values, Context.prototype = {\n        constructor: Context,\n        reset: function reset(skipTempReset) {\n            if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for(var name in this)\"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n        },\n        stop: function stop() {\n            this.done = !0;\n            var rootRecord = this.tryEntries[0].completion;\n            if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n            return this.rval;\n        },\n        dispatchException: function dispatchException(exception) {\n            if (this.done) throw exception;\n            var context = this;\n            function handle(loc, caught) {\n                return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n            }\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i], record = entry.completion;\n                if (\"root\" === entry.tryLoc) return handle(\"end\");\n                if (entry.tryLoc <= this.prev) {\n                    var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\");\n                    if (hasCatch && hasFinally) {\n                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                    } else if (hasCatch) {\n                        if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n                    } else {\n                        if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n                        if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n                    }\n                }\n            }\n        },\n        abrupt: function abrupt(type, arg) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n                    var finallyEntry = entry;\n                    break;\n                }\n            }\n            finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n            var record = finallyEntry ? finallyEntry.completion : {};\n            return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n        },\n        complete: function complete(record, afterLoc) {\n            if (\"throw\" === record.type) throw record.arg;\n            return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n        },\n        finish: function finish(finallyLoc) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n            }\n        },\n        \"catch\": function _catch(tryLoc) {\n            for(var i = this.tryEntries.length - 1; i >= 0; --i){\n                var entry = this.tryEntries[i];\n                if (entry.tryLoc === tryLoc) {\n                    var record = entry.completion;\n                    if (\"throw\" === record.type) {\n                        var thrown = record.arg;\n                        resetTryEntry(entry);\n                    }\n                    return thrown;\n                }\n            }\n            throw new Error(\"illegal catch attempt\");\n        },\n        delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n            return this.delegate = {\n                iterator: values(iterable),\n                resultName: resultName,\n                nextLoc: nextLoc\n            }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n        }\n    }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _setPrototypeOf(o, p) {\n    module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zZXRQcm90b3R5cGVPZi5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsU0FBU0EsZ0JBQWdCQyxDQUFDLEVBQUVDLENBQUM7SUFDM0JDLE9BQU9DLFVBQVVKLGtCQUFrQkssT0FBT0MsaUJBQWlCRCxPQUFPQyxlQUFlQyxTQUFTLFNBQVNQLGdCQUFnQkMsQ0FBQyxFQUFFQyxDQUFDO1FBQ3JIRCxFQUFFTyxZQUFZTjtRQUNkLE9BQU9EO0lBQ1QsR0FBR0UseUJBQXlCTSxHQUFHLE1BQU1OLHlCQUF5QixHQUFHQSxPQUFPQztJQUN4RSxPQUFPSixnQkFBZ0JDLEdBQUdDO0FBQzVCO0FBQ0FDLE9BQU9DLFVBQVVKLGlCQUFpQkcseUJBQXlCTSxHQUFHLE1BQU1OLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zZXRQcm90b3R5cGVPZi5qcz8wNTI2Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gX3NldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mLmJpbmQoKSA6IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gICAgby5fX3Byb3RvX18gPSBwO1xuICAgIHJldHVybiBvO1xuICB9LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7XG4gIHJldHVybiBfc2V0UHJvdG90eXBlT2YobywgcCk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9zZXRQcm90b3R5cGVPZiwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzOyJdLCJuYW1lcyI6WyJfc2V0UHJvdG90eXBlT2YiLCJvIiwicCIsIm1vZHVsZSIsImV4cG9ydHMiLCJPYmplY3QiLCJzZXRQcm90b3R5cGVPZiIsImJpbmQiLCJfX3Byb3RvX18iLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/arrayWithHoles.js\");\nvar iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\");\nvar nonIterableRest = __webpack_require__(/*! ./nonIterableRest.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n    return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxpQkFBaUJDLG1CQUFPQSxDQUFDLGdHQUFxQjtBQUNsRCxJQUFJQyx1QkFBdUJELG1CQUFPQSxDQUFDLDRHQUEyQjtBQUM5RCxJQUFJRSw2QkFBNkJGLG1CQUFPQSxDQUFDLHdIQUFpQztBQUMxRSxJQUFJRyxrQkFBa0JILG1CQUFPQSxDQUFDLGtHQUFzQjtBQUNwRCxTQUFTSSxlQUFlQyxHQUFHLEVBQUVDLENBQUM7SUFDNUIsT0FBT1AsZUFBZU0sUUFBUUoscUJBQXFCSSxLQUFLQyxNQUFNSiwyQkFBMkJHLEtBQUtDLE1BQU1IO0FBQ3RHO0FBQ0FJLE9BQU9DLFVBQVVKLGdCQUFnQkcseUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5LmpzP2Y1MGMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFycmF5V2l0aEhvbGVzID0gcmVxdWlyZShcIi4vYXJyYXlXaXRoSG9sZXMuanNcIik7XG52YXIgaXRlcmFibGVUb0FycmF5TGltaXQgPSByZXF1aXJlKFwiLi9pdGVyYWJsZVRvQXJyYXlMaW1pdC5qc1wiKTtcbnZhciB1bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSA9IHJlcXVpcmUoXCIuL3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5LmpzXCIpO1xudmFyIG5vbkl0ZXJhYmxlUmVzdCA9IHJlcXVpcmUoXCIuL25vbkl0ZXJhYmxlUmVzdC5qc1wiKTtcbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkge1xuICByZXR1cm4gYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBpdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgbm9uSXRlcmFibGVSZXN0KCk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF9zbGljZWRUb0FycmF5LCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbImFycmF5V2l0aEhvbGVzIiwicmVxdWlyZSIsIml0ZXJhYmxlVG9BcnJheUxpbWl0IiwidW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJub25JdGVyYWJsZVJlc3QiLCJfc2xpY2VkVG9BcnJheSIsImFyciIsImkiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/slicedToArray.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/toPrimitive.js":
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPrimitive.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar _typeof = (__webpack_require__(/*! ./typeof.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nfunction _toPrimitive(input, hint) {\n    if (_typeof(input) !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b1ByaW1pdGl2ZS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsVUFBVUMsa0hBQWlDO0FBQy9DLFNBQVNDLGFBQWFDLEtBQUssRUFBRUMsSUFBSTtJQUMvQixJQUFJSixRQUFRRyxXQUFXLFlBQVlBLFVBQVUsTUFBTSxPQUFPQTtJQUMxRCxJQUFJRSxPQUFPRixLQUFLLENBQUNHLE9BQU9DLFlBQVk7SUFDcEMsSUFBSUYsU0FBU0csV0FBVztRQUN0QixJQUFJQyxNQUFNSixLQUFLSyxLQUFLUCxPQUFPQyxRQUFRO1FBQ25DLElBQUlKLFFBQVFTLFNBQVMsVUFBVSxPQUFPQTtRQUN0QyxNQUFNLElBQUlFLFVBQVU7SUFDdEI7SUFDQSxPQUFPLENBQUNQLFNBQVMsV0FBV1EsU0FBU0MsTUFBSyxFQUFHVjtBQUMvQztBQUNBVyxPQUFPQyxVQUFVYixjQUFjWSx5QkFBeUJFLEdBQUcsTUFBTUYseUJBQXlCLEdBQUdBLE9BQU9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL3RvUHJpbWl0aXZlLmpzPzk5MzciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF90eXBlb2YgPSByZXF1aXJlKFwiLi90eXBlb2YuanNcIilbXCJkZWZhdWx0XCJdO1xuZnVuY3Rpb24gX3RvUHJpbWl0aXZlKGlucHV0LCBoaW50KSB7XG4gIGlmIChfdHlwZW9mKGlucHV0KSAhPT0gXCJvYmplY3RcIiB8fCBpbnB1dCA9PT0gbnVsbCkgcmV0dXJuIGlucHV0O1xuICB2YXIgcHJpbSA9IGlucHV0W1N5bWJvbC50b1ByaW1pdGl2ZV07XG4gIGlmIChwcmltICE9PSB1bmRlZmluZWQpIHtcbiAgICB2YXIgcmVzID0gcHJpbS5jYWxsKGlucHV0LCBoaW50IHx8IFwiZGVmYXVsdFwiKTtcbiAgICBpZiAoX3R5cGVvZihyZXMpICE9PSBcIm9iamVjdFwiKSByZXR1cm4gcmVzO1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTtcbiAgfVxuICByZXR1cm4gKGhpbnQgPT09IFwic3RyaW5nXCIgPyBTdHJpbmcgOiBOdW1iZXIpKGlucHV0KTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX3RvUHJpbWl0aXZlLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbIl90eXBlb2YiLCJyZXF1aXJlIiwiX3RvUHJpbWl0aXZlIiwiaW5wdXQiLCJoaW50IiwicHJpbSIsIlN5bWJvbCIsInRvUHJpbWl0aXZlIiwidW5kZWZpbmVkIiwicmVzIiwiY2FsbCIsIlR5cGVFcnJvciIsIlN0cmluZyIsIk51bWJlciIsIm1vZHVsZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/toPrimitive.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/toPropertyKey.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPropertyKey.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar _typeof = (__webpack_require__(/*! ./typeof.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js\")[\"default\"]);\nvar toPrimitive = __webpack_require__(/*! ./toPrimitive.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n    var key = toPrimitive(arg, \"string\");\n    return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b1Byb3BlcnR5S2V5LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxJQUFJQSxVQUFVQyxrSEFBaUM7QUFDL0MsSUFBSUMsY0FBY0QsbUJBQU9BLENBQUMsMEZBQWtCO0FBQzVDLFNBQVNFLGVBQWVDLEdBQUc7SUFDekIsSUFBSUMsTUFBTUgsWUFBWUUsS0FBSztJQUMzQixPQUFPSixRQUFRSyxTQUFTLFdBQVdBLE1BQU1DLE9BQU9EO0FBQ2xEO0FBQ0FFLE9BQU9DLFVBQVVMLGdCQUFnQkkseUJBQXlCRSxHQUFHLE1BQU1GLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b1Byb3BlcnR5S2V5LmpzP2U5ZDciXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF90eXBlb2YgPSByZXF1aXJlKFwiLi90eXBlb2YuanNcIilbXCJkZWZhdWx0XCJdO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZShcIi4vdG9QcmltaXRpdmUuanNcIik7XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleShhcmcpIHtcbiAgdmFyIGtleSA9IHRvUHJpbWl0aXZlKGFyZywgXCJzdHJpbmdcIik7XG4gIHJldHVybiBfdHlwZW9mKGtleSkgPT09IFwic3ltYm9sXCIgPyBrZXkgOiBTdHJpbmcoa2V5KTtcbn1cbm1vZHVsZS5leHBvcnRzID0gX3RvUHJvcGVydHlLZXksIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiX3R5cGVvZiIsInJlcXVpcmUiLCJ0b1ByaW1pdGl2ZSIsIl90b1Byb3BlcnR5S2V5IiwiYXJnIiwia2V5IiwiU3RyaW5nIiwibW9kdWxlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/toPropertyKey.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js":
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\nfunction _typeof(obj) {\n    \"@babel/helpers - typeof\";\n    return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(obj) {\n        return typeof obj;\n    } : function(obj) {\n        return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanMiLCJtYXBwaW5ncyI6IjtBQUFBLFNBQVNBLFFBQVFDLEdBQUc7SUFDbEI7SUFFQSxPQUFPLE9BQVFFLFVBQVVILFVBQVUsY0FBYyxPQUFPSSxVQUFVLFlBQVksT0FBT0EsT0FBT0MsV0FBVyxTQUFVSixHQUFHO1FBQ2xILE9BQU8sT0FBT0E7SUFDaEIsSUFBSSxTQUFVQSxHQUFHO1FBQ2YsT0FBT0EsT0FBTyxjQUFjLE9BQU9HLFVBQVVILElBQUlLLGdCQUFnQkYsVUFBVUgsUUFBUUcsT0FBT0csWUFBWSxXQUFXLE9BQU9OO0lBQzFILEdBQUdDLHlCQUF5Qk0sR0FBRyxNQUFNTix5QkFBeUIsR0FBR0EsT0FBT0MsU0FBVUgsUUFBUUM7QUFDNUY7QUFDQUMsT0FBT0MsVUFBVUgsU0FBU0UseUJBQXlCTSxHQUFHLE1BQU1OLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YuanM/ZjMzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICBcIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mXCI7XG5cbiAgcmV0dXJuIChtb2R1bGUuZXhwb3J0cyA9IF90eXBlb2YgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBcInN5bWJvbFwiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmo7XG4gIH0gOiBmdW5jdGlvbiAob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbiAgfSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzKSwgX3R5cGVvZihvYmopO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfdHlwZW9mLCBtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZSwgbW9kdWxlLmV4cG9ydHNbXCJkZWZhdWx0XCJdID0gbW9kdWxlLmV4cG9ydHM7Il0sIm5hbWVzIjpbIl90eXBlb2YiLCJvYmoiLCJtb2R1bGUiLCJleHBvcnRzIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIl9fZXNNb2R1bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/typeof.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheS5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsSUFBSUEsbUJBQW1CQyxtQkFBT0EsQ0FBQyxvR0FBdUI7QUFDdEQsU0FBU0MsNEJBQTRCQyxDQUFDLEVBQUVDLE1BQU07SUFDNUMsSUFBSSxDQUFDRCxHQUFHO0lBQ1IsSUFBSSxPQUFPQSxNQUFNLFVBQVUsT0FBT0gsaUJBQWlCRyxHQUFHQztJQUN0RCxJQUFJQyxJQUFJQyxPQUFPQyxVQUFVQyxTQUFTQyxLQUFLTixHQUFHTyxNQUFNLEdBQUcsQ0FBQztJQUNwRCxJQUFJTCxNQUFNLFlBQVlGLEVBQUVRLGFBQWFOLElBQUlGLEVBQUVRLFlBQVlDO0lBQ3ZELElBQUlQLE1BQU0sU0FBU0EsTUFBTSxPQUFPLE9BQU9RLE1BQU1DLEtBQUtYO0lBQ2xELElBQUlFLE1BQU0sZUFBZSwyQ0FBMkNVLEtBQUtWLElBQUksT0FBT0wsaUJBQWlCRyxHQUFHQztBQUMxRztBQUNBWSxPQUFPQyxVQUFVZiw2QkFBNkJjLHlCQUF5QkUsR0FBRyxNQUFNRix5QkFBeUIsR0FBR0EsT0FBT0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkuanM/ZGE1NyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlMaWtlVG9BcnJheSA9IHJlcXVpcmUoXCIuL2FycmF5TGlrZVRvQXJyYXkuanNcIik7XG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gIGlmICghbykgcmV0dXJuO1xuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBhcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG4gIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTtcbiAgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7XG4gIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xufVxubW9kdWxlLmV4cG9ydHMgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXksIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiYXJyYXlMaWtlVG9BcnJheSIsInJlcXVpcmUiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJvIiwibWluTGVuIiwibiIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY2FsbCIsInNsaWNlIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiQXJyYXkiLCJmcm9tIiwidGVzdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/wrapNativeSuper.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nvar getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\");\nvar setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/setPrototypeOf.js\");\nvar isNativeFunction = __webpack_require__(/*! ./isNativeFunction.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/isNativeFunction.js\");\nvar construct = __webpack_require__(/*! ./construct.js */ \"(sc_server)/./node_modules/@babel/runtime/helpers/construct.js\");\nfunction _wrapNativeSuper(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n    module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n        if (Class === null || !isNativeFunction(Class)) return Class;\n        if (typeof Class !== \"function\") {\n            throw new TypeError(\"Super expression must either be null or a function\");\n        }\n        if (typeof _cache !== \"undefined\") {\n            if (_cache.has(Class)) return _cache.get(Class);\n            _cache.set(Class, Wrapper);\n        }\n        function Wrapper() {\n            return construct(Class, arguments, getPrototypeOf(this).constructor);\n        }\n        Wrapper.prototype = Object.create(Class.prototype, {\n            constructor: {\n                value: Wrapper,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n        return setPrototypeOf(Wrapper, Class);\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n    return _wrapNativeSuper(Class);\n}\nmodule.exports = _wrapNativeSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy93cmFwTmF0aXZlU3VwZXIuanMiLCJtYXBwaW5ncyI6IjtBQUFBLElBQUlBLGlCQUFpQkMsbUJBQU9BLENBQUMsZ0dBQXFCO0FBQ2xELElBQUlDLGlCQUFpQkQsbUJBQU9BLENBQUMsZ0dBQXFCO0FBQ2xELElBQUlFLG1CQUFtQkYsbUJBQU9BLENBQUMsb0dBQXVCO0FBQ3RELElBQUlHLFlBQVlILG1CQUFPQSxDQUFDLHNGQUFnQjtBQUN4QyxTQUFTSSxpQkFBaUJDLEtBQUs7SUFDN0IsSUFBSUMsU0FBUyxPQUFPQyxRQUFRLGFBQWEsSUFBSUEsUUFBUUM7SUFDckRDLE9BQU9DLFVBQVVOLG1CQUFtQixTQUFTQSxpQkFBaUJDLEtBQUs7UUFDakUsSUFBSUEsVUFBVSxRQUFRLENBQUNILGlCQUFpQkcsUUFBUSxPQUFPQTtRQUN2RCxJQUFJLE9BQU9BLFVBQVUsWUFBWTtZQUMvQixNQUFNLElBQUlNLFVBQVU7UUFDdEI7UUFDQSxJQUFJLE9BQU9MLFdBQVcsYUFBYTtZQUNqQyxJQUFJQSxPQUFPTSxJQUFJUCxRQUFRLE9BQU9DLE9BQU9PLElBQUlSO1lBQ3pDQyxPQUFPUSxJQUFJVCxPQUFPVTtRQUNwQjtRQUNBLFNBQVNBO1lBQ1AsT0FBT1osVUFBVUUsT0FBT1csV0FBV2pCLGVBQWUsSUFBSSxFQUFFa0I7UUFDMUQ7UUFDQUYsUUFBUUcsWUFBWUMsT0FBT0MsT0FBT2YsTUFBTWEsV0FBVztZQUNqREQsYUFBYTtnQkFDWEksT0FBT047Z0JBQ1BPLFlBQVk7Z0JBQ1pDLFVBQVU7Z0JBQ1ZDLGNBQWM7WUFDaEI7UUFDRjtRQUNBLE9BQU92QixlQUFlYyxTQUFTVjtJQUNqQyxHQUFHSSx5QkFBeUJnQixHQUFHLE1BQU1oQix5QkFBeUIsR0FBR0EsT0FBT0M7SUFDeEUsT0FBT04saUJBQWlCQztBQUMxQjtBQUNBSSxPQUFPQyxVQUFVTixrQkFBa0JLLHlCQUF5QmdCLEdBQUcsTUFBTWhCLHlCQUF5QixHQUFHQSxPQUFPQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bvc3RfcHVsc2UvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy93cmFwTmF0aXZlU3VwZXIuanM/ZjUyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKFwiLi9nZXRQcm90b3R5cGVPZi5qc1wiKTtcbnZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoXCIuL3NldFByb3RvdHlwZU9mLmpzXCIpO1xudmFyIGlzTmF0aXZlRnVuY3Rpb24gPSByZXF1aXJlKFwiLi9pc05hdGl2ZUZ1bmN0aW9uLmpzXCIpO1xudmFyIGNvbnN0cnVjdCA9IHJlcXVpcmUoXCIuL2NvbnN0cnVjdC5qc1wiKTtcbmZ1bmN0aW9uIF93cmFwTmF0aXZlU3VwZXIoQ2xhc3MpIHtcbiAgdmFyIF9jYWNoZSA9IHR5cGVvZiBNYXAgPT09IFwiZnVuY3Rpb25cIiA/IG5ldyBNYXAoKSA6IHVuZGVmaW5lZDtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfd3JhcE5hdGl2ZVN1cGVyID0gZnVuY3Rpb24gX3dyYXBOYXRpdmVTdXBlcihDbGFzcykge1xuICAgIGlmIChDbGFzcyA9PT0gbnVsbCB8fCAhaXNOYXRpdmVGdW5jdGlvbihDbGFzcykpIHJldHVybiBDbGFzcztcbiAgICBpZiAodHlwZW9mIENsYXNzICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBfY2FjaGUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIGlmIChfY2FjaGUuaGFzKENsYXNzKSkgcmV0dXJuIF9jYWNoZS5nZXQoQ2xhc3MpO1xuICAgICAgX2NhY2hlLnNldChDbGFzcywgV3JhcHBlcik7XG4gICAgfVxuICAgIGZ1bmN0aW9uIFdyYXBwZXIoKSB7XG4gICAgICByZXR1cm4gY29uc3RydWN0KENsYXNzLCBhcmd1bWVudHMsIGdldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yKTtcbiAgICB9XG4gICAgV3JhcHBlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKENsYXNzLnByb3RvdHlwZSwge1xuICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgdmFsdWU6IFdyYXBwZXIsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHNldFByb3RvdHlwZU9mKFdyYXBwZXIsIENsYXNzKTtcbiAgfSwgbW9kdWxlLmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWUsIG1vZHVsZS5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IG1vZHVsZS5leHBvcnRzO1xuICByZXR1cm4gX3dyYXBOYXRpdmVTdXBlcihDbGFzcyk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IF93cmFwTmF0aXZlU3VwZXIsIG1vZHVsZS5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlLCBtb2R1bGUuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBtb2R1bGUuZXhwb3J0czsiXSwibmFtZXMiOlsiZ2V0UHJvdG90eXBlT2YiLCJyZXF1aXJlIiwic2V0UHJvdG90eXBlT2YiLCJpc05hdGl2ZUZ1bmN0aW9uIiwiY29uc3RydWN0IiwiX3dyYXBOYXRpdmVTdXBlciIsIkNsYXNzIiwiX2NhY2hlIiwiTWFwIiwidW5kZWZpbmVkIiwibW9kdWxlIiwiZXhwb3J0cyIsIlR5cGVFcnJvciIsImhhcyIsImdldCIsInNldCIsIldyYXBwZXIiLCJhcmd1bWVudHMiLCJjb25zdHJ1Y3RvciIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsInZhbHVlIiwiZW51bWVyYWJsZSIsIndyaXRhYmxlIiwiY29uZmlndXJhYmxlIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/helpers/wrapNativeSuper.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/@babel/runtime/regenerator/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("// TODO(Babel 8): Remove this file.\n\nvar runtime = __webpack_require__(/*! ../helpers/regeneratorRuntime */ \"(sc_server)/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js\")();\nmodule.exports = runtime;\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n    regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n    if (typeof globalThis === \"object\") {\n        globalThis.regeneratorRuntime = runtime;\n    } else {\n        Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3IvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsbUNBQW1DOztBQUVuQyxJQUFJQSxVQUFVQyxtQkFBT0EsQ0FBQyw4R0FBK0I7QUFDckRDLE9BQU9DLFVBQVVIO0FBRWpCLGtHQUFrRztBQUNsRyxJQUFJO0lBQ0ZJLHFCQUFxQko7QUFDdkIsRUFBRSxPQUFPSyxzQkFBc0I7SUFDN0IsSUFBSSxPQUFPQyxlQUFlLFVBQVU7UUFDbENBLFdBQVdGLHFCQUFxQko7SUFDbEMsT0FBTztRQUNMTyxTQUFTLEtBQUssMEJBQTBCUDtJQUMxQztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9zdF9wdWxzZS8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvci9pbmRleC5qcz84MTQ0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRPRE8oQmFiZWwgOCk6IFJlbW92ZSB0aGlzIGZpbGUuXG5cbnZhciBydW50aW1lID0gcmVxdWlyZShcIi4uL2hlbHBlcnMvcmVnZW5lcmF0b3JSdW50aW1lXCIpKCk7XG5tb2R1bGUuZXhwb3J0cyA9IHJ1bnRpbWU7XG5cbi8vIENvcGllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWdlbmVyYXRvci9ibG9iL21haW4vcGFja2FnZXMvcnVudGltZS9ydW50aW1lLmpzI0w3MzY9XG50cnkge1xuICByZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xufSBjYXRjaCAoYWNjaWRlbnRhbFN0cmljdE1vZGUpIHtcbiAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSBcIm9iamVjdFwiKSB7XG4gICAgZ2xvYmFsVGhpcy5yZWdlbmVyYXRvclJ1bnRpbWUgPSBydW50aW1lO1xuICB9IGVsc2Uge1xuICAgIEZ1bmN0aW9uKFwiclwiLCBcInJlZ2VuZXJhdG9yUnVudGltZSA9IHJcIikocnVudGltZSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJydW50aW1lIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJhY2NpZGVudGFsU3RyaWN0TW9kZSIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/@babel/runtime/regenerator/index.js\n");

/***/ }),

/***/ "(sc_server)/./node_modules/zustand/esm/index.mjs":
/*!********************************************!*\
  !*** ./node_modules/zustand/esm/index.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createStore: () => (/* reexport safe */ zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__.createStore),\n/* harmony export */   \"default\": () => (/* binding */ react),\n/* harmony export */   useStore: () => (/* binding */ useStore)\n/* harmony export */ });\n/* harmony import */ var zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zustand/vanilla */ \"(sc_server)/./node_modules/zustand/esm/vanilla.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(sc_server)/./node_modules/next/dist/compiled/react/react.shared-subset.js\");\n/* harmony import */ var use_sync_external_store_shim_with_selector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! use-sync-external-store/shim/with-selector.js */ \"(sc_server)/./node_modules/use-sync-external-store/shim/with-selector.js\");\n\n\n\n\nconst { useSyncExternalStoreWithSelector } = use_sync_external_store_shim_with_selector_js__WEBPACK_IMPORTED_MODULE_2__;\nfunction useStore(api, selector = api.getState, equalityFn) {\n    const slice = useSyncExternalStoreWithSelector(api.subscribe, api.getState, api.getServerState || api.getState, selector, equalityFn);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useDebugValue)(slice);\n    return slice;\n}\nconst createImpl = (createState)=>{\n    if ( true && typeof createState !== \"function\") {\n        console.warn(\"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\");\n    }\n    const api = typeof createState === \"function\" ? (0,zustand_vanilla__WEBPACK_IMPORTED_MODULE_0__.createStore)(createState) : createState;\n    const useBoundStore = (selector, equalityFn)=>useStore(api, selector, equalityFn);\n    Object.assign(useBoundStore, api);\n    return useBoundStore;\n};\nconst create = (createState)=>createState ? createImpl(createState) : createImpl;\nvar react = (createState)=>{\n    if (true) {\n        console.warn(\"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\");\n    }\n    return create(createState);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvenVzdGFuZC9lc20vaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBOEM7QUFDZDtBQUNNO0FBQ2tEO0FBRXhGLE1BQU0sRUFBRUcsZ0NBQWdDLEVBQUUsR0FBR0QsMEVBQTJCQTtBQUN4RSxTQUFTRSxTQUFTQyxHQUFHLEVBQUVDLFdBQVdELElBQUlFLFFBQVEsRUFBRUMsVUFBVTtJQUN4RCxNQUFNQyxRQUFRTixpQ0FDWkUsSUFBSUssV0FDSkwsSUFBSUUsVUFDSkYsSUFBSU0sa0JBQWtCTixJQUFJRSxVQUMxQkQsVUFDQUU7SUFFRlAsb0RBQWFBLENBQUNRO0lBQ2QsT0FBT0E7QUFDVDtBQUNBLE1BQU1HLGFBQWEsQ0FBQ0M7SUFDbEIsSUFBSSxLQUEwRCxJQUFJLE9BQU9BLGdCQUFnQixZQUFZO1FBQ25HRyxRQUFRQyxLQUNOO0lBRUo7SUFDQSxNQUFNWixNQUFNLE9BQU9RLGdCQUFnQixhQUFhYiw0REFBV0EsQ0FBQ2EsZUFBZUE7SUFDM0UsTUFBTUssZ0JBQWdCLENBQUNaLFVBQVVFLGFBQWVKLFNBQVNDLEtBQUtDLFVBQVVFO0lBQ3hFVyxPQUFPQyxPQUFPRixlQUFlYjtJQUM3QixPQUFPYTtBQUNUO0FBQ0EsTUFBTUcsU0FBUyxDQUFDUixjQUFnQkEsY0FBY0QsV0FBV0MsZUFBZUQ7QUFDeEUsSUFBSVUsUUFBUSxDQUFDVDtJQUNYLElBQUksSUFBMEQsRUFBRTtRQUM5REcsUUFBUUMsS0FDTjtJQUVKO0lBQ0EsT0FBT0ksT0FBT1I7QUFDaEI7QUFFOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL3p1c3RhbmQvZXNtL2luZGV4Lm1qcz8yZTRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAnenVzdGFuZC92YW5pbGxhJztcbmV4cG9ydCAqIGZyb20gJ3p1c3RhbmQvdmFuaWxsYSc7XG5pbXBvcnQgeyB1c2VEZWJ1Z1ZhbHVlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZVN5bmNFeHRlcm5hbFN0b3JlRXhwb3J0cyBmcm9tICd1c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL3dpdGgtc2VsZWN0b3IuanMnO1xuXG5jb25zdCB7IHVzZVN5bmNFeHRlcm5hbFN0b3JlV2l0aFNlbGVjdG9yIH0gPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZUV4cG9ydHM7XG5mdW5jdGlvbiB1c2VTdG9yZShhcGksIHNlbGVjdG9yID0gYXBpLmdldFN0YXRlLCBlcXVhbGl0eUZuKSB7XG4gIGNvbnN0IHNsaWNlID0gdXNlU3luY0V4dGVybmFsU3RvcmVXaXRoU2VsZWN0b3IoXG4gICAgYXBpLnN1YnNjcmliZSxcbiAgICBhcGkuZ2V0U3RhdGUsXG4gICAgYXBpLmdldFNlcnZlclN0YXRlIHx8IGFwaS5nZXRTdGF0ZSxcbiAgICBzZWxlY3RvcixcbiAgICBlcXVhbGl0eUZuXG4gICk7XG4gIHVzZURlYnVnVmFsdWUoc2xpY2UpO1xuICByZXR1cm4gc2xpY2U7XG59XG5jb25zdCBjcmVhdGVJbXBsID0gKGNyZWF0ZVN0YXRlKSA9PiB7XG4gIGlmICgoaW1wb3J0Lm1ldGEuZW52ICYmIGltcG9ydC5tZXRhLmVudi5NT0RFKSAhPT0gXCJwcm9kdWN0aW9uXCIgJiYgdHlwZW9mIGNyZWF0ZVN0YXRlICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICBcIltERVBSRUNBVEVEXSBQYXNzaW5nIGEgdmFuaWxsYSBzdG9yZSB3aWxsIGJlIHVuc3VwcG9ydGVkIGluIGEgZnV0dXJlIHZlcnNpb24uIEluc3RlYWQgdXNlIGBpbXBvcnQgeyB1c2VTdG9yZSB9IGZyb20gJ3p1c3RhbmQnYC5cIlxuICAgICk7XG4gIH1cbiAgY29uc3QgYXBpID0gdHlwZW9mIGNyZWF0ZVN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyBjcmVhdGVTdG9yZShjcmVhdGVTdGF0ZSkgOiBjcmVhdGVTdGF0ZTtcbiAgY29uc3QgdXNlQm91bmRTdG9yZSA9IChzZWxlY3RvciwgZXF1YWxpdHlGbikgPT4gdXNlU3RvcmUoYXBpLCBzZWxlY3RvciwgZXF1YWxpdHlGbik7XG4gIE9iamVjdC5hc3NpZ24odXNlQm91bmRTdG9yZSwgYXBpKTtcbiAgcmV0dXJuIHVzZUJvdW5kU3RvcmU7XG59O1xuY29uc3QgY3JlYXRlID0gKGNyZWF0ZVN0YXRlKSA9PiBjcmVhdGVTdGF0ZSA/IGNyZWF0ZUltcGwoY3JlYXRlU3RhdGUpIDogY3JlYXRlSW1wbDtcbnZhciByZWFjdCA9IChjcmVhdGVTdGF0ZSkgPT4ge1xuICBpZiAoKGltcG9ydC5tZXRhLmVudiAmJiBpbXBvcnQubWV0YS5lbnYuTU9ERSkgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgXCJbREVQUkVDQVRFRF0gRGVmYXVsdCBleHBvcnQgaXMgZGVwcmVjYXRlZC4gSW5zdGVhZCB1c2UgYGltcG9ydCB7IGNyZWF0ZSB9IGZyb20gJ3p1c3RhbmQnYC5cIlxuICAgICk7XG4gIH1cbiAgcmV0dXJuIGNyZWF0ZShjcmVhdGVTdGF0ZSk7XG59O1xuXG5leHBvcnQgeyBjcmVhdGUsIHJlYWN0IGFzIGRlZmF1bHQsIHVzZVN0b3JlIH07XG4iXSwibmFtZXMiOlsiY3JlYXRlU3RvcmUiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlU3luY0V4dGVybmFsU3RvcmVFeHBvcnRzIiwidXNlU3luY0V4dGVybmFsU3RvcmVXaXRoU2VsZWN0b3IiLCJ1c2VTdG9yZSIsImFwaSIsInNlbGVjdG9yIiwiZ2V0U3RhdGUiLCJlcXVhbGl0eUZuIiwic2xpY2UiLCJzdWJzY3JpYmUiLCJnZXRTZXJ2ZXJTdGF0ZSIsImNyZWF0ZUltcGwiLCJjcmVhdGVTdGF0ZSIsImVudiIsIk1PREUiLCJjb25zb2xlIiwid2FybiIsInVzZUJvdW5kU3RvcmUiLCJPYmplY3QiLCJhc3NpZ24iLCJjcmVhdGUiLCJyZWFjdCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/zustand/esm/index.mjs\n");

/***/ }),

/***/ "(sc_server)/./node_modules/zustand/esm/middleware.mjs":
/*!*************************************************!*\
  !*** ./node_modules/zustand/esm/middleware.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   combine: () => (/* binding */ combine),\n/* harmony export */   createJSONStorage: () => (/* binding */ createJSONStorage),\n/* harmony export */   devtools: () => (/* binding */ devtools),\n/* harmony export */   persist: () => (/* binding */ persist),\n/* harmony export */   redux: () => (/* binding */ redux),\n/* harmony export */   subscribeWithSelector: () => (/* binding */ subscribeWithSelector)\n/* harmony export */ });\nconst reduxImpl = (reducer, initial)=>(set, _get, api)=>{\n        api.dispatch = (action)=>{\n            set((state)=>reducer(state, action), false, action);\n            return action;\n        };\n        api.dispatchFromDevtools = true;\n        return {\n            dispatch: (...a)=>api.dispatch(...a),\n            ...initial\n        };\n    };\nconst redux = reduxImpl;\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name)=>{\n    const api = trackedConnections.get(name);\n    if (!api) return {};\n    return Object.fromEntries(Object.entries(api.stores).map(([key, api2])=>[\n            key,\n            api2.getState()\n        ]));\n};\nconst extractConnectionInformation = (store, extensionConnector, options)=>{\n    if (store === void 0) {\n        return {\n            type: \"untracked\",\n            connection: extensionConnector.connect(options)\n        };\n    }\n    const existingConnection = trackedConnections.get(options.name);\n    if (existingConnection) {\n        return {\n            type: \"tracked\",\n            store,\n            ...existingConnection\n        };\n    }\n    const newConnection = {\n        connection: extensionConnector.connect(options),\n        stores: {}\n    };\n    trackedConnections.set(options.name, newConnection);\n    return {\n        type: \"tracked\",\n        store,\n        ...newConnection\n    };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {})=>(set, get, api)=>{\n        const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n        let extensionConnector;\n        try {\n            extensionConnector = (enabled != null ? enabled : (/* unsupported import.meta.env */ undefined && 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n        } catch (e) {}\n        if (!extensionConnector) {\n            if ( true && enabled) {\n                console.warn(\"[zustand devtools middleware] Please install/enable Redux devtools extension\");\n            }\n            return fn(set, get, api);\n        }\n        const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n        let isRecording = true;\n        api.setState = (state, replace, nameOrAction)=>{\n            const r = set(state, replace);\n            if (!isRecording) return r;\n            const action = nameOrAction === void 0 ? {\n                type: anonymousActionType || \"anonymous\"\n            } : typeof nameOrAction === \"string\" ? {\n                type: nameOrAction\n            } : nameOrAction;\n            if (store === void 0) {\n                connection == null ? void 0 : connection.send(action, get());\n                return r;\n            }\n            connection == null ? void 0 : connection.send({\n                ...action,\n                type: `${store}/${action.type}`\n            }, {\n                ...getTrackedConnectionState(options.name),\n                [store]: api.getState()\n            });\n            return r;\n        };\n        const setStateFromDevtools = (...a)=>{\n            const originalIsRecording = isRecording;\n            isRecording = false;\n            set(...a);\n            isRecording = originalIsRecording;\n        };\n        const initialState = fn(api.setState, get, api);\n        if (connectionInformation.type === \"untracked\") {\n            connection == null ? void 0 : connection.init(initialState);\n        } else {\n            connectionInformation.stores[connectionInformation.store] = api;\n            connection == null ? void 0 : connection.init(Object.fromEntries(Object.entries(connectionInformation.stores).map(([key, store2])=>[\n                    key,\n                    key === connectionInformation.store ? initialState : store2.getState()\n                ])));\n        }\n        if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n            let didWarnAboutReservedActionType = false;\n            const originalDispatch = api.dispatch;\n            api.dispatch = (...a)=>{\n                if ( true && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n                    console.warn('[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.');\n                    didWarnAboutReservedActionType = true;\n                }\n                originalDispatch(...a);\n            };\n        }\n        connection.subscribe((message)=>{\n            var _a;\n            switch(message.type){\n                case \"ACTION\":\n                    if (typeof message.payload !== \"string\") {\n                        console.error(\"[zustand devtools middleware] Unsupported action format\");\n                        return;\n                    }\n                    return parseJsonThen(message.payload, (action)=>{\n                        if (action.type === \"__setState\") {\n                            if (store === void 0) {\n                                setStateFromDevtools(action.state);\n                                return;\n                            }\n                            if (Object.keys(action.state).length !== 1) {\n                                console.error(`\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `);\n                            }\n                            const stateFromDevtools = action.state[store];\n                            if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                                return;\n                            }\n                            if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                                setStateFromDevtools(stateFromDevtools);\n                            }\n                            return;\n                        }\n                        if (!api.dispatchFromDevtools) return;\n                        if (typeof api.dispatch !== \"function\") return;\n                        api.dispatch(action);\n                    });\n                case \"DISPATCH\":\n                    switch(message.payload.type){\n                        case \"RESET\":\n                            setStateFromDevtools(initialState);\n                            if (store === void 0) {\n                                return connection == null ? void 0 : connection.init(api.getState());\n                            }\n                            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n                        case \"COMMIT\":\n                            if (store === void 0) {\n                                connection == null ? void 0 : connection.init(api.getState());\n                                return;\n                            }\n                            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n                        case \"ROLLBACK\":\n                            return parseJsonThen(message.state, (state)=>{\n                                if (store === void 0) {\n                                    setStateFromDevtools(state);\n                                    connection == null ? void 0 : connection.init(api.getState());\n                                    return;\n                                }\n                                setStateFromDevtools(state[store]);\n                                connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n                            });\n                        case \"JUMP_TO_STATE\":\n                        case \"JUMP_TO_ACTION\":\n                            return parseJsonThen(message.state, (state)=>{\n                                if (store === void 0) {\n                                    setStateFromDevtools(state);\n                                    return;\n                                }\n                                if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                                    setStateFromDevtools(state[store]);\n                                }\n                            });\n                        case \"IMPORT_STATE\":\n                            {\n                                const { nextLiftedState } = message.payload;\n                                const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n                                if (!lastComputedState) return;\n                                if (store === void 0) {\n                                    setStateFromDevtools(lastComputedState);\n                                } else {\n                                    setStateFromDevtools(lastComputedState[store]);\n                                }\n                                connection == null ? void 0 : connection.send(null, // FIXME no-any\n                                nextLiftedState);\n                                return;\n                            }\n                        case \"PAUSE_RECORDING\":\n                            return isRecording = !isRecording;\n                    }\n                    return;\n            }\n        });\n        return initialState;\n    };\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f)=>{\n    let parsed;\n    try {\n        parsed = JSON.parse(stringified);\n    } catch (e) {\n        console.error(\"[zustand devtools middleware] Could not parse the received json\", e);\n    }\n    if (parsed !== void 0) f(parsed);\n};\nconst subscribeWithSelectorImpl = (fn)=>(set, get, api)=>{\n        const origSubscribe = api.subscribe;\n        api.subscribe = (selector, optListener, options)=>{\n            let listener = selector;\n            if (optListener) {\n                const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n                let currentSlice = selector(api.getState());\n                listener = (state)=>{\n                    const nextSlice = selector(state);\n                    if (!equalityFn(currentSlice, nextSlice)) {\n                        const previousSlice = currentSlice;\n                        optListener(currentSlice = nextSlice, previousSlice);\n                    }\n                };\n                if (options == null ? void 0 : options.fireImmediately) {\n                    optListener(currentSlice, currentSlice);\n                }\n            }\n            return origSubscribe(listener);\n        };\n        const initialState = fn(set, get, api);\n        return initialState;\n    };\nconst subscribeWithSelector = subscribeWithSelectorImpl;\nconst combine = (initialState, create)=>(...a)=>Object.assign({}, initialState, create(...a));\nfunction createJSONStorage(getStorage, options) {\n    let storage;\n    try {\n        storage = getStorage();\n    } catch (e) {\n        return;\n    }\n    const persistStorage = {\n        getItem: (name)=>{\n            var _a;\n            const parse = (str2)=>{\n                if (str2 === null) {\n                    return null;\n                }\n                return JSON.parse(str2, options == null ? void 0 : options.reviver);\n            };\n            const str = (_a = storage.getItem(name)) != null ? _a : null;\n            if (str instanceof Promise) {\n                return str.then(parse);\n            }\n            return parse(str);\n        },\n        setItem: (name, newValue)=>storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\n        removeItem: (name)=>storage.removeItem(name)\n    };\n    return persistStorage;\n}\nconst toThenable = (fn)=>(input)=>{\n        try {\n            const result = fn(input);\n            if (result instanceof Promise) {\n                return result;\n            }\n            return {\n                then (onFulfilled) {\n                    return toThenable(onFulfilled)(result);\n                },\n                catch (_onRejected) {\n                    return this;\n                }\n            };\n        } catch (e) {\n            return {\n                then (_onFulfilled) {\n                    return this;\n                },\n                catch (onRejected) {\n                    return toThenable(onRejected)(e);\n                }\n            };\n        }\n    };\nconst oldImpl = (config, baseOptions)=>(set, get, api)=>{\n        let options = {\n            getStorage: ()=>localStorage,\n            serialize: JSON.stringify,\n            deserialize: JSON.parse,\n            partialize: (state)=>state,\n            version: 0,\n            merge: (persistedState, currentState)=>({\n                    ...currentState,\n                    ...persistedState\n                }),\n            ...baseOptions\n        };\n        let hasHydrated = false;\n        const hydrationListeners = /* @__PURE__ */ new Set();\n        const finishHydrationListeners = /* @__PURE__ */ new Set();\n        let storage;\n        try {\n            storage = options.getStorage();\n        } catch (e) {}\n        if (!storage) {\n            return config((...args)=>{\n                console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`);\n                set(...args);\n            }, get, api);\n        }\n        const thenableSerialize = toThenable(options.serialize);\n        const setItem = ()=>{\n            const state = options.partialize({\n                ...get()\n            });\n            let errorInSync;\n            const thenable = thenableSerialize({\n                state,\n                version: options.version\n            }).then((serializedValue)=>storage.setItem(options.name, serializedValue)).catch((e)=>{\n                errorInSync = e;\n            });\n            if (errorInSync) {\n                throw errorInSync;\n            }\n            return thenable;\n        };\n        const savedSetState = api.setState;\n        api.setState = (state, replace)=>{\n            savedSetState(state, replace);\n            void setItem();\n        };\n        const configResult = config((...args)=>{\n            set(...args);\n            void setItem();\n        }, get, api);\n        let stateFromStorage;\n        const hydrate = ()=>{\n            var _a;\n            if (!storage) return;\n            hasHydrated = false;\n            hydrationListeners.forEach((cb)=>cb(get()));\n            const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n            return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue)=>{\n                if (storageValue) {\n                    return options.deserialize(storageValue);\n                }\n            }).then((deserializedStorageValue)=>{\n                if (deserializedStorageValue) {\n                    if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n                        if (options.migrate) {\n                            return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);\n                        }\n                        console.error(`State loaded from storage couldn't be migrated since no migrate function was provided`);\n                    } else {\n                        return deserializedStorageValue.state;\n                    }\n                }\n            }).then((migratedState)=>{\n                var _a2;\n                stateFromStorage = options.merge(migratedState, (_a2 = get()) != null ? _a2 : configResult);\n                set(stateFromStorage, true);\n                return setItem();\n            }).then(()=>{\n                postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n                hasHydrated = true;\n                finishHydrationListeners.forEach((cb)=>cb(stateFromStorage));\n            }).catch((e)=>{\n                postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n            });\n        };\n        api.persist = {\n            setOptions: (newOptions)=>{\n                options = {\n                    ...options,\n                    ...newOptions\n                };\n                if (newOptions.getStorage) {\n                    storage = newOptions.getStorage();\n                }\n            },\n            clearStorage: ()=>{\n                storage == null ? void 0 : storage.removeItem(options.name);\n            },\n            getOptions: ()=>options,\n            rehydrate: ()=>hydrate(),\n            hasHydrated: ()=>hasHydrated,\n            onHydrate: (cb)=>{\n                hydrationListeners.add(cb);\n                return ()=>{\n                    hydrationListeners.delete(cb);\n                };\n            },\n            onFinishHydration: (cb)=>{\n                finishHydrationListeners.add(cb);\n                return ()=>{\n                    finishHydrationListeners.delete(cb);\n                };\n            }\n        };\n        hydrate();\n        return stateFromStorage || configResult;\n    };\nconst newImpl = (config, baseOptions)=>(set, get, api)=>{\n        let options = {\n            storage: createJSONStorage(()=>localStorage),\n            partialize: (state)=>state,\n            version: 0,\n            merge: (persistedState, currentState)=>({\n                    ...currentState,\n                    ...persistedState\n                }),\n            ...baseOptions\n        };\n        let hasHydrated = false;\n        const hydrationListeners = /* @__PURE__ */ new Set();\n        const finishHydrationListeners = /* @__PURE__ */ new Set();\n        let storage = options.storage;\n        if (!storage) {\n            return config((...args)=>{\n                console.warn(`[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`);\n                set(...args);\n            }, get, api);\n        }\n        const setItem = ()=>{\n            const state = options.partialize({\n                ...get()\n            });\n            return storage.setItem(options.name, {\n                state,\n                version: options.version\n            });\n        };\n        const savedSetState = api.setState;\n        api.setState = (state, replace)=>{\n            savedSetState(state, replace);\n            void setItem();\n        };\n        const configResult = config((...args)=>{\n            set(...args);\n            void setItem();\n        }, get, api);\n        let stateFromStorage;\n        const hydrate = ()=>{\n            var _a, _b;\n            if (!storage) return;\n            hasHydrated = false;\n            hydrationListeners.forEach((cb)=>{\n                var _a2;\n                return cb((_a2 = get()) != null ? _a2 : configResult);\n            });\n            const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n            return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue)=>{\n                if (deserializedStorageValue) {\n                    if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n                        if (options.migrate) {\n                            return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);\n                        }\n                        console.error(`State loaded from storage couldn't be migrated since no migrate function was provided`);\n                    } else {\n                        return deserializedStorageValue.state;\n                    }\n                }\n            }).then((migratedState)=>{\n                var _a2;\n                stateFromStorage = options.merge(migratedState, (_a2 = get()) != null ? _a2 : configResult);\n                set(stateFromStorage, true);\n                return setItem();\n            }).then(()=>{\n                postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n                stateFromStorage = get();\n                hasHydrated = true;\n                finishHydrationListeners.forEach((cb)=>cb(stateFromStorage));\n            }).catch((e)=>{\n                postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n            });\n        };\n        api.persist = {\n            setOptions: (newOptions)=>{\n                options = {\n                    ...options,\n                    ...newOptions\n                };\n                if (newOptions.storage) {\n                    storage = newOptions.storage;\n                }\n            },\n            clearStorage: ()=>{\n                storage == null ? void 0 : storage.removeItem(options.name);\n            },\n            getOptions: ()=>options,\n            rehydrate: ()=>hydrate(),\n            hasHydrated: ()=>hasHydrated,\n            onHydrate: (cb)=>{\n                hydrationListeners.add(cb);\n                return ()=>{\n                    hydrationListeners.delete(cb);\n                };\n            },\n            onFinishHydration: (cb)=>{\n                finishHydrationListeners.add(cb);\n                return ()=>{\n                    finishHydrationListeners.delete(cb);\n                };\n            }\n        };\n        if (!options.skipHydration) {\n            hydrate();\n        }\n        return stateFromStorage || configResult;\n    };\nconst persistImpl = (config, baseOptions)=>{\n    if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n        if (true) {\n            console.warn(\"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\");\n        }\n        return oldImpl(config, baseOptions);\n    }\n    return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/zustand/esm/middleware.mjs\n");

/***/ }),

/***/ "(sc_server)/./node_modules/zustand/esm/vanilla.mjs":
/*!**********************************************!*\
  !*** ./node_modules/zustand/esm/vanilla.mjs ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createStore: () => (/* binding */ createStore),\n/* harmony export */   \"default\": () => (/* binding */ vanilla)\n/* harmony export */ });\nconst createStoreImpl = (createState)=>{\n    let state;\n    const listeners = /* @__PURE__ */ new Set();\n    const setState = (partial, replace)=>{\n        const nextState = typeof partial === \"function\" ? partial(state) : partial;\n        if (!Object.is(nextState, state)) {\n            const previousState = state;\n            state = (replace != null ? replace : typeof nextState !== \"object\") ? nextState : Object.assign({}, state, nextState);\n            listeners.forEach((listener)=>listener(state, previousState));\n        }\n    };\n    const getState = ()=>state;\n    const subscribe = (listener)=>{\n        listeners.add(listener);\n        return ()=>listeners.delete(listener);\n    };\n    const destroy = ()=>{\n        if (true) {\n            console.warn(\"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\");\n        }\n        listeners.clear();\n    };\n    const api = {\n        setState,\n        getState,\n        subscribe,\n        destroy\n    };\n    state = createState(setState, getState, api);\n    return api;\n};\nconst createStore = (createState)=>createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState)=>{\n    if (true) {\n        console.warn(\"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\");\n    }\n    return createStore(createState);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNjX3NlcnZlcikvLi9ub2RlX21vZHVsZXMvenVzdGFuZC9lc20vdmFuaWxsYS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxNQUFNQSxrQkFBa0IsQ0FBQ0M7SUFDdkIsSUFBSUM7SUFDSixNQUFNQyxZQUFZLGFBQWEsR0FBRyxJQUFJQztJQUN0QyxNQUFNQyxXQUFXLENBQUNDLFNBQVNDO1FBQ3pCLE1BQU1DLFlBQVksT0FBT0YsWUFBWSxhQUFhQSxRQUFRSixTQUFTSTtRQUNuRSxJQUFJLENBQUNHLE9BQU9DLEdBQUdGLFdBQVdOLFFBQVE7WUFDaEMsTUFBTVMsZ0JBQWdCVDtZQUN0QkEsUUFBUSxDQUFDSyxXQUFXLE9BQU9BLFVBQVUsT0FBT0MsY0FBYyxRQUFPLElBQUtBLFlBQVlDLE9BQU9HLE9BQU8sQ0FBQyxHQUFHVixPQUFPTTtZQUMzR0wsVUFBVVUsUUFBUSxDQUFDQyxXQUFhQSxTQUFTWixPQUFPUztRQUNsRDtJQUNGO0lBQ0EsTUFBTUksV0FBVyxJQUFNYjtJQUN2QixNQUFNYyxZQUFZLENBQUNGO1FBQ2pCWCxVQUFVYyxJQUFJSDtRQUNkLE9BQU8sSUFBTVgsVUFBVWUsT0FBT0o7SUFDaEM7SUFDQSxNQUFNSyxVQUFVO1FBQ2QsSUFBSSxJQUEwRCxFQUFFO1lBQzlERyxRQUFRQyxLQUNOO1FBRUo7UUFDQXBCLFVBQVVxQjtJQUNaO0lBQ0EsTUFBTUMsTUFBTTtRQUFFcEI7UUFBVVU7UUFBVUM7UUFBV0c7SUFBUTtJQUNyRGpCLFFBQVFELFlBQVlJLFVBQVVVLFVBQVVVO0lBQ3hDLE9BQU9BO0FBQ1Q7QUFDQSxNQUFNQyxjQUFjLENBQUN6QixjQUFnQkEsY0FBY0QsZ0JBQWdCQyxlQUFlRDtBQUNsRixJQUFJMkIsVUFBVSxDQUFDMUI7SUFDYixJQUFJLElBQTBELEVBQUU7UUFDOURxQixRQUFRQyxLQUNOO0lBRUo7SUFDQSxPQUFPRyxZQUFZekI7QUFDckI7QUFFMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3N0X3B1bHNlLy4vbm9kZV9tb2R1bGVzL3p1c3RhbmQvZXNtL3ZhbmlsbGEubWpzPzlkOWUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY3JlYXRlU3RvcmVJbXBsID0gKGNyZWF0ZVN0YXRlKSA9PiB7XG4gIGxldCBzdGF0ZTtcbiAgY29uc3QgbGlzdGVuZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbiAgY29uc3Qgc2V0U3RhdGUgPSAocGFydGlhbCwgcmVwbGFjZSkgPT4ge1xuICAgIGNvbnN0IG5leHRTdGF0ZSA9IHR5cGVvZiBwYXJ0aWFsID09PSBcImZ1bmN0aW9uXCIgPyBwYXJ0aWFsKHN0YXRlKSA6IHBhcnRpYWw7XG4gICAgaWYgKCFPYmplY3QuaXMobmV4dFN0YXRlLCBzdGF0ZSkpIHtcbiAgICAgIGNvbnN0IHByZXZpb3VzU3RhdGUgPSBzdGF0ZTtcbiAgICAgIHN0YXRlID0gKHJlcGxhY2UgIT0gbnVsbCA/IHJlcGxhY2UgOiB0eXBlb2YgbmV4dFN0YXRlICE9PSBcIm9iamVjdFwiKSA/IG5leHRTdGF0ZSA6IE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCBuZXh0U3RhdGUpO1xuICAgICAgbGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiBsaXN0ZW5lcihzdGF0ZSwgcHJldmlvdXNTdGF0ZSkpO1xuICAgIH1cbiAgfTtcbiAgY29uc3QgZ2V0U3RhdGUgPSAoKSA9PiBzdGF0ZTtcbiAgY29uc3Qgc3Vic2NyaWJlID0gKGxpc3RlbmVyKSA9PiB7XG4gICAgbGlzdGVuZXJzLmFkZChsaXN0ZW5lcik7XG4gICAgcmV0dXJuICgpID0+IGxpc3RlbmVycy5kZWxldGUobGlzdGVuZXIpO1xuICB9O1xuICBjb25zdCBkZXN0cm95ID0gKCkgPT4ge1xuICAgIGlmICgoaW1wb3J0Lm1ldGEuZW52ICYmIGltcG9ydC5tZXRhLmVudi5NT0RFKSAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgIGNvbnNvbGUud2FybihcbiAgICAgICAgXCJbREVQUkVDQVRFRF0gVGhlIGBkZXN0cm95YCBtZXRob2Qgd2lsbCBiZSB1bnN1cHBvcnRlZCBpbiBhIGZ1dHVyZSB2ZXJzaW9uLiBJbnN0ZWFkIHVzZSB1bnN1YnNjcmliZSBmdW5jdGlvbiByZXR1cm5lZCBieSBzdWJzY3JpYmUuIEV2ZXJ5dGhpbmcgd2lsbCBiZSBnYXJiYWdlLWNvbGxlY3RlZCBpZiBzdG9yZSBpcyBnYXJiYWdlLWNvbGxlY3RlZC5cIlxuICAgICAgKTtcbiAgICB9XG4gICAgbGlzdGVuZXJzLmNsZWFyKCk7XG4gIH07XG4gIGNvbnN0IGFwaSA9IHsgc2V0U3RhdGUsIGdldFN0YXRlLCBzdWJzY3JpYmUsIGRlc3Ryb3kgfTtcbiAgc3RhdGUgPSBjcmVhdGVTdGF0ZShzZXRTdGF0ZSwgZ2V0U3RhdGUsIGFwaSk7XG4gIHJldHVybiBhcGk7XG59O1xuY29uc3QgY3JlYXRlU3RvcmUgPSAoY3JlYXRlU3RhdGUpID0+IGNyZWF0ZVN0YXRlID8gY3JlYXRlU3RvcmVJbXBsKGNyZWF0ZVN0YXRlKSA6IGNyZWF0ZVN0b3JlSW1wbDtcbnZhciB2YW5pbGxhID0gKGNyZWF0ZVN0YXRlKSA9PiB7XG4gIGlmICgoaW1wb3J0Lm1ldGEuZW52ICYmIGltcG9ydC5tZXRhLmVudi5NT0RFKSAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBjb25zb2xlLndhcm4oXG4gICAgICBcIltERVBSRUNBVEVEXSBEZWZhdWx0IGV4cG9ydCBpcyBkZXByZWNhdGVkLiBJbnN0ZWFkIHVzZSBpbXBvcnQgeyBjcmVhdGVTdG9yZSB9IGZyb20gJ3p1c3RhbmQvdmFuaWxsYScuXCJcbiAgICApO1xuICB9XG4gIHJldHVybiBjcmVhdGVTdG9yZShjcmVhdGVTdGF0ZSk7XG59O1xuXG5leHBvcnQgeyBjcmVhdGVTdG9yZSwgdmFuaWxsYSBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOlsiY3JlYXRlU3RvcmVJbXBsIiwiY3JlYXRlU3RhdGUiLCJzdGF0ZSIsImxpc3RlbmVycyIsIlNldCIsInNldFN0YXRlIiwicGFydGlhbCIsInJlcGxhY2UiLCJuZXh0U3RhdGUiLCJPYmplY3QiLCJpcyIsInByZXZpb3VzU3RhdGUiLCJhc3NpZ24iLCJmb3JFYWNoIiwibGlzdGVuZXIiLCJnZXRTdGF0ZSIsInN1YnNjcmliZSIsImFkZCIsImRlbGV0ZSIsImRlc3Ryb3kiLCJlbnYiLCJNT0RFIiwiY29uc29sZSIsIndhcm4iLCJjbGVhciIsImFwaSIsImNyZWF0ZVN0b3JlIiwidmFuaWxsYSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(sc_server)/./node_modules/zustand/esm/vanilla.mjs\n");

/***/ }),

/***/ "(sc_server)/./node_modules/openid-client/package.json":
/*!*************************************************!*\
  !*** ./node_modules/openid-client/package.json ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"openid-client","version":"5.4.2","description":"OpenID Connect Relying Party (RP, Client) implementation for Node.js runtime, supports passportjs","keywords":["auth","authentication","basic","certified","client","connect","dynamic","electron","hybrid","identity","implicit","oauth","oauth2","oidc","openid","passport","relying party","strategy"],"homepage":"https://github.com/panva/node-openid-client","repository":"panva/node-openid-client","funding":{"url":"https://github.com/sponsors/panva"},"license":"MIT","author":"Filip Skokan <panva.ip@gmail.com>","exports":{"types":"./types/index.d.ts","import":"./lib/index.mjs","require":"./lib/index.js"},"main":"./lib/index.js","types":"./types/index.d.ts","files":["lib","types/index.d.ts"],"scripts":{"format":"npx prettier --loglevel silent --write ./lib ./test ./certification ./types","test":"mocha test/**/*.test.js"},"dependencies":{"jose":"^4.14.1","lru-cache":"^6.0.0","object-hash":"^2.2.0","oidc-token-hash":"^5.0.3"},"devDependencies":{"@types/node":"^16.18.24","@types/passport":"^1.0.12","base64url":"^3.0.1","chai":"^4.3.7","jose2":"npm:jose@^2.0.6","mocha":"^10.2.0","nock":"^13.3.0","prettier":"^2.8.8","readable-mock-req":"^0.2.2","sinon":"^9.2.4","timekeeper":"^2.2.0"},"standard-version":{"scripts":{"postchangelog":"sed -i \'\' -e \'s/### \\\\[/## [/g\' CHANGELOG.md"},"types":[{"type":"feat","section":"Features"},{"type":"fix","section":"Fixes"},{"type":"chore","hidden":true},{"type":"docs","hidden":true},{"type":"style","hidden":true},{"type":"refactor","section":"Refactor","hidden":false},{"type":"perf","section":"Performance","hidden":false},{"type":"test","hidden":true}]}}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(sc_server)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&page=%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fauth%2F%5B...nextauth%5D%2Froute.tsx&appDir=%2FUsers%2Fleeseungjin%2FDesktop%2FDev_Projects%2Fpost_pulse%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fleeseungjin%2FDesktop%2FDev_Projects%2Fpost_pulse&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!"));
module.exports = __webpack_exports__;

})();